!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
#	configs/keybindings.vim	/^nnoremap # #zz$/;"	m
$NVIMR_COMPLDIR	plugged/Nvim-R/R/setcompldir.vim	/^let $NVIMR_COMPLDIR = g:rplugin_compldir$/;"	v
$NVIMR_ID	plugged/Nvim-R/R/common_global.vim	/^    let $NVIMR_ID = GetRandomNumber(16)$/;"	v
$NVIMR_SECRET	plugged/Nvim-R/R/common_global.vim	/^    let $NVIMR_SECRET = GetRandomNumber(16)$/;"	v
$NVIMR_TMPDIR	plugged/Nvim-R/R/common_global.vim	/^let $NVIMR_TMPDIR = g:rplugin_tmpdir$/;"	v
$NVIM_TUI_ENABLE_CURSOR_SHAPE	configs/application.vim	/^let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1 " Enable different cursor shapes$/;"	v
$PATH	plugged/Nvim-R/R/common_global.vim	/^            let $PATH = g:rplugin_R_path . ':' . $PATH$/;"	v
$PATH	plugged/Nvim-R/R/common_global.vim	/^            let $PATH = g:rplugin_R_path . ';' . $PATH$/;"	v
$PATH	plugged/Nvim-R/R/windows.vim	/^            let $PATH = s:rinstallpath . '\\bin\\i386;' . $PATH$/;"	v
$PATH	plugged/Nvim-R/R/windows.vim	/^            let $PATH = s:rinstallpath . '\\bin\\x64;' . $PATH$/;"	v
$PATH	plugged/Nvim-R/R/windows.vim	/^        let $PATH = s:rinstallpath . '\\bin;' . $PATH$/;"	v
$PATH	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^                let $PATH = g:rplugin_nvimcom_bin_dir . ':' . $PATH$/;"	v
*	configs/keybindings.vim	/^nnoremap * *zz$/;"	m
.	plugged/repeat.vim/autoload/repeat.vim	/^nnoremap <silent> .     :<C-U>call repeat#run(v:count)<CR>$/;"	m
2jdd	plugged/vim-gitgutter/test/testHunkRevertNearbyHunk.vim	/^normal 2jdd$/;"	m
2jdd	plugged/vim-gitgutter/test/testHunkStageNearbyHunk.vim	/^normal 2jdd$/;"	m
5G	plugged/vim-gitgutter/test/testHunkOutsideNoop.vim	/^normal 5G$/;"	m
5Gi*	plugged/vim-gitgutter/test/testEditAmbiguousFile.vim	/^normal 5Gi*$/;"	m
5Gi*	plugged/vim-gitgutter/test/testHunkRevert.vim	/^normal 5Gi*$/;"	m
5Gi*	plugged/vim-gitgutter/test/testHunkStage.vim	/^normal 5Gi*$/;"	m
5Go*	plugged/vim-gitgutter/test/testKeepModified.vim	/^normal 5Go*$/;"	m
5Go*	plugged/vim-gitgutter/test/testKeepOpMarks.vim	/^normal 5Go*$/;"	m
<	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^    imap <buffer><silent> < <Esc>:call RWriteChunk()<CR>a$/;"	m
<2-LeftMouse>	plugged/Nvim-R/ftplugin/rbrowser.vim	/^nmap <buffer><silent> <2-LeftMouse> :call RBrowserDoubleClick()<CR>$/;"	m
<BS>	configs/keybindings.vim	/^nnoremap <BS> <C-^>$/;"	m
<C-G>S	plugged/vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	plugged/vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-R>	plugged/repeat.vim/autoload/repeat.vim	/^nnoremap <silent> <C-R> :<C-U>call repeat#wrap("\\<Lt>C-R>",v:count)<CR>$/;"	m
<C-S>	plugged/vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-W><C-F>	plugged/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-F> :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>\\<Lt>C-F>",'split')<CR>$/;"	m
<C-W><C-]>	plugged/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <script> <buffer> <C-W><C-]>  :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<SID>foldopen<CR>$/;"	m
<C-W>]	plugged/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <script> <buffer> <C-W>]      :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<SID>foldopen<CR>$/;"	m
<C-W>f	plugged/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>f     :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>f",'split')<CR>$/;"	m
<C-W>g<C-]>	plugged/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <script> <buffer> <C-W>g<C-]> :<C-U>exe        "stjump <C-R>=RubyCursorIdentifier()<CR>"<SID>foldopen<CR>$/;"	m
<C-W>g]	plugged/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <script> <buffer> <C-W>g]     :<C-U>exe      "stselect <C-R>=RubyCursorIdentifier()<CR>"<SID>foldopen<CR>$/;"	m
<C-W>gf	plugged/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>gf    :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>gf",'tabedit')<CR>$/;"	m
<C-W>g}	plugged/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <script> <buffer> <C-W>g}     :<C-U>exe        "ptjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>}	plugged/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <script> <buffer> <C-W>}      :<C-U>exe          "ptag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-]>	plugged/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <script> <buffer> <C-]>       :<C-U>exe  v:count1."tag <C-R>=RubyCursorIdentifier()<CR>"<SID>foldopen<CR>$/;"	m
<C-c>	configs/keybindings.vim	/^map <C-c> <Esc>$/;"	m
<C-c><C-c>	configs/keybindings.vim	/^map <C-c><C-c> <C-c>$/;"	m
<C-s>	configs/keybindings.vim	/^nnoremap <C-s> :split<CR><C-w>j :term<CR>$/;"	m
<CR>	plugged/Nvim-R/ftplugin/rbrowser.vim	/^nmap <buffer><silent> <CR> :call RBrowserDoubleClick()<CR>$/;"	m
<Esc>[200~	configs/gui.vim	/^inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()$/;"	m
<Leader>/	configs/keybindings.vim	/^nmap <Leader>\/ :nohlsearch<CR>$/;"	m
<Leader>a	configs/keybindings.vim	/^map <Leader>a :Tabularize \/$/;"	m
<Leader>d	configs/keybindings.vim	/^map <Leader>d :NERDTreeToggle<CR>$/;"	m
<Leader>gb	configs/keybindings.vim	/^nnoremap <Leader>gb :.Gbrowse<CR>$/;"	m
<Leader>hp	plugged/vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hp <Plug>GitGutterPreviewHunk$/;"	m
<Leader>hr	plugged/vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hr <Plug>GitGutterRevertHunk$/;"	m
<Leader>hs	plugged/vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hs <Plug>GitGutterStageHunk$/;"	m
<Plug>(IngoLibraryOmapRepeatReinsert)	plugged/ingo-library/autoload/ingo/motion/omap.vim	/^inoremap <Plug>(IngoLibraryOmapRepeatReinsert) <C-r>.<Esc>$/;"	m
<Plug>(calendar)	plugged/calendar.vim/plugin/calendar.vim	/^nnoremap <silent> <Plug>(calendar) :<C-u>Calendar<CR>$/;"	m
<Plug>(calendar)	plugged/calendar.vim/plugin/calendar.vim	/^vnoremap <silent> <Plug>(calendar) :<C-u>Calendar<CR>$/;"	m
<Plug>(go-build)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-build) :<C-u>call go#cmd#Build(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-callees)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-callees) :<C-u>call go#oracle#Callees(-1)<CR>$/;"	m
<Plug>(go-callers)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-callers) :<C-u>call go#oracle#Callers(-1)<CR>$/;"	m
<Plug>(go-callstack)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-callstack) :<C-u>call go#oracle#Callstack(-1)<CR>$/;"	m
<Plug>(go-channelpeers)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-channelpeers) :<C-u>call go#oracle#ChannelPeers(-1)<CR>$/;"	m
<Plug>(go-coverage)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-coverage) :<C-u>call go#cmd#Coverage(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-def)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-def) :<C-u>call go#def#Jump()<CR>$/;"	m
<Plug>(go-def-split)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-def-split) :<C-u>call go#def#JumpMode("split")<CR>$/;"	m
<Plug>(go-def-tab)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-def-tab) :<C-u>call go#def#JumpMode("tab")<CR>$/;"	m
<Plug>(go-def-vertical)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-def-vertical) :<C-u>call go#def#JumpMode("vsplit")<CR>$/;"	m
<Plug>(go-deps)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-deps) :<C-u>call go#tool#Deps()<CR>$/;"	m
<Plug>(go-describe)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-describe) :<C-u>call go#oracle#Describe(-1)<CR>$/;"	m
<Plug>(go-doc)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-doc) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc-browser)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-doc-browser) :<C-u>call go#doc#OpenBrowser()<CR>$/;"	m
<Plug>(go-doc-split)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-doc-split) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc-tab)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-doc-tab) :<C-u>call go#doc#Open("tabnew", "tabe")<CR>$/;"	m
<Plug>(go-doc-vertical)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-doc-vertical) :<C-u>call go#doc#Open("vnew", "vsplit")<CR>$/;"	m
<Plug>(go-files)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-files) :<C-u>call go#tool#Files()<CR>$/;"	m
<Plug>(go-freevars)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-freevars) :<C-u>call go#oracle#Freevars(-1)<CR>$/;"	m
<Plug>(go-generate)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-generate) :<C-u>call go#cmd#Generate(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-implements)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-implements) :<C-u>call go#oracle#Implements(-1)<CR>$/;"	m
<Plug>(go-import)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-import) :<C-u>call go#import#SwitchImport(1, '', expand('<cword>'), '')<CR>$/;"	m
<Plug>(go-info)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-info) :<C-u>call go#complete#Info()<CR>$/;"	m
<Plug>(go-install)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-install) :<C-u>call go#cmd#Install(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-referrers)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-referrers) :<C-u>call go#oracle#Referrers(-1)<CR>$/;"	m
<Plug>(go-rename)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-rename) :<C-u>call go#rename#Rename()<CR>$/;"	m
<Plug>(go-run)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-run) :<C-u>call go#cmd#Run(!g:go_jump_to_error, '%')<CR>$/;"	m
<Plug>(go-test)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-test) :<C-u>call go#cmd#Test(!g:go_jump_to_error, 0)<CR>$/;"	m
<Plug>(go-test-compile)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-test-compile) :<C-u>call go#cmd#Test(!g:go_jump_to_error, 1)<CR>$/;"	m
<Plug>(go-test-func)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-test-func) :<C-u>call go#cmd#TestFunc(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-vet)	plugged/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-vet) :<C-u>call go#cmd#Vet(!g:go_jump_to_error)<CR>$/;"	m
<Plug>CSurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>CSurround  :<C-U>call <SID>changesurround(1)<CR>$/;"	m
<Plug>Csurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>Dsurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>GitGutterNextHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterNextHunk &diff ? ']c' : ":\\<C-U>execute v:count1 . 'GitGutterNextHunk'\\<CR>"$/;"	m
<Plug>GitGutterPrevHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterPrevHunk &diff ? '[c' : ":\\<C-U>execute v:count1 . 'GitGutterPrevHunk'\\<CR>"$/;"	m
<Plug>GitGutterPreviewHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterPreviewHunk :GitGutterPreviewHunk<CR>$/;"	m
<Plug>GitGutterRevertHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterRevertHunk  :GitGutterRevertHunk<CR>$/;"	m
<Plug>GitGutterStageHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterStageHunk   :GitGutterStageHunk<CR>$/;"	m
<Plug>ISurround	plugged/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	plugged/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>NERDTreeFocusToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeFocusToggle  :call <SID>NERDTreeFocusToggle()$/;"	m
<Plug>NERDTreeMirrorOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeMirrorOpen   :call <SID>NERDTreeMirrorOrCreate()$/;"	m
<Plug>NERDTreeMirrorToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeMirrorToggle :call <SID>NERDTreeMirrorToggle()$/;"	m
<Plug>NERDTreeSteppedClose	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeSteppedClose :call <SID>NERDTreeSteppedClose()$/;"	m
<Plug>NERDTreeSteppedOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeSteppedOpen  :call <SID>NERDTreeSteppedOpen()$/;"	m
<Plug>NERDTreeTabsClose	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeTabsClose    :call <SID>NERDTreeCloseAllTabs()$/;"	m
<Plug>NERDTreeTabsFind	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeTabsFind     :call <SID>NERDTreeFindFile()$/;"	m
<Plug>NERDTreeTabsOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeTabsOpen     :call <SID>NERDTreeOpenAllTabs()$/;"	m
<Plug>NERDTreeTabsToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeTabsToggle   :call <SID>NERDTreeToggleAllTabs()$/;"	m
<Plug>SurroundRepeat	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>VSurround	plugged/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>$/;"	m
<Plug>VgSurround	plugged/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>$/;"	m
<Plug>YSsurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSsurround :<C-U>call <SID>opfunc2(v:count1)<CR>$/;"	m
<Plug>YSurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSurround  :<C-U>set opfunc=<SID>opfunc2<CR>g@$/;"	m
<Plug>Yssurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Yssurround :<C-U>call <SID>opfunc(v:count1)<CR>$/;"	m
<Plug>Ysurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Ysurround  :<C-U>set opfunc=<SID>opfunc<CR>g@$/;"	m
<RightMouse>	plugged/Nvim-R/ftplugin/rbrowser.vim	/^nmap <buffer><silent> <RightMouse> :call RBrowserRightClick()<CR>$/;"	m
<SID>foldopen	plugged/vim-ruby/ftplugin/ruby.vim	/^    cnoremap <buffer> <SID>foldopen <Bar>if &foldopen =~# 'tag'<Bar>exe 'norm! zv'<Bar>endif$/;"	m
<c-t>n	configs/keybindings.vim	/^nmap <c-t>n :tabnew<CR>$/;"	m
<c-t>x	configs/keybindings.vim	/^nmap <c-t>x :tabclose<CR>$/;"	m
<c-x>%:Unite	configs/keybindings.vim	/^map <c-x>%:Unite -no-split grep:%<CR>$/;"	m
<c-x><c-f>	configs/keybindings.vim	/^map <c-x><c-f> :NERDTree ~\/$/;"	m
<c-x>a	configs/keybindings.vim	/^map <c-x>a :Unite -no-split grep:.<CR>$/;"	m
<c-x>b	configs/keybindings.vim	/^map <c-x>b Buffers$/;"	m
<c-x>f	configs/keybindings.vim	/^map <c-x>f :FZF<CR>$/;"	m
<leader>s	configs/keybindings.vim	/^map <leader>s :w<CR>$/;"	m
ABAPLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^class ABAPLexer(RegexLexer):$/;"	c
ABAPLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    GoodDataCLLexer, MaqlLexer$/;"	i
ABAPLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^class ABAPLexer(RegexLexer):$/;"	c
ABAPLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    GoodDataCLLexer, MaqlLexer$/;"	i
ACCEPT_ENCODING	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/request.py	/^ACCEPT_ENCODING = 'gzip,deflate'$/;"	v
ACO	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^ACO = 5  # accent capital other$/;"	v
ACV	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^ACV = 4  # accent capital vowel$/;"	v
APLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/apl.py	/^class APLLexer(RegexLexer):$/;"	c
APLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/apl.py	/^class APLLexer(RegexLexer):$/;"	c
APPEND_OLD_CHUNK	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define APPEND_OLD_CHUNK /;"	d	file:
APPVER	plugged/vimproc.vim/make_msvc.mak	/^APPVER = 5.0$/;"	m
AQUA	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^AQUA = "#5bc4bf"$/;"	v
AQUA	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^AQUA = "#5bc4bf"$/;"	v
AQUA	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^AQUA = "#5bc4bf"$/;"	v
AQUA	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^AQUA = "#5bc4bf"$/;"	v
ARCHIVE	plugged/vim-coffee-script/Makefile	/^ARCHIVE = vim-coffee-script-$(VERSION).zip$/;"	m
ARCHIVE_DIRS	plugged/vim-coffee-script/Makefile	/^ARCHIVE_DIRS = after autoload compiler doc ftdetect ftplugin indent syntax$/;"	m
ARCHS	plugged/vimproc.vim/make_mac.mak	/^ARCHS=$/;"	m
ARGUMENT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^ARGUMENT = Token.String$/;"	v
ARGUMENT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^ARGUMENT = Token.String$/;"	v
ASC	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^ASC = 2  # ascii capital letter$/;"	v
ASM_INSTRUCTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    ASM_INSTRUCTIONS = set(($/;"	v	class:DelphiLexer
ASM_INSTRUCTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    ASM_INSTRUCTIONS = set(($/;"	v	class:DelphiLexer
ASM_REGISTERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    ASM_REGISTERS = set(($/;"	v	class:DelphiLexer
ASM_REGISTERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    ASM_REGISTERS = set(($/;"	v	class:DelphiLexer
ASO	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^ASO = 7  # accent small other$/;"	v
ASS	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^ASS = 3  # ascii small letter$/;"	v
ASV	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^ASV = 6  # accent small vowel$/;"	v
ASYFUNCNAME	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_asy_builtins.py	/^ASYFUNCNAME = set(($/;"	v
ASYFUNCNAME	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^        from pygments.lexers._asy_builtins import ASYFUNCNAME, ASYVARNAME$/;"	i
ASYFUNCNAME	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_asy_builtins.py	/^ASYFUNCNAME = set(($/;"	v
ASYFUNCNAME	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^        from pygments.lexers._asy_builtins import ASYFUNCNAME, ASYVARNAME$/;"	i
ASYVARNAME	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_asy_builtins.py	/^ASYVARNAME = set(($/;"	v
ASYVARNAME	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^        from pygments.lexers._asy_builtins import ASYFUNCNAME, ASYVARNAME$/;"	i
ASYVARNAME	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_asy_builtins.py	/^ASYVARNAME = set(($/;"	v
ASYVARNAME	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^        from pygments.lexers._asy_builtins import ASYFUNCNAME, ASYVARNAME$/;"	i
Action	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class Action(_AttributeHolder):$/;"	c
ActionScript3Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^class ActionScript3Lexer(RegexLexer):$/;"	c
ActionScript3Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^    ActionScript3Lexer, MxmlLexer$/;"	i
ActionScript3Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^class ActionScript3Lexer(RegexLexer):$/;"	c
ActionScript3Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^    ActionScript3Lexer, MxmlLexer$/;"	i
ActionScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^class ActionScriptLexer(RegexLexer):$/;"	c
ActionScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^        from pygments.lexers.actionscript import ActionScriptLexer$/;"	i
ActionScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^    ActionScript3Lexer, MxmlLexer$/;"	i
ActionScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^class ActionScriptLexer(RegexLexer):$/;"	c
ActionScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^        from pygments.lexers.actionscript import ActionScriptLexer$/;"	i
ActionScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^    ActionScript3Lexer, MxmlLexer$/;"	i
AdaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.pascal import DelphiLexer, Modula2Lexer, AdaLexer$/;"	i
AdaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^class AdaLexer(RegexLexer):$/;"	c
AdaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.pascal import DelphiLexer, Modula2Lexer, AdaLexer$/;"	i
AdaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^class AdaLexer(RegexLexer):$/;"	c
AdaptCollection	plugged/ingo-library/autoload/ingo/regexp/fromwildcard.vim	/^function! s:AdaptCollection()$/;"	f
AddAccelerator	plugged/ingo-library/autoload/ingo/query/confirm.vim	/^function! s:AddAccelerator( usedAccelerators, value, isWantFirstCharacter )$/;"	f
AddCterm	plugged/vim-lucius/colors/lucius.vim	/^function! s:AddCterm(name)$/;"	f
AddSpCterm	plugged/vim-lucius/colors/lucius.vim	/^function! s:AddSpCterm(name)$/;"	f
AddTabularPattern	plugged/tabular/plugin/Tabular.vim	/^com! -nargs=+ -bang AddTabularPattern$/;"	c
AddTabularPattern	plugged/tabular/plugin/Tabular.vim	/^function! AddTabularPattern(command, force)$/;"	f
AddTabularPipeline	plugged/tabular/plugin/Tabular.vim	/^com! -nargs=+ -bang AddTabularPipeline$/;"	c
AddTabularPipeline	plugged/tabular/plugin/Tabular.vim	/^function! AddTabularPipeline(command, force)$/;"	f
AddToClasspath	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:AddToClasspath(classpath, path) " {{{2$/;"	f
AddToRLibList	plugged/Nvim-R/R/functions.vim	/^function AddToRLibList(lib)$/;"	f
AdvancedSorters#Expr#Sort	plugged/AdvancedSorters/autoload/AdvancedSorters/Expr.vim	/^function! AdvancedSorters#Expr#Sort( startLnum, endLnum, isReverse, isUnique, expr )$/;"	f
AdvancedSorters#Ranges#ByHeader	plugged/AdvancedSorters/autoload/AdvancedSorters/Ranges.vim	/^function! AdvancedSorters#Ranges#ByHeader( bang, startLnum, endLnum, arguments )$/;"	f
AdvancedSorters#Ranges#ByMatch	plugged/AdvancedSorters/autoload/AdvancedSorters/Ranges.vim	/^function! AdvancedSorters#Ranges#ByMatch( bang, startLnum, endLnum, arguments )$/;"	f
AdvancedSorters#Ranges#ByRange	plugged/AdvancedSorters/autoload/AdvancedSorters/Ranges.vim	/^function! AdvancedSorters#Ranges#ByRange( bang, startLnum, endLnum, arguments )$/;"	f
AdvancedSorters#Ranges#Unfolded	plugged/AdvancedSorters/autoload/AdvancedSorters/Ranges.vim	/^function! AdvancedSorters#Ranges#Unfolded( bang, startLnum, endLnum, sortArgs )$/;"	f
AdvancedSorters#Uniq#Uniq	plugged/AdvancedSorters/autoload/AdvancedSorters/Uniq.vim	/^function! AdvancedSorters#Uniq#Uniq( startLnum, endLnum, arguments )$/;"	f
AdvancedSorters#Words#Sort	plugged/AdvancedSorters/autoload/AdvancedSorters/Words.vim	/^function! AdvancedSorters#Words#Sort( bang, startLnum, endLnum, arguments )$/;"	f
AgdaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^class AgdaLexer(RegexLexer):$/;"	c
AgdaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^class AgdaLexer(RegexLexer):$/;"	c
Align	plugged/ingo-library/autoload/ingo/date.vim	/^function! s:Align( isShortFormat, isRightAligned, text )$/;"	f
AlloyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^class AlloyLexer(RegexLexer):$/;"	c
AlloyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^class AlloyLexer(RegexLexer):$/;"	c
AlternateFloat	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_subclass.py	/^class AlternateFloat(float):$/;"	c
AlternateInt	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_subclass.py	/^class AlternateInt(int):$/;"	c
AmbientTalkLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^class AmbientTalkLexer(RegexLexer):$/;"	c
AmbientTalkLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^class AmbientTalkLexer(RegexLexer):$/;"	c
AmbiguousTimeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^from pytz.exceptions import AmbiguousTimeError$/;"	i
AmbiguousTimeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/exceptions.py	/^class AmbiguousTimeError(InvalidTimeError):$/;"	c
AmbiguousTimeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^from pytz.exceptions import AmbiguousTimeError, NonExistentTimeError$/;"	i
AmbiguousTimeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^from pytz.exceptions import AmbiguousTimeError$/;"	i
AmbiguousTimeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/exceptions.py	/^class AmbiguousTimeError(InvalidTimeError):$/;"	c
AmbiguousTimeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^from pytz.exceptions import AmbiguousTimeError, NonExistentTimeError$/;"	i
AntlrActionScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class AntlrActionScriptLexer(DelegatingLexer):$/;"	c
AntlrActionScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class AntlrActionScriptLexer(DelegatingLexer):$/;"	c
AntlrCSharpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class AntlrCSharpLexer(DelegatingLexer):$/;"	c
AntlrCSharpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class AntlrCSharpLexer(DelegatingLexer):$/;"	c
AntlrCppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class AntlrCppLexer(DelegatingLexer):$/;"	c
AntlrCppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class AntlrCppLexer(DelegatingLexer):$/;"	c
AntlrJavaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class AntlrJavaLexer(DelegatingLexer):$/;"	c
AntlrJavaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class AntlrJavaLexer(DelegatingLexer):$/;"	c
AntlrLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class AntlrLexer(RegexLexer):$/;"	c
AntlrLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class AntlrLexer(RegexLexer):$/;"	c
AntlrObjectiveCLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class AntlrObjectiveCLexer(DelegatingLexer):$/;"	c
AntlrObjectiveCLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class AntlrObjectiveCLexer(DelegatingLexer):$/;"	c
AntlrPerlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class AntlrPerlLexer(DelegatingLexer):$/;"	c
AntlrPerlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class AntlrPerlLexer(DelegatingLexer):$/;"	c
AntlrPythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class AntlrPythonLexer(DelegatingLexer):$/;"	c
AntlrPythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class AntlrPythonLexer(DelegatingLexer):$/;"	c
AntlrRubyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class AntlrRubyLexer(DelegatingLexer):$/;"	c
AntlrRubyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class AntlrRubyLexer(DelegatingLexer):$/;"	c
ApacheConfLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^class ApacheConfLexer(RegexLexer):$/;"	c
ApacheConfLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^    SquidConfLexer, LighttpdConfLexer, IniLexer, RegeditLexer, PropertiesLexer$/;"	i
ApacheConfLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^class ApacheConfLexer(RegexLexer):$/;"	c
ApacheConfLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^    SquidConfLexer, LighttpdConfLexer, IniLexer, RegeditLexer, PropertiesLexer$/;"	i
Api	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:Api(targetFile, time, is_write, last)$/;"	f
AppleScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    HybrisLexer$/;"	i
AppleScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^class AppleScriptLexer(RegexLexer):$/;"	c
AppleScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    HybrisLexer$/;"	i
AppleScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^class AppleScriptLexer(RegexLexer):$/;"	c
ApplyCommand	plugged/smartpairs.vim/plugin/smartpairs.vim	/^function! s:ApplyCommand(type, mod, symbol)$/;"	f
ApplyEmptyFlags	plugged/ingo-library/autoload/ingo/cmdargs/substitute.vim	/^function! s:ApplyEmptyFlags( emptyFlags, parsedFlags)$/;"	f
ApplyPairs	plugged/smartpairs.vim/plugin/smartpairs.vim	/^function! s:ApplyPairs()$/;"	f
Args	plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! s:Args() " {{{2$/;"	f
ArgumentDefaultsHelpFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class ArgumentDefaultsHelpFormatter(HelpFormatter):$/;"	c
ArgumentError	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class ArgumentError(Exception):$/;"	c
ArgumentParser	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class ArgumentParser(_AttributeHolder, _ActionsContainer):$/;"	c
ArgumentTypeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class ArgumentTypeError(Exception):$/;"	c
AskRDoc	plugged/Nvim-R/R/common_global.vim	/^function AskRDoc(rkeyword, package, getclass)$/;"	f
AspectJLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^class AspectJLexer(JavaLexer):$/;"	c
AspectJLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^class AspectJLexer(JavaLexer):$/;"	c
AsymptoteLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^class AsymptoteLexer(RegexLexer):$/;"	c
AsymptoteLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    AsymptoteLexer, PovrayLexer$/;"	i
AsymptoteLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^class AsymptoteLexer(RegexLexer):$/;"	c
AsymptoteLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    AsymptoteLexer, PovrayLexer$/;"	i
AuthBase	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^class AuthBase(object):$/;"	c
AutoClose	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:AutoClose() "{{{$/;"	f
AutoItLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^class AutoItLexer(RegexLexer):$/;"	c
AutoItLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.automation import AutoItLexer, AutohotkeyLexer$/;"	i
AutoItLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^class AutoItLexer(RegexLexer):$/;"	c
AutoItLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.automation import AutoItLexer, AutohotkeyLexer$/;"	i
AutohotkeyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^class AutohotkeyLexer(RegexLexer):$/;"	c
AutohotkeyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.automation import AutoItLexer, AutohotkeyLexer$/;"	i
AutohotkeyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^class AutohotkeyLexer(RegexLexer):$/;"	c
AutohotkeyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.automation import AutoItLexer, AutohotkeyLexer$/;"	i
AutumnStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/autumn.py	/^class AutumnStyle(Style):$/;"	c
AutumnStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/autumn.py	/^class AutumnStyle(Style):$/;"	c
AvoidDuplicateIndent	plugged/ingo-library/autoload/ingo/comments.vim	/^function! s:AvoidDuplicateIndent( commentstring, text )$/;"	f
AwesomeInt	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^        class AwesomeInt(object):$/;"	c	function:TestDump.test_indent_unknown_type_acceptance
AwkLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.textedit import AwkLexer$/;"	i
AwkLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^class AwkLexer(RegexLexer):$/;"	c
AwkLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.textedit import AwkLexer$/;"	i
AwkLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^class AwkLexer(RegexLexer):$/;"	c
BACKGROUND	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^BACKGROUND = "#2f1e2e"$/;"	v
BACKGROUND	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^BACKGROUND = "#e7e9db"$/;"	v
BACKGROUND	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^BACKGROUND = "#2f1e2e"$/;"	v
BACKGROUND	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^BACKGROUND = "#e7e9db"$/;"	v
BACKOFF_MAX	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/retry.py	/^    BACKOFF_MAX = 120$/;"	v	class:Retry
BACKSLASH	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^BACKSLASH = {$/;"	v
BBCodeFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/bbcode.py	/^class BBCodeFormatter(Formatter):$/;"	c
BBCodeFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/bbcode.py	/^class BBCodeFormatter(Formatter):$/;"	c
BBCodeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^class BBCodeLexer(RegexLexer):$/;"	c
BBCodeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^    TexLexer, GroffLexer$/;"	i
BBCodeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^class BBCodeLexer(RegexLexer):$/;"	c
BBCodeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^    TexLexer, GroffLexer$/;"	i
BIG5_TABLE_SIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/big5freq.py	/^BIG5_TABLE_SIZE = 5376$/;"	v
BIG5_TABLE_SIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^from .big5freq import (Big5CharToFreqOrder, BIG5_TABLE_SIZE,$/;"	i
BIG5_TYPICAL_DISTRIBUTION_RATIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/big5freq.py	/^BIG5_TYPICAL_DISTRIBUTION_RATIO = 0.75$/;"	v
BIG5_cls	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^BIG5_cls = ($/;"	v
BIG5_st	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^BIG5_st = ($/;"	v
BLOCK_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    BLOCK_KEYWORDS = set(($/;"	v	class:DelphiLexer
BLOCK_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    BLOCK_KEYWORDS = set(($/;"	v	class:DelphiLexer
BLUE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^BLUE = "#06b6ef"$/;"	v
BLUE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^BLUE = "#06b6ef"$/;"	v
BLUE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^BLUE = "#06b6ef"$/;"	v
BLUE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^BLUE = "#06b6ef"$/;"	v
BUILTIN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    BUILTIN = ($/;"	v	class:ElixirLexer
BUILTIN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    BUILTIN = ($/;"	v	class:ElixirLexer
BUILTINS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lasso_builtins.py	/^BUILTINS = {$/;"	v
BUILTINS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^            from pygments.lexers._lasso_builtins import BUILTINS, MEMBERS$/;"	i
BUILTINS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lasso_builtins.py	/^BUILTINS = {$/;"	v
BUILTINS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^            from pygments.lexers._lasso_builtins import BUILTINS, MEMBERS$/;"	i
BUILTIN_CLASSES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cl_builtins.py	/^BUILTIN_CLASSES = set(($/;"	v
BUILTIN_CLASSES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^            BUILTIN_TYPES, BUILTIN_CLASSES$/;"	i
BUILTIN_CLASSES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cl_builtins.py	/^BUILTIN_CLASSES = set(($/;"	v
BUILTIN_CLASSES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^            BUILTIN_TYPES, BUILTIN_CLASSES$/;"	i
BUILTIN_DECLARATION	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    BUILTIN_DECLARATION = ($/;"	v	class:ElixirLexer
BUILTIN_DECLARATION	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    BUILTIN_DECLARATION = ($/;"	v	class:ElixirLexer
BUILTIN_FUNCTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cl_builtins.py	/^BUILTIN_FUNCTIONS = set((  # 638 functions$/;"	v
BUILTIN_FUNCTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^            BUILTIN_TYPES, BUILTIN_CLASSES$/;"	i
BUILTIN_FUNCTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cl_builtins.py	/^BUILTIN_FUNCTIONS = set((  # 638 functions$/;"	v
BUILTIN_FUNCTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^            BUILTIN_TYPES, BUILTIN_CLASSES$/;"	i
BUILTIN_NAMESPACE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    BUILTIN_NAMESPACE = ('import', 'require', 'use', 'alias')$/;"	v	class:ElixirLexer
BUILTIN_NAMESPACE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    BUILTIN_NAMESPACE = ('import', 'require', 'use', 'alias')$/;"	v	class:ElixirLexer
BUILTIN_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cl_builtins.py	/^BUILTIN_TYPES = set(($/;"	v
BUILTIN_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^            BUILTIN_TYPES, BUILTIN_CLASSES$/;"	i
BUILTIN_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    BUILTIN_TYPES = set(($/;"	v	class:DelphiLexer
BUILTIN_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cl_builtins.py	/^BUILTIN_TYPES = set(($/;"	v
BUILTIN_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^            BUILTIN_TYPES, BUILTIN_CLASSES$/;"	i
BUILTIN_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    BUILTIN_TYPES = set(($/;"	v	class:DelphiLexer
BUILTIN_UNITS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    BUILTIN_UNITS = {$/;"	v	class:DelphiLexer
BUILTIN_UNITS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    BUILTIN_UNITS = {$/;"	v	class:DelphiLexer
BaseAdapter	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^class BaseAdapter(object):$/;"	c
BaseHTTPError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/exceptions.py	/^from .packages.urllib3.exceptions import HTTPError as BaseHTTPError$/;"	i
BaseMakefileLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^class BaseMakefileLexer(RegexLexer):$/;"	c
BaseMakefileLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^from pygments.lexers.make import MakefileLexer, BaseMakefileLexer, CMakeLexer$/;"	i
BaseMakefileLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^class BaseMakefileLexer(RegexLexer):$/;"	c
BaseMakefileLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^from pygments.lexers.make import MakefileLexer, BaseMakefileLexer, CMakeLexer$/;"	i
BaseProject	plugged/vim-wakatime/plugin/packages/wakatime/projects/base.py	/^class BaseProject(object):$/;"	c
BaseProject	plugged/vim-wakatime/plugin/packages/wakatime/projects/git.py	/^from .base import BaseProject$/;"	i
BaseProject	plugged/vim-wakatime/plugin/packages/wakatime/projects/mercurial.py	/^from .base import BaseProject$/;"	i
BaseProject	plugged/vim-wakatime/plugin/packages/wakatime/projects/projectmap.py	/^from .base import BaseProject$/;"	i
BaseProject	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^from .base import BaseProject$/;"	i
BaseProject	plugged/vim-wakatime/plugin/packages/wakatime/projects/wakatime_project_file.py	/^from .base import BaseProject$/;"	i
BaseSSLError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    BaseSSLError = ssl.SSLError$/;"	v	class:DummyConnection
BaseSSLError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    class BaseSSLError(BaseException):$/;"	c
BaseSSLError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^from .connection import HTTPException, BaseSSLError$/;"	i
BaseSubjectAltName	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^    from ndg.httpsclient.subj_alt_name import SubjectAltName as BaseSubjectAltName$/;"	i
BaseTzInfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^class BaseTzInfo(tzinfo):$/;"	c
BaseTzInfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^class BaseTzInfo(tzinfo):$/;"	c
BaseTzInfoTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class BaseTzInfoTestCase:$/;"	c
BaseTzInfoTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class BaseTzInfoTestCase:$/;"	c
BashLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^from pygments.lexers.shell import BashLexer$/;"	i
BashLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^from pygments.lexers.shell import BashLexer$/;"	i
BashLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    TcshLexer$/;"	i
BashLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^class BashLexer(RegexLexer):$/;"	c
BashLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^from pygments.lexers.shell import BashLexer$/;"	i
BashLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^from pygments.lexers.shell import BashLexer$/;"	i
BashLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    TcshLexer$/;"	i
BashLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^class BashLexer(RegexLexer):$/;"	c
BashSessionLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    TcshLexer$/;"	i
BashSessionLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^class BashSessionLexer(Lexer):$/;"	c
BashSessionLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    TcshLexer$/;"	i
BashSessionLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^class BashSessionLexer(Lexer):$/;"	c
BasicTest	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class BasicTest(unittest.TestCase):$/;"	c
BasicTest	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class BasicTest(unittest.TestCase):$/;"	c
BatchLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    TcshLexer$/;"	i
BatchLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^class BatchLexer(RegexLexer):$/;"	c
BatchLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    TcshLexer$/;"	i
BatchLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^class BatchLexer(RegexLexer):$/;"	c
BefungeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^class BefungeLexer(RegexLexer):$/;"	c
BefungeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.esoteric import BrainfuckLexer, BefungeLexer, RedcodeLexer$/;"	i
BefungeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^class BefungeLexer(RegexLexer):$/;"	c
BefungeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.esoteric import BrainfuckLexer, BefungeLexer, RedcodeLexer$/;"	i
Big5CharLenTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^Big5CharLenTable = (0, 1, 1, 2, 0)$/;"	v
Big5CharToFreqOrder	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/big5freq.py	/^Big5CharToFreqOrder = ($/;"	v
Big5CharToFreqOrder	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^from .big5freq import (Big5CharToFreqOrder, BIG5_TABLE_SIZE,$/;"	i
Big5DistributionAnalysis	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/big5prober.py	/^from .chardistribution import Big5DistributionAnalysis$/;"	i
Big5DistributionAnalysis	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^class Big5DistributionAnalysis(CharDistributionAnalysis):$/;"	c
Big5Prober	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/big5prober.py	/^class Big5Prober(MultiByteCharSetProber):$/;"	c
Big5Prober	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcsgroupprober.py	/^from .big5prober import Big5Prober$/;"	i
Big5SMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/big5prober.py	/^from .mbcssm import Big5SMModel$/;"	i
Big5SMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^Big5SMModel = {'classTable': BIG5_cls,$/;"	v
BlackWhiteStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/bw.py	/^class BlackWhiteStyle(Style):$/;"	c
BlackWhiteStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/bw.py	/^class BlackWhiteStyle(Style):$/;"	c
Blame	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
BlitzBasicLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^class BlitzBasicLexer(RegexLexer):$/;"	c
BlitzBasicLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.basic import BlitzBasicLexer, BlitzMaxLexer, MonkeyLexer$/;"	i
BlitzBasicLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^class BlitzBasicLexer(RegexLexer):$/;"	c
BlitzBasicLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.basic import BlitzBasicLexer, BlitzMaxLexer, MonkeyLexer$/;"	i
BlitzMaxLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^class BlitzMaxLexer(RegexLexer):$/;"	c
BlitzMaxLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.basic import BlitzBasicLexer, BlitzMaxLexer, MonkeyLexer$/;"	i
BlitzMaxLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^class BlitzMaxLexer(RegexLexer):$/;"	c
BlitzMaxLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.basic import BlitzBasicLexer, BlitzMaxLexer, MonkeyLexer$/;"	i
BmpImageFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^class BmpImageFormatter(ImageFormatter):$/;"	c
BmpImageFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^class BmpImageFormatter(ImageFormatter):$/;"	c
BooLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^class BooLexer(RegexLexer):$/;"	c
BooLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^class BooLexer(RegexLexer):$/;"	c
Bookmark.AddBookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot)$/;"	f
Bookmark.GetSelected	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name)$/;"	f
Bookmark.Write	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(...)$/;"	f
Bookmark.compareTo	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(...)$/;"	f
Bookmark.openInNewTab	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot()$/;"	f
Bookmark.validate	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
BorlandStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/borland.py	/^class BorlandStyle(Style):$/;"	c
BorlandStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/borland.py	/^class BorlandStyle(Style):$/;"	c
BrainfuckLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^class BrainfuckLexer(RegexLexer):$/;"	c
BrainfuckLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.esoteric import BrainfuckLexer, BefungeLexer, RedcodeLexer$/;"	i
BrainfuckLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^class BrainfuckLexer(RegexLexer):$/;"	c
BrainfuckLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.esoteric import BrainfuckLexer, BefungeLexer, RedcodeLexer$/;"	i
BroLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^class BroLexer(RegexLexer):$/;"	c
BroLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    MscgenLexer, VGLLexer$/;"	i
BroLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^class BroLexer(RegexLexer):$/;"	c
BroLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    MscgenLexer, VGLLexer$/;"	i
Browse	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufEnterHook	plugged/syntastic/plugin/syntastic.vim	/^function! s:BufEnterHook() abort " {{{2$/;"	f
BufReadHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:BufReadHandler()$/;"	f
BufReadIndex	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex() abort$/;"	f
BufReadIndexFile	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile() abort$/;"	f
BufReadObject	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject() abort$/;"	f
BufReadPostHook	plugged/syntastic/plugin/syntastic.vim	/^function! s:BufReadPostHook() abort " {{{2$/;"	f
BufType	plugged/ingo-library/autoload/ingo/buffer/scratch.vim	/^function! s:BufType( scratchIsFile )$/;"	f
BufWinEnterHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:BufWinEnterHandler()$/;"	f
BufWriteIndexFile	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile() abort$/;"	f
BufWritePostHook	plugged/syntastic/plugin/syntastic.vim	/^function! s:BufWritePostHook() abort " {{{2$/;"	f
Bufnr	plugged/ingo-library/autoload/ingo/buffer/scratch.vim	/^function! s:Bufnr( dirspec, filename, isFile )$/;"	f
BugsLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/math.py	/^from pygments.lexers.modeling import BugsLexer, JagsLexer, StanLexer$/;"	i
BugsLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^class BugsLexer(RegexLexer):$/;"	c
BugsLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/math.py	/^from pygments.lexers.modeling import BugsLexer, JagsLexer, StanLexer$/;"	i
BugsLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^class BugsLexer(RegexLexer):$/;"	c
BuildROmniList	plugged/Nvim-R/R/common_global.vim	/^function BuildROmniList()$/;"	f
BuiltIn	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    BuiltIn = ('attachment', 'attribute run', 'character', 'day', 'month',$/;"	v	class:AppleScriptLexer
BuiltIn	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    BuiltIn = ('attachment', 'attribute run', 'character', 'day', 'month',$/;"	v	class:AppleScriptLexer
BulgarianLangModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langbulgarianmodel.py	/^BulgarianLangModel = ($/;"	v
ByHeader	plugged/AdvancedSorters/autoload/AdvancedSorters/Ranges.vim	/^function! s:ByHeader( startLnum, endLnum, expr )$/;"	f
ByMatch	plugged/AdvancedSorters/autoload/AdvancedSorters/Ranges.vim	/^function! s:ByMatch( startLnum, endLnum, expr )$/;"	f
ByRange	plugged/AdvancedSorters/autoload/AdvancedSorters/Ranges.vim	/^function! s:ByRange( startLnum, endLnum, expr )$/;"	f
BytesIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/__init__.py	/^from pygments.util import StringIO, BytesIO$/;"	i
BytesIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^from pygments.util import get_choice_opt, text_type, BytesIO$/;"	i
BytesIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^    from io import StringIO, BytesIO$/;"	i
BytesIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/__init__.py	/^from pygments.util import StringIO, BytesIO$/;"	i
BytesIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^from pygments.util import get_choice_opt, text_type, BytesIO$/;"	i
BytesIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^    from io import StringIO, BytesIO$/;"	i
BytesIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^from io import BytesIO, UnsupportedOperation$/;"	i
BytesIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/filepost.py	/^from io import BytesIO$/;"	i
BytesIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^from simplejson.compat import unichr, text_type, b, u, BytesIO$/;"	i
C	plugged/calendar.vim/autoload/calendar/string.vim	/^fu! s:C(s, w) abort$/;"	f
CASES	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_encode_basestring_ascii.py	/^CASES = [$/;"	v
CC	plugged/vimproc.vim/make_mac.mak	/^CC=clang$/;"	m
CC	plugged/vimproc.vim/make_mac.mak	/^CC=gcc$/;"	m
CC	plugged/vimproc.vim/make_mac.mak	/^CC=llvm-gcc$/;"	m
CC	plugged/vimproc.vim/make_mingw32.mak	/^CC=gcc$/;"	m
CC	plugged/vimproc.vim/make_mingw64.mak	/^CC=x86_64-w64-mingw32-gcc$/;"	m
CC	plugged/vimproc.vim/make_sunos.mak	/^CC=$(SUNCC)$/;"	m
CC	plugged/vimproc.vim/make_sunos.mak	/^CC=gcc$/;"	m
CERT_NONE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^    from ssl import wrap_socket, CERT_NONE, PROTOCOL_SSLv23$/;"	i
CFLAGS	plugged/vimproc.vim/make_msvc.mak	/^CFLAGS = $(CFLAGS) $(DEFINES) \/wd4100 \/wd4127 \/O2$/;"	m
CFLAGS	plugged/vimproc.vim/make_msvc.mak	/^CFLAGS = $(CFLAGS) -D_DEBUG$/;"	m
CFLAGS	plugged/vimproc.vim/make_msvc.mak	/^CFLAGS = $(CFLAGS) -D_NDEBUG$/;"	m
CFamilyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^class CFamilyLexer(RegexLexer):$/;"	c
CFamilyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^class CFamilyLexer(RegexLexer):$/;"	c
CHR2XD	plugged/vimproc.vim/autoload/vimstack.c	/^static const char CHR2XD[0x100] = {$/;"	v	file:
CLASS_NUM	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^CLASS_NUM = 8  # total classes$/;"	v
CLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^from pygments.lexers.c_cpp import CppLexer, CLexer$/;"	i
CLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^class CLexer(CFamilyLexer):$/;"	c
CLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^from pygments.lexers.c_cpp import CLexer, CppLexer$/;"	i
CLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.c_cpp import CLexer, CppLexer$/;"	i
CLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^from pygments.lexers.c_cpp import CLexer, CppLexer$/;"	i
CLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^from pygments.lexers.c_cpp import CLexer, CppLexer$/;"	i
CLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^from pygments.lexers.c_cpp import CppLexer, CLexer$/;"	i
CLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^class CLexer(CFamilyLexer):$/;"	c
CLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^from pygments.lexers.c_cpp import CLexer, CppLexer$/;"	i
CLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.c_cpp import CLexer, CppLexer$/;"	i
CLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^from pygments.lexers.c_cpp import CLexer, CppLexer$/;"	i
CLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^from pygments.lexers.c_cpp import CLexer, CppLexer$/;"	i
CMakeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^class CMakeLexer(RegexLexer):$/;"	c
CMakeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^from pygments.lexers.make import MakefileLexer, BaseMakefileLexer, CMakeLexer$/;"	i
CMakeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^class CMakeLexer(RegexLexer):$/;"	c
CMakeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^from pygments.lexers.make import MakefileLexer, BaseMakefileLexer, CMakeLexer$/;"	i
COCOA_INTERFACES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^COCOA_INTERFACES = set(['UITableViewCell', 'HKCorrelationQuery', 'NSURLSessionDataTask', 'PHFetchOptions', 'NSLinguisticTagger', 'NSStream', 'AVAudioUnitDelay', 'GCMotion', 'SKPhysicsWorld', 'NSString', 'CMAttitude', 'AVAudioEnvironmentDistanceAttenuationParameters', 'HKStatisticsCollection', 'SCNPlane', 'CBPeer', 'JSContext', 'SCNTransaction', 'SCNTorus', 'AVAudioUnitEffect', 'UICollectionReusableView', 'MTLSamplerDescriptor', 'AVAssetReaderSampleReferenceOutput', 'AVMutableCompositionTrack', 'GKLeaderboard', 'NSFetchedResultsController', 'SKRange', 'MKTileOverlayRenderer', 'MIDINetworkSession', 'UIVisualEffectView', 'CIWarpKernel', 'PKObject', 'MKRoute', 'MPVolumeView', 'UIPrintInfo', 'SCNText', 'ADClient', 'UIKeyCommand', 'AVMutableAudioMix', 'GLKEffectPropertyLight', 'WKScriptMessage', 'AVMIDIPlayer', 'PHCollectionListChangeRequest', 'UICollectionViewLayout', 'NSMutableCharacterSet', 'SKPaymentTransaction', 'NEOnDemandRuleConnect', 'NSShadow', 'SCNView', 'NSURLSessionConfiguration', 'MTLVertexAttributeDescriptor', 'CBCharacteristic', 'HKQuantityType', 'CKLocationSortDescriptor', 'NEVPNIKEv2SecurityAssociationParameters', 'CMStepCounter', 'NSNetService', 'AVAssetWriterInputMetadataAdaptor', 'UICollectionView', 'UIViewPrintFormatter', 'SCNLevelOfDetail', 'CAShapeLayer', 'MCPeerID', 'MPRatingCommand', 'WKNavigation', 'NSDictionary', 'NSFileVersion', 'CMGyroData', 'AVAudioUnitDistortion', 'CKFetchRecordsOperation', 'SKPhysicsJointSpring', 'SCNHitTestResult', 'AVAudioTime', 'CIFilter', 'UIView', 'SCNConstraint', 'CAPropertyAnimation', 'MKMapItem', 'MPRemoteCommandCenter', 'UICollectionViewFlowLayoutInvalidationContext', 'UIInputViewController', 'PKPass', 'SCNPhysicsBehavior', 'MTLRenderPassColorAttachmentDescriptor', 'MKPolygonRenderer', 'CKNotification', 'JSValue', 'PHCollectionList', 'CLGeocoder', 'NSByteCountFormatter', 'AVCaptureScreenInput', 'MPFeedbackCommand', 'CAAnimation', 'MKOverlayPathView', 'UIActionSheet', 'UIMotionEffectGroup', 'NSLengthFormatter', 'UIBarItem', 'SKProduct', 'AVAssetExportSession', 'NSKeyedUnarchiver', 'NSMutableSet', 'SCNPyramid', 'PHAssetCollection', 'MKMapView', 'HMHomeManager', 'CATransition', 'MTLCompileOptions', 'UIVibrancyEffect', 'CLCircularRegion', 'MKTileOverlay', 'SCNShape', 'ACAccountCredential', 'SKPhysicsJointLimit', 'MKMapSnapshotter', 'AVMediaSelectionGroup', 'NSIndexSet', 'CBPeripheralManager', 'CKRecordZone', 'AVAudioRecorder', 'NSURL', 'CBCentral', 'NSNumber', 'AVAudioOutputNode', 'MTLVertexAttributeDescriptorArray', 'MKETAResponse', 'SKTransition', 'SSReadingList', 'HKSourceQuery', 'UITableViewRowAction', 'UITableView', 'SCNParticlePropertyController', 'AVCaptureStillImageOutput', 'GCController', 'AVAudioPlayerNode', 'AVAudioSessionPortDescription', 'NSHTTPURLResponse', 'NEOnDemandRuleEvaluateConnection', 'SKEffectNode', 'HKQuantity', 'GCControllerElement', 'AVPlayerItemAccessLogEvent', 'SCNBox', 'NSExtensionContext', 'MKOverlayRenderer', 'SCNPhysicsVehicle', 'NSDecimalNumber', 'EKReminder', 'MKPolylineView', 'CKQuery', 'AVAudioMixerNode', 'GKAchievementDescription', 'EKParticipant', 'NSBlockOperation', 'UIActivityItemProvider', 'CLLocation', 'NSBatchUpdateRequest', 'PHContentEditingOutput', 'PHObjectChangeDetails', 'MPMoviePlayerController', 'AVAudioFormat', 'HMTrigger', 'MTLRenderPassDepthAttachmentDescriptor', 'SCNRenderer', 'GKScore', 'UISplitViewController', 'HKSource', 'NSURLConnection', 'ABUnknownPersonViewController', 'SCNTechnique', 'UIMenuController', 'NSEvent', 'SKTextureAtlas', 'NSKeyedArchiver', 'GKLeaderboardSet', 'NSSimpleCString', 'AVAudioPCMBuffer', 'CBATTRequest', 'GKMatchRequest', 'AVMetadataObject', 'SKProductsRequest', 'UIAlertView', 'NSIncrementalStore', 'MFMailComposeViewController', 'SCNFloor', 'NSSortDescriptor', 'CKFetchNotificationChangesOperation', 'MPMovieAccessLog', 'NSManagedObjectContext', 'AVAudioUnitGenerator', 'WKBackForwardList', 'SKMutableTexture', 'AVCaptureAudioDataOutput', 'ACAccount', 'AVMetadataItem', 'MPRatingCommandEvent', 'AVCaptureDeviceInputSource', 'CLLocationManager', 'MPRemoteCommand', 'AVCaptureSession', 'UIStepper', 'UIRefreshControl', 'NEEvaluateConnectionRule', 'CKModifyRecordsOperation', 'UICollectionViewTransitionLayout', 'CBCentralManager', 'NSPurgeableData', 'SLComposeViewController', 'NSHashTable', 'MKUserTrackingBarButtonItem', 'UILexiconEntry', 'CMMotionActivity', 'SKAction', 'SKShader', 'AVPlayerItemOutput', 'MTLRenderPassAttachmentDescriptor', 'UIDocumentInteractionController', 'UIDynamicItemBehavior', 'NSMutableDictionary', 'UILabel', 'AVCaptureInputPort', 'NSExpression', 'CAInterAppAudioTransportView', 'SKMutablePayment', 'UIImage', 'PHCachingImageManager', 'SCNTransformConstraint', 'UIColor', 'SCNGeometrySource', 'AVCaptureAutoExposureBracketedStillImageSettings', 'UIPopoverBackgroundView', 'UIToolbar', 'NSNotificationCenter', 'AVAssetReaderOutputMetadataAdaptor', 'NSEntityMigrationPolicy', 'NSLocale', 'NSURLSession', 'SCNCamera', 'NSTimeZone', 'UIManagedDocument', 'AVMutableVideoCompositionLayerInstruction', 'AVAssetTrackGroup', 'NSInvocationOperation', 'ALAssetRepresentation', 'AVQueuePlayer', 'HMServiceGroup', 'UIPasteboard', 'PHContentEditingInput', 'NSLayoutManager', 'EKCalendarChooser', 'EKObject', 'CATiledLayer', 'GLKReflectionMapEffect', 'NSManagedObjectID', 'NSEnergyFormatter', 'SLRequest', 'HMCharacteristic', 'AVPlayerLayer', 'MTLRenderPassDescriptor', 'SKPayment', 'NSPointerArray', 'AVAudioMix', 'SCNLight', 'MCAdvertiserAssistant', 'MKMapSnapshotOptions', 'HKCategorySample', 'AVAudioEnvironmentReverbParameters', 'SCNMorpher', 'AVTimedMetadataGroup', 'CBMutableCharacteristic', 'NSFetchRequest', 'UIDevice', 'NSManagedObject', 'NKAssetDownload', 'AVOutputSettingsAssistant', 'SKPhysicsJointPin', 'UITabBar', 'UITextInputMode', 'NSFetchRequestExpression', 'HMActionSet', 'CTSubscriber', 'PHAssetChangeRequest', 'NSPersistentStoreRequest', 'UITabBarController', 'HKQuantitySample', 'AVPlayerItem', 'AVSynchronizedLayer', 'MKDirectionsRequest', 'NSMetadataItem', 'UIPresentationController', 'UINavigationItem', 'PHFetchResultChangeDetails', 'PHImageManager', 'AVCaptureManualExposureBracketedStillImageSettings', 'UIStoryboardPopoverSegue', 'SCNLookAtConstraint', 'UIGravityBehavior', 'UIWindow', 'CBMutableDescriptor', 'NEOnDemandRuleDisconnect', 'UIBezierPath', 'UINavigationController', 'ABPeoplePickerNavigationController', 'EKSource', 'AVAssetWriterInput', 'AVPlayerItemTrack', 'GLKEffectPropertyTexture', 'NSURLResponse', 'SKPaymentQueue', 'NSAssertionHandler', 'MKReverseGeocoder', 'GCControllerAxisInput', 'NSArray', 'NSOrthography', 'NSURLSessionUploadTask', 'NSCharacterSet', 'AVMutableVideoCompositionInstruction', 'AVAssetReaderOutput', 'EAGLContext', 'WKFrameInfo', 'CMPedometer', 'MyClass', 'CKModifyBadgeOperation', 'AVCaptureAudioFileOutput', 'SKEmitterNode', 'NSMachPort', 'AVVideoCompositionCoreAnimationTool', 'PHCollection', 'SCNPhysicsWorld', 'NSURLRequest', 'CMAccelerometerData', 'NSNetServiceBrowser', 'CLFloor', 'AVAsynchronousVideoCompositionRequest', 'SCNGeometry', 'SCNIKConstraint', 'CIKernel', 'CAGradientLayer', 'HKCharacteristicType', 'NSFormatter', 'SCNAction', 'CATransaction', 'CBUUID', 'UIStoryboard', 'MPMediaLibrary', 'UITapGestureRecognizer', 'MPMediaItemArtwork', 'NSURLSessionTask', 'AVAudioUnit', 'MCBrowserViewController', 'NSRelationshipDescription', 'HKSample', 'WKWebView', 'NSMutableAttributedString', 'NSPersistentStoreAsynchronousResult', 'MPNowPlayingInfoCenter', 'MKLocalSearch', 'EAAccessory', 'HKCorrelation', 'CATextLayer', 'NSNotificationQueue', 'UINib', 'GLKTextureLoader', 'HKObjectType', 'NSValue', 'NSMutableIndexSet', 'SKPhysicsContact', 'NSProgress', 'AVPlayerViewController', 'CAScrollLayer', 'GKSavedGame', 'NSTextCheckingResult', 'PHObjectPlaceholder', 'SKConstraint', 'EKEventEditViewController', 'NSEntityDescription', 'NSURLCredentialStorage', 'UIApplication', 'SKDownload', 'SCNNode', 'MKLocalSearchRequest', 'SKScene', 'UISearchDisplayController', 'NEOnDemandRule', 'MTLRenderPassStencilAttachmentDescriptor', 'CAReplicatorLayer', 'UIPrintPageRenderer', 'EKCalendarItem', 'NSUUID', 'EAAccessoryManager', 'NEOnDemandRuleIgnore', 'SKRegion', 'AVAssetResourceLoader', 'EAWiFiUnconfiguredAccessoryBrowser', 'NSUserActivity', 'CTCall', 'UIPrinterPickerController', 'CIVector', 'UINavigationBar', 'UIPanGestureRecognizer', 'MPMediaQuery', 'ABNewPersonViewController', 'CKRecordZoneID', 'HKAnchoredObjectQuery', 'CKFetchRecordZonesOperation', 'UIStoryboardSegue', 'ACAccountType', 'GKSession', 'SKVideoNode', 'PHChange', 'SKReceiptRefreshRequest', 'GCExtendedGamepadSnapshot', 'MPSeekCommandEvent', 'GCExtendedGamepad', 'CAValueFunction', 'SCNCylinder', 'NSNotification', 'NSBatchUpdateResult', 'PKPushCredentials', 'SCNPhysicsSliderJoint', 'AVCaptureDeviceFormat', 'AVPlayerItemErrorLog', 'NSMapTable', 'NSSet', 'CMMotionManager', 'GKVoiceChatService', 'UIPageControl', 'UILexicon', 'MTLArrayType', 'AVAudioUnitReverb', 'MKGeodesicPolyline', 'AVMutableComposition', 'NSLayoutConstraint', 'UIPrinter', 'NSOrderedSet', 'CBAttribute', 'PKPushPayload', 'NSIncrementalStoreNode', 'EKEventStore', 'MPRemoteCommandEvent', 'UISlider', 'UIBlurEffect', 'CKAsset', 'AVCaptureInput', 'AVAudioEngine', 'MTLVertexDescriptor', 'SKPhysicsBody', 'NSOperation', 'UIImageAsset', 'MKMapCamera', 'SKProductsResponse', 'GLKEffectPropertyMaterial', 'AVCaptureDevice', 'CTCallCenter', 'CABTMIDILocalPeripheralViewController', 'NEVPNManager', 'HKQuery', 'SCNPhysicsContact', 'CBMutableService', 'AVSampleBufferDisplayLayer', 'SCNSceneSource', 'SKLightNode', 'CKDiscoveredUserInfo', 'NSMutableArray', 'MTLDepthStencilDescriptor', 'MTLArgument', 'NSMassFormatter', 'CIRectangleFeature', 'PKPushRegistry', 'NEVPNConnection', 'MCNearbyServiceBrowser', 'NSOperationQueue', 'MKPolylineRenderer', 'UICollectionViewLayoutAttributes', 'NSValueTransformer', 'UICollectionViewFlowLayout', 'CIBarcodeFeature', 'MPChangePlaybackRateCommandEvent', 'NSEntityMapping', 'SKTexture', 'NSMergePolicy', 'UITextInputStringTokenizer', 'NSRecursiveLock', 'AVAsset', 'NSUndoManager', 'AVAudioUnitSampler', 'NSItemProvider', 'SKUniform', 'MPMediaPickerController', 'CKOperation', 'MTLRenderPipelineDescriptor', 'EAWiFiUnconfiguredAccessory', 'NSFileCoordinator', 'SKRequest', 'NSFileHandle', 'NSConditionLock', 'UISegmentedControl', 'NSManagedObjectModel', 'UITabBarItem', 'SCNCone', 'MPMediaItem', 'SCNMaterial', 'EKRecurrenceRule', 'UIEvent', 'UITouch', 'UIPrintInteractionController', 'CMDeviceMotion', 'NEVPNProtocol', 'NSCompoundPredicate', 'HKHealthStore', 'MKMultiPoint', 'HKSampleType', 'UIPrintFormatter', 'AVAudioUnitEQFilterParameters', 'SKView', 'NSConstantString', 'UIPopoverController', 'CKDatabase', 'AVMetadataFaceObject', 'UIAccelerometer', 'EKEventViewController', 'CMAltitudeData', 'MTLStencilDescriptor', 'UISwipeGestureRecognizer', 'NSPort', 'MKCircleRenderer', 'AVCompositionTrack', 'NSAsynchronousFetchRequest', 'NSUbiquitousKeyValueStore', 'NSMetadataQueryResultGroup', 'AVAssetResourceLoadingDataRequest', 'UITableViewHeaderFooterView', 'CKNotificationID', 'AVAudioSession', 'HKUnit', 'NSNull', 'NSPersistentStoreResult', 'MKCircleView', 'AVAudioChannelLayout', 'NEVPNProtocolIKEv2', 'WKProcessPool', 'UIAttachmentBehavior', 'CLBeacon', 'NSInputStream', 'NSURLCache', 'GKPlayer', 'NSMappingModel', 'NSHTTPCookie', 'AVMutableVideoComposition', 'PHFetchResult', 'NSAttributeDescription', 'AVPlayer', 'MKAnnotationView', 'UIFontDescriptor', 'NSTimer', 'CBDescriptor', 'MKOverlayView', 'AVAudioUnitTimePitch', 'NSSaveChangesRequest', 'UIReferenceLibraryViewController', 'SKPhysicsJointFixed', 'UILocalizedIndexedCollation', 'UIInterpolatingMotionEffect', 'UIDocumentPickerViewController', 'AVAssetWriter', 'NSBundle', 'SKStoreProductViewController', 'GLKViewController', 'NSMetadataQueryAttributeValueTuple', 'GKTurnBasedMatch', 'AVAudioFile', 'UIActivity', 'NSPipe', 'MKShape', 'NSMergeConflict', 'CIImage', 'HKObject', 'UIRotationGestureRecognizer', 'AVPlayerItemLegibleOutput', 'AVAssetImageGenerator', 'GCControllerButtonInput', 'CKMarkNotificationsReadOperation', 'CKSubscription', 'MPTimedMetadata', 'NKIssue', 'UIScreenMode', 'HMAccessoryBrowser', 'GKTurnBasedEventHandler', 'UIWebView', 'MKPolyline', 'JSVirtualMachine', 'AVAssetReader', 'NSAttributedString', 'GKMatchmakerViewController', 'NSCountedSet', 'UIButton', 'WKNavigationResponse', 'GKLocalPlayer', 'MPMovieErrorLog', 'AVSpeechUtterance', 'HKStatistics', 'UILocalNotification', 'HKBiologicalSexObject', 'AVURLAsset', 'CBPeripheral', 'NSDateComponentsFormatter', 'SKSpriteNode', 'UIAccessibilityElement', 'AVAssetWriterInputGroup', 'HMZone', 'AVAssetReaderAudioMixOutput', 'NSEnumerator', 'UIDocument', 'MKLocalSearchResponse', 'UISimpleTextPrintFormatter', 'PHPhotoLibrary', 'CBService', 'UIDocumentMenuViewController', 'MCSession', 'QLPreviewController', 'CAMediaTimingFunction', 'UITextPosition', 'ASIdentifierManager', 'AVAssetResourceLoadingRequest', 'SLComposeServiceViewController', 'UIPinchGestureRecognizer', 'PHObject', 'NSExtensionItem', 'HKSampleQuery', 'MTLRenderPipelineColorAttachmentDescriptorArray', 'MKRouteStep', 'SCNCapsule', 'NSMetadataQuery', 'AVAssetResourceLoadingContentInformationRequest', 'UITraitCollection', 'CTCarrier', 'NSFileSecurity', 'UIAcceleration', 'UIMotionEffect', 'MTLRenderPipelineReflection', 'CLHeading', 'CLVisit', 'MKDirectionsResponse', 'HMAccessory', 'MTLStructType', 'UITextView', 'CMMagnetometerData', 'UICollisionBehavior', 'UIProgressView', 'CKServerChangeToken', 'UISearchBar', 'MKPlacemark', 'AVCaptureConnection', 'NSPropertyMapping', 'ALAssetsFilter', 'SK3DNode', 'AVPlayerItemErrorLogEvent', 'NSJSONSerialization', 'AVAssetReaderVideoCompositionOutput', 'ABPersonViewController', 'CIDetector', 'GKTurnBasedMatchmakerViewController', 'MPMediaItemCollection', 'SCNSphere', 'NSCondition', 'NSURLCredential', 'MIDINetworkConnection', 'NSFileProviderExtension', 'NSDecimalNumberHandler', 'NSAtomicStoreCacheNode', 'NSAtomicStore', 'EKAlarm', 'CKNotificationInfo', 'AVAudioUnitEQ', 'UIPercentDrivenInteractiveTransition', 'MKPolygon', 'AVAssetTrackSegment', 'MTLVertexAttribute', 'NSExpressionDescription', 'HKStatisticsCollectionQuery', 'NSURLAuthenticationChallenge', 'NSDirectoryEnumerator', 'MKDistanceFormatter', 'UIAlertAction', 'NSPropertyListSerialization', 'GKPeerPickerController', 'UIUserNotificationSettings', 'UITableViewController', 'GKNotificationBanner', 'MKPointAnnotation', 'MTLRenderPassColorAttachmentDescriptorArray', 'NSCache', 'SKPhysicsJoint', 'NSXMLParser', 'UIViewController', 'MFMessageComposeViewController', 'AVAudioInputNode', 'NSDataDetector', 'CABTMIDICentralViewController', 'AVAudioUnitMIDIInstrument', 'AVCaptureVideoPreviewLayer', 'AVAssetWriterInputPassDescription', 'MPChangePlaybackRateCommand', 'NSURLComponents', 'CAMetalLayer', 'UISnapBehavior', 'AVMetadataMachineReadableCodeObject', 'CKDiscoverUserInfosOperation', 'NSTextAttachment', 'NSException', 'UIMenuItem', 'CMMotionActivityManager', 'SCNGeometryElement', 'NCWidgetController', 'CAEmitterLayer', 'MKUserLocation', 'UIImagePickerController', 'CIFeature', 'AVCaptureDeviceInput', 'ALAsset', 'NSURLSessionDownloadTask', 'SCNPhysicsHingeJoint', 'MPMoviePlayerViewController', 'NSMutableOrderedSet', 'SCNMaterialProperty', 'UIFont', 'AVCaptureVideoDataOutput', 'NSCachedURLResponse', 'ALAssetsLibrary', 'NSInvocation', 'UILongPressGestureRecognizer', 'NSTextStorage', 'WKWebViewConfiguration', 'CIFaceFeature', 'MKMapSnapshot', 'GLKEffectPropertyFog', 'AVComposition', 'CKDiscoverAllContactsOperation', 'AVAudioMixInputParameters', 'CAEmitterBehavior', 'PKPassLibrary', 'UIMutableUserNotificationCategory', 'NSLock', 'NEVPNProtocolIPSec', 'ADBannerView', 'UIDocumentPickerExtensionViewController', 'UIActivityIndicatorView', 'AVPlayerMediaSelectionCriteria', 'CALayer', 'UIAccessibilityCustomAction', 'UIBarButtonItem', 'AVAudioSessionRouteDescription', 'CLBeaconRegion', 'HKBloodTypeObject', 'MTLVertexBufferLayoutDescriptorArray', 'CABasicAnimation', 'AVVideoCompositionInstruction', 'AVMutableTimedMetadataGroup', 'EKRecurrenceEnd', 'NSTextContainer', 'TWTweetComposeViewController', 'UIScrollView', 'WKNavigationAction', 'AVPlayerItemMetadataOutput', 'EKRecurrenceDayOfWeek', 'NSNumberFormatter', 'MTLComputePipelineReflection', 'UIScreen', 'CLRegion', 'NSProcessInfo', 'GLKTextureInfo', 'SCNSkinner', 'AVCaptureMetadataOutput', 'SCNAnimationEvent', 'NSTextTab', 'JSManagedValue', 'NSDate', 'UITextChecker', 'WKBackForwardListItem', 'NSData', 'NSParagraphStyle', 'AVMutableMetadataItem', 'EKCalendar', 'NSMutableURLRequest', 'UIVideoEditorController', 'HMTimerTrigger', 'AVAudioUnitVarispeed', 'UIDynamicAnimator', 'AVCompositionTrackSegment', 'GCGamepadSnapshot', 'MPMediaEntity', 'GLKSkyboxEffect', 'UISwitch', 'EKStructuredLocation', 'UIGestureRecognizer', 'NSProxy', 'GLKBaseEffect', 'UIPushBehavior', 'GKScoreChallenge', 'NSCoder', 'MPMediaPlaylist', 'NSDateComponents', 'WKUserScript', 'EKEvent', 'NSDateFormatter', 'NSAsynchronousFetchResult', 'AVAssetWriterInputPixelBufferAdaptor', 'UIVisualEffect', 'UICollectionViewCell', 'UITextField', 'CLPlacemark', 'MPPlayableContentManager', 'AVCaptureOutput', 'HMCharacteristicWriteAction', 'CKModifySubscriptionsOperation', 'NSPropertyDescription', 'GCGamepad', 'UIMarkupTextPrintFormatter', 'SCNTube', 'NSPersistentStoreCoordinator', 'AVAudioEnvironmentNode', 'GKMatchmaker', 'CIContext', 'NSThread', 'SLComposeSheetConfigurationItem', 'SKPhysicsJointSliding', 'NSPredicate', 'GKVoiceChat', 'SKCropNode', 'AVCaptureAudioPreviewOutput', 'NSStringDrawingContext', 'GKGameCenterViewController', 'UIPrintPaper', 'SCNPhysicsBallSocketJoint', 'UICollectionViewLayoutInvalidationContext', 'GLKEffectPropertyTransform', 'AVAudioIONode', 'UIDatePicker', 'MKDirections', 'ALAssetsGroup', 'CKRecordZoneNotification', 'SCNScene', 'MPMovieAccessLogEvent', 'CKFetchSubscriptionsOperation', 'CAEmitterCell', 'AVAudioUnitTimeEffect', 'HMCharacteristicMetadata', 'MKPinAnnotationView', 'UIPickerView', 'UIImageView', 'UIUserNotificationCategory', 'SCNPhysicsVehicleWheel', 'HKCategoryType', 'MPMediaQuerySection', 'GKFriendRequestComposeViewController', 'NSError', 'MTLRenderPipelineColorAttachmentDescriptor', 'SCNPhysicsShape', 'UISearchController', 'SCNPhysicsBody', 'CTSubscriberInfo', 'AVPlayerItemAccessLog', 'MPMediaPropertyPredicate', 'CMLogItem', 'NSAutoreleasePool', 'NSSocketPort', 'AVAssetReaderTrackOutput', 'SKNode', 'UIMutableUserNotificationAction', 'SCNProgram', 'AVSpeechSynthesisVoice', 'CMAltimeter', 'AVCaptureAudioChannel', 'GKTurnBasedExchangeReply', 'AVVideoCompositionLayerInstruction', 'AVSpeechSynthesizer', 'GKChallengeEventHandler', 'AVCaptureFileOutput', 'UIControl', 'SCNPhysicsField', 'CKReference', 'LAContext', 'CKRecordID', 'ADInterstitialAd', 'AVAudioSessionDataSourceDescription', 'AVAudioBuffer', 'CIColorKernel', 'GCControllerDirectionPad', 'NSFileManager', 'AVMutableAudioMixInputParameters', 'UIScreenEdgePanGestureRecognizer', 'CAKeyframeAnimation', 'CKQueryNotification', 'PHAdjustmentData', 'EASession', 'AVAssetResourceRenewalRequest', 'UIInputView', 'NSFileWrapper', 'UIResponder', 'NSPointerFunctions', 'NSHTTPCookieStorage', 'AVMediaSelectionOption', 'NSRunLoop', 'NSFileAccessIntent', 'CAAnimationGroup', 'MKCircle', 'UIAlertController', 'NSMigrationManager', 'NSDateIntervalFormatter', 'UICollectionViewUpdateItem', 'CKDatabaseOperation', 'PHImageRequestOptions', 'SKReachConstraints', 'CKRecord', 'CAInterAppAudioSwitcherView', 'WKWindowFeatures', 'GKInvite', 'NSMutableData', 'PHAssetCollectionChangeRequest', 'NSMutableParagraphStyle', 'UIDynamicBehavior', 'GLKEffectProperty', 'CKFetchRecordChangesOperation', 'SKShapeNode', 'MPMovieErrorLogEvent', 'MKPolygonView', 'MPContentItem', 'HMAction', 'NSScanner', 'GKAchievementChallenge', 'AVAudioPlayer', 'CKContainer', 'AVVideoComposition', 'NKLibrary', 'NSPersistentStore', 'AVCaptureMovieFileOutput', 'HMRoom', 'GKChallenge', 'UITextRange', 'NSURLProtectionSpace', 'ACAccountStore', 'MPSkipIntervalCommand', 'NSComparisonPredicate', 'HMHome', 'PHVideoRequestOptions', 'NSOutputStream', 'MPSkipIntervalCommandEvent', 'PKAddPassesViewController', 'UITextSelectionRect', 'CTTelephonyNetworkInfo', 'AVTextStyleRule', 'NSFetchedPropertyDescription', 'UIPageViewController', 'CATransformLayer', 'UICollectionViewController', 'AVAudioNode', 'MCNearbyServiceAdvertiser', 'NSObject', 'PHAsset', 'GKLeaderboardViewController', 'CKQueryCursor', 'MPMusicPlayerController', 'MKOverlayPathRenderer', 'CMPedometerData', 'HMService', 'SKFieldNode', 'GKAchievement', 'WKUserContentController', 'AVAssetTrack', 'TWRequest', 'SKLabelNode', 'AVCaptureBracketedStillImageSettings', 'MIDINetworkHost', 'MPMediaPredicate', 'AVFrameRateRange', 'MTLTextureDescriptor', 'MTLVertexBufferLayoutDescriptor', 'MPFeedbackCommandEvent', 'UIUserNotificationAction', 'HKStatisticsQuery', 'SCNParticleSystem', 'NSIndexPath', 'AVVideoCompositionRenderContext', 'CADisplayLink', 'HKObserverQuery', 'UIPopoverPresentationController', 'CKQueryOperation', 'CAEAGLLayer', 'NSMutableString', 'NSMessagePort', 'NSURLQueryItem', 'MTLStructMember', 'AVAudioSessionChannelDescription', 'GLKView', 'UIActivityViewController', 'GKAchievementViewController', 'GKTurnBasedParticipant', 'NSURLProtocol', 'NSUserDefaults', 'NSCalendar', 'SKKeyframeSequence', 'AVMetadataItemFilter', 'CKModifyRecordZonesOperation', 'WKPreferences', 'NSMethodSignature', 'NSRegularExpression', 'EAGLSharegroup', 'AVPlayerItemVideoOutput', 'PHContentEditingInputRequestOptions', 'GKMatch', 'CIColor', 'UIDictationPhrase'])$/;"	v
COCOA_INTERFACES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^                COCOA_PROTOCOLS, COCOA_PRIMITIVES$/;"	i
COCOA_INTERFACES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^            COCOA_PROTOCOLS, COCOA_PRIMITIVES$/;"	i
COCOA_INTERFACES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^COCOA_INTERFACES = set(['UITableViewCell', 'HKCorrelationQuery', 'NSURLSessionDataTask', 'PHFetchOptions', 'NSLinguisticTagger', 'NSStream', 'AVAudioUnitDelay', 'GCMotion', 'SKPhysicsWorld', 'NSString', 'CMAttitude', 'AVAudioEnvironmentDistanceAttenuationParameters', 'HKStatisticsCollection', 'SCNPlane', 'CBPeer', 'JSContext', 'SCNTransaction', 'SCNTorus', 'AVAudioUnitEffect', 'UICollectionReusableView', 'MTLSamplerDescriptor', 'AVAssetReaderSampleReferenceOutput', 'AVMutableCompositionTrack', 'GKLeaderboard', 'NSFetchedResultsController', 'SKRange', 'MKTileOverlayRenderer', 'MIDINetworkSession', 'UIVisualEffectView', 'CIWarpKernel', 'PKObject', 'MKRoute', 'MPVolumeView', 'UIPrintInfo', 'SCNText', 'ADClient', 'UIKeyCommand', 'AVMutableAudioMix', 'GLKEffectPropertyLight', 'WKScriptMessage', 'AVMIDIPlayer', 'PHCollectionListChangeRequest', 'UICollectionViewLayout', 'NSMutableCharacterSet', 'SKPaymentTransaction', 'NEOnDemandRuleConnect', 'NSShadow', 'SCNView', 'NSURLSessionConfiguration', 'MTLVertexAttributeDescriptor', 'CBCharacteristic', 'HKQuantityType', 'CKLocationSortDescriptor', 'NEVPNIKEv2SecurityAssociationParameters', 'CMStepCounter', 'NSNetService', 'AVAssetWriterInputMetadataAdaptor', 'UICollectionView', 'UIViewPrintFormatter', 'SCNLevelOfDetail', 'CAShapeLayer', 'MCPeerID', 'MPRatingCommand', 'WKNavigation', 'NSDictionary', 'NSFileVersion', 'CMGyroData', 'AVAudioUnitDistortion', 'CKFetchRecordsOperation', 'SKPhysicsJointSpring', 'SCNHitTestResult', 'AVAudioTime', 'CIFilter', 'UIView', 'SCNConstraint', 'CAPropertyAnimation', 'MKMapItem', 'MPRemoteCommandCenter', 'UICollectionViewFlowLayoutInvalidationContext', 'UIInputViewController', 'PKPass', 'SCNPhysicsBehavior', 'MTLRenderPassColorAttachmentDescriptor', 'MKPolygonRenderer', 'CKNotification', 'JSValue', 'PHCollectionList', 'CLGeocoder', 'NSByteCountFormatter', 'AVCaptureScreenInput', 'MPFeedbackCommand', 'CAAnimation', 'MKOverlayPathView', 'UIActionSheet', 'UIMotionEffectGroup', 'NSLengthFormatter', 'UIBarItem', 'SKProduct', 'AVAssetExportSession', 'NSKeyedUnarchiver', 'NSMutableSet', 'SCNPyramid', 'PHAssetCollection', 'MKMapView', 'HMHomeManager', 'CATransition', 'MTLCompileOptions', 'UIVibrancyEffect', 'CLCircularRegion', 'MKTileOverlay', 'SCNShape', 'ACAccountCredential', 'SKPhysicsJointLimit', 'MKMapSnapshotter', 'AVMediaSelectionGroup', 'NSIndexSet', 'CBPeripheralManager', 'CKRecordZone', 'AVAudioRecorder', 'NSURL', 'CBCentral', 'NSNumber', 'AVAudioOutputNode', 'MTLVertexAttributeDescriptorArray', 'MKETAResponse', 'SKTransition', 'SSReadingList', 'HKSourceQuery', 'UITableViewRowAction', 'UITableView', 'SCNParticlePropertyController', 'AVCaptureStillImageOutput', 'GCController', 'AVAudioPlayerNode', 'AVAudioSessionPortDescription', 'NSHTTPURLResponse', 'NEOnDemandRuleEvaluateConnection', 'SKEffectNode', 'HKQuantity', 'GCControllerElement', 'AVPlayerItemAccessLogEvent', 'SCNBox', 'NSExtensionContext', 'MKOverlayRenderer', 'SCNPhysicsVehicle', 'NSDecimalNumber', 'EKReminder', 'MKPolylineView', 'CKQuery', 'AVAudioMixerNode', 'GKAchievementDescription', 'EKParticipant', 'NSBlockOperation', 'UIActivityItemProvider', 'CLLocation', 'NSBatchUpdateRequest', 'PHContentEditingOutput', 'PHObjectChangeDetails', 'MPMoviePlayerController', 'AVAudioFormat', 'HMTrigger', 'MTLRenderPassDepthAttachmentDescriptor', 'SCNRenderer', 'GKScore', 'UISplitViewController', 'HKSource', 'NSURLConnection', 'ABUnknownPersonViewController', 'SCNTechnique', 'UIMenuController', 'NSEvent', 'SKTextureAtlas', 'NSKeyedArchiver', 'GKLeaderboardSet', 'NSSimpleCString', 'AVAudioPCMBuffer', 'CBATTRequest', 'GKMatchRequest', 'AVMetadataObject', 'SKProductsRequest', 'UIAlertView', 'NSIncrementalStore', 'MFMailComposeViewController', 'SCNFloor', 'NSSortDescriptor', 'CKFetchNotificationChangesOperation', 'MPMovieAccessLog', 'NSManagedObjectContext', 'AVAudioUnitGenerator', 'WKBackForwardList', 'SKMutableTexture', 'AVCaptureAudioDataOutput', 'ACAccount', 'AVMetadataItem', 'MPRatingCommandEvent', 'AVCaptureDeviceInputSource', 'CLLocationManager', 'MPRemoteCommand', 'AVCaptureSession', 'UIStepper', 'UIRefreshControl', 'NEEvaluateConnectionRule', 'CKModifyRecordsOperation', 'UICollectionViewTransitionLayout', 'CBCentralManager', 'NSPurgeableData', 'SLComposeViewController', 'NSHashTable', 'MKUserTrackingBarButtonItem', 'UILexiconEntry', 'CMMotionActivity', 'SKAction', 'SKShader', 'AVPlayerItemOutput', 'MTLRenderPassAttachmentDescriptor', 'UIDocumentInteractionController', 'UIDynamicItemBehavior', 'NSMutableDictionary', 'UILabel', 'AVCaptureInputPort', 'NSExpression', 'CAInterAppAudioTransportView', 'SKMutablePayment', 'UIImage', 'PHCachingImageManager', 'SCNTransformConstraint', 'UIColor', 'SCNGeometrySource', 'AVCaptureAutoExposureBracketedStillImageSettings', 'UIPopoverBackgroundView', 'UIToolbar', 'NSNotificationCenter', 'AVAssetReaderOutputMetadataAdaptor', 'NSEntityMigrationPolicy', 'NSLocale', 'NSURLSession', 'SCNCamera', 'NSTimeZone', 'UIManagedDocument', 'AVMutableVideoCompositionLayerInstruction', 'AVAssetTrackGroup', 'NSInvocationOperation', 'ALAssetRepresentation', 'AVQueuePlayer', 'HMServiceGroup', 'UIPasteboard', 'PHContentEditingInput', 'NSLayoutManager', 'EKCalendarChooser', 'EKObject', 'CATiledLayer', 'GLKReflectionMapEffect', 'NSManagedObjectID', 'NSEnergyFormatter', 'SLRequest', 'HMCharacteristic', 'AVPlayerLayer', 'MTLRenderPassDescriptor', 'SKPayment', 'NSPointerArray', 'AVAudioMix', 'SCNLight', 'MCAdvertiserAssistant', 'MKMapSnapshotOptions', 'HKCategorySample', 'AVAudioEnvironmentReverbParameters', 'SCNMorpher', 'AVTimedMetadataGroup', 'CBMutableCharacteristic', 'NSFetchRequest', 'UIDevice', 'NSManagedObject', 'NKAssetDownload', 'AVOutputSettingsAssistant', 'SKPhysicsJointPin', 'UITabBar', 'UITextInputMode', 'NSFetchRequestExpression', 'HMActionSet', 'CTSubscriber', 'PHAssetChangeRequest', 'NSPersistentStoreRequest', 'UITabBarController', 'HKQuantitySample', 'AVPlayerItem', 'AVSynchronizedLayer', 'MKDirectionsRequest', 'NSMetadataItem', 'UIPresentationController', 'UINavigationItem', 'PHFetchResultChangeDetails', 'PHImageManager', 'AVCaptureManualExposureBracketedStillImageSettings', 'UIStoryboardPopoverSegue', 'SCNLookAtConstraint', 'UIGravityBehavior', 'UIWindow', 'CBMutableDescriptor', 'NEOnDemandRuleDisconnect', 'UIBezierPath', 'UINavigationController', 'ABPeoplePickerNavigationController', 'EKSource', 'AVAssetWriterInput', 'AVPlayerItemTrack', 'GLKEffectPropertyTexture', 'NSURLResponse', 'SKPaymentQueue', 'NSAssertionHandler', 'MKReverseGeocoder', 'GCControllerAxisInput', 'NSArray', 'NSOrthography', 'NSURLSessionUploadTask', 'NSCharacterSet', 'AVMutableVideoCompositionInstruction', 'AVAssetReaderOutput', 'EAGLContext', 'WKFrameInfo', 'CMPedometer', 'MyClass', 'CKModifyBadgeOperation', 'AVCaptureAudioFileOutput', 'SKEmitterNode', 'NSMachPort', 'AVVideoCompositionCoreAnimationTool', 'PHCollection', 'SCNPhysicsWorld', 'NSURLRequest', 'CMAccelerometerData', 'NSNetServiceBrowser', 'CLFloor', 'AVAsynchronousVideoCompositionRequest', 'SCNGeometry', 'SCNIKConstraint', 'CIKernel', 'CAGradientLayer', 'HKCharacteristicType', 'NSFormatter', 'SCNAction', 'CATransaction', 'CBUUID', 'UIStoryboard', 'MPMediaLibrary', 'UITapGestureRecognizer', 'MPMediaItemArtwork', 'NSURLSessionTask', 'AVAudioUnit', 'MCBrowserViewController', 'NSRelationshipDescription', 'HKSample', 'WKWebView', 'NSMutableAttributedString', 'NSPersistentStoreAsynchronousResult', 'MPNowPlayingInfoCenter', 'MKLocalSearch', 'EAAccessory', 'HKCorrelation', 'CATextLayer', 'NSNotificationQueue', 'UINib', 'GLKTextureLoader', 'HKObjectType', 'NSValue', 'NSMutableIndexSet', 'SKPhysicsContact', 'NSProgress', 'AVPlayerViewController', 'CAScrollLayer', 'GKSavedGame', 'NSTextCheckingResult', 'PHObjectPlaceholder', 'SKConstraint', 'EKEventEditViewController', 'NSEntityDescription', 'NSURLCredentialStorage', 'UIApplication', 'SKDownload', 'SCNNode', 'MKLocalSearchRequest', 'SKScene', 'UISearchDisplayController', 'NEOnDemandRule', 'MTLRenderPassStencilAttachmentDescriptor', 'CAReplicatorLayer', 'UIPrintPageRenderer', 'EKCalendarItem', 'NSUUID', 'EAAccessoryManager', 'NEOnDemandRuleIgnore', 'SKRegion', 'AVAssetResourceLoader', 'EAWiFiUnconfiguredAccessoryBrowser', 'NSUserActivity', 'CTCall', 'UIPrinterPickerController', 'CIVector', 'UINavigationBar', 'UIPanGestureRecognizer', 'MPMediaQuery', 'ABNewPersonViewController', 'CKRecordZoneID', 'HKAnchoredObjectQuery', 'CKFetchRecordZonesOperation', 'UIStoryboardSegue', 'ACAccountType', 'GKSession', 'SKVideoNode', 'PHChange', 'SKReceiptRefreshRequest', 'GCExtendedGamepadSnapshot', 'MPSeekCommandEvent', 'GCExtendedGamepad', 'CAValueFunction', 'SCNCylinder', 'NSNotification', 'NSBatchUpdateResult', 'PKPushCredentials', 'SCNPhysicsSliderJoint', 'AVCaptureDeviceFormat', 'AVPlayerItemErrorLog', 'NSMapTable', 'NSSet', 'CMMotionManager', 'GKVoiceChatService', 'UIPageControl', 'UILexicon', 'MTLArrayType', 'AVAudioUnitReverb', 'MKGeodesicPolyline', 'AVMutableComposition', 'NSLayoutConstraint', 'UIPrinter', 'NSOrderedSet', 'CBAttribute', 'PKPushPayload', 'NSIncrementalStoreNode', 'EKEventStore', 'MPRemoteCommandEvent', 'UISlider', 'UIBlurEffect', 'CKAsset', 'AVCaptureInput', 'AVAudioEngine', 'MTLVertexDescriptor', 'SKPhysicsBody', 'NSOperation', 'UIImageAsset', 'MKMapCamera', 'SKProductsResponse', 'GLKEffectPropertyMaterial', 'AVCaptureDevice', 'CTCallCenter', 'CABTMIDILocalPeripheralViewController', 'NEVPNManager', 'HKQuery', 'SCNPhysicsContact', 'CBMutableService', 'AVSampleBufferDisplayLayer', 'SCNSceneSource', 'SKLightNode', 'CKDiscoveredUserInfo', 'NSMutableArray', 'MTLDepthStencilDescriptor', 'MTLArgument', 'NSMassFormatter', 'CIRectangleFeature', 'PKPushRegistry', 'NEVPNConnection', 'MCNearbyServiceBrowser', 'NSOperationQueue', 'MKPolylineRenderer', 'UICollectionViewLayoutAttributes', 'NSValueTransformer', 'UICollectionViewFlowLayout', 'CIBarcodeFeature', 'MPChangePlaybackRateCommandEvent', 'NSEntityMapping', 'SKTexture', 'NSMergePolicy', 'UITextInputStringTokenizer', 'NSRecursiveLock', 'AVAsset', 'NSUndoManager', 'AVAudioUnitSampler', 'NSItemProvider', 'SKUniform', 'MPMediaPickerController', 'CKOperation', 'MTLRenderPipelineDescriptor', 'EAWiFiUnconfiguredAccessory', 'NSFileCoordinator', 'SKRequest', 'NSFileHandle', 'NSConditionLock', 'UISegmentedControl', 'NSManagedObjectModel', 'UITabBarItem', 'SCNCone', 'MPMediaItem', 'SCNMaterial', 'EKRecurrenceRule', 'UIEvent', 'UITouch', 'UIPrintInteractionController', 'CMDeviceMotion', 'NEVPNProtocol', 'NSCompoundPredicate', 'HKHealthStore', 'MKMultiPoint', 'HKSampleType', 'UIPrintFormatter', 'AVAudioUnitEQFilterParameters', 'SKView', 'NSConstantString', 'UIPopoverController', 'CKDatabase', 'AVMetadataFaceObject', 'UIAccelerometer', 'EKEventViewController', 'CMAltitudeData', 'MTLStencilDescriptor', 'UISwipeGestureRecognizer', 'NSPort', 'MKCircleRenderer', 'AVCompositionTrack', 'NSAsynchronousFetchRequest', 'NSUbiquitousKeyValueStore', 'NSMetadataQueryResultGroup', 'AVAssetResourceLoadingDataRequest', 'UITableViewHeaderFooterView', 'CKNotificationID', 'AVAudioSession', 'HKUnit', 'NSNull', 'NSPersistentStoreResult', 'MKCircleView', 'AVAudioChannelLayout', 'NEVPNProtocolIKEv2', 'WKProcessPool', 'UIAttachmentBehavior', 'CLBeacon', 'NSInputStream', 'NSURLCache', 'GKPlayer', 'NSMappingModel', 'NSHTTPCookie', 'AVMutableVideoComposition', 'PHFetchResult', 'NSAttributeDescription', 'AVPlayer', 'MKAnnotationView', 'UIFontDescriptor', 'NSTimer', 'CBDescriptor', 'MKOverlayView', 'AVAudioUnitTimePitch', 'NSSaveChangesRequest', 'UIReferenceLibraryViewController', 'SKPhysicsJointFixed', 'UILocalizedIndexedCollation', 'UIInterpolatingMotionEffect', 'UIDocumentPickerViewController', 'AVAssetWriter', 'NSBundle', 'SKStoreProductViewController', 'GLKViewController', 'NSMetadataQueryAttributeValueTuple', 'GKTurnBasedMatch', 'AVAudioFile', 'UIActivity', 'NSPipe', 'MKShape', 'NSMergeConflict', 'CIImage', 'HKObject', 'UIRotationGestureRecognizer', 'AVPlayerItemLegibleOutput', 'AVAssetImageGenerator', 'GCControllerButtonInput', 'CKMarkNotificationsReadOperation', 'CKSubscription', 'MPTimedMetadata', 'NKIssue', 'UIScreenMode', 'HMAccessoryBrowser', 'GKTurnBasedEventHandler', 'UIWebView', 'MKPolyline', 'JSVirtualMachine', 'AVAssetReader', 'NSAttributedString', 'GKMatchmakerViewController', 'NSCountedSet', 'UIButton', 'WKNavigationResponse', 'GKLocalPlayer', 'MPMovieErrorLog', 'AVSpeechUtterance', 'HKStatistics', 'UILocalNotification', 'HKBiologicalSexObject', 'AVURLAsset', 'CBPeripheral', 'NSDateComponentsFormatter', 'SKSpriteNode', 'UIAccessibilityElement', 'AVAssetWriterInputGroup', 'HMZone', 'AVAssetReaderAudioMixOutput', 'NSEnumerator', 'UIDocument', 'MKLocalSearchResponse', 'UISimpleTextPrintFormatter', 'PHPhotoLibrary', 'CBService', 'UIDocumentMenuViewController', 'MCSession', 'QLPreviewController', 'CAMediaTimingFunction', 'UITextPosition', 'ASIdentifierManager', 'AVAssetResourceLoadingRequest', 'SLComposeServiceViewController', 'UIPinchGestureRecognizer', 'PHObject', 'NSExtensionItem', 'HKSampleQuery', 'MTLRenderPipelineColorAttachmentDescriptorArray', 'MKRouteStep', 'SCNCapsule', 'NSMetadataQuery', 'AVAssetResourceLoadingContentInformationRequest', 'UITraitCollection', 'CTCarrier', 'NSFileSecurity', 'UIAcceleration', 'UIMotionEffect', 'MTLRenderPipelineReflection', 'CLHeading', 'CLVisit', 'MKDirectionsResponse', 'HMAccessory', 'MTLStructType', 'UITextView', 'CMMagnetometerData', 'UICollisionBehavior', 'UIProgressView', 'CKServerChangeToken', 'UISearchBar', 'MKPlacemark', 'AVCaptureConnection', 'NSPropertyMapping', 'ALAssetsFilter', 'SK3DNode', 'AVPlayerItemErrorLogEvent', 'NSJSONSerialization', 'AVAssetReaderVideoCompositionOutput', 'ABPersonViewController', 'CIDetector', 'GKTurnBasedMatchmakerViewController', 'MPMediaItemCollection', 'SCNSphere', 'NSCondition', 'NSURLCredential', 'MIDINetworkConnection', 'NSFileProviderExtension', 'NSDecimalNumberHandler', 'NSAtomicStoreCacheNode', 'NSAtomicStore', 'EKAlarm', 'CKNotificationInfo', 'AVAudioUnitEQ', 'UIPercentDrivenInteractiveTransition', 'MKPolygon', 'AVAssetTrackSegment', 'MTLVertexAttribute', 'NSExpressionDescription', 'HKStatisticsCollectionQuery', 'NSURLAuthenticationChallenge', 'NSDirectoryEnumerator', 'MKDistanceFormatter', 'UIAlertAction', 'NSPropertyListSerialization', 'GKPeerPickerController', 'UIUserNotificationSettings', 'UITableViewController', 'GKNotificationBanner', 'MKPointAnnotation', 'MTLRenderPassColorAttachmentDescriptorArray', 'NSCache', 'SKPhysicsJoint', 'NSXMLParser', 'UIViewController', 'MFMessageComposeViewController', 'AVAudioInputNode', 'NSDataDetector', 'CABTMIDICentralViewController', 'AVAudioUnitMIDIInstrument', 'AVCaptureVideoPreviewLayer', 'AVAssetWriterInputPassDescription', 'MPChangePlaybackRateCommand', 'NSURLComponents', 'CAMetalLayer', 'UISnapBehavior', 'AVMetadataMachineReadableCodeObject', 'CKDiscoverUserInfosOperation', 'NSTextAttachment', 'NSException', 'UIMenuItem', 'CMMotionActivityManager', 'SCNGeometryElement', 'NCWidgetController', 'CAEmitterLayer', 'MKUserLocation', 'UIImagePickerController', 'CIFeature', 'AVCaptureDeviceInput', 'ALAsset', 'NSURLSessionDownloadTask', 'SCNPhysicsHingeJoint', 'MPMoviePlayerViewController', 'NSMutableOrderedSet', 'SCNMaterialProperty', 'UIFont', 'AVCaptureVideoDataOutput', 'NSCachedURLResponse', 'ALAssetsLibrary', 'NSInvocation', 'UILongPressGestureRecognizer', 'NSTextStorage', 'WKWebViewConfiguration', 'CIFaceFeature', 'MKMapSnapshot', 'GLKEffectPropertyFog', 'AVComposition', 'CKDiscoverAllContactsOperation', 'AVAudioMixInputParameters', 'CAEmitterBehavior', 'PKPassLibrary', 'UIMutableUserNotificationCategory', 'NSLock', 'NEVPNProtocolIPSec', 'ADBannerView', 'UIDocumentPickerExtensionViewController', 'UIActivityIndicatorView', 'AVPlayerMediaSelectionCriteria', 'CALayer', 'UIAccessibilityCustomAction', 'UIBarButtonItem', 'AVAudioSessionRouteDescription', 'CLBeaconRegion', 'HKBloodTypeObject', 'MTLVertexBufferLayoutDescriptorArray', 'CABasicAnimation', 'AVVideoCompositionInstruction', 'AVMutableTimedMetadataGroup', 'EKRecurrenceEnd', 'NSTextContainer', 'TWTweetComposeViewController', 'UIScrollView', 'WKNavigationAction', 'AVPlayerItemMetadataOutput', 'EKRecurrenceDayOfWeek', 'NSNumberFormatter', 'MTLComputePipelineReflection', 'UIScreen', 'CLRegion', 'NSProcessInfo', 'GLKTextureInfo', 'SCNSkinner', 'AVCaptureMetadataOutput', 'SCNAnimationEvent', 'NSTextTab', 'JSManagedValue', 'NSDate', 'UITextChecker', 'WKBackForwardListItem', 'NSData', 'NSParagraphStyle', 'AVMutableMetadataItem', 'EKCalendar', 'NSMutableURLRequest', 'UIVideoEditorController', 'HMTimerTrigger', 'AVAudioUnitVarispeed', 'UIDynamicAnimator', 'AVCompositionTrackSegment', 'GCGamepadSnapshot', 'MPMediaEntity', 'GLKSkyboxEffect', 'UISwitch', 'EKStructuredLocation', 'UIGestureRecognizer', 'NSProxy', 'GLKBaseEffect', 'UIPushBehavior', 'GKScoreChallenge', 'NSCoder', 'MPMediaPlaylist', 'NSDateComponents', 'WKUserScript', 'EKEvent', 'NSDateFormatter', 'NSAsynchronousFetchResult', 'AVAssetWriterInputPixelBufferAdaptor', 'UIVisualEffect', 'UICollectionViewCell', 'UITextField', 'CLPlacemark', 'MPPlayableContentManager', 'AVCaptureOutput', 'HMCharacteristicWriteAction', 'CKModifySubscriptionsOperation', 'NSPropertyDescription', 'GCGamepad', 'UIMarkupTextPrintFormatter', 'SCNTube', 'NSPersistentStoreCoordinator', 'AVAudioEnvironmentNode', 'GKMatchmaker', 'CIContext', 'NSThread', 'SLComposeSheetConfigurationItem', 'SKPhysicsJointSliding', 'NSPredicate', 'GKVoiceChat', 'SKCropNode', 'AVCaptureAudioPreviewOutput', 'NSStringDrawingContext', 'GKGameCenterViewController', 'UIPrintPaper', 'SCNPhysicsBallSocketJoint', 'UICollectionViewLayoutInvalidationContext', 'GLKEffectPropertyTransform', 'AVAudioIONode', 'UIDatePicker', 'MKDirections', 'ALAssetsGroup', 'CKRecordZoneNotification', 'SCNScene', 'MPMovieAccessLogEvent', 'CKFetchSubscriptionsOperation', 'CAEmitterCell', 'AVAudioUnitTimeEffect', 'HMCharacteristicMetadata', 'MKPinAnnotationView', 'UIPickerView', 'UIImageView', 'UIUserNotificationCategory', 'SCNPhysicsVehicleWheel', 'HKCategoryType', 'MPMediaQuerySection', 'GKFriendRequestComposeViewController', 'NSError', 'MTLRenderPipelineColorAttachmentDescriptor', 'SCNPhysicsShape', 'UISearchController', 'SCNPhysicsBody', 'CTSubscriberInfo', 'AVPlayerItemAccessLog', 'MPMediaPropertyPredicate', 'CMLogItem', 'NSAutoreleasePool', 'NSSocketPort', 'AVAssetReaderTrackOutput', 'SKNode', 'UIMutableUserNotificationAction', 'SCNProgram', 'AVSpeechSynthesisVoice', 'CMAltimeter', 'AVCaptureAudioChannel', 'GKTurnBasedExchangeReply', 'AVVideoCompositionLayerInstruction', 'AVSpeechSynthesizer', 'GKChallengeEventHandler', 'AVCaptureFileOutput', 'UIControl', 'SCNPhysicsField', 'CKReference', 'LAContext', 'CKRecordID', 'ADInterstitialAd', 'AVAudioSessionDataSourceDescription', 'AVAudioBuffer', 'CIColorKernel', 'GCControllerDirectionPad', 'NSFileManager', 'AVMutableAudioMixInputParameters', 'UIScreenEdgePanGestureRecognizer', 'CAKeyframeAnimation', 'CKQueryNotification', 'PHAdjustmentData', 'EASession', 'AVAssetResourceRenewalRequest', 'UIInputView', 'NSFileWrapper', 'UIResponder', 'NSPointerFunctions', 'NSHTTPCookieStorage', 'AVMediaSelectionOption', 'NSRunLoop', 'NSFileAccessIntent', 'CAAnimationGroup', 'MKCircle', 'UIAlertController', 'NSMigrationManager', 'NSDateIntervalFormatter', 'UICollectionViewUpdateItem', 'CKDatabaseOperation', 'PHImageRequestOptions', 'SKReachConstraints', 'CKRecord', 'CAInterAppAudioSwitcherView', 'WKWindowFeatures', 'GKInvite', 'NSMutableData', 'PHAssetCollectionChangeRequest', 'NSMutableParagraphStyle', 'UIDynamicBehavior', 'GLKEffectProperty', 'CKFetchRecordChangesOperation', 'SKShapeNode', 'MPMovieErrorLogEvent', 'MKPolygonView', 'MPContentItem', 'HMAction', 'NSScanner', 'GKAchievementChallenge', 'AVAudioPlayer', 'CKContainer', 'AVVideoComposition', 'NKLibrary', 'NSPersistentStore', 'AVCaptureMovieFileOutput', 'HMRoom', 'GKChallenge', 'UITextRange', 'NSURLProtectionSpace', 'ACAccountStore', 'MPSkipIntervalCommand', 'NSComparisonPredicate', 'HMHome', 'PHVideoRequestOptions', 'NSOutputStream', 'MPSkipIntervalCommandEvent', 'PKAddPassesViewController', 'UITextSelectionRect', 'CTTelephonyNetworkInfo', 'AVTextStyleRule', 'NSFetchedPropertyDescription', 'UIPageViewController', 'CATransformLayer', 'UICollectionViewController', 'AVAudioNode', 'MCNearbyServiceAdvertiser', 'NSObject', 'PHAsset', 'GKLeaderboardViewController', 'CKQueryCursor', 'MPMusicPlayerController', 'MKOverlayPathRenderer', 'CMPedometerData', 'HMService', 'SKFieldNode', 'GKAchievement', 'WKUserContentController', 'AVAssetTrack', 'TWRequest', 'SKLabelNode', 'AVCaptureBracketedStillImageSettings', 'MIDINetworkHost', 'MPMediaPredicate', 'AVFrameRateRange', 'MTLTextureDescriptor', 'MTLVertexBufferLayoutDescriptor', 'MPFeedbackCommandEvent', 'UIUserNotificationAction', 'HKStatisticsQuery', 'SCNParticleSystem', 'NSIndexPath', 'AVVideoCompositionRenderContext', 'CADisplayLink', 'HKObserverQuery', 'UIPopoverPresentationController', 'CKQueryOperation', 'CAEAGLLayer', 'NSMutableString', 'NSMessagePort', 'NSURLQueryItem', 'MTLStructMember', 'AVAudioSessionChannelDescription', 'GLKView', 'UIActivityViewController', 'GKAchievementViewController', 'GKTurnBasedParticipant', 'NSURLProtocol', 'NSUserDefaults', 'NSCalendar', 'SKKeyframeSequence', 'AVMetadataItemFilter', 'CKModifyRecordZonesOperation', 'WKPreferences', 'NSMethodSignature', 'NSRegularExpression', 'EAGLSharegroup', 'AVPlayerItemVideoOutput', 'PHContentEditingInputRequestOptions', 'GKMatch', 'CIColor', 'UIDictationPhrase'])$/;"	v
COCOA_INTERFACES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^                COCOA_PROTOCOLS, COCOA_PRIMITIVES$/;"	i
COCOA_INTERFACES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^            COCOA_PROTOCOLS, COCOA_PRIMITIVES$/;"	i
COCOA_PRIMITIVES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^COCOA_PRIMITIVES = set(['ROTAHeader', '__CFBundle', 'MortSubtable', 'AudioFilePacketTableInfo', 'CGPDFOperatorTable', 'KerxStateEntry', 'ExtendedTempoEvent', 'CTParagraphStyleSetting', 'OpaqueMIDIPort', '_GLKMatrix3', '_GLKMatrix2', '_GLKMatrix4', 'ExtendedControlEvent', 'CAFAudioDescription', 'OpaqueCMBlockBuffer', 'CGTextDrawingMode', 'EKErrorCode', 'GCAcceleration', 'AudioUnitParameterInfo', '__SCPreferences', '__CTFrame', '__CTLine', 'AudioFile_SMPTE_Time', 'gss_krb5_lucid_context_v1', 'OpaqueJSValue', 'TrakTableEntry', 'AudioFramePacketTranslation', 'CGImageSource', 'OpaqueJSPropertyNameAccumulator', 'JustPCGlyphRepeatAddAction', '__CFBinaryHeap', 'OpaqueMIDIThruConnection', 'opaqueCMBufferQueue', 'OpaqueMusicSequence', 'MortRearrangementSubtable', 'MixerDistanceParams', 'MorxSubtable', 'MIDIObjectPropertyChangeNotification', 'SFNTLookupSegment', 'CGImageMetadataErrors', 'CGPath', 'OpaqueMIDIEndpoint', 'AudioComponentPlugInInterface', 'gss_ctx_id_t_desc_struct', 'sfntFontFeatureSetting', 'OpaqueJSContextGroup', '__SCNetworkConnection', 'AudioUnitParameterValueTranslation', 'CGImageMetadataType', 'CGPattern', 'AudioFileTypeAndFormatID', 'CGContext', 'AUNodeInteraction', 'SFNTLookupTable', 'JustPCDecompositionAction', 'KerxControlPointHeader', 'AudioStreamPacketDescription', 'KernSubtableHeader', '__SecCertificate', 'AUMIDIOutputCallbackStruct', 'MIDIMetaEvent', 'AudioQueueChannelAssignment', 'AnchorPoint', 'JustTable', '__CFNetService', 'CF_BRIDGED_TYPE', 'gss_krb5_lucid_key', 'CGPDFDictionary', 'KerxSubtableHeader', 'CAF_UUID_ChunkHeader', 'gss_krb5_cfx_keydata', 'OpaqueJSClass', 'CGGradient', 'OpaqueMIDISetup', 'JustPostcompTable', '__CTParagraphStyle', 'AudioUnitParameterHistoryInfo', 'OpaqueJSContext', 'CGShading', 'MIDIThruConnectionParams', 'BslnFormat0Part', 'SFNTLookupSingle', '__CFHost', '__SecRandom', '__CTFontDescriptor', '_NSRange', 'sfntDirectory', 'AudioQueueLevelMeterState', 'CAFPositionPeak', 'PropLookupSegment', '__CVOpenGLESTextureCache', 'sfntInstance', '_GLKQuaternion', 'AnkrTable', '__SCNetworkProtocol', 'gss_buffer_desc_struct', 'CAFFileHeader', 'KerxOrderedListHeader', 'CGBlendMode', 'STXEntryOne', 'CAFRegion', 'SFNTLookupTrimmedArrayHeader', 'SCNMatrix4', 'KerxControlPointEntry', 'OpaqueMusicTrack', '_GLKVector4', 'gss_OID_set_desc_struct', 'OpaqueMusicPlayer', '_CFHTTPAuthentication', 'CGAffineTransform', 'CAFMarkerChunk', 'AUHostIdentifier', 'ROTAGlyphEntry', 'BslnTable', 'gss_krb5_lucid_context_version', '_GLKMatrixStack', 'CGImage', 'KernStateEntry', 'SFNTLookupSingleHeader', 'MortLigatureSubtable', 'CAFUMIDChunk', 'SMPTETime', 'CAFDataChunk', 'CGPDFStream', 'AudioFileRegionList', 'STEntryTwo', 'SFNTLookupBinarySearchHeader', 'OpbdTable', '__CTGlyphInfo', 'BslnFormat2Part', 'KerxIndexArrayHeader', 'TrakTable', 'KerxKerningPair', '__CFBitVector', 'KernVersion0SubtableHeader', 'OpaqueAudioComponentInstance', 'AudioChannelLayout', '__CFUUID', 'MIDISysexSendRequest', '__CFNumberFormatter', 'CGImageSourceStatus', 'AudioFileMarkerList', 'AUSamplerBankPresetData', 'CGDataProvider', 'AudioFormatInfo', '__SecIdentity', 'sfntCMapExtendedSubHeader', 'MIDIChannelMessage', 'KernOffsetTable', 'CGColorSpaceModel', 'MFMailComposeErrorCode', 'CGFunction', '__SecTrust', 'AVAudio3DAngularOrientation', 'CGFontPostScriptFormat', 'KernStateHeader', 'AudioUnitCocoaViewInfo', 'CGDataConsumer', 'OpaqueMIDIDevice', 'KernVersion0Header', 'AnchorPointTable', 'CGImageDestination', 'CAFInstrumentChunk', 'AudioUnitMeterClipping', 'MorxChain', '__CTFontCollection', 'STEntryOne', 'STXEntryTwo', 'ExtendedNoteOnEvent', 'CGColorRenderingIntent', 'KerxSimpleArrayHeader', 'MorxTable', '_GLKVector3', '_GLKVector2', 'MortTable', 'CGPDFBox', 'AudioUnitParameterValueFromString', '__CFSocket', 'ALCdevice_struct', 'MIDINoteMessage', 'sfntFeatureHeader', 'CGRect', '__SCNetworkInterface', '__CFTree', 'MusicEventUserData', 'TrakTableData', 'GCQuaternion', 'MortContextualSubtable', '__CTRun', 'AudioUnitFrequencyResponseBin', 'MortChain', 'MorxInsertionSubtable', 'CGImageMetadata', 'gss_auth_identity', 'AudioUnitMIDIControlMapping', 'CAFChunkHeader', 'CGImagePropertyOrientation', 'CGPDFScanner', 'OpaqueMusicEventIterator', 'sfntDescriptorHeader', 'AudioUnitNodeConnection', 'OpaqueMIDIDeviceList', 'ExtendedAudioFormatInfo', 'BslnFormat1Part', 'sfntFontDescriptor', 'KernSimpleArrayHeader', '__CFRunLoopObserver', 'CGPatternTiling', 'MIDINotification', 'MorxLigatureSubtable', 'MessageComposeResult', 'MIDIThruConnectionEndpoint', 'MusicDeviceStdNoteParams', 'opaqueCMSimpleQueue', 'ALCcontext_struct', 'OpaqueAudioQueue', 'PropLookupSingle', 'CGInterpolationQuality', 'CGColor', 'AudioOutputUnitStartAtTimeParams', 'gss_name_t_desc_struct', 'CGFunctionCallbacks', 'CAFPacketTableHeader', 'AudioChannelDescription', 'sfntFeatureName', 'MorxContextualSubtable', 'CVSMPTETime', 'AudioValueRange', 'CGTextEncoding', 'AudioStreamBasicDescription', 'AUNodeRenderCallback', 'AudioPanningInfo', 'KerxOrderedListEntry', '__CFAllocator', 'OpaqueJSPropertyNameArray', '__SCDynamicStore', 'OpaqueMIDIEntity', '__CTRubyAnnotation', 'SCNVector4', 'CFHostClientContext', 'CFNetServiceClientContext', 'AudioUnitPresetMAS_SettingData', 'opaqueCMBufferQueueTriggerToken', 'AudioUnitProperty', 'CAFRegionChunk', 'CGPDFString', '__GLsync', '__CFStringTokenizer', 'JustWidthDeltaEntry', 'sfntVariationAxis', '__CFNetDiagnostic', 'CAFOverviewSample', 'sfntCMapEncoding', 'CGVector', '__SCNetworkService', 'opaqueCMSampleBuffer', 'AUHostVersionIdentifier', 'AudioBalanceFade', 'sfntFontRunFeature', 'KerxCoordinateAction', 'sfntCMapSubHeader', 'CVPlanarPixelBufferInfo', 'AUNumVersion', 'AUSamplerInstrumentData', 'AUPreset', '__CTRunDelegate', 'OpaqueAudioQueueProcessingTap', 'KerxTableHeader', '_NSZone', 'OpaqueExtAudioFile', '__CFRunLoopSource', '__CVMetalTextureCache', 'KerxAnchorPointAction', 'OpaqueJSString', 'AudioQueueParameterEvent', '__CFHTTPMessage', 'OpaqueCMClock', 'ScheduledAudioFileRegion', 'STEntryZero', 'AVAudio3DPoint', 'gss_channel_bindings_struct', 'sfntVariationHeader', 'AUChannelInfo', 'UIOffset', 'GLKEffectPropertyPrv', 'KerxStateHeader', 'CGLineJoin', 'CGPDFDocument', '__CFBag', 'KernOrderedListHeader', '__SCNetworkSet', '__SecKey', 'MIDIObjectAddRemoveNotification', 'AudioUnitParameter', 'JustPCActionSubrecord', 'AudioComponentDescription', 'AudioUnitParameterValueName', 'AudioUnitParameterEvent', 'KerxControlPointAction', 'AudioTimeStamp', 'KernKerningPair', 'gss_buffer_set_desc_struct', 'MortFeatureEntry', 'FontVariation', 'CAFStringID', 'LcarCaretClassEntry', 'AudioUnitParameterStringFromValue', 'ACErrorCode', 'ALMXGlyphEntry', 'LtagTable', '__CTTypesetter', 'AuthorizationOpaqueRef', 'UIEdgeInsets', 'CGPathElement', 'CAFMarker', 'KernTableHeader', 'NoteParamsControlValue', 'SSLContext', 'gss_cred_id_t_desc_struct', 'AudioUnitParameterNameInfo', 'CGDataConsumerCallbacks', 'ALMXHeader', 'CGLineCap', 'MIDIControlTransform', 'CGPDFArray', '__SecPolicy', 'AudioConverterPrimeInfo', '__CTTextTab', '__CFNetServiceMonitor', 'AUInputSamplesInOutputCallbackStruct', '__CTFramesetter', 'CGPDFDataFormat', 'STHeader', 'CVPlanarPixelBufferInfo_YCbCrPlanar', 'MIDIValueMap', 'JustDirectionTable', '__SCBondStatus', 'SFNTLookupSegmentHeader', 'OpaqueCMMemoryPool', 'CGPathDrawingMode', 'CGFont', '__SCNetworkReachability', 'AudioClassDescription', 'CGPoint', 'AVAudio3DVectorOrientation', 'CAFStrings', '__CFNetServiceBrowser', 'opaqueMTAudioProcessingTap', 'sfntNameRecord', 'CGPDFPage', 'CGLayer', 'ComponentInstanceRecord', 'CAFInfoStrings', 'HostCallbackInfo', 'MusicDeviceNoteParams', 'OpaqueVTCompressionSession', 'KernIndexArrayHeader', 'CVPlanarPixelBufferInfo_YCbCrBiPlanar', 'MusicTrackLoopInfo', 'opaqueCMFormatDescription', 'STClassTable', 'sfntDirectoryEntry', 'OpaqueCMTimebase', 'CGDataProviderDirectCallbacks', 'MIDIPacketList', 'CAFOverviewChunk', 'MIDIPacket', 'ScheduledAudioSlice', 'CGDataProviderSequentialCallbacks', 'AudioBuffer', 'MorxRearrangementSubtable', 'CGPatternCallbacks', 'AUDistanceAttenuationData', 'MIDIIOErrorNotification', 'CGPDFContentStream', 'IUnknownVTbl', 'MIDITransform', 'MortInsertionSubtable', 'CABarBeatTime', 'AudioBufferList', '__CVBuffer', 'AURenderCallbackStruct', 'STXEntryZero', 'JustPCDuctilityAction', 'OpaqueAudioQueueTimeline', 'VTDecompressionOutputCallbackRecord', 'OpaqueMIDIClient', '__CFPlugInInstance', 'AudioQueueBuffer', '__CFFileDescriptor', 'AudioUnitConnection', '_GKTurnBasedExchangeStatus', 'LcarCaretTable', 'CVPlanarComponentInfo', 'JustWidthDeltaGroup', 'OpaqueAudioComponent', 'ParameterEvent', '__CVPixelBufferPool', '__CTFont', 'CGColorSpace', 'CGSize', 'AUDependentParameter', 'MIDIDriverInterface', 'gss_krb5_rfc1964_keydata', '__CFDateFormatter', 'LtagStringRange', 'OpaqueVTDecompressionSession', 'gss_iov_buffer_desc_struct', 'AUPresetEvent', 'PropTable', 'KernOrderedListEntry', 'CF_BRIDGED_MUTABLE_TYPE', 'gss_OID_desc_struct', 'AudioUnitPresetMAS_Settings', 'AudioFileMarker', 'JustPCConditionalAddAction', 'BslnFormat3Part', '__CFNotificationCenter', 'MortSwashSubtable', 'AUParameterMIDIMapping', 'SCNVector3', 'OpaqueAudioConverter', 'MIDIRawData', 'sfntNameHeader', '__CFRunLoop', 'MFMailComposeResult', 'CATransform3D', 'OpbdSideValues', 'CAF_SMPTE_Time', '__SecAccessControl', 'JustPCAction', 'OpaqueVTFrameSilo', 'OpaqueVTMultiPassStorage', 'CGPathElementType', 'AudioFormatListItem', 'AudioUnitExternalBuffer', 'AudioFileRegion', 'AudioValueTranslation', 'CGImageMetadataTag', 'CAFPeakChunk', 'AudioBytePacketTranslation', 'sfntCMapHeader', '__CFURLEnumerator', 'STXHeader', 'CGPDFObjectType', 'SFNTLookupArrayHeader'])$/;"	v
COCOA_PRIMITIVES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^                COCOA_PROTOCOLS, COCOA_PRIMITIVES$/;"	i
COCOA_PRIMITIVES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^            COCOA_PROTOCOLS, COCOA_PRIMITIVES$/;"	i
COCOA_PRIMITIVES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^COCOA_PRIMITIVES = set(['ROTAHeader', '__CFBundle', 'MortSubtable', 'AudioFilePacketTableInfo', 'CGPDFOperatorTable', 'KerxStateEntry', 'ExtendedTempoEvent', 'CTParagraphStyleSetting', 'OpaqueMIDIPort', '_GLKMatrix3', '_GLKMatrix2', '_GLKMatrix4', 'ExtendedControlEvent', 'CAFAudioDescription', 'OpaqueCMBlockBuffer', 'CGTextDrawingMode', 'EKErrorCode', 'GCAcceleration', 'AudioUnitParameterInfo', '__SCPreferences', '__CTFrame', '__CTLine', 'AudioFile_SMPTE_Time', 'gss_krb5_lucid_context_v1', 'OpaqueJSValue', 'TrakTableEntry', 'AudioFramePacketTranslation', 'CGImageSource', 'OpaqueJSPropertyNameAccumulator', 'JustPCGlyphRepeatAddAction', '__CFBinaryHeap', 'OpaqueMIDIThruConnection', 'opaqueCMBufferQueue', 'OpaqueMusicSequence', 'MortRearrangementSubtable', 'MixerDistanceParams', 'MorxSubtable', 'MIDIObjectPropertyChangeNotification', 'SFNTLookupSegment', 'CGImageMetadataErrors', 'CGPath', 'OpaqueMIDIEndpoint', 'AudioComponentPlugInInterface', 'gss_ctx_id_t_desc_struct', 'sfntFontFeatureSetting', 'OpaqueJSContextGroup', '__SCNetworkConnection', 'AudioUnitParameterValueTranslation', 'CGImageMetadataType', 'CGPattern', 'AudioFileTypeAndFormatID', 'CGContext', 'AUNodeInteraction', 'SFNTLookupTable', 'JustPCDecompositionAction', 'KerxControlPointHeader', 'AudioStreamPacketDescription', 'KernSubtableHeader', '__SecCertificate', 'AUMIDIOutputCallbackStruct', 'MIDIMetaEvent', 'AudioQueueChannelAssignment', 'AnchorPoint', 'JustTable', '__CFNetService', 'CF_BRIDGED_TYPE', 'gss_krb5_lucid_key', 'CGPDFDictionary', 'KerxSubtableHeader', 'CAF_UUID_ChunkHeader', 'gss_krb5_cfx_keydata', 'OpaqueJSClass', 'CGGradient', 'OpaqueMIDISetup', 'JustPostcompTable', '__CTParagraphStyle', 'AudioUnitParameterHistoryInfo', 'OpaqueJSContext', 'CGShading', 'MIDIThruConnectionParams', 'BslnFormat0Part', 'SFNTLookupSingle', '__CFHost', '__SecRandom', '__CTFontDescriptor', '_NSRange', 'sfntDirectory', 'AudioQueueLevelMeterState', 'CAFPositionPeak', 'PropLookupSegment', '__CVOpenGLESTextureCache', 'sfntInstance', '_GLKQuaternion', 'AnkrTable', '__SCNetworkProtocol', 'gss_buffer_desc_struct', 'CAFFileHeader', 'KerxOrderedListHeader', 'CGBlendMode', 'STXEntryOne', 'CAFRegion', 'SFNTLookupTrimmedArrayHeader', 'SCNMatrix4', 'KerxControlPointEntry', 'OpaqueMusicTrack', '_GLKVector4', 'gss_OID_set_desc_struct', 'OpaqueMusicPlayer', '_CFHTTPAuthentication', 'CGAffineTransform', 'CAFMarkerChunk', 'AUHostIdentifier', 'ROTAGlyphEntry', 'BslnTable', 'gss_krb5_lucid_context_version', '_GLKMatrixStack', 'CGImage', 'KernStateEntry', 'SFNTLookupSingleHeader', 'MortLigatureSubtable', 'CAFUMIDChunk', 'SMPTETime', 'CAFDataChunk', 'CGPDFStream', 'AudioFileRegionList', 'STEntryTwo', 'SFNTLookupBinarySearchHeader', 'OpbdTable', '__CTGlyphInfo', 'BslnFormat2Part', 'KerxIndexArrayHeader', 'TrakTable', 'KerxKerningPair', '__CFBitVector', 'KernVersion0SubtableHeader', 'OpaqueAudioComponentInstance', 'AudioChannelLayout', '__CFUUID', 'MIDISysexSendRequest', '__CFNumberFormatter', 'CGImageSourceStatus', 'AudioFileMarkerList', 'AUSamplerBankPresetData', 'CGDataProvider', 'AudioFormatInfo', '__SecIdentity', 'sfntCMapExtendedSubHeader', 'MIDIChannelMessage', 'KernOffsetTable', 'CGColorSpaceModel', 'MFMailComposeErrorCode', 'CGFunction', '__SecTrust', 'AVAudio3DAngularOrientation', 'CGFontPostScriptFormat', 'KernStateHeader', 'AudioUnitCocoaViewInfo', 'CGDataConsumer', 'OpaqueMIDIDevice', 'KernVersion0Header', 'AnchorPointTable', 'CGImageDestination', 'CAFInstrumentChunk', 'AudioUnitMeterClipping', 'MorxChain', '__CTFontCollection', 'STEntryOne', 'STXEntryTwo', 'ExtendedNoteOnEvent', 'CGColorRenderingIntent', 'KerxSimpleArrayHeader', 'MorxTable', '_GLKVector3', '_GLKVector2', 'MortTable', 'CGPDFBox', 'AudioUnitParameterValueFromString', '__CFSocket', 'ALCdevice_struct', 'MIDINoteMessage', 'sfntFeatureHeader', 'CGRect', '__SCNetworkInterface', '__CFTree', 'MusicEventUserData', 'TrakTableData', 'GCQuaternion', 'MortContextualSubtable', '__CTRun', 'AudioUnitFrequencyResponseBin', 'MortChain', 'MorxInsertionSubtable', 'CGImageMetadata', 'gss_auth_identity', 'AudioUnitMIDIControlMapping', 'CAFChunkHeader', 'CGImagePropertyOrientation', 'CGPDFScanner', 'OpaqueMusicEventIterator', 'sfntDescriptorHeader', 'AudioUnitNodeConnection', 'OpaqueMIDIDeviceList', 'ExtendedAudioFormatInfo', 'BslnFormat1Part', 'sfntFontDescriptor', 'KernSimpleArrayHeader', '__CFRunLoopObserver', 'CGPatternTiling', 'MIDINotification', 'MorxLigatureSubtable', 'MessageComposeResult', 'MIDIThruConnectionEndpoint', 'MusicDeviceStdNoteParams', 'opaqueCMSimpleQueue', 'ALCcontext_struct', 'OpaqueAudioQueue', 'PropLookupSingle', 'CGInterpolationQuality', 'CGColor', 'AudioOutputUnitStartAtTimeParams', 'gss_name_t_desc_struct', 'CGFunctionCallbacks', 'CAFPacketTableHeader', 'AudioChannelDescription', 'sfntFeatureName', 'MorxContextualSubtable', 'CVSMPTETime', 'AudioValueRange', 'CGTextEncoding', 'AudioStreamBasicDescription', 'AUNodeRenderCallback', 'AudioPanningInfo', 'KerxOrderedListEntry', '__CFAllocator', 'OpaqueJSPropertyNameArray', '__SCDynamicStore', 'OpaqueMIDIEntity', '__CTRubyAnnotation', 'SCNVector4', 'CFHostClientContext', 'CFNetServiceClientContext', 'AudioUnitPresetMAS_SettingData', 'opaqueCMBufferQueueTriggerToken', 'AudioUnitProperty', 'CAFRegionChunk', 'CGPDFString', '__GLsync', '__CFStringTokenizer', 'JustWidthDeltaEntry', 'sfntVariationAxis', '__CFNetDiagnostic', 'CAFOverviewSample', 'sfntCMapEncoding', 'CGVector', '__SCNetworkService', 'opaqueCMSampleBuffer', 'AUHostVersionIdentifier', 'AudioBalanceFade', 'sfntFontRunFeature', 'KerxCoordinateAction', 'sfntCMapSubHeader', 'CVPlanarPixelBufferInfo', 'AUNumVersion', 'AUSamplerInstrumentData', 'AUPreset', '__CTRunDelegate', 'OpaqueAudioQueueProcessingTap', 'KerxTableHeader', '_NSZone', 'OpaqueExtAudioFile', '__CFRunLoopSource', '__CVMetalTextureCache', 'KerxAnchorPointAction', 'OpaqueJSString', 'AudioQueueParameterEvent', '__CFHTTPMessage', 'OpaqueCMClock', 'ScheduledAudioFileRegion', 'STEntryZero', 'AVAudio3DPoint', 'gss_channel_bindings_struct', 'sfntVariationHeader', 'AUChannelInfo', 'UIOffset', 'GLKEffectPropertyPrv', 'KerxStateHeader', 'CGLineJoin', 'CGPDFDocument', '__CFBag', 'KernOrderedListHeader', '__SCNetworkSet', '__SecKey', 'MIDIObjectAddRemoveNotification', 'AudioUnitParameter', 'JustPCActionSubrecord', 'AudioComponentDescription', 'AudioUnitParameterValueName', 'AudioUnitParameterEvent', 'KerxControlPointAction', 'AudioTimeStamp', 'KernKerningPair', 'gss_buffer_set_desc_struct', 'MortFeatureEntry', 'FontVariation', 'CAFStringID', 'LcarCaretClassEntry', 'AudioUnitParameterStringFromValue', 'ACErrorCode', 'ALMXGlyphEntry', 'LtagTable', '__CTTypesetter', 'AuthorizationOpaqueRef', 'UIEdgeInsets', 'CGPathElement', 'CAFMarker', 'KernTableHeader', 'NoteParamsControlValue', 'SSLContext', 'gss_cred_id_t_desc_struct', 'AudioUnitParameterNameInfo', 'CGDataConsumerCallbacks', 'ALMXHeader', 'CGLineCap', 'MIDIControlTransform', 'CGPDFArray', '__SecPolicy', 'AudioConverterPrimeInfo', '__CTTextTab', '__CFNetServiceMonitor', 'AUInputSamplesInOutputCallbackStruct', '__CTFramesetter', 'CGPDFDataFormat', 'STHeader', 'CVPlanarPixelBufferInfo_YCbCrPlanar', 'MIDIValueMap', 'JustDirectionTable', '__SCBondStatus', 'SFNTLookupSegmentHeader', 'OpaqueCMMemoryPool', 'CGPathDrawingMode', 'CGFont', '__SCNetworkReachability', 'AudioClassDescription', 'CGPoint', 'AVAudio3DVectorOrientation', 'CAFStrings', '__CFNetServiceBrowser', 'opaqueMTAudioProcessingTap', 'sfntNameRecord', 'CGPDFPage', 'CGLayer', 'ComponentInstanceRecord', 'CAFInfoStrings', 'HostCallbackInfo', 'MusicDeviceNoteParams', 'OpaqueVTCompressionSession', 'KernIndexArrayHeader', 'CVPlanarPixelBufferInfo_YCbCrBiPlanar', 'MusicTrackLoopInfo', 'opaqueCMFormatDescription', 'STClassTable', 'sfntDirectoryEntry', 'OpaqueCMTimebase', 'CGDataProviderDirectCallbacks', 'MIDIPacketList', 'CAFOverviewChunk', 'MIDIPacket', 'ScheduledAudioSlice', 'CGDataProviderSequentialCallbacks', 'AudioBuffer', 'MorxRearrangementSubtable', 'CGPatternCallbacks', 'AUDistanceAttenuationData', 'MIDIIOErrorNotification', 'CGPDFContentStream', 'IUnknownVTbl', 'MIDITransform', 'MortInsertionSubtable', 'CABarBeatTime', 'AudioBufferList', '__CVBuffer', 'AURenderCallbackStruct', 'STXEntryZero', 'JustPCDuctilityAction', 'OpaqueAudioQueueTimeline', 'VTDecompressionOutputCallbackRecord', 'OpaqueMIDIClient', '__CFPlugInInstance', 'AudioQueueBuffer', '__CFFileDescriptor', 'AudioUnitConnection', '_GKTurnBasedExchangeStatus', 'LcarCaretTable', 'CVPlanarComponentInfo', 'JustWidthDeltaGroup', 'OpaqueAudioComponent', 'ParameterEvent', '__CVPixelBufferPool', '__CTFont', 'CGColorSpace', 'CGSize', 'AUDependentParameter', 'MIDIDriverInterface', 'gss_krb5_rfc1964_keydata', '__CFDateFormatter', 'LtagStringRange', 'OpaqueVTDecompressionSession', 'gss_iov_buffer_desc_struct', 'AUPresetEvent', 'PropTable', 'KernOrderedListEntry', 'CF_BRIDGED_MUTABLE_TYPE', 'gss_OID_desc_struct', 'AudioUnitPresetMAS_Settings', 'AudioFileMarker', 'JustPCConditionalAddAction', 'BslnFormat3Part', '__CFNotificationCenter', 'MortSwashSubtable', 'AUParameterMIDIMapping', 'SCNVector3', 'OpaqueAudioConverter', 'MIDIRawData', 'sfntNameHeader', '__CFRunLoop', 'MFMailComposeResult', 'CATransform3D', 'OpbdSideValues', 'CAF_SMPTE_Time', '__SecAccessControl', 'JustPCAction', 'OpaqueVTFrameSilo', 'OpaqueVTMultiPassStorage', 'CGPathElementType', 'AudioFormatListItem', 'AudioUnitExternalBuffer', 'AudioFileRegion', 'AudioValueTranslation', 'CGImageMetadataTag', 'CAFPeakChunk', 'AudioBytePacketTranslation', 'sfntCMapHeader', '__CFURLEnumerator', 'STXHeader', 'CGPDFObjectType', 'SFNTLookupArrayHeader'])$/;"	v
COCOA_PRIMITIVES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^                COCOA_PROTOCOLS, COCOA_PRIMITIVES$/;"	i
COCOA_PRIMITIVES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^            COCOA_PROTOCOLS, COCOA_PRIMITIVES$/;"	i
COCOA_PROTOCOLS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^COCOA_PROTOCOLS = set(['SKStoreProductViewControllerDelegate', 'AVVideoCompositionInstruction', 'AVAudioSessionDelegate', 'GKMatchDelegate', 'NSFileManagerDelegate', 'UILayoutSupport', 'NSCopying', 'UIPrintInteractionControllerDelegate', 'QLPreviewControllerDataSource', 'SKProductsRequestDelegate', 'NSTextStorageDelegate', 'MCBrowserViewControllerDelegate', 'MTLComputeCommandEncoder', 'SCNSceneExportDelegate', 'UISearchResultsUpdating', 'MFMailComposeViewControllerDelegate', 'MTLBlitCommandEncoder', 'NSDecimalNumberBehaviors', 'PHContentEditingController', 'NSMutableCopying', 'UIActionSheetDelegate', 'UIViewControllerTransitioningDelegate', 'UIAlertViewDelegate', 'AVAudioPlayerDelegate', 'MKReverseGeocoderDelegate', 'NSCoding', 'UITextInputTokenizer', 'GKFriendRequestComposeViewControllerDelegate', 'UIActivityItemSource', 'NSCacheDelegate', 'UIAdaptivePresentationControllerDelegate', 'GKAchievementViewControllerDelegate', 'UIViewControllerTransitionCoordinator', 'EKEventEditViewDelegate', 'NSURLConnectionDelegate', 'UITableViewDelegate', 'GKPeerPickerControllerDelegate', 'UIGuidedAccessRestrictionDelegate', 'AVSpeechSynthesizerDelegate', 'AVAudio3DMixing', 'AVPlayerItemLegibleOutputPushDelegate', 'ADInterstitialAdDelegate', 'HMAccessoryBrowserDelegate', 'AVAssetResourceLoaderDelegate', 'UITabBarControllerDelegate', 'CKRecordValue', 'SKPaymentTransactionObserver', 'AVCaptureAudioDataOutputSampleBufferDelegate', 'UIInputViewAudioFeedback', 'GKChallengeListener', 'SKSceneDelegate', 'UIPickerViewDelegate', 'UIWebViewDelegate', 'UIApplicationDelegate', 'GKInviteEventListener', 'MPMediaPlayback', 'MyClassJavaScriptMethods', 'AVAsynchronousKeyValueLoading', 'QLPreviewItem', 'SCNBoundingVolume', 'NSPortDelegate', 'UIContentContainer', 'SCNNodeRendererDelegate', 'SKRequestDelegate', 'SKPhysicsContactDelegate', 'HMAccessoryDelegate', 'UIPageViewControllerDataSource', 'SCNSceneRendererDelegate', 'SCNPhysicsContactDelegate', 'MKMapViewDelegate', 'AVPlayerItemOutputPushDelegate', 'UICollectionViewDelegate', 'UIImagePickerControllerDelegate', 'MTLRenderCommandEncoder', 'UIToolbarDelegate', 'WKUIDelegate', 'SCNActionable', 'NSURLConnectionDataDelegate', 'MKOverlay', 'CBCentralManagerDelegate', 'JSExport', 'NSTextLayoutOrientationProvider', 'UIPickerViewDataSource', 'PKPushRegistryDelegate', 'UIViewControllerTransitionCoordinatorContext', 'NSLayoutManagerDelegate', 'MTLLibrary', 'NSFetchedResultsControllerDelegate', 'ABPeoplePickerNavigationControllerDelegate', 'MTLResource', 'NSDiscardableContent', 'UITextFieldDelegate', 'MTLBuffer', 'MTLSamplerState', 'GKGameCenterControllerDelegate', 'MPMediaPickerControllerDelegate', 'UISplitViewControllerDelegate', 'UIAppearance', 'UIPickerViewAccessibilityDelegate', 'UITraitEnvironment', 'UIScrollViewAccessibilityDelegate', 'ADBannerViewDelegate', 'MPPlayableContentDataSource', 'MTLComputePipelineState', 'NSURLSessionDelegate', 'MTLCommandBuffer', 'NSXMLParserDelegate', 'UIViewControllerRestoration', 'UISearchBarDelegate', 'UIBarPositioning', 'CBPeripheralDelegate', 'UISearchDisplayDelegate', 'CAAction', 'PKAddPassesViewControllerDelegate', 'MCNearbyServiceAdvertiserDelegate', 'MTLDepthStencilState', 'GKTurnBasedMatchmakerViewControllerDelegate', 'MPPlayableContentDelegate', 'AVCaptureVideoDataOutputSampleBufferDelegate', 'UIAppearanceContainer', 'UIStateRestoring', 'UITextDocumentProxy', 'MTLDrawable', 'NSURLSessionTaskDelegate', 'NSFilePresenter', 'AVAudioStereoMixing', 'UIViewControllerContextTransitioning', 'UITextInput', 'CBPeripheralManagerDelegate', 'UITextInputDelegate', 'NSFastEnumeration', 'NSURLAuthenticationChallengeSender', 'SCNProgramDelegate', 'AVVideoCompositing', 'SCNAnimatable', 'NSSecureCoding', 'MCAdvertiserAssistantDelegate', 'GKLocalPlayerListener', 'GLKNamedEffect', 'UIPopoverControllerDelegate', 'AVCaptureMetadataOutputObjectsDelegate', 'NSExtensionRequestHandling', 'UITextSelecting', 'UIPrinterPickerControllerDelegate', 'NCWidgetProviding', 'MTLCommandEncoder', 'NSURLProtocolClient', 'MFMessageComposeViewControllerDelegate', 'UIVideoEditorControllerDelegate', 'WKNavigationDelegate', 'GKSavedGameListener', 'UITableViewDataSource', 'MTLFunction', 'EKCalendarChooserDelegate', 'NSUserActivityDelegate', 'UICollisionBehaviorDelegate', 'NSStreamDelegate', 'MCNearbyServiceBrowserDelegate', 'HMHomeDelegate', 'UINavigationControllerDelegate', 'MCSessionDelegate', 'UIDocumentPickerDelegate', 'UIViewControllerInteractiveTransitioning', 'GKTurnBasedEventListener', 'SCNSceneRenderer', 'MTLTexture', 'GLKViewDelegate', 'EAAccessoryDelegate', 'WKScriptMessageHandler', 'PHPhotoLibraryChangeObserver', 'NSKeyedUnarchiverDelegate', 'AVPlayerItemMetadataOutputPushDelegate', 'NSMachPortDelegate', 'SCNShadable', 'UIPopoverBackgroundViewMethods', 'UIDocumentMenuDelegate', 'UIBarPositioningDelegate', 'ABPersonViewControllerDelegate', 'NSNetServiceBrowserDelegate', 'EKEventViewDelegate', 'UIScrollViewDelegate', 'NSURLConnectionDownloadDelegate', 'UIGestureRecognizerDelegate', 'UINavigationBarDelegate', 'AVAudioMixing', 'NSFetchedResultsSectionInfo', 'UIDocumentInteractionControllerDelegate', 'MTLParallelRenderCommandEncoder', 'QLPreviewControllerDelegate', 'UIAccessibilityReadingContent', 'ABUnknownPersonViewControllerDelegate', 'GLKViewControllerDelegate', 'UICollectionViewDelegateFlowLayout', 'UIPopoverPresentationControllerDelegate', 'UIDynamicAnimatorDelegate', 'NSTextAttachmentContainer', 'MKAnnotation', 'UIAccessibilityIdentification', 'UICoordinateSpace', 'ABNewPersonViewControllerDelegate', 'MTLDevice', 'CAMediaTiming', 'AVCaptureFileOutputRecordingDelegate', 'HMHomeManagerDelegate', 'UITextViewDelegate', 'UITabBarDelegate', 'GKLeaderboardViewControllerDelegate', 'UISearchControllerDelegate', 'EAWiFiUnconfiguredAccessoryBrowserDelegate', 'UITextInputTraits', 'MTLRenderPipelineState', 'GKVoiceChatClient', 'UIKeyInput', 'UICollectionViewDataSource', 'SCNTechniqueSupport', 'NSLocking', 'AVCaptureFileOutputDelegate', 'GKChallengeEventHandlerDelegate', 'UIObjectRestoration', 'CIFilterConstructor', 'AVPlayerItemOutputPullDelegate', 'EAGLDrawable', 'AVVideoCompositionValidationHandling', 'UIViewControllerAnimatedTransitioning', 'NSURLSessionDownloadDelegate', 'UIAccelerometerDelegate', 'UIPageViewControllerDelegate', 'MTLCommandQueue', 'UIDataSourceModelAssociation', 'AVAudioRecorderDelegate', 'GKSessionDelegate', 'NSKeyedArchiverDelegate', 'CAMetalDrawable', 'UIDynamicItem', 'CLLocationManagerDelegate', 'NSMetadataQueryDelegate', 'NSNetServiceDelegate', 'GKMatchmakerViewControllerDelegate', 'NSURLSessionDataDelegate'])$/;"	v
COCOA_PROTOCOLS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^                COCOA_PROTOCOLS, COCOA_PRIMITIVES$/;"	i
COCOA_PROTOCOLS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^            COCOA_PROTOCOLS, COCOA_PRIMITIVES$/;"	i
COCOA_PROTOCOLS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^COCOA_PROTOCOLS = set(['SKStoreProductViewControllerDelegate', 'AVVideoCompositionInstruction', 'AVAudioSessionDelegate', 'GKMatchDelegate', 'NSFileManagerDelegate', 'UILayoutSupport', 'NSCopying', 'UIPrintInteractionControllerDelegate', 'QLPreviewControllerDataSource', 'SKProductsRequestDelegate', 'NSTextStorageDelegate', 'MCBrowserViewControllerDelegate', 'MTLComputeCommandEncoder', 'SCNSceneExportDelegate', 'UISearchResultsUpdating', 'MFMailComposeViewControllerDelegate', 'MTLBlitCommandEncoder', 'NSDecimalNumberBehaviors', 'PHContentEditingController', 'NSMutableCopying', 'UIActionSheetDelegate', 'UIViewControllerTransitioningDelegate', 'UIAlertViewDelegate', 'AVAudioPlayerDelegate', 'MKReverseGeocoderDelegate', 'NSCoding', 'UITextInputTokenizer', 'GKFriendRequestComposeViewControllerDelegate', 'UIActivityItemSource', 'NSCacheDelegate', 'UIAdaptivePresentationControllerDelegate', 'GKAchievementViewControllerDelegate', 'UIViewControllerTransitionCoordinator', 'EKEventEditViewDelegate', 'NSURLConnectionDelegate', 'UITableViewDelegate', 'GKPeerPickerControllerDelegate', 'UIGuidedAccessRestrictionDelegate', 'AVSpeechSynthesizerDelegate', 'AVAudio3DMixing', 'AVPlayerItemLegibleOutputPushDelegate', 'ADInterstitialAdDelegate', 'HMAccessoryBrowserDelegate', 'AVAssetResourceLoaderDelegate', 'UITabBarControllerDelegate', 'CKRecordValue', 'SKPaymentTransactionObserver', 'AVCaptureAudioDataOutputSampleBufferDelegate', 'UIInputViewAudioFeedback', 'GKChallengeListener', 'SKSceneDelegate', 'UIPickerViewDelegate', 'UIWebViewDelegate', 'UIApplicationDelegate', 'GKInviteEventListener', 'MPMediaPlayback', 'MyClassJavaScriptMethods', 'AVAsynchronousKeyValueLoading', 'QLPreviewItem', 'SCNBoundingVolume', 'NSPortDelegate', 'UIContentContainer', 'SCNNodeRendererDelegate', 'SKRequestDelegate', 'SKPhysicsContactDelegate', 'HMAccessoryDelegate', 'UIPageViewControllerDataSource', 'SCNSceneRendererDelegate', 'SCNPhysicsContactDelegate', 'MKMapViewDelegate', 'AVPlayerItemOutputPushDelegate', 'UICollectionViewDelegate', 'UIImagePickerControllerDelegate', 'MTLRenderCommandEncoder', 'UIToolbarDelegate', 'WKUIDelegate', 'SCNActionable', 'NSURLConnectionDataDelegate', 'MKOverlay', 'CBCentralManagerDelegate', 'JSExport', 'NSTextLayoutOrientationProvider', 'UIPickerViewDataSource', 'PKPushRegistryDelegate', 'UIViewControllerTransitionCoordinatorContext', 'NSLayoutManagerDelegate', 'MTLLibrary', 'NSFetchedResultsControllerDelegate', 'ABPeoplePickerNavigationControllerDelegate', 'MTLResource', 'NSDiscardableContent', 'UITextFieldDelegate', 'MTLBuffer', 'MTLSamplerState', 'GKGameCenterControllerDelegate', 'MPMediaPickerControllerDelegate', 'UISplitViewControllerDelegate', 'UIAppearance', 'UIPickerViewAccessibilityDelegate', 'UITraitEnvironment', 'UIScrollViewAccessibilityDelegate', 'ADBannerViewDelegate', 'MPPlayableContentDataSource', 'MTLComputePipelineState', 'NSURLSessionDelegate', 'MTLCommandBuffer', 'NSXMLParserDelegate', 'UIViewControllerRestoration', 'UISearchBarDelegate', 'UIBarPositioning', 'CBPeripheralDelegate', 'UISearchDisplayDelegate', 'CAAction', 'PKAddPassesViewControllerDelegate', 'MCNearbyServiceAdvertiserDelegate', 'MTLDepthStencilState', 'GKTurnBasedMatchmakerViewControllerDelegate', 'MPPlayableContentDelegate', 'AVCaptureVideoDataOutputSampleBufferDelegate', 'UIAppearanceContainer', 'UIStateRestoring', 'UITextDocumentProxy', 'MTLDrawable', 'NSURLSessionTaskDelegate', 'NSFilePresenter', 'AVAudioStereoMixing', 'UIViewControllerContextTransitioning', 'UITextInput', 'CBPeripheralManagerDelegate', 'UITextInputDelegate', 'NSFastEnumeration', 'NSURLAuthenticationChallengeSender', 'SCNProgramDelegate', 'AVVideoCompositing', 'SCNAnimatable', 'NSSecureCoding', 'MCAdvertiserAssistantDelegate', 'GKLocalPlayerListener', 'GLKNamedEffect', 'UIPopoverControllerDelegate', 'AVCaptureMetadataOutputObjectsDelegate', 'NSExtensionRequestHandling', 'UITextSelecting', 'UIPrinterPickerControllerDelegate', 'NCWidgetProviding', 'MTLCommandEncoder', 'NSURLProtocolClient', 'MFMessageComposeViewControllerDelegate', 'UIVideoEditorControllerDelegate', 'WKNavigationDelegate', 'GKSavedGameListener', 'UITableViewDataSource', 'MTLFunction', 'EKCalendarChooserDelegate', 'NSUserActivityDelegate', 'UICollisionBehaviorDelegate', 'NSStreamDelegate', 'MCNearbyServiceBrowserDelegate', 'HMHomeDelegate', 'UINavigationControllerDelegate', 'MCSessionDelegate', 'UIDocumentPickerDelegate', 'UIViewControllerInteractiveTransitioning', 'GKTurnBasedEventListener', 'SCNSceneRenderer', 'MTLTexture', 'GLKViewDelegate', 'EAAccessoryDelegate', 'WKScriptMessageHandler', 'PHPhotoLibraryChangeObserver', 'NSKeyedUnarchiverDelegate', 'AVPlayerItemMetadataOutputPushDelegate', 'NSMachPortDelegate', 'SCNShadable', 'UIPopoverBackgroundViewMethods', 'UIDocumentMenuDelegate', 'UIBarPositioningDelegate', 'ABPersonViewControllerDelegate', 'NSNetServiceBrowserDelegate', 'EKEventViewDelegate', 'UIScrollViewDelegate', 'NSURLConnectionDownloadDelegate', 'UIGestureRecognizerDelegate', 'UINavigationBarDelegate', 'AVAudioMixing', 'NSFetchedResultsSectionInfo', 'UIDocumentInteractionControllerDelegate', 'MTLParallelRenderCommandEncoder', 'QLPreviewControllerDelegate', 'UIAccessibilityReadingContent', 'ABUnknownPersonViewControllerDelegate', 'GLKViewControllerDelegate', 'UICollectionViewDelegateFlowLayout', 'UIPopoverPresentationControllerDelegate', 'UIDynamicAnimatorDelegate', 'NSTextAttachmentContainer', 'MKAnnotation', 'UIAccessibilityIdentification', 'UICoordinateSpace', 'ABNewPersonViewControllerDelegate', 'MTLDevice', 'CAMediaTiming', 'AVCaptureFileOutputRecordingDelegate', 'HMHomeManagerDelegate', 'UITextViewDelegate', 'UITabBarDelegate', 'GKLeaderboardViewControllerDelegate', 'UISearchControllerDelegate', 'EAWiFiUnconfiguredAccessoryBrowserDelegate', 'UITextInputTraits', 'MTLRenderPipelineState', 'GKVoiceChatClient', 'UIKeyInput', 'UICollectionViewDataSource', 'SCNTechniqueSupport', 'NSLocking', 'AVCaptureFileOutputDelegate', 'GKChallengeEventHandlerDelegate', 'UIObjectRestoration', 'CIFilterConstructor', 'AVPlayerItemOutputPullDelegate', 'EAGLDrawable', 'AVVideoCompositionValidationHandling', 'UIViewControllerAnimatedTransitioning', 'NSURLSessionDownloadDelegate', 'UIAccelerometerDelegate', 'UIPageViewControllerDelegate', 'MTLCommandQueue', 'UIDataSourceModelAssociation', 'AVAudioRecorderDelegate', 'GKSessionDelegate', 'NSKeyedArchiverDelegate', 'CAMetalDrawable', 'UIDynamicItem', 'CLLocationManagerDelegate', 'NSMetadataQueryDelegate', 'NSNetServiceDelegate', 'GKMatchmakerViewControllerDelegate', 'NSURLSessionDataDelegate'])$/;"	v
COCOA_PROTOCOLS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^                COCOA_PROTOCOLS, COCOA_PRIMITIVES$/;"	i
COCOA_PROTOCOLS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^            COCOA_PROTOCOLS, COCOA_PRIMITIVES$/;"	i
COMMENT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^COMMENT = Token.Comment$/;"	v
COMMENT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^COMMENT = "#776e71"$/;"	v
COMMENT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^COMMENT = "#8d8687"$/;"	v
COMMENT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^COMMENT = Token.Comment$/;"	v
COMMENT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^COMMENT = "#776e71"$/;"	v
COMMENT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^COMMENT = "#8d8687"$/;"	v
CONFIG_PLUGINS	plugged/vim-wakatime/plugin/packages/wakatime/project.py	/^CONFIG_PLUGINS = [$/;"	v
CONSTANT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    CONSTANT = ('nil', 'true', 'false')$/;"	v	class:ElixirLexer
CONSTANT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    CONSTANT = ('nil', 'true', 'false')$/;"	v	class:ElixirLexer
CONSTRUCTORS	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^CONSTRUCTORS = [$/;"	v
CONTENT_CHUNK_SIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^CONTENT_CHUNK_SIZE = 10 * 1024$/;"	v
CONTENT_DECODERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    CONTENT_DECODERS = ['gzip', 'deflate']$/;"	v	class:HTTPResponse
CONTENT_TYPE_FORM_URLENCODED	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^CONTENT_TYPE_FORM_URLENCODED = 'application\/x-www-form-urlencoded'$/;"	v
CONTENT_TYPE_MULTI_PART	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^CONTENT_TYPE_MULTI_PART = 'multipart\/form-data'$/;"	v
CObjdumpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^class CObjdumpLexer(DelegatingLexer):$/;"	c
CObjdumpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^class CObjdumpLexer(DelegatingLexer):$/;"	c
CP949CharLenTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^CP949CharLenTable = (0, 1, 2, 0, 1, 1, 2, 2, 0, 2)$/;"	v
CP949Prober	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/cp949prober.py	/^class CP949Prober(MultiByteCharSetProber):$/;"	c
CP949Prober	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcsgroupprober.py	/^from .cp949prober import CP949Prober$/;"	i
CP949SMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/cp949prober.py	/^from .mbcssm import CP949SMModel$/;"	i
CP949SMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^CP949SMModel = {'classTable': CP949_cls,$/;"	v
CP949_cls	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^CP949_cls  = ($/;"	v
CP949_st	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^CP949_st = ($/;"	v
CPU	plugged/vimproc.vim/make_msvc.mak	/^CPU = $(PROCESSOR_ARCHITECTURE)$/;"	m
CPU	plugged/vimproc.vim/make_msvc.mak	/^CPU = i386$/;"	m
CS_ESCAPE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/regexopt.py	/^CS_ESCAPE = re.compile(r'[\\^\\\\\\-\\]]')$/;"	v
CS_ESCAPE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/regexopt.py	/^CS_ESCAPE = re.compile(r'[\\^\\\\\\-\\]]')$/;"	v
CSharpAspxLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^class CSharpAspxLexer(DelegatingLexer):$/;"	c
CSharpAspxLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^class CSharpAspxLexer(DelegatingLexer):$/;"	c
CSharpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^class CSharpLexer(RegexLexer):$/;"	c
CSharpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^from pygments.lexers.dotnet import CSharpLexer$/;"	i
CSharpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^class CSharpLexer(RegexLexer):$/;"	c
CSharpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^from pygments.lexers.dotnet import CSharpLexer$/;"	i
CSharpParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/dotnet.py	/^class CSharpParser(TokenParser):$/;"	c
CURRENT_LINE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^CURRENT_LINE = "#41323f"$/;"	v
CURRENT_LINE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^CURRENT_LINE = "#b9b6b0"$/;"	v
CURRENT_LINE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^CURRENT_LINE = "#41323f"$/;"	v
CURRENT_LINE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^CURRENT_LINE = "#b9b6b0"$/;"	v
Ca65Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^class Ca65Lexer(RegexLexer):$/;"	c
Ca65Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^class Ca65Lexer(RegexLexer):$/;"	c
CacheErrors	plugged/syntastic/plugin/syntastic.vim	/^function! s:CacheErrors(checker_names) abort " {{{2$/;"	f
Calendar	plugged/calendar.vim/plugin/calendar.vim	/^       \\ Calendar call calendar#new(<q-args>)$/;"	c
CalendarCache	plugged/calendar.vim/autoload/calendar/cache.vim	/^augroup CalendarCache$/;"	a
CalendarCountCache	plugged/calendar.vim/autoload/calendar/countcache.vim	/^augroup CalendarCountCache$/;"	a
CanonicalizeWildcard	plugged/ingo-library/autoload/ingo/regexp/fromwildcard.vim	/^function! s:CanonicalizeWildcard( expr, pathSeparator )$/;"	f
CaseInsensitiveDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .structures import CaseInsensitiveDict$/;"	i
CaseInsensitiveDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^from .structures import CaseInsensitiveDict$/;"	i
CaseInsensitiveDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from .structures import CaseInsensitiveDict$/;"	i
CaseInsensitiveDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/structures.py	/^class CaseInsensitiveDict(collections.MutableMapping):$/;"	c
CaseInsensitiveDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^from .structures import CaseInsensitiveDict$/;"	i
CbmBasicV2Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^class CbmBasicV2Lexer(RegexLexer):$/;"	c
CbmBasicV2Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.basic import CbmBasicV2Lexer$/;"	i
CbmBasicV2Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^class CbmBasicV2Lexer(RegexLexer):$/;"	c
CbmBasicV2Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.basic import CbmBasicV2Lexer$/;"	i
Cc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Cc = u'\\x00-\\x1f\\x7f-\\x9f'$/;"	v
Cc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Cc = u'\\x00-\\x1f\\x7f-\\x9f'$/;"	v
Center	plugged/tabular/autoload/tabular.vim	/^function! s:Center(string, fieldwidth)$/;"	f
Central	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^Central  = USTimeZone(-6, "Central",  "CST", "CDT")$/;"	v
Central	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^Central  = USTimeZone(-6, "Central",  "CST", "CDT")$/;"	v
CertificateError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^from .packages.ssl_match_hostname import CertificateError$/;"	i
CertificateError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ssl_match_hostname/__init__.py	/^        from ._implementation import CertificateError, match_hostname$/;"	i
CertificateError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ssl_match_hostname/__init__.py	/^        from backports.ssl_match_hostname import CertificateError, match_hostname$/;"	i
CertificateError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ssl_match_hostname/__init__.py	/^    from ssl import CertificateError, match_hostname$/;"	i
CertificateError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ssl_match_hostname/_implementation.py	/^class CertificateError(ValueError):$/;"	c
CeylonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^class CeylonLexer(RegexLexer):$/;"	c
CeylonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^class CeylonLexer(RegexLexer):$/;"	c
Cf	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Cf = u'\\xad\\u0600-\\u0604\\u061c\\u06dd\\u070f\\u180e\\u200b-\\u200f\\u202a-\\u202e\\u2060-\\u2064\\u2066-\\u206f\\ufeff\\ufff9-\\ufffb'$/;"	v
Cf	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Cf = u'\\xad\\u0600-\\u0604\\u061c\\u06dd\\u070f\\u180e\\u200b-\\u200f\\u202a-\\u202e\\u2060-\\u2064\\u2066-\\u206f\\ufeff\\ufff9-\\ufffb'$/;"	v
Cfengine3Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^class Cfengine3Lexer(RegexLexer):$/;"	c
Cfengine3Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.configs import KconfigLexer, Cfengine3Lexer$/;"	i
Cfengine3Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^class Cfengine3Lexer(RegexLexer):$/;"	c
Cfengine3Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.configs import KconfigLexer, Cfengine3Lexer$/;"	i
ChaiscriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^class ChaiscriptLexer(RegexLexer):$/;"	c
ChaiscriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^class ChaiscriptLexer(RegexLexer):$/;"	c
ChangeDir	plugged/ingo-library/autoload/ingo/buffer/scratch.vim	/^function! s:ChangeDir( dirspec )$/;"	f
ChapelLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/chapel.py	/^class ChapelLexer(RegexLexer):$/;"	c
ChapelLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/chapel.py	/^class ChapelLexer(RegexLexer):$/;"	c
CharDistributionAnalysis	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^class CharDistributionAnalysis:$/;"	c
CharSetGroupProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetgroupprober.py	/^class CharSetGroupProber(CharSetProber):$/;"	c
CharSetGroupProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcsgroupprober.py	/^from .charsetgroupprober import CharSetGroupProber$/;"	i
CharSetGroupProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcsgroupprober.py	/^from .charsetgroupprober import CharSetGroupProber$/;"	i
CharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetgroupprober.py	/^from .charsetprober import CharSetProber$/;"	i
CharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetprober.py	/^class CharSetProber:$/;"	c
CharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escprober.py	/^from .charsetprober import CharSetProber$/;"	i
CharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^from .charsetprober import CharSetProber$/;"	i
CharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^from .charsetprober import CharSetProber$/;"	i
CharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcharsetprober.py	/^from .charsetprober import CharSetProber$/;"	i
CharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcharsetprober.py	/^from .charsetprober import CharSetProber$/;"	i
CharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/utf8prober.py	/^from .charsetprober import CharSetProber$/;"	i
CheckBinaries	plugged/vim-go/plugin/go.vim	/^function! s:CheckBinaries()$/;"	f
CheetahHtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class CheetahHtmlLexer(DelegatingLexer):$/;"	c
CheetahHtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class CheetahHtmlLexer(DelegatingLexer):$/;"	c
CheetahHtmlParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^class CheetahHtmlParser(HtmlDjangoParser):$/;"	c
CheetahJavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class CheetahJavascriptLexer(DelegatingLexer):$/;"	c
CheetahJavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class CheetahJavascriptLexer(DelegatingLexer):$/;"	c
CheetahLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class CheetahLexer(RegexLexer):$/;"	c
CheetahLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class CheetahLexer(RegexLexer):$/;"	c
CheetahPythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class CheetahPythonLexer(Lexer):$/;"	c
CheetahPythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class CheetahPythonLexer(Lexer):$/;"	c
CheetahXmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class CheetahXmlLexer(DelegatingLexer):$/;"	c
CheetahXmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class CheetahXmlLexer(DelegatingLexer):$/;"	c
ChooseCommandMap	plugged/tabular/plugin/Tabular.vim	/^function! s:ChooseCommandMap(commandline)$/;"	f
ChunkedEncodingError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/exceptions.py	/^class ChunkedEncodingError(RequestException):$/;"	c
CirruLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^class CirruLexer(RegexLexer):$/;"	c
CirruLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^class CirruLexer(RegexLexer):$/;"	c
ClassNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    guess_decode, guess_decode_from_terminal, terminal_encoding$/;"	i
ClassNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^     get_choice_opt, ClassNotFound, OptionError, text_type, string_types$/;"	i
ClassNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^from pygments.util import ClassNotFound, itervalues$/;"	i
ClassNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^from pygments.util import ClassNotFound, itervalues, guess_decode$/;"	i
ClassNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^from pygments.util import get_bool_opt, ClassNotFound$/;"	i
ClassNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^from pygments.lexers import get_lexer_by_name, ClassNotFound$/;"	i
ClassNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^from pygments.util import ClassNotFound$/;"	i
ClassNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/__init__.py	/^from pygments.util import ClassNotFound$/;"	i
ClassNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^class ClassNotFound(ValueError):$/;"	c
ClassNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    guess_decode, guess_decode_from_terminal, terminal_encoding$/;"	i
ClassNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^     get_choice_opt, ClassNotFound, OptionError, text_type, string_types$/;"	i
ClassNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^from pygments.util import ClassNotFound, itervalues$/;"	i
ClassNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^from pygments.util import ClassNotFound, itervalues, guess_decode$/;"	i
ClassNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^from pygments.util import get_bool_opt, ClassNotFound$/;"	i
ClassNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^from pygments.lexers import get_lexer_by_name, ClassNotFound$/;"	i
ClassNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^from pygments.util import ClassNotFound$/;"	i
ClassNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/__init__.py	/^from pygments.util import ClassNotFound$/;"	i
ClassNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^class ClassNotFound(ValueError):$/;"	c
ClassNotFound	plugged/vim-wakatime/plugin/packages/wakatime/stats.py	/^from pygments.util import ClassNotFound$/;"	i
ClassSep	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:ClassSep() " {{{2$/;"	f
Classes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    Classes = ('alias ', 'application ', 'boolean ', 'class ', 'constant ',$/;"	v	class:AppleScriptLexer
Classes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    Classes = ('alias ', 'application ', 'boolean ', 'class ', 'constant ',$/;"	v	class:AppleScriptLexer
ClayLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^class ClayLexer(RegexLexer):$/;"	c
ClayLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^class ClayLexer(RegexLexer):$/;"	c
ClearCache	plugged/syntastic/plugin/syntastic.vim	/^function! s:ClearCache() abort " {{{2$/;"	f
ClearRInfo	plugged/Nvim-R/R/common_global.vim	/^function ClearRInfo()$/;"	f
ClojureLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^from pygments.lexers.jvm import IokeLexer, ClojureLexer$/;"	i
ClojureLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^class ClojureLexer(RegexLexer):$/;"	c
ClojureLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^from pygments.lexers.jvm import IokeLexer, ClojureLexer$/;"	i
ClojureLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^class ClojureLexer(RegexLexer):$/;"	c
ClojureScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^class ClojureScriptLexer(ClojureLexer):$/;"	c
ClojureScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^class ClojureScriptLexer(ClojureLexer):$/;"	c
CloseExternalOB	plugged/Nvim-R/R/common_global.vim	/^function CloseExternalOB()$/;"	f
CloseIfOnlyNerdTreeLeft	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:CloseIfOnlyNerdTreeLeft()$/;"	f
ClosedPoolError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class ClosedPoolError(PoolError):$/;"	c
Cn	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Cn = u'\\u0378-\\u0379\\u037f-\\u0383\\u038b\\u038d\\u03a2\\u0528-\\u0530\\u0557-\\u0558\\u0560\\u0588\\u058b-\\u058e\\u0590\\u05c8-\\u05cf\\u05eb-\\u05ef\\u05f5-\\u05ff\\u0605\\u061d\\u070e\\u074b-\\u074c\\u07b2-\\u07bf\\u07fb-\\u07ff\\u082e-\\u082f\\u083f\\u085c-\\u085d\\u085f-\\u089f\\u08a1\\u08ad-\\u08e3\\u08ff\\u0978\\u0980\\u0984\\u098d-\\u098e\\u0991-\\u0992\\u09a9\\u09b1\\u09b3-\\u09b5\\u09ba-\\u09bb\\u09c5-\\u09c6\\u09c9-\\u09ca\\u09cf-\\u09d6\\u09d8-\\u09db\\u09de\\u09e4-\\u09e5\\u09fc-\\u0a00\\u0a04\\u0a0b-\\u0a0e\\u0a11-\\u0a12\\u0a29\\u0a31\\u0a34\\u0a37\\u0a3a-\\u0a3b\\u0a3d\\u0a43-\\u0a46\\u0a49-\\u0a4a\\u0a4e-\\u0a50\\u0a52-\\u0a58\\u0a5d\\u0a5f-\\u0a65\\u0a76-\\u0a80\\u0a84\\u0a8e\\u0a92\\u0aa9\\u0ab1\\u0ab4\\u0aba-\\u0abb\\u0ac6\\u0aca\\u0ace-\\u0acf\\u0ad1-\\u0adf\\u0ae4-\\u0ae5\\u0af2-\\u0b00\\u0b04\\u0b0d-\\u0b0e\\u0b11-\\u0b12\\u0b29\\u0b31\\u0b34\\u0b3a-\\u0b3b\\u0b45-\\u0b46\\u0b49-\\u0b4a\\u0b4e-\\u0b55\\u0b58-\\u0b5b\\u0b5e\\u0b64-\\u0b65\\u0b78-\\u0b81\\u0b84\\u0b8b-\\u0b8d\\u0b91\\u0b96-\\u0b98\\u0b9b\\u0b9d\\u0ba0-\\u0ba2\\u0ba5-\\u0ba7\\u0bab-\\u0bad\\u0bba-\\u0bbd\\u0bc3-\\u0bc5\\u0bc9\\u0bce-\\u0bcf\\u0bd1-\\u0bd6\\u0bd8-\\u0be5\\u0bfb-\\u0c00\\u0c04\\u0c0d\\u0c11\\u0c29\\u0c34\\u0c3a-\\u0c3c\\u0c45\\u0c49\\u0c4e-\\u0c54\\u0c57\\u0c5a-\\u0c5f\\u0c64-\\u0c65\\u0c70-\\u0c77\\u0c80-\\u0c81\\u0c84\\u0c8d\\u0c91\\u0ca9\\u0cb4\\u0cba-\\u0cbb\\u0cc5\\u0cc9\\u0cce-\\u0cd4\\u0cd7-\\u0cdd\\u0cdf\\u0ce4-\\u0ce5\\u0cf0\\u0cf3-\\u0d01\\u0d04\\u0d0d\\u0d11\\u0d3b-\\u0d3c\\u0d45\\u0d49\\u0d4f-\\u0d56\\u0d58-\\u0d5f\\u0d64-\\u0d65\\u0d76-\\u0d78\\u0d80-\\u0d81\\u0d84\\u0d97-\\u0d99\\u0db2\\u0dbc\\u0dbe-\\u0dbf\\u0dc7-\\u0dc9\\u0dcb-\\u0dce\\u0dd5\\u0dd7\\u0de0-\\u0df1\\u0df5-\\u0e00\\u0e3b-\\u0e3e\\u0e5c-\\u0e80\\u0e83\\u0e85-\\u0e86\\u0e89\\u0e8b-\\u0e8c\\u0e8e-\\u0e93\\u0e98\\u0ea0\\u0ea4\\u0ea6\\u0ea8-\\u0ea9\\u0eac\\u0eba\\u0ebe-\\u0ebf\\u0ec5\\u0ec7\\u0ece-\\u0ecf\\u0eda-\\u0edb\\u0ee0-\\u0eff\\u0f48\\u0f6d-\\u0f70\\u0f98\\u0fbd\\u0fcd\\u0fdb-\\u0fff\\u10c6\\u10c8-\\u10cc\\u10ce-\\u10cf\\u1249\\u124e-\\u124f\\u1257\\u1259\\u125e-\\u125f\\u1289\\u128e-\\u128f\\u12b1\\u12b6-\\u12b7\\u12bf\\u12c1\\u12c6-\\u12c7\\u12d7\\u1311\\u1316-\\u1317\\u135b-\\u135c\\u137d-\\u137f\\u139a-\\u139f\\u13f5-\\u13ff\\u169d-\\u169f\\u16f1-\\u16ff\\u170d\\u1715-\\u171f\\u1737-\\u173f\\u1754-\\u175f\\u176d\\u1771\\u1774-\\u177f\\u17de-\\u17df\\u17ea-\\u17ef\\u17fa-\\u17ff\\u180f\\u181a-\\u181f\\u1878-\\u187f\\u18ab-\\u18af\\u18f6-\\u18ff\\u191d-\\u191f\\u192c-\\u192f\\u193c-\\u193f\\u1941-\\u1943\\u196e-\\u196f\\u1975-\\u197f\\u19ac-\\u19af\\u19ca-\\u19cf\\u19db-\\u19dd\\u1a1c-\\u1a1d\\u1a5f\\u1a7d-\\u1a7e\\u1a8a-\\u1a8f\\u1a9a-\\u1a9f\\u1aae-\\u1aff\\u1b4c-\\u1b4f\\u1b7d-\\u1b7f\\u1bf4-\\u1bfb\\u1c38-\\u1c3a\\u1c4a-\\u1c4c\\u1c80-\\u1cbf\\u1cc8-\\u1ccf\\u1cf7-\\u1cff\\u1de7-\\u1dfb\\u1f16-\\u1f17\\u1f1e-\\u1f1f\\u1f46-\\u1f47\\u1f4e-\\u1f4f\\u1f58\\u1f5a\\u1f5c\\u1f5e\\u1f7e-\\u1f7f\\u1fb5\\u1fc5\\u1fd4-\\u1fd5\\u1fdc\\u1ff0-\\u1ff1\\u1ff5\\u1fff\\u2065\\u2072-\\u2073\\u208f\\u209d-\\u209f\\u20bb-\\u20cf\\u20f1-\\u20ff\\u218a-\\u218f\\u23f4-\\u23ff\\u2427-\\u243f\\u244b-\\u245f\\u2700\\u2b4d-\\u2b4f\\u2b5a-\\u2bff\\u2c2f\\u2c5f\\u2cf4-\\u2cf8\\u2d26\\u2d28-\\u2d2c\\u2d2e-\\u2d2f\\u2d68-\\u2d6e\\u2d71-\\u2d7e\\u2d97-\\u2d9f\\u2da7\\u2daf\\u2db7\\u2dbf\\u2dc7\\u2dcf\\u2dd7\\u2ddf\\u2e3c-\\u2e7f\\u2e9a\\u2ef4-\\u2eff\\u2fd6-\\u2fef\\u2ffc-\\u2fff\\u3040\\u3097-\\u3098\\u3100-\\u3104\\u312e-\\u3130\\u318f\\u31bb-\\u31bf\\u31e4-\\u31ef\\u321f\\u32ff\\u4db6-\\u4dbf\\u9fcd-\\u9fff\\ua48d-\\ua48f\\ua4c7-\\ua4cf\\ua62c-\\ua63f\\ua698-\\ua69e\\ua6f8-\\ua6ff\\ua78f\\ua794-\\ua79f\\ua7ab-\\ua7f7\\ua82c-\\ua82f\\ua83a-\\ua83f\\ua878-\\ua87f\\ua8c5-\\ua8cd\\ua8da-\\ua8df\\ua8fc-\\ua8ff\\ua954-\\ua95e\\ua97d-\\ua97f\\ua9ce\\ua9da-\\ua9dd\\ua9e0-\\ua9ff\\uaa37-\\uaa3f\\uaa4e-\\uaa4f\\uaa5a-\\uaa5b\\uaa7c-\\uaa7f\\uaac3-\\uaada\\uaaf7-\\uab00\\uab07-\\uab08\\uab0f-\\uab10\\uab17-\\uab1f\\uab27\\uab2f-\\uabbf\\uabee-\\uabef\\uabfa-\\uabff\\ud7a4-\\ud7af\\ud7c7-\\ud7ca\\ud7fc-\\ud7ff\\ufa6e-\\ufa6f\\ufada-\\ufaff\\ufb07-\\ufb12\\ufb18-\\ufb1c\\ufb37\\ufb3d\\ufb3f\\ufb42\\ufb45\\ufbc2-\\ufbd2\\ufd40-\\ufd4f\\ufd90-\\ufd91\\ufdc8-\\ufdef\\ufdfe-\\ufdff\\ufe1a-\\ufe1f\\ufe27-\\ufe2f\\ufe53\\ufe67\\ufe6c-\\ufe6f\\ufe75\\ufefd-\\ufefe\\uff00\\uffbf-\\uffc1\\uffc8-\\uffc9\\uffd0-\\uffd1\\uffd8-\\uffd9\\uffdd-\\uffdf\\uffe7\\uffef-\\ufff8\\ufffe-\\uffff'$/;"	v
Cn	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Cn = u'\\u0378-\\u0379\\u037f-\\u0383\\u038b\\u038d\\u03a2\\u0528-\\u0530\\u0557-\\u0558\\u0560\\u0588\\u058b-\\u058e\\u0590\\u05c8-\\u05cf\\u05eb-\\u05ef\\u05f5-\\u05ff\\u0605\\u061d\\u070e\\u074b-\\u074c\\u07b2-\\u07bf\\u07fb-\\u07ff\\u082e-\\u082f\\u083f\\u085c-\\u085d\\u085f-\\u089f\\u08a1\\u08ad-\\u08e3\\u08ff\\u0978\\u0980\\u0984\\u098d-\\u098e\\u0991-\\u0992\\u09a9\\u09b1\\u09b3-\\u09b5\\u09ba-\\u09bb\\u09c5-\\u09c6\\u09c9-\\u09ca\\u09cf-\\u09d6\\u09d8-\\u09db\\u09de\\u09e4-\\u09e5\\u09fc-\\u0a00\\u0a04\\u0a0b-\\u0a0e\\u0a11-\\u0a12\\u0a29\\u0a31\\u0a34\\u0a37\\u0a3a-\\u0a3b\\u0a3d\\u0a43-\\u0a46\\u0a49-\\u0a4a\\u0a4e-\\u0a50\\u0a52-\\u0a58\\u0a5d\\u0a5f-\\u0a65\\u0a76-\\u0a80\\u0a84\\u0a8e\\u0a92\\u0aa9\\u0ab1\\u0ab4\\u0aba-\\u0abb\\u0ac6\\u0aca\\u0ace-\\u0acf\\u0ad1-\\u0adf\\u0ae4-\\u0ae5\\u0af2-\\u0b00\\u0b04\\u0b0d-\\u0b0e\\u0b11-\\u0b12\\u0b29\\u0b31\\u0b34\\u0b3a-\\u0b3b\\u0b45-\\u0b46\\u0b49-\\u0b4a\\u0b4e-\\u0b55\\u0b58-\\u0b5b\\u0b5e\\u0b64-\\u0b65\\u0b78-\\u0b81\\u0b84\\u0b8b-\\u0b8d\\u0b91\\u0b96-\\u0b98\\u0b9b\\u0b9d\\u0ba0-\\u0ba2\\u0ba5-\\u0ba7\\u0bab-\\u0bad\\u0bba-\\u0bbd\\u0bc3-\\u0bc5\\u0bc9\\u0bce-\\u0bcf\\u0bd1-\\u0bd6\\u0bd8-\\u0be5\\u0bfb-\\u0c00\\u0c04\\u0c0d\\u0c11\\u0c29\\u0c34\\u0c3a-\\u0c3c\\u0c45\\u0c49\\u0c4e-\\u0c54\\u0c57\\u0c5a-\\u0c5f\\u0c64-\\u0c65\\u0c70-\\u0c77\\u0c80-\\u0c81\\u0c84\\u0c8d\\u0c91\\u0ca9\\u0cb4\\u0cba-\\u0cbb\\u0cc5\\u0cc9\\u0cce-\\u0cd4\\u0cd7-\\u0cdd\\u0cdf\\u0ce4-\\u0ce5\\u0cf0\\u0cf3-\\u0d01\\u0d04\\u0d0d\\u0d11\\u0d3b-\\u0d3c\\u0d45\\u0d49\\u0d4f-\\u0d56\\u0d58-\\u0d5f\\u0d64-\\u0d65\\u0d76-\\u0d78\\u0d80-\\u0d81\\u0d84\\u0d97-\\u0d99\\u0db2\\u0dbc\\u0dbe-\\u0dbf\\u0dc7-\\u0dc9\\u0dcb-\\u0dce\\u0dd5\\u0dd7\\u0de0-\\u0df1\\u0df5-\\u0e00\\u0e3b-\\u0e3e\\u0e5c-\\u0e80\\u0e83\\u0e85-\\u0e86\\u0e89\\u0e8b-\\u0e8c\\u0e8e-\\u0e93\\u0e98\\u0ea0\\u0ea4\\u0ea6\\u0ea8-\\u0ea9\\u0eac\\u0eba\\u0ebe-\\u0ebf\\u0ec5\\u0ec7\\u0ece-\\u0ecf\\u0eda-\\u0edb\\u0ee0-\\u0eff\\u0f48\\u0f6d-\\u0f70\\u0f98\\u0fbd\\u0fcd\\u0fdb-\\u0fff\\u10c6\\u10c8-\\u10cc\\u10ce-\\u10cf\\u1249\\u124e-\\u124f\\u1257\\u1259\\u125e-\\u125f\\u1289\\u128e-\\u128f\\u12b1\\u12b6-\\u12b7\\u12bf\\u12c1\\u12c6-\\u12c7\\u12d7\\u1311\\u1316-\\u1317\\u135b-\\u135c\\u137d-\\u137f\\u139a-\\u139f\\u13f5-\\u13ff\\u169d-\\u169f\\u16f1-\\u16ff\\u170d\\u1715-\\u171f\\u1737-\\u173f\\u1754-\\u175f\\u176d\\u1771\\u1774-\\u177f\\u17de-\\u17df\\u17ea-\\u17ef\\u17fa-\\u17ff\\u180f\\u181a-\\u181f\\u1878-\\u187f\\u18ab-\\u18af\\u18f6-\\u18ff\\u191d-\\u191f\\u192c-\\u192f\\u193c-\\u193f\\u1941-\\u1943\\u196e-\\u196f\\u1975-\\u197f\\u19ac-\\u19af\\u19ca-\\u19cf\\u19db-\\u19dd\\u1a1c-\\u1a1d\\u1a5f\\u1a7d-\\u1a7e\\u1a8a-\\u1a8f\\u1a9a-\\u1a9f\\u1aae-\\u1aff\\u1b4c-\\u1b4f\\u1b7d-\\u1b7f\\u1bf4-\\u1bfb\\u1c38-\\u1c3a\\u1c4a-\\u1c4c\\u1c80-\\u1cbf\\u1cc8-\\u1ccf\\u1cf7-\\u1cff\\u1de7-\\u1dfb\\u1f16-\\u1f17\\u1f1e-\\u1f1f\\u1f46-\\u1f47\\u1f4e-\\u1f4f\\u1f58\\u1f5a\\u1f5c\\u1f5e\\u1f7e-\\u1f7f\\u1fb5\\u1fc5\\u1fd4-\\u1fd5\\u1fdc\\u1ff0-\\u1ff1\\u1ff5\\u1fff\\u2065\\u2072-\\u2073\\u208f\\u209d-\\u209f\\u20bb-\\u20cf\\u20f1-\\u20ff\\u218a-\\u218f\\u23f4-\\u23ff\\u2427-\\u243f\\u244b-\\u245f\\u2700\\u2b4d-\\u2b4f\\u2b5a-\\u2bff\\u2c2f\\u2c5f\\u2cf4-\\u2cf8\\u2d26\\u2d28-\\u2d2c\\u2d2e-\\u2d2f\\u2d68-\\u2d6e\\u2d71-\\u2d7e\\u2d97-\\u2d9f\\u2da7\\u2daf\\u2db7\\u2dbf\\u2dc7\\u2dcf\\u2dd7\\u2ddf\\u2e3c-\\u2e7f\\u2e9a\\u2ef4-\\u2eff\\u2fd6-\\u2fef\\u2ffc-\\u2fff\\u3040\\u3097-\\u3098\\u3100-\\u3104\\u312e-\\u3130\\u318f\\u31bb-\\u31bf\\u31e4-\\u31ef\\u321f\\u32ff\\u4db6-\\u4dbf\\u9fcd-\\u9fff\\ua48d-\\ua48f\\ua4c7-\\ua4cf\\ua62c-\\ua63f\\ua698-\\ua69e\\ua6f8-\\ua6ff\\ua78f\\ua794-\\ua79f\\ua7ab-\\ua7f7\\ua82c-\\ua82f\\ua83a-\\ua83f\\ua878-\\ua87f\\ua8c5-\\ua8cd\\ua8da-\\ua8df\\ua8fc-\\ua8ff\\ua954-\\ua95e\\ua97d-\\ua97f\\ua9ce\\ua9da-\\ua9dd\\ua9e0-\\ua9ff\\uaa37-\\uaa3f\\uaa4e-\\uaa4f\\uaa5a-\\uaa5b\\uaa7c-\\uaa7f\\uaac3-\\uaada\\uaaf7-\\uab00\\uab07-\\uab08\\uab0f-\\uab10\\uab17-\\uab1f\\uab27\\uab2f-\\uabbf\\uabee-\\uabef\\uabfa-\\uabff\\ud7a4-\\ud7af\\ud7c7-\\ud7ca\\ud7fc-\\ud7ff\\ufa6e-\\ufa6f\\ufada-\\ufaff\\ufb07-\\ufb12\\ufb18-\\ufb1c\\ufb37\\ufb3d\\ufb3f\\ufb42\\ufb45\\ufbc2-\\ufbd2\\ufd40-\\ufd4f\\ufd90-\\ufd91\\ufdc8-\\ufdef\\ufdfe-\\ufdff\\ufe1a-\\ufe1f\\ufe27-\\ufe2f\\ufe53\\ufe67\\ufe6c-\\ufe6f\\ufe75\\ufefd-\\ufefe\\uff00\\uffbf-\\uffc1\\uffc8-\\uffc9\\uffd0-\\uffd1\\uffd8-\\uffd9\\uffdd-\\uffdf\\uffe7\\uffef-\\ufff8\\ufffe-\\uffff'$/;"	v
Co	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Co = u'\\ue000-\\uf8ff'$/;"	v
Co	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Co = u'\\ue000-\\uf8ff'$/;"	v
CobolFreeformatLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^class CobolFreeformatLexer(CobolLexer):$/;"	c
CobolFreeformatLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.business import CobolLexer, CobolFreeformatLexer$/;"	i
CobolFreeformatLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^class CobolFreeformatLexer(CobolLexer):$/;"	c
CobolFreeformatLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.business import CobolLexer, CobolFreeformatLexer$/;"	i
CobolLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^class CobolLexer(RegexLexer):$/;"	c
CobolLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.business import CobolLexer, CobolFreeformatLexer$/;"	i
CobolLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^class CobolLexer(RegexLexer):$/;"	c
CobolLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.business import CobolLexer, CobolFreeformatLexer$/;"	i
CodeTagFilter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^class CodeTagFilter(Filter):$/;"	c
CodeTagFilter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^class CodeTagFilter(Filter):$/;"	c
CodingStateMachine	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/big5prober.py	/^from .codingstatemachine import CodingStateMachine$/;"	i
CodingStateMachine	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/codingstatemachine.py	/^class CodingStateMachine:$/;"	c
CodingStateMachine	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/cp949prober.py	/^from .codingstatemachine import CodingStateMachine$/;"	i
CodingStateMachine	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escprober.py	/^from .codingstatemachine import CodingStateMachine$/;"	i
CodingStateMachine	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/eucjpprober.py	/^from .codingstatemachine import CodingStateMachine$/;"	i
CodingStateMachine	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euckrprober.py	/^from .codingstatemachine import CodingStateMachine$/;"	i
CodingStateMachine	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euctwprober.py	/^from .codingstatemachine import CodingStateMachine$/;"	i
CodingStateMachine	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/gb2312prober.py	/^from .codingstatemachine import CodingStateMachine$/;"	i
CodingStateMachine	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sjisprober.py	/^from .codingstatemachine import CodingStateMachine$/;"	i
CodingStateMachine	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/utf8prober.py	/^from .codingstatemachine import CodingStateMachine$/;"	i
CoffeeBufNew	plugged/vim-coffee-script/ftplugin/coffee.vim	/^augroup CoffeeBufNew | augroup END$/;"	a
CoffeeBufUpdate	plugged/vim-coffee-script/ftplugin/coffee.vim	/^augroup CoffeeBufUpdate | augroup END$/;"	a
CoffeeCompile	plugged/vim-coffee-script/ftplugin/coffee.vim	/^\\        CoffeeCompile call s:CoffeeCompile(<line1>, <line2>, <q-args>)$/;"	c
CoffeeCompile	plugged/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompile(startline, endline, args)$/;"	f
CoffeeCompileClose	plugged/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileClose()$/;"	f
CoffeeCompileResetVars	plugged/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileResetVars()$/;"	f
CoffeeCompileToBuf	plugged/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileToBuf(buf, startline, endline)$/;"	f
CoffeeComplete	plugged/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeComplete(cmd, cmdline, cursor)$/;"	f
CoffeeLint	plugged/vim-coffee-script/ftplugin/coffee.vim	/^command! -buffer -range=% -bang -bar -nargs=* CoffeeLint$/;"	c
CoffeeLint	plugged/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeLint(startline, endline, bang, args)$/;"	f
CoffeeMake	plugged/vim-coffee-script/compiler/coffee.vim	/^command! -bang -bar -nargs=* CoffeeMake$/;"	c
CoffeeMakeDeprecated	plugged/vim-coffee-script/compiler/coffee.vim	/^function! s:CoffeeMakeDeprecated(bang, args)$/;"	f
CoffeeRun	plugged/vim-coffee-script/ftplugin/coffee.vim	/^command! -buffer -range=% -bar -nargs=* CoffeeRun$/;"	c
CoffeeRun	plugged/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeRun(startline, endline, args)$/;"	f
CoffeeRunClose	plugged/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeRunClose()$/;"	f
CoffeeRunResetVars	plugged/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeRunResetVars()$/;"	f
CoffeeScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^class CoffeeScriptLexer(RegexLexer):$/;"	c
CoffeeScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^    DartLexer, TypeScriptLexer, LassoLexer, ObjectiveJLexer, CoffeeScriptLexer$/;"	i
CoffeeScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^class CoffeeScriptLexer(RegexLexer):$/;"	c
CoffeeScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^    DartLexer, TypeScriptLexer, LassoLexer, ObjectiveJLexer, CoffeeScriptLexer$/;"	i
CoffeeUpdateMakePrg	plugged/vim-coffee-script/compiler/coffee.vim	/^augroup CoffeeUpdateMakePrg$/;"	a
CoffeeWatch	plugged/vim-coffee-script/ftplugin/coffee.vim	/^\\        CoffeeWatch call s:CoffeeWatch(<q-args>)$/;"	c
CoffeeWatch	plugged/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatch(args)$/;"	f
CoffeeWatchClose	plugged/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatchClose()$/;"	f
CoffeeWatchResetVars	plugged/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatchResetVars()$/;"	f
CoffeeWatchUpdate	plugged/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatchUpdate()$/;"	f
ColdfusionCFCLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class ColdfusionCFCLexer(DelegatingLexer):$/;"	c
ColdfusionCFCLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class ColdfusionCFCLexer(DelegatingLexer):$/;"	c
ColdfusionHtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class ColdfusionHtmlLexer(DelegatingLexer):$/;"	c
ColdfusionHtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class ColdfusionHtmlLexer(DelegatingLexer):$/;"	c
ColdfusionHtmlParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^class ColdfusionHtmlParser(HtmlDjangoParser):$/;"	c
ColdfusionLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class ColdfusionLexer(RegexLexer):$/;"	c
ColdfusionLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class ColdfusionLexer(RegexLexer):$/;"	c
ColdfusionMarkupLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class ColdfusionMarkupLexer(RegexLexer):$/;"	c
ColdfusionMarkupLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class ColdfusionMarkupLexer(RegexLexer):$/;"	c
Collect	plugged/ingo-library/autoload/ingo/str/frompattern.vim	/^function! s:Collect( accumulatorMatches, isUnique )$/;"	f
ColorfulStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/colorful.py	/^class ColorfulStyle(Style):$/;"	c
ColorfulStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/colorful.py	/^class ColorfulStyle(Style):$/;"	c
Commands	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    Commands = ('ASCII (character|number)', 'activate', 'beep', 'choose URL',$/;"	v	class:AppleScriptLexer
Commands	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    Commands = ('ASCII (character|number)', 'activate', 'beep', 'choose URL',$/;"	v	class:AppleScriptLexer
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    string_to_tokentype$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/apl.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    Other, Keyword, Operator$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^    Number, Punctuation, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    Number, Punctuation, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    Number, Punctuation, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/chapel.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    Number, Punctuation, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^    Punctuation, Number$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dalvik.py	/^    Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    Punctuation, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^    Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    Number, Punctuation, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^    Number, Punctuation, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/eiffel.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    Number, Punctuation, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    Number, Punctuation, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^from pygments.token import Text, Comment, Keyword, Name, String, Number$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    Number, Punctuation, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/foxpro.py	/^     Name, String$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^    String, Number, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    Number, Punctuation, String$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    Number, Punctuation, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    Number, Punctuation, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/idl.py	/^from pygments.token import Text, Comment, Operator, Keyword, Name, Number$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^from pygments.token import Text, Comment, Keyword, Name, String$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^    Name, String, Number$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/iolang.py	/^    Number$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    Number, Punctuation, Other$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^    Number, Punctuation, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    Number, Punctuation, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    Number, Punctuation, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nit.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^    Number, Punctuation, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    Number, Punctuation, Literal, Comment$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ooc.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    Number, Punctuation, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    Number, Punctuation, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    Number, Punctuation, Other$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    Number, Punctuation, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    Number, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^    Keyword, Name$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class Comment(Tokenizer):$/;"	c
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^    Number, Punctuation, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^     Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/snobol.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^    Number$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/testing.py	/^from pygments.token import Comment, Keyword, Name, String$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    Number, Generic, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    Number, Punctuation, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    Number, Punctuation, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/autumn.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/borland.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/bw.py	/^     Operator, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/colorful.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/default.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/emacs.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/friendly.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/fruity.py	/^    Generic, Number, String, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/igor.py	/^from pygments.token import Keyword, Name, Comment, String$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/manni.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/murphy.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/pastie.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/perldoc.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/rrt.py	/^from pygments.token import Comment, Name, Keyword, String$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/trac.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vs.py	/^     Operator, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/xcode.py	/^     Number, Operator, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^Comment     = Token.Comment$/;"	v
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    string_to_tokentype$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/apl.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    Other, Keyword, Operator$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^    Number, Punctuation, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    Number, Punctuation, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    Number, Punctuation, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/chapel.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    Number, Punctuation, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^    Punctuation, Number$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dalvik.py	/^    Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    Punctuation, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^    Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    Number, Punctuation, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^    Number, Punctuation, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/eiffel.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    Number, Punctuation, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    Number, Punctuation, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^from pygments.token import Text, Comment, Keyword, Name, String, Number$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    Number, Punctuation, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/foxpro.py	/^     Name, String$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^    String, Number, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    Number, Punctuation, String$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    Number, Punctuation, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    Number, Punctuation, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/idl.py	/^from pygments.token import Text, Comment, Operator, Keyword, Name, Number$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^from pygments.token import Text, Comment, Keyword, Name, String$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^    Name, String, Number$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/iolang.py	/^    Number$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    Number, Punctuation, Other$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^    Number, Punctuation, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    Number, Punctuation, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    Number, Punctuation, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nit.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^    Number, Punctuation, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    Number, Punctuation, Literal, Comment$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ooc.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    Number, Punctuation, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    Number, Punctuation, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    Number, Punctuation, Other$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    Number, Punctuation, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    Number, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^    Keyword, Name$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class Comment(Tokenizer):$/;"	c
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^    Number, Punctuation, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^     Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/snobol.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^    Number$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/testing.py	/^from pygments.token import Comment, Keyword, Name, String$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    Number, Generic, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    Number, Punctuation, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^    Number, Punctuation$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    Number, Punctuation, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/autumn.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/borland.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/bw.py	/^     Operator, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/colorful.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/default.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/emacs.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/friendly.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/fruity.py	/^    Generic, Number, String, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/igor.py	/^from pygments.token import Keyword, Name, Comment, String$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/manni.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/murphy.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/pastie.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/perldoc.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/rrt.py	/^from pygments.token import Comment, Name, Keyword, String$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/trac.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vs.py	/^     Operator, Generic$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/xcode.py	/^     Number, Operator, Literal$/;"	i
Comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^Comment     = Token.Comment$/;"	v
CommentDefinitions	plugged/ingo-library/autoload/ingo/comments.vim	/^function! s:CommentDefinitions()$/;"	f
Commit	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(args, ...) abort$/;"	f
CommitComplete	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
CommonLispLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/functional.py	/^    NewLispLexer$/;"	i
CommonLispLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^class CommonLispLexer(RegexLexer):$/;"	c
CommonLispLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/functional.py	/^    NewLispLexer$/;"	i
CommonLispLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^class CommonLispLexer(RegexLexer):$/;"	c
CommonTimezonesTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class CommonTimezonesTestCase(unittest.TestCase):$/;"	c
CommonTimezonesTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class CommonTimezonesTestCase(unittest.TestCase):$/;"	c
CompilerSet	plugged/vim-go/compiler/go.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-haml/compiler/haml.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-haml/compiler/sass.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-ruby/compiler/eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-ruby/compiler/rake.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-ruby/compiler/rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-ruby/compiler/ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-ruby/compiler/rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompleteCheckerName	plugged/syntastic/plugin/syntastic.vim	/^function! s:CompleteCheckerName(argLead, cmdLine, cursorPos) abort " {{{2$/;"	f
CompleteChunkOptions	plugged/Nvim-R/R/common_global.vim	/^function CompleteChunkOptions()$/;"	f
CompleteFiletypes	plugged/syntastic/plugin/syntastic.vim	/^function! s:CompleteFiletypes(argLead, cmdLine, cursorPos) abort " {{{2$/;"	f
CompleteR	plugged/Nvim-R/R/common_global.vim	/^function CompleteR(findstart, base)$/;"	f
CompleteTabularizeCommand	plugged/tabular/plugin/Tabular.vim	/^function! s:CompleteTabularizeCommand(argstart, cmdline, cursorpos)$/;"	f
CompleteTaskText	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    CompleteTaskText = Operator  # Chosen to de-emphasize complete tasks$/;"	v	class:TodotxtLexer
CompleteTaskText	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    CompleteTaskText = Operator  # Chosen to de-emphasize complete tasks$/;"	v	class:TodotxtLexer
ConnectTimeout	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,$/;"	i
ConnectTimeout	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/exceptions.py	/^class ConnectTimeout(ConnectionError, Timeout):$/;"	c
ConnectTimeoutError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .packages.urllib3.exceptions import ConnectTimeoutError$/;"	i
ConnectTimeoutError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class ConnectTimeoutError(TimeoutError):$/;"	c
ConnectionCls	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    ConnectionCls = HTTPConnection$/;"	v	class:HTTPConnectionPool
ConnectionCls	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    ConnectionCls = HTTPSConnection$/;"	v	class:HTTPSConnectionPool
ConnectionError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,$/;"	i
ConnectionError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/exceptions.py	/^class ConnectionError(RequestException):$/;"	c
ConnectionError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    ConnectionError = ConnectionError$/;"	v
ConnectionError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    class ConnectionError(Exception):$/;"	c
ConnectionError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^ConnectionError = ProtocolError$/;"	v
ConnectionPool	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^class ConnectionPool(object):$/;"	c
ContainerCls	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    ContainerCls = OrderedDict$/;"	v	class:RecentlyUsedContainer
ContainsNoWildcards	plugged/ingo-library/autoload/ingo/cmdargs/glob.vim	/^function! s:ContainsNoWildcards( fileglob )$/;"	f
ContentDecodingError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/exceptions.py	/^class ContentDecodingError(RequestException, BaseHTTPError):$/;"	c
Context	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    Context = String$/;"	v	class:TodotxtLexer
Context	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    Context = String$/;"	v	class:TodotxtLexer
Control	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    Control = ('considering', 'else', 'error', 'exit', 'from', 'if',$/;"	v	class:AppleScriptLexer
Control	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    Control = ('considering', 'else', 'error', 'exit', 'from', 'if',$/;"	v	class:AppleScriptLexer
Convert	plugged/ingo-library/autoload/ingo/regexp/fromwildcard.vim	/^function! s:Convert( wildcardExpr, ... )$/;"	f
ConvertMagicness	plugged/ingo-library/autoload/ingo/regexp/magic.vim	/^function! s:ConvertMagicness( pattern, sourceSpecialCharacterExpr, targetSpecialCharacterExpr )$/;"	f
CookieConflictError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^class CookieConflictError(RuntimeError):$/;"	c
CoqLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/functional.py	/^from pygments.lexers.theorem import CoqLexer$/;"	i
CoqLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^class CoqLexer(RegexLexer):$/;"	c
CoqLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/functional.py	/^from pygments.lexers.theorem import CoqLexer$/;"	i
CoqLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^class CoqLexer(RegexLexer):$/;"	c
Count	plugged/ingo-library/autoload/ingo/matches.vim	/^function! s:Count()$/;"	f
CountBraces	plugged/Nvim-R/R/common_global.vim	/^function CountBraces(line)$/;"	f
CppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^from pygments.lexers.c_cpp import CppLexer, CLexer$/;"	i
CppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^class CppLexer(CFamilyLexer):$/;"	c
CppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^from pygments.lexers.c_cpp import CLexer, CppLexer$/;"	i
CppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.c_cpp import CLexer, CppLexer$/;"	i
CppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^from pygments.lexers.c_cpp import CLexer, CppLexer$/;"	i
CppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^from pygments.lexers.c_cpp import CLexer, CppLexer$/;"	i
CppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^from pygments.lexers.c_cpp import CppLexer, CLexer$/;"	i
CppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^class CppLexer(CFamilyLexer):$/;"	c
CppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^from pygments.lexers.c_cpp import CLexer, CppLexer$/;"	i
CppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.c_cpp import CLexer, CppLexer$/;"	i
CppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^from pygments.lexers.c_cpp import CLexer, CppLexer$/;"	i
CppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^from pygments.lexers.c_cpp import CLexer, CppLexer$/;"	i
CppObjdumpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^class CppObjdumpLexer(DelegatingLexer):$/;"	c
CppObjdumpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^class CppObjdumpLexer(DelegatingLexer):$/;"	c
CppParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/c_cpp.py	/^class CppParser(TokenParser):$/;"	c
Creator.BufNamePrefix	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreatePrimary	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreatePrimary(name)$/;"	f
Creator.CreateSecondary	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateSecondary(dir)$/;"	f
Creator.New	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.TogglePrimary	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.TogglePrimary(dir)$/;"	f
Creator._bindMappings	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createNERDTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path)$/;"	f
Creator._createTreeWin	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._nextBufferName	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._setCommonBufOptions	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator._tabpagevar	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
Creator._uniq	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
Creator.createMirror	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createPrimary	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createPrimary(name)$/;"	f
Creator.createSecondary	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createSecondary(dir)$/;"	f
Creator.togglePrimary	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.togglePrimary(dir)$/;"	f
CrocLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^from pygments.lexers.d import CrocLexer, MiniDLexer$/;"	i
CrocLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^class CrocLexer(RegexLexer):$/;"	c
CrocLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^from pygments.lexers.d import CrocLexer, MiniDLexer$/;"	i
CrocLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^class CrocLexer(RegexLexer):$/;"	c
CryptolLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^class CryptolLexer(RegexLexer):$/;"	c
CryptolLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^class CryptolLexer(RegexLexer):$/;"	c
Cs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^    Cs = ''  # Jython can't handle isolated surrogates$/;"	v
Cs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^    Cs = eval(r"u'\\ud800-\\udbff\\\\\\udc00\\udc01-\\udfff'")$/;"	v
Cs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^    Cs = ''  # Jython can't handle isolated surrogates$/;"	v
Cs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^    Cs = eval(r"u'\\ud800-\\udbff\\\\\\udc00\\udc01-\\udfff'")$/;"	v
CssDjangoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class CssDjangoLexer(DelegatingLexer):$/;"	c
CssDjangoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class CssDjangoLexer(DelegatingLexer):$/;"	c
CssErbLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class CssErbLexer(DelegatingLexer):$/;"	c
CssErbLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class CssErbLexer(DelegatingLexer):$/;"	c
CssGenshiLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class CssGenshiLexer(DelegatingLexer):$/;"	c
CssGenshiLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class CssGenshiLexer(DelegatingLexer):$/;"	c
CssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^class CssLexer(RegexLexer):$/;"	c
CssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^from pygments.lexers.css import CssLexer, _indentation, _starts_block$/;"	i
CssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^from pygments.lexers.css import CssLexer$/;"	i
CssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^from pygments.lexers.css import CssLexer$/;"	i
CssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^from pygments.lexers.css import CssLexer, SassLexer, ScssLexer$/;"	i
CssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^class CssLexer(RegexLexer):$/;"	c
CssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^from pygments.lexers.css import CssLexer, _indentation, _starts_block$/;"	i
CssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^from pygments.lexers.css import CssLexer$/;"	i
CssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^from pygments.lexers.css import CssLexer$/;"	i
CssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^from pygments.lexers.css import CssLexer, SassLexer, ScssLexer$/;"	i
CssPhpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class CssPhpLexer(DelegatingLexer):$/;"	c
CssPhpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class CssPhpLexer(DelegatingLexer):$/;"	c
CssSmartyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class CssSmartyLexer(DelegatingLexer):$/;"	c
CssSmartyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class CssSmartyLexer(DelegatingLexer):$/;"	c
CudaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^class CudaLexer(CLexer):$/;"	c
CudaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.c_like import ECLexer, ValaLexer, CudaLexer$/;"	i
CudaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^class CudaLexer(CLexer):$/;"	c
CudaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.c_like import ECLexer, ValaLexer, CudaLexer$/;"	i
CustomEncoder	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^class CustomEncoder(json.JSONEncoder):$/;"	c
CypherLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^class CypherLexer(RegexLexer):$/;"	c
CypherLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^class CypherLexer(RegexLexer):$/;"	c
CythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.python import CythonLexer$/;"	i
CythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^class CythonLexer(RegexLexer):$/;"	c
CythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.python import CythonLexer$/;"	i
CythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^class CythonLexer(RegexLexer):$/;"	c
DATATYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_postgres_builtins.py	/^DATATYPES = ($/;"	v
DATATYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    PSEUDO_TYPES, PLPGSQL_KEYWORDS$/;"	i
DATATYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_postgres_builtins.py	/^DATATYPES = ($/;"	v
DATATYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    PSEUDO_TYPES, PLPGSQL_KEYWORDS$/;"	i
DATATYPES_URL	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_postgres_builtins.py	/^    DATATYPES_URL = SOURCE_URL + '\/doc\/src\/sgml\/datatype.sgml'$/;"	v
DATATYPES_URL	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_postgres_builtins.py	/^    DATATYPES_URL = SOURCE_URL + '\/doc\/src\/sgml\/datatype.sgml'$/;"	v
DB_FILE	plugged/vim-wakatime/plugin/packages/wakatime/session_cache.py	/^    DB_FILE = os.path.join(os.path.expanduser('~'), '.wakatime.db')$/;"	v	class:SessionCache
DEBIANTIME	plugged/Nvim-R/Makefile	/^DEBIANTIME=`date -R`$/;"	m
DECLARATIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cl_builtins.py	/^DECLARATIONS = set(($/;"	v
DECLARATIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^            BUILTIN_TYPES, BUILTIN_CLASSES$/;"	i
DECLARATIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cl_builtins.py	/^DECLARATIONS = set(($/;"	v
DECLARATIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^            BUILTIN_TYPES, BUILTIN_CLASSES$/;"	i
DEFAULT_CA_BUNDLE_PATH	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .utils import (DEFAULT_CA_BUNDLE_PATH, get_encoding_from_headers,$/;"	i
DEFAULT_CA_BUNDLE_PATH	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^DEFAULT_CA_BUNDLE_PATH = certs.where()$/;"	v
DEFAULT_CIPHERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^DEFAULT_CIPHERS = ($/;"	v
DEFAULT_ENCODING	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define DEFAULT_ENCODING /;"	d	file:
DEFAULT_ENCODING	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^DEFAULT_ENCODING = "utf-8"$/;"	v
DEFAULT_FONT_NAME_NIX	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^DEFAULT_FONT_NAME_NIX = 'Bitstream Vera Sans Mono'$/;"	v
DEFAULT_FONT_NAME_NIX	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^DEFAULT_FONT_NAME_NIX = 'Bitstream Vera Sans Mono'$/;"	v
DEFAULT_FONT_NAME_WIN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^DEFAULT_FONT_NAME_WIN = 'Courier New'$/;"	v
DEFAULT_FONT_NAME_WIN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^DEFAULT_FONT_NAME_WIN = 'Courier New'$/;"	v
DEFAULT_METHOD_WHITELIST	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/retry.py	/^    DEFAULT_METHOD_WHITELIST = frozenset([$/;"	v	class:Retry
DEFAULT_POOLBLOCK	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^DEFAULT_POOLBLOCK = False$/;"	v
DEFAULT_POOLSIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^DEFAULT_POOLSIZE = 10$/;"	v
DEFAULT_POOL_TIMEOUT	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^DEFAULT_POOL_TIMEOUT = None$/;"	v
DEFAULT_REDIRECT_LIMIT	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^DEFAULT_REDIRECT_LIMIT = 30$/;"	v
DEFAULT_REDIRECT_LIMIT	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from .models import Request, PreparedRequest, DEFAULT_REDIRECT_LIMIT$/;"	i
DEFAULT_RETRIES	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^DEFAULT_RETRIES = 0$/;"	v
DEFAULT_SSL_CIPHER_LIST	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^DEFAULT_SSL_CIPHER_LIST = util.ssl_.DEFAULT_CIPHERS$/;"	v
DEFAULT_TIMEOUT	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/timeout.py	/^    DEFAULT_TIMEOUT = _GLOBAL_DEFAULT_TIMEOUT$/;"	v	class:Timeout
DEFINES	plugged/vimproc.vim/make_msvc.mak	/^DEFINES = -D_CRT_SECURE_NO_WARNINGS=1 -D_BIND_TO_CURRENT_VCLIBS_VERSION=1$/;"	m
DELPHI_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    DELPHI_KEYWORDS = ($/;"	v	class:DelphiLexer
DELPHI_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    DELPHI_KEYWORDS = ($/;"	v	class:DelphiLexer
DESTDIR	plugged/delimitMate/Makefile	/^DESTDIR  =  $(HOME)\/.vim$/;"	m
DIRECTIVES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    DIRECTIVES = set(($/;"	v	class:DelphiLexer
DIRECTIVES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    DIRECTIVES = set(($/;"	v	class:DelphiLexer
DISTRIBUTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_stan_builtins.py	/^DISTRIBUTIONS = ($/;"	v
DISTRIBUTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_stan_builtins.py	/^DISTRIBUTIONS = ($/;"	v
DLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^from pygments.lexers.d import DLexer$/;"	i
DLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.d import DLexer$/;"	i
DLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^class DLexer(RegexLexer):$/;"	c
DLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^from pygments.lexers.d import DLexer$/;"	i
DLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^from pygments.lexers.d import DLexer$/;"	i
DLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.d import DLexer$/;"	i
DLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^class DLexer(RegexLexer):$/;"	c
DLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^from pygments.lexers.d import DLexer$/;"	i
DOC	plugged/delimitMate/Makefile	/^DOC      =  $(wildcard doc\/*.txt)$/;"	m
DONT_KNOW	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^DONT_KNOW = -1$/;"	v
DObjdumpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^class DObjdumpLexer(DelegatingLexer):$/;"	c
DObjdumpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^class DObjdumpLexer(DelegatingLexer):$/;"	c
DPATCH_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^    DPATCH_KEYWORDS = ('hunk', 'addfile', 'adddir', 'rmfile', 'rmdir', 'move',$/;"	v	class:DarcsPatchLexer
DPATCH_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^    DPATCH_KEYWORDS = ('hunk', 'addfile', 'adddir', 'rmfile', 'rmdir', 'move',$/;"	v	class:DarcsPatchLexer
DSTDIFF	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^DSTDIFF = DSTOFFSET - STDOFFSET$/;"	v
DSTDIFF	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^DSTDIFF = DSTOFFSET - STDOFFSET$/;"	v
DSTEND	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^DSTEND = datetime(1, 10, 25, 1)$/;"	v
DSTEND	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^DSTEND = datetime(1, 10, 25, 1)$/;"	v
DSTOFFSET	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^    DSTOFFSET = STDOFFSET$/;"	v
DSTOFFSET	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^    DSTOFFSET = timedelta(seconds = -_time.altzone)$/;"	v
DSTOFFSET	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^    DSTOFFSET = STDOFFSET$/;"	v
DSTOFFSET	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^    DSTOFFSET = timedelta(seconds = -_time.altzone)$/;"	v
DSTSTART	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^DSTSTART = datetime(1, 4, 1, 2)$/;"	v
DSTSTART	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^DSTSTART = datetime(1, 4, 1, 2)$/;"	v
DarcsPatchLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^class DarcsPatchLexer(RegexLexer):$/;"	c
DarcsPatchLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^from pygments.lexers.diff import DiffLexer, DarcsPatchLexer$/;"	i
DarcsPatchLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^class DarcsPatchLexer(RegexLexer):$/;"	c
DarcsPatchLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^from pygments.lexers.diff import DiffLexer, DarcsPatchLexer$/;"	i
Dark	configs/gui.vim	/^command! Dark execute "LuciusDarkLowContrast"$/;"	c
DartLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^class DartLexer(RegexLexer):$/;"	c
DartLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^    DartLexer, TypeScriptLexer, LassoLexer, ObjectiveJLexer, CoffeeScriptLexer$/;"	i
DartLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^class DartLexer(RegexLexer):$/;"	c
DartLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^    DartLexer, TypeScriptLexer, LassoLexer, ObjectiveJLexer, CoffeeScriptLexer$/;"	i
Date	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    Date = Generic.Subheading$/;"	v	class:TodotxtLexer
Date	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    Date = Generic.Subheading$/;"	v	class:TodotxtLexer
DeadDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^class DeadDict(dict):$/;"	c
DeadDuck	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^class DeadDuck(object):$/;"	c
DebianControlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^class DebianControlLexer(RegexLexer):$/;"	c
DebianControlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^from pygments.lexers.installers import DebianControlLexer, SourcesListLexer$/;"	i
DebianControlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^class DebianControlLexer(RegexLexer):$/;"	c
DebianControlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^from pygments.lexers.installers import DebianControlLexer, SourcesListLexer$/;"	i
Decimal	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^from decimal import Decimal$/;"	i
Decimal	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *Decimal;$/;"	m	struct:_PyEncoderObject	file:
Decimal	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decimal.py	/^from decimal import Decimal$/;"	i
Decimal	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_subclass.py	/^from decimal import Decimal$/;"	i
Declarations	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    Declarations = ('global', 'local', 'prop(erty)?', 'set', 'get')$/;"	v	class:AppleScriptLexer
Declarations	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    Declarations = ('global', 'local', 'prop(erty)?', 'set', 'get')$/;"	v	class:AppleScriptLexer
DecodeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class DecodeError(HTTPError):$/;"	c
DefRuby	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:DefRuby()$/;"	f
DefaultIsInRCode	plugged/Nvim-R/ftplugin/r_nvimr.vim	/^function! DefaultIsInRCode(vrb)$/;"	f
DefaultStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/default.py	/^class DefaultStyle(Style):$/;"	c
DefaultStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/default.py	/^class DefaultStyle(Style):$/;"	c
DeflateDecoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^class DeflateDecoder(object):$/;"	c
DelayedFillLibList	plugged/Nvim-R/R/common_global.vim	/^function DelayedFillLibList()$/;"	f
DelegatingLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^class DelegatingLexer(Lexer):$/;"	c
DelegatingLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, DelegatingLexer$/;"	i
DelegatingLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    using, this, default$/;"	i
DelegatingLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    using, this, do_insertions, default, words$/;"	i
DelegatingLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    include, bygroups, using$/;"	i
DelegatingLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    include, using, this, default, combined$/;"	i
DelegatingLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^class DelegatingLexer(Lexer):$/;"	c
DelegatingLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, DelegatingLexer$/;"	i
DelegatingLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    using, this, default$/;"	i
DelegatingLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    using, this, do_insertions, default, words$/;"	i
DelegatingLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    include, bygroups, using$/;"	i
DelegatingLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    include, using, this, default, combined$/;"	i
DelimitMateOff	plugged/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateOff call s:setup(0)$/;"	c
DelimitMateOn	plugged/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateOn call s:setup(1)$/;"	c
DelimitMateReload	plugged/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateReload call s:setup(1)$/;"	c
DelimitMateSwitch	plugged/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateSwitch call s:setup(2)$/;"	c
DelimitMateTest	plugged/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateTest call s:test()$/;"	c
DelphiLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.pascal import DelphiLexer, Modula2Lexer, AdaLexer$/;"	i
DelphiLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^class DelphiLexer(Lexer):$/;"	c
DelphiLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.pascal import DelphiLexer, Modula2Lexer, AdaLexer$/;"	i
DelphiLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^class DelphiLexer(Lexer):$/;"	c
DependencyParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^class DependencyParser(object):$/;"	c
DependencyParser	plugged/vim-wakatime/plugin/packages/wakatime/stats.py	/^from .languages import DependencyParser$/;"	i
DetectCoffee	plugged/vim-coffee-script/ftdetect/coffee.vim	/^function! s:DetectCoffee()$/;"	f
DgLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^    PythonTracebackLexer, Python3Lexer, Python3TracebackLexer, DgLexer$/;"	i
DgLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^class DgLexer(RegexLexer):$/;"	c
DgLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^    PythonTracebackLexer, Python3Lexer, Python3TracebackLexer, DgLexer$/;"	i
DgLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^class DgLexer(RegexLexer):$/;"	c
DictForJson	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^class DictForJson(dict):$/;"	c
DictMixin	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^from UserDict import DictMixin$/;"	i
DictMixin	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^    from UserDict import DictMixin$/;"	i
DictMixin	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^    from collections import Mapping as DictMixin$/;"	i
DictMixin	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^    from UserDict import DictMixin$/;"	i
DictMixin	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^    from collections import Mapping as DictMixin$/;"	i
DictMixin	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^from UserDict import DictMixin$/;"	i
Diff	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(vert,...) abort$/;"	f
DiffLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^class DiffLexer(RegexLexer):$/;"	c
DiffLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^from pygments.lexers.diff import DiffLexer, DarcsPatchLexer$/;"	i
DiffLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^class DiffLexer(RegexLexer):$/;"	c
DiffLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^from pygments.lexers.diff import DiffLexer, DarcsPatchLexer$/;"	i
DirComplete	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
Directive	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^from sphinx.util.compat import Directive$/;"	i
Directive	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^from sphinx.util.compat import Directive$/;"	i
Dispatch	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Dispatch(bang, args)$/;"	f
DisplayArgs	plugged/Nvim-R/R/common_global.vim	/^function DisplayArgs()$/;"	f
DjangoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class DjangoLexer(RegexLexer):$/;"	c
DjangoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class DjangoLexer(RegexLexer):$/;"	c
DocTestSuite	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_docs.py	/^from doctest import DocTestSuite$/;"	i
DocTestSuite	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_docs.py	/^from doctest import DocTestSuite$/;"	i
DockerLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^class DockerLexer(RegexLexer):$/;"	c
DockerLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^class DockerLexer(RegexLexer):$/;"	c
DstTzInfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^from pytz.tzinfo import DstTzInfo, StaticTzInfo$/;"	i
DstTzInfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^from pytz.tzinfo import StaticTzInfo, DstTzInfo, memorized_ttinfo$/;"	i
DstTzInfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^class DstTzInfo(BaseTzInfo):$/;"	c
DstTzInfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^from pytz.tzinfo import DstTzInfo, StaticTzInfo$/;"	i
DstTzInfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^from pytz.tzinfo import StaticTzInfo, DstTzInfo, memorized_ttinfo$/;"	i
DstTzInfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^class DstTzInfo(BaseTzInfo):$/;"	c
DstTzInfoTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class DstTzInfoTestCase(unittest.TestCase, BaseTzInfoTestCase):$/;"	c
DstTzInfoTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class DstTzInfoTestCase(unittest.TestCase, BaseTzInfoTestCase):$/;"	c
DtdLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^class DtdLexer(RegexLexer):$/;"	c
DtdLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^    HamlLexer, ScamlLexer, JadeLexer$/;"	i
DtdLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^class DtdLexer(RegexLexer):$/;"	c
DtdLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^    HamlLexer, ScamlLexer, JadeLexer$/;"	i
DuckPoint	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^class DuckPoint(object):$/;"	c
DuckValue	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^class DuckValue(object):$/;"	c
DuelLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^from pygments.lexers.webmisc import DuelLexer, XQueryLexer, SlimLexer, QmlLexer$/;"	i
DuelLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^class DuelLexer(RegexLexer):$/;"	c
DuelLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^from pygments.lexers.webmisc import DuelLexer, XQueryLexer, SlimLexer, QmlLexer$/;"	i
DuelLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^class DuelLexer(RegexLexer):$/;"	c
DummyConnection	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^class DummyConnection(object):$/;"	c
Dump	plugged/vim-gitgutter/test/helper.vim	/^function! Dump(text, filename)$/;"	f
DumpGitDiff	plugged/vim-gitgutter/test/helper.vim	/^function! DumpGitDiff(filename)$/;"	f
DumpGitDiffStaged	plugged/vim-gitgutter/test/helper.vim	/^function! DumpGitDiffStaged(filename)$/;"	f
DumpSigns	plugged/vim-gitgutter/test/helper.vim	/^function! DumpSigns(filename)$/;"	f
DylanConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.dylan import DylanLexer, DylanLidLexer, DylanConsoleLexer$/;"	i
DylanConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^class DylanConsoleLexer(Lexer):$/;"	c
DylanConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.dylan import DylanLexer, DylanLidLexer, DylanConsoleLexer$/;"	i
DylanConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^class DylanConsoleLexer(Lexer):$/;"	c
DylanLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.dylan import DylanLexer, DylanLidLexer, DylanConsoleLexer$/;"	i
DylanLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^class DylanLexer(RegexLexer):$/;"	c
DylanLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.dylan import DylanLexer, DylanLidLexer, DylanConsoleLexer$/;"	i
DylanLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^class DylanLexer(RegexLexer):$/;"	c
DylanLidLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.dylan import DylanLexer, DylanLidLexer, DylanConsoleLexer$/;"	i
DylanLidLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^class DylanLidLexer(RegexLexer):$/;"	c
DylanLidLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.dylan import DylanLexer, DylanLidLexer, DylanConsoleLexer$/;"	i
DylanLidLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^class DylanLidLexer(RegexLexer):$/;"	c
E0611	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    TerminalFormatter  # pylint:disable-msg=E0611$/;"	i
E0611	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    TerminalFormatter  # pylint:disable-msg=E0611$/;"	i
ECLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^class ECLLexer(RegexLexer):$/;"	c
ECLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.ecl import ECLLexer$/;"	i
ECLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^class ECLLexer(RegexLexer):$/;"	c
ECLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.ecl import ECLLexer$/;"	i
ECLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^class ECLexer(CLexer):$/;"	c
ECLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.c_like import ECLexer, ValaLexer, CudaLexer$/;"	i
ECLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^class ECLexer(CLexer):$/;"	c
ECLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.c_like import ECLexer, ValaLexer, CudaLexer$/;"	i
ENOUGH_DATA_THRESHOLD	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^ENOUGH_DATA_THRESHOLD = 1024$/;"	v
ENOUGH_REL_THRESHOLD	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^ENOUGH_REL_THRESHOLD = 100$/;"	v
ERROR	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^ERROR = Token.Error$/;"	v
ERROR	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^ERROR = Token.Error$/;"	v
ERR_ARRAY_DELIMITER	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_ARRAY_DELIMITER /;"	d	file:
ERR_ARRAY_VALUE_FIRST	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_ARRAY_VALUE_FIRST /;"	d	file:
ERR_EXPECTING_VALUE	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_EXPECTING_VALUE /;"	d	file:
ERR_OBJECT_DELIMITER	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_OBJECT_DELIMITER /;"	d	file:
ERR_OBJECT_PROPERTY	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_OBJECT_PROPERTY /;"	d	file:
ERR_OBJECT_PROPERTY_DELIMITER	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_OBJECT_PROPERTY_DELIMITER /;"	d	file:
ERR_OBJECT_PROPERTY_FIRST	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_OBJECT_PROPERTY_FIRST /;"	d	file:
ERR_STRING_CONTROL	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_STRING_CONTROL /;"	d	file:
ERR_STRING_ESC1	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_STRING_ESC1 /;"	d	file:
ERR_STRING_ESC4	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_STRING_ESC4 /;"	d	file:
ERR_STRING_UNTERMINATED	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_STRING_UNTERMINATED /;"	d	file:
ESCAPE	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^ESCAPE = re.compile(u'[\\\\x00-\\\\x1f\\\\\\\\"\\\\b\\\\f\\\\n\\\\r\\\\t\\u2028\\u2029]')$/;"	v
ESCAPE_ASCII	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^ESCAPE_ASCII = re.compile(r'([\\\\"]|[^\\ -~])')$/;"	v
ESCAPE_DCT	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^ESCAPE_DCT = {$/;"	v
EUCJPCharLenTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^EUCJPCharLenTable = (2, 2, 2, 3, 1, 0)$/;"	v
EUCJPContextAnalysis	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/eucjpprober.py	/^from .jpcntx import EUCJPContextAnalysis$/;"	i
EUCJPContextAnalysis	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^class EUCJPContextAnalysis(JapaneseContextAnalysis):$/;"	c
EUCJPDistributionAnalysis	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^class EUCJPDistributionAnalysis(CharDistributionAnalysis):$/;"	c
EUCJPDistributionAnalysis	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/eucjpprober.py	/^from .chardistribution import EUCJPDistributionAnalysis$/;"	i
EUCJPProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/eucjpprober.py	/^class EUCJPProber(MultiByteCharSetProber):$/;"	c
EUCJPProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcsgroupprober.py	/^from .eucjpprober import EUCJPProber$/;"	i
EUCJPSMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/eucjpprober.py	/^from .mbcssm import EUCJPSMModel$/;"	i
EUCJPSMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^EUCJPSMModel = {'classTable': EUCJP_cls,$/;"	v
EUCJP_cls	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^EUCJP_cls = ($/;"	v
EUCJP_st	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^EUCJP_st = ($/;"	v
EUCKRCharLenTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^EUCKRCharLenTable = (0, 1, 2, 0)$/;"	v
EUCKRCharToFreqOrder	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^from .euckrfreq import (EUCKRCharToFreqOrder, EUCKR_TABLE_SIZE,$/;"	i
EUCKRCharToFreqOrder	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euckrfreq.py	/^  13, 130, 120,1396, 481,1719,1720, 328, 609, 212,1721, 707, 400, 299,1722,  87,$/;"	v
EUCKRDistributionAnalysis	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^class EUCKRDistributionAnalysis(CharDistributionAnalysis):$/;"	c
EUCKRDistributionAnalysis	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/cp949prober.py	/^from .chardistribution import EUCKRDistributionAnalysis$/;"	i
EUCKRDistributionAnalysis	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euckrprober.py	/^from .chardistribution import EUCKRDistributionAnalysis$/;"	i
EUCKRProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euckrprober.py	/^class EUCKRProber(MultiByteCharSetProber):$/;"	c
EUCKRProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcsgroupprober.py	/^from .euckrprober import EUCKRProber$/;"	i
EUCKRSMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euckrprober.py	/^from .mbcssm import EUCKRSMModel$/;"	i
EUCKRSMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^EUCKRSMModel = {'classTable': EUCKR_cls,$/;"	v
EUCKR_TABLE_SIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^from .euckrfreq import (EUCKRCharToFreqOrder, EUCKR_TABLE_SIZE,$/;"	i
EUCKR_TABLE_SIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euckrfreq.py	/^EUCKR_TABLE_SIZE = 2352$/;"	v
EUCKR_TYPICAL_DISTRIBUTION_RATIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euckrfreq.py	/^EUCKR_TYPICAL_DISTRIBUTION_RATIO = 6.0$/;"	v
EUCKR_cls	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^EUCKR_cls  = ($/;"	v
EUCKR_st	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^EUCKR_st = ($/;"	v
EUCTWCharLenTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^EUCTWCharLenTable = (0, 0, 1, 2, 2, 2, 3)$/;"	v
EUCTWCharToFreqOrder	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^from .euctwfreq import (EUCTWCharToFreqOrder, EUCTW_TABLE_SIZE,$/;"	i
EUCTWCharToFreqOrder	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euctwfreq.py	/^EUCTWCharToFreqOrder = ($/;"	v
EUCTWDistributionAnalysis	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^class EUCTWDistributionAnalysis(CharDistributionAnalysis):$/;"	c
EUCTWDistributionAnalysis	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euctwprober.py	/^from .chardistribution import EUCTWDistributionAnalysis$/;"	i
EUCTWProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euctwprober.py	/^class EUCTWProber(MultiByteCharSetProber):$/;"	c
EUCTWProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcsgroupprober.py	/^from .euctwprober import EUCTWProber$/;"	i
EUCTWSMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euctwprober.py	/^from .mbcssm import EUCTWSMModel$/;"	i
EUCTWSMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^EUCTWSMModel = {'classTable': EUCTW_cls,$/;"	v
EUCTW_TABLE_SIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^from .euctwfreq import (EUCTWCharToFreqOrder, EUCTW_TABLE_SIZE,$/;"	i
EUCTW_TABLE_SIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euctwfreq.py	/^EUCTW_TABLE_SIZE = 8102$/;"	v
EUCTW_TYPICAL_DISTRIBUTION_RATIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euctwfreq.py	/^EUCTW_TYPICAL_DISTRIBUTION_RATIO = 0.75$/;"	v
EUCTW_cls	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^EUCTW_cls = ($/;"	v
EUCTW_st	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^EUCTW_st = ($/;"	v
EVINCE_IFACE	plugged/Nvim-R/R/synctex_evince_backward.py	/^EVINCE_IFACE = "org.gnome.evince.Application"$/;"	v
EVINCE_IFACE	plugged/Nvim-R/R/synctex_evince_forward.py	/^EVINCE_IFACE = "org.gnome.evince.Application"$/;"	v
EVINCE_PATH	plugged/Nvim-R/R/synctex_evince_backward.py	/^EVINCE_PATH = "\/org\/gnome\/evince\/Evince"$/;"	v
EVINCE_PATH	plugged/Nvim-R/R/synctex_evince_forward.py	/^EVINCE_PATH = "\/org\/gnome\/evince\/Evince"$/;"	v
EV_DAEMON_IFACE	plugged/Nvim-R/R/synctex_evince_backward.py	/^EV_DAEMON_IFACE = "org.gnome.evince.Daemon"$/;"	v
EV_DAEMON_IFACE	plugged/Nvim-R/R/synctex_evince_forward.py	/^EV_DAEMON_IFACE = "org.gnome.evince.Daemon"$/;"	v
EV_DAEMON_NAME	plugged/Nvim-R/R/synctex_evince_backward.py	/^EV_DAEMON_NAME = "org.gnome.evince.Daemon"$/;"	v
EV_DAEMON_NAME	plugged/Nvim-R/R/synctex_evince_forward.py	/^EV_DAEMON_NAME = "org.gnome.evince.Daemon"$/;"	v
EV_DAEMON_PATH	plugged/Nvim-R/R/synctex_evince_backward.py	/^EV_DAEMON_PATH = "\/org\/gnome\/evince\/Daemon"$/;"	v
EV_DAEMON_PATH	plugged/Nvim-R/R/synctex_evince_forward.py	/^EV_DAEMON_PATH = "\/org\/gnome\/evince\/Daemon"$/;"	v
EV_WINDOW_IFACE	plugged/Nvim-R/R/synctex_evince_backward.py	/^EV_WINDOW_IFACE = "org.gnome.evince.Window"$/;"	v
EV_WINDOW_IFACE	plugged/Nvim-R/R/synctex_evince_forward.py	/^EV_WINDOW_IFACE = "org.gnome.evince.Window"$/;"	v
EXPECTED_VERSION	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^EXPECTED_VERSION='2013d'$/;"	v
EXPECTED_VERSION	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^EXPECTED_VERSION='2013d'$/;"	v
EXPORT	plugged/vimproc.vim/autoload/proc_w32.c	/^# define EXPORT /;"	d	file:
EXPORT	plugged/vimproc.vim/autoload/proc_w32.c	/^# define EXPORT$/;"	d	file:
EXTRA_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    EXTRA_KEYWORDS = set(('join', 'split', 'reverse', 'transpose', 'width',$/;"	v	class:CryptolLexer
EXTRA_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    EXTRA_KEYWORDS = set(($/;"	v	class:XsltLexer
EXTRA_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    EXTRA_KEYWORDS = set(($/;"	v	class:NumPyLexer
EXTRA_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    EXTRA_KEYWORDS = set(('join', 'split', 'reverse', 'transpose', 'width',$/;"	v	class:CryptolLexer
EXTRA_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    EXTRA_KEYWORDS = set(($/;"	v	class:XsltLexer
EXTRA_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    EXTRA_KEYWORDS = set(($/;"	v	class:NumPyLexer
Eastern	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^Eastern  = USTimeZone(-5, "Eastern",  "EST", "EDT")$/;"	v
Eastern	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^Eastern  = USTimeZone(-5, "Eastern",  "EST", "EDT")$/;"	v
EbnfLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class EbnfLexer(RegexLexer):$/;"	c
EbnfLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class EbnfLexer(RegexLexer):$/;"	c
EchoEmulatedConfirm	plugged/ingo-library/autoload/ingo/query.vim	/^function! s:EchoEmulatedConfirm( msg, choices, defaultIndex )$/;"	f
Edit	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
EditClasspath	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditClasspath() " {{{2$/;"	f
EditComplete	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditConfig	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditConfig() " {{{2$/;"	f
EditRunComplete	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
EiffelLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/eiffel.py	/^class EiffelLexer(RegexLexer):$/;"	c
EiffelLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/eiffel.py	/^class EiffelLexer(RegexLexer):$/;"	c
ElixirConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^class ElixirConsoleLexer(Lexer):$/;"	c
ElixirConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/functional.py	/^    ElixirConsoleLexer, ElixirLexer$/;"	i
ElixirConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^class ElixirConsoleLexer(Lexer):$/;"	c
ElixirConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/functional.py	/^    ElixirConsoleLexer, ElixirLexer$/;"	i
ElixirLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^class ElixirLexer(RegexLexer):$/;"	c
ElixirLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/functional.py	/^    ElixirConsoleLexer, ElixirLexer$/;"	i
ElixirLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^class ElixirLexer(RegexLexer):$/;"	c
ElixirLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/functional.py	/^    ElixirConsoleLexer, ElixirLexer$/;"	i
EmacsStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/emacs.py	/^class EmacsStyle(Style):$/;"	c
EmacsStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/emacs.py	/^class EmacsStyle(Style):$/;"	c
Emmet	plugged/emmet-vim/plugin/emmet.vim	/^  command! -nargs=1 Emmet call emmet#expandAbbr(4, <q-args>)$/;"	c
EmmetInstall	plugged/emmet-vim/plugin/emmet.vim	/^command! -nargs=0 -bar EmmetInstall call <SID>install_plugin(get(g:, 'user_emmet_mode', 'a'), 1)$/;"	c
EmmetUnitTest	plugged/emmet-vim/unittest.vim	/^command! -nargs=* -complete=customlist,<SID>emmet_unittest_complete EmmetUnitTest call s:do_tests(<f-args>)$/;"	c
Empty	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    from Queue import LifoQueue, Empty, Full$/;"	i
Empty	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    from queue import LifoQueue, Empty, Full$/;"	i
EmptyPoolError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class EmptyPoolError(PoolError):$/;"	c
EmulateSubmatch	plugged/ingo-library/autoload/ingo/subst/expr/emulation.vim	/^function! s:EmulateSubmatch( originalExpr, expr, pat, sub )$/;"	f
Encode	plugged/ingo-library/autoload/ingo/codec/URL.vim	/^function! s:Encode( chars, text )$/;"	f
EndOfText	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/scanner.py	/^class EndOfText(RuntimeError):$/;"	c
EndOfText	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/scanner.py	/^class EndOfText(RuntimeError):$/;"	c
EnoughTimePassed	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:EnoughTimePassed(now, last)$/;"	f
ErbLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class ErbLexer(Lexer):$/;"	c
ErbLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class ErbLexer(Lexer):$/;"	c
ErlangLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^class ErlangLexer(RegexLexer):$/;"	c
ErlangLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/functional.py	/^    ElixirConsoleLexer, ElixirLexer$/;"	i
ErlangLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^class ErlangLexer(RegexLexer):$/;"	c
ErlangLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/functional.py	/^    ElixirConsoleLexer, ElixirLexer$/;"	i
ErlangShellLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^class ErlangShellLexer(Lexer):$/;"	c
ErlangShellLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/functional.py	/^    ElixirConsoleLexer, ElixirLexer$/;"	i
ErlangShellLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^class ErlangShellLexer(Lexer):$/;"	c
ErlangShellLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/functional.py	/^    ElixirConsoleLexer, ElixirLexer$/;"	i
ErrMsg	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
Error	plugged/vim-go/autoload/go/import.vim	/^function! s:Error(s)$/;"	f
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    string_to_tokentype$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^from pygments.token import Error, Text, Other, _TokenType$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    Number, Punctuation, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    Number, Punctuation, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^    Number, Punctuation, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    Number, Punctuation, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    Number, Punctuation, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    Number, Punctuation, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    Number, Punctuation, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    Number, Punctuation, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    Number, Punctuation, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^from pygments.token import Token, Error, Text$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/autumn.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/borland.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/bw.py	/^     Operator, Generic$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/colorful.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/default.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/emacs.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/friendly.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/manni.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/murphy.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/pastie.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/perldoc.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/trac.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vs.py	/^     Operator, Generic$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/xcode.py	/^     Number, Operator, Literal$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^Error       = Token.Error$/;"	v
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    string_to_tokentype$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^from pygments.token import Error, Text, Other, _TokenType$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    Number, Punctuation, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    Number, Punctuation, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^    Number, Punctuation, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    Number, Punctuation, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    Number, Punctuation, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    Number, Punctuation, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    Number, Punctuation, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    Number, Punctuation, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    Number, Punctuation, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^from pygments.token import Token, Error, Text$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/autumn.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/borland.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/bw.py	/^     Operator, Generic$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/colorful.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/default.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/emacs.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/friendly.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/manni.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/murphy.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/pastie.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/perldoc.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/trac.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vs.py	/^     Operator, Generic$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/xcode.py	/^     Number, Operator, Literal$/;"	i
Error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^Error       = Token.Error$/;"	v
ErrorToken	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^class ErrorToken(Exception):$/;"	c
ErrorToken	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^class ErrorToken(Exception):$/;"	c
Errors	plugged/syntastic/plugin/syntastic.vim	/^command! Errors              call SyntasticErrors()$/;"	c
EscCharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escprober.py	/^class EscCharSetProber(CharSetProber):$/;"	c
EscCharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^from .escprober import EscCharSetProber  # ISO-2122, etc.$/;"	i
Escape	plugged/ingo-library/autoload/ingo/smartcase.vim	/^function! s:Escape( atom )$/;"	f
Escape	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^Escape      = Token.Escape$/;"	v
Escape	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^Escape      = Token.Escape$/;"	v
EscapeArg	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:EscapeArg(arg)$/;"	f
EscapeSequence	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal256.py	/^class EscapeSequence:$/;"	c
EscapeSequence	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal256.py	/^class EscapeSequence:$/;"	c
Event.New	plugged/nerdtree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
EvinceWindowProxy	plugged/Nvim-R/R/synctex_evince_backward.py	/^class EvinceWindowProxy:$/;"	c
EvinceWindowProxy	plugged/Nvim-R/R/synctex_evince_forward.py	/^class EvinceWindowProxy:$/;"	c
Evince_Again	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! Evince_Again()$/;"	f
EvoqueHtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class EvoqueHtmlLexer(DelegatingLexer):$/;"	c
EvoqueHtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class EvoqueHtmlLexer(DelegatingLexer):$/;"	c
EvoqueHtmlParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^class EvoqueHtmlParser(HtmlDjangoParser):$/;"	c
EvoqueLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class EvoqueLexer(RegexLexer):$/;"	c
EvoqueLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class EvoqueLexer(RegexLexer):$/;"	c
EvoqueXmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class EvoqueXmlLexer(DelegatingLexer):$/;"	c
EvoqueXmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class EvoqueXmlLexer(DelegatingLexer):$/;"	c
ExecuteInTree	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
ExitRemoteProcess	plugged/vimproc.vim/autoload/proc_w32.c	/^static BOOL ExitRemoteProcess(HANDLE hProcess, UINT_PTR uExitCode)$/;"	f	file:
ExitingOneLineScope	plugged/vim-javascript/indent/javascript.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
ExtendedRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^class ExtendedRegexLexer(RegexLexer):$/;"	c
ExtendedRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    default, words$/;"	i
ExtendedRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    include, bygroups, inherit$/;"	i
ExtendedRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    default$/;"	i
ExtendedRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    default, using$/;"	i
ExtendedRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    using, this, default, words$/;"	i
ExtendedRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    bygroups, default, LexerContext, do_insertions, words$/;"	i
ExtendedRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^from pygments.lexer import ExtendedRegexLexer, words$/;"	i
ExtendedRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    default, using$/;"	i
ExtendedRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^class ExtendedRegexLexer(RegexLexer):$/;"	c
ExtendedRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    default, words$/;"	i
ExtendedRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    include, bygroups, inherit$/;"	i
ExtendedRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    default$/;"	i
ExtendedRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    default, using$/;"	i
ExtendedRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    using, this, default, words$/;"	i
ExtendedRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    bygroups, default, LexerContext, do_insertions, words$/;"	i
ExtendedRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^from pygments.lexer import ExtendedRegexLexer, words$/;"	i
ExtendedRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    default, using$/;"	i
ExternOBQuit	plugged/Nvim-R/ftplugin/rbrowser.vim	/^function! ExternOBQuit()$/;"	f
ExtraBrackets	plugged/vim-ruby/indent/ruby.vim	/^function s:ExtraBrackets(lnum)$/;"	f
ExtraMappings	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:ExtraMappings() "{{{$/;"	f
FILENAME	plugged/delimitMate/Makefile	/^FILENAME =  $(NAME)-$(VERSION)$/;"	m
FILES	plugged/vim-wakatime/plugin/packages/wakatime/languages/data.py	/^FILES = {$/;"	v
FILES	plugged/vim-wakatime/plugin/packages/wakatime/languages/unknown.py	/^FILES = {$/;"	v
FILTERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^FILTERS = {$/;"	v
FILTERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^        from pygments.filters import FILTERS$/;"	i
FILTERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^FILTERS = {$/;"	v
FILTERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^        from pygments.filters import FILTERS$/;"	i
FILTER_ENTRY_POINT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/plugin.py	/^FILTER_ENTRY_POINT = 'pygments.filters'$/;"	v
FILTER_ENTRY_POINT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/plugin.py	/^FILTER_ENTRY_POINT = 'pygments.filters'$/;"	v
FINAL_KAF	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^FINAL_KAF = 0xea$/;"	v
FINAL_MEM	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^FINAL_MEM = 0xed$/;"	v
FINAL_NUN	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^FINAL_NUN = 0xef$/;"	v
FINAL_PE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^FINAL_PE = 0xf3$/;"	v
FINAL_TSADI	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^FINAL_TSADI = 0xf5$/;"	v
FIRST_ELEMENT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/regexopt.py	/^FIRST_ELEMENT = itemgetter(0)$/;"	v
FIRST_ELEMENT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/regexopt.py	/^FIRST_ELEMENT = itemgetter(0)$/;"	v
FLAGS	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^FLAGS = re.VERBOSE | re.MULTILINE | re.DOTALL$/;"	v
FLOAT_REPR	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^FLOAT_REPR = repr$/;"	v
FOREGROUND	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^FOREGROUND = "#e7e9db"$/;"	v
FOREGROUND	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^FOREGROUND = "#2f1e2e"$/;"	v
FOREGROUND	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^FOREGROUND = "#e7e9db"$/;"	v
FOREGROUND	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^FOREGROUND = "#2f1e2e"$/;"	v
FORMATTERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^from pygments.formatters._mapping import FORMATTERS$/;"	i
FORMATTERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/_mapping.py	/^FORMATTERS = {$/;"	v
FORMATTERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^        from pygments.formatters import FORMATTERS$/;"	i
FORMATTERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^from pygments.formatters._mapping import FORMATTERS$/;"	i
FORMATTERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/_mapping.py	/^FORMATTERS = {$/;"	v
FORMATTERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^        from pygments.formatters import FORMATTERS$/;"	i
FORMATTER_ENTRY_POINT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/plugin.py	/^FORMATTER_ENTRY_POINT = 'pygments.formatters'$/;"	v
FORMATTER_ENTRY_POINT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/plugin.py	/^FORMATTER_ENTRY_POINT = 'pygments.formatters'$/;"	v
FRAMEWORKS_PATH	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^    FRAMEWORKS_PATH = '\/Applications\/Xcode.app\/Contents\/Developer\/Platforms\/iPhoneOS.platform\/Developer\/SDKs\/iPhoneOS8.0.sdk\/System\/Library\/Frameworks\/'$/;"	v
FRAMEWORKS_PATH	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^    FRAMEWORKS_PATH = '\/Applications\/Xcode.app\/Contents\/Developer\/Platforms\/iPhoneOS.platform\/Developer\/SDKs\/iPhoneOS8.0.sdk\/System\/Library\/Frameworks\/'$/;"	v
FREE_PASCAL_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    FREE_PASCAL_KEYWORDS = ($/;"	v	class:DelphiLexer
FREE_PASCAL_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    FREE_PASCAL_KEYWORDS = ($/;"	v	class:DelphiLexer
FREQ_CAT_NUM	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^FREQ_CAT_NUM = 4$/;"	v
FSharpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^class FSharpLexer(RegexLexer):$/;"	c
FSharpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^class FSharpLexer(RegexLexer):$/;"	c
FUNCTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_sourcemod_builtins.py	/^FUNCTIONS = ($/;"	v
FUNCTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_stan_builtins.py	/^FUNCTIONS = ($/;"	v
FUNCTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^            from pygments.lexers._sourcemod_builtins import FUNCTIONS$/;"	i
FUNCTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_sourcemod_builtins.py	/^FUNCTIONS = ($/;"	v
FUNCTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_stan_builtins.py	/^FUNCTIONS = ($/;"	v
FUNCTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^            from pygments.lexers._sourcemod_builtins import FUNCTIONS$/;"	i
FUNCTION_MODIFIERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    FUNCTION_MODIFIERS = set(($/;"	v	class:DelphiLexer
FUNCTION_MODIFIERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    FUNCTION_MODIFIERS = set(($/;"	v	class:DelphiLexer
FactorLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^from pygments.lexers.factor import FactorLexer$/;"	i
FactorLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^class FactorLexer(RegexLexer):$/;"	c
FactorLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^from pygments.lexers.factor import FactorLexer$/;"	i
FactorLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^class FactorLexer(RegexLexer):$/;"	c
FancyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^from pygments.lexers.ruby import RubyLexer, RubyConsoleLexer, FancyLexer$/;"	i
FancyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^class FancyLexer(RegexLexer):$/;"	c
FancyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^from pygments.lexers.ruby import RubyLexer, RubyConsoleLexer, FancyLexer$/;"	i
FancyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^class FancyLexer(RegexLexer):$/;"	c
FancyURLopener	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_sourcemod_builtins.py	/^        from urllib import FancyURLopener$/;"	i
FancyURLopener	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_sourcemod_builtins.py	/^        from urllib.request import FancyURLopener$/;"	i
FancyURLopener	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_sourcemod_builtins.py	/^        from urllib import FancyURLopener$/;"	i
FancyURLopener	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_sourcemod_builtins.py	/^        from urllib.request import FancyURLopener$/;"	i
FantomLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^class FantomLexer(RegexLexer):$/;"	c
FantomLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^class FantomLexer(RegexLexer):$/;"	c
FastEscape	configs/gui.vim	/^    augroup FastEscape$/;"	a
FelixLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.felix import FelixLexer$/;"	i
FelixLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^class FelixLexer(RegexLexer):$/;"	c
FelixLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.felix import FelixLexer$/;"	i
FelixLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^class FelixLexer(RegexLexer):$/;"	c
FileAction	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^class FileAction(argparse.Action):$/;"	c
FileRead	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead() abort$/;"	f
FileType	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class FileType(object):$/;"	c
FillRLibList	plugged/Nvim-R/R/functions.vim	/^function FillRLibList()$/;"	f
Filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filter.py	/^class Filter(object):$/;"	c
Filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^from pygments.filter import Filter$/;"	i
Filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^from pygments.filter import apply_filters, Filter$/;"	i
Filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filter.py	/^class Filter(object):$/;"	c
Filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^from pygments.filter import Filter$/;"	i
Filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^from pygments.filter import apply_filters, Filter$/;"	i
FilterString	plugged/tabular/autoload/tabular.vim	/^function! s:FilterString(lines, commandstring)$/;"	f
Find	plugged/ingo-library/autoload/ingo/dict/find.vim	/^function! s:Find( isAll, dict, value, ... )$/;"	f
FindContainingClass	plugged/vim-ruby/indent/ruby.vim	/^function! s:FindContainingClass()$/;"	f
FindUnusedMark	plugged/ingo-library/autoload/ingo/plugin/marks.vim	/^function! s:FindUnusedMark()$/;"	f
FinishCommit	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit() abort$/;"	f
FixRdoc	plugged/Nvim-R/ftplugin/rdoc.vim	/^function! FixRdoc()$/;"	f
FixedOffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^def FixedOffset(offset, _tzinfos = {}):$/;"	f
FixedOffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^class FixedOffset(tzinfo):$/;"	c
FixedOffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^def FixedOffset(offset, _tzinfos = {}):$/;"	f
FixedOffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^class FixedOffset(tzinfo):$/;"	c
Fixedgq	plugged/vim-javascript/indent/javascript.vim	/^function! Fixedgq(lnum, count)$/;"	f
FlagSet.New	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
FlagSet._flagsForScope	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
FlagSet.addFlag	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
FlagSet.clearFlags	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
FlagSet.removeFlag	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
FlagSet.renderToString	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
FoldBorder	plugged/ingo-library/autoload/ingo/folds.vim	/^function! s:FoldBorder( lnum, direction )$/;"	f
FontManager	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^class FontManager(object):$/;"	c
FontManager	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^class FontManager(object):$/;"	c
FontNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^class FontNotFound(Exception):$/;"	c
FontNotFound	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^class FontNotFound(Exception):$/;"	c
Foo	plugged/vim-ruby/spec/indent/method_definitions_spec.rb	/^      class Foo$/;"	c
ForJson	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^class ForJson(object):$/;"	c
ForJsonList	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^class ForJsonList(object):$/;"	c
ForLoop	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class ForLoop(Tokenizer):$/;"	c
ForLoop	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class ForLoop(Tokenizer):$/;"	c
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatter.py	/^class Formatter(object):$/;"	c
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/bbcode.py	/^from pygments.formatter import Formatter$/;"	i
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^from pygments.formatter import Formatter$/;"	i
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^from pygments.formatter import Formatter$/;"	i
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^from pygments.formatter import Formatter$/;"	i
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^from pygments.formatter import Formatter$/;"	i
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/rtf.py	/^from pygments.formatter import Formatter$/;"	i
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/svg.py	/^from pygments.formatter import Formatter$/;"	i
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^from pygments.formatter import Formatter$/;"	i
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal256.py	/^from pygments.formatter import Formatter$/;"	i
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatter.py	/^class Formatter(object):$/;"	c
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/bbcode.py	/^from pygments.formatter import Formatter$/;"	i
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^from pygments.formatter import Formatter$/;"	i
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^from pygments.formatter import Formatter$/;"	i
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^from pygments.formatter import Formatter$/;"	i
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^from pygments.formatter import Formatter$/;"	i
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/rtf.py	/^from pygments.formatter import Formatter$/;"	i
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/svg.py	/^from pygments.formatter import Formatter$/;"	i
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^from pygments.formatter import Formatter$/;"	i
Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal256.py	/^from pygments.formatter import Formatter$/;"	i
FortranLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.fortran import FortranLexer$/;"	i
FortranLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^class FortranLexer(RegexLexer):$/;"	c
FortranLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.fortran import FortranLexer$/;"	i
FortranLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^class FortranLexer(RegexLexer):$/;"	c
ForwardToZshChecker	plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! s:ForwardToZshChecker() " {{{2$/;"	f
FoxProLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/foxpro.py	/^class FoxProLexer(RegexLexer):$/;"	c
FoxProLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/foxpro.py	/^class FoxProLexer(RegexLexer):$/;"	c
FriendlyStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/friendly.py	/^class FriendlyStyle(Style):$/;"	c
FriendlyStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/friendly.py	/^class FriendlyStyle(Style):$/;"	c
FruityStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/fruity.py	/^class FruityStyle(Style):$/;"	c
FruityStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/fruity.py	/^class FruityStyle(Style):$/;"	c
Full	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    from Queue import LifoQueue, Empty, Full$/;"	i
Full	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    from queue import LifoQueue, Empty, Full$/;"	i
FunctionFilter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filter.py	/^class FunctionFilter(Filter):$/;"	c
FunctionFilter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filter.py	/^class FunctionFilter(Filter):$/;"	c
Future	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    make_analysator, text_type, add_metaclass, iteritems, Future, guess_decode$/;"	i
Future	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^class Future(object):$/;"	c
Future	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    make_analysator, text_type, add_metaclass, iteritems, Future, guess_decode$/;"	i
Future	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^class Future(object):$/;"	c
GAPLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^class GAPLexer(RegexLexer):$/;"	c
GAPLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^class GAPLexer(RegexLexer):$/;"	c
GB2312CharLenTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^GB2312CharLenTable = (0, 1, 1, 1, 1, 1, 2)$/;"	v
GB2312CharToFreqOrder	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^from .gb2312freq import (GB2312CharToFreqOrder, GB2312_TABLE_SIZE,$/;"	i
GB2312CharToFreqOrder	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/gb2312freq.py	/^GB2312CharToFreqOrder = ($/;"	v
GB2312DistributionAnalysis	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^class GB2312DistributionAnalysis(CharDistributionAnalysis):$/;"	c
GB2312DistributionAnalysis	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/gb2312prober.py	/^from .chardistribution import GB2312DistributionAnalysis$/;"	i
GB2312Prober	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/gb2312prober.py	/^class GB2312Prober(MultiByteCharSetProber):$/;"	c
GB2312Prober	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcsgroupprober.py	/^from .gb2312prober import GB2312Prober$/;"	i
GB2312SMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/gb2312prober.py	/^from .mbcssm import GB2312SMModel$/;"	i
GB2312SMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^GB2312SMModel = {'classTable': GB2312_cls,$/;"	v
GB2312_TABLE_SIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^from .gb2312freq import (GB2312CharToFreqOrder, GB2312_TABLE_SIZE,$/;"	i
GB2312_TABLE_SIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/gb2312freq.py	/^GB2312_TABLE_SIZE = 3760$/;"	v
GB2312_TYPICAL_DISTRIBUTION_RATIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/gb2312freq.py	/^GB2312_TYPICAL_DISTRIBUTION_RATIO = 0.9$/;"	v
GB2312_cls	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^GB2312_cls = ($/;"	v
GB2312_st	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^GB2312_st = ($/;"	v
GENERIC_ERROR	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^    GENERIC_ERROR = 'too many error responses'$/;"	v	class:ResponseError
GF	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GHERKIN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^GHERKIN = Token.Generic.Emph$/;"	v
GHERKIN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^GHERKIN = Token.Generic.Emph$/;"	v
GLShaderLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.graphics import GLShaderLexer$/;"	i
GLShaderLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^class GLShaderLexer(RegexLexer):$/;"	c
GLShaderLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.graphics import GLShaderLexer$/;"	i
GLShaderLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^class GLShaderLexer(RegexLexer):$/;"	c
GMT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^GMT = pytz.timezone('GMT')$/;"	v
GMT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^GMT = pytz.timezone('GMT')$/;"	v
GObject	plugged/Nvim-R/R/synctex_evince_backward.py	/^from gi.repository import GObject$/;"	i
GObject	plugged/Nvim-R/R/synctex_evince_forward.py	/^from gi.repository import GObject$/;"	i
GREEN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^GREEN = "#48b685"$/;"	v
GREEN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^GREEN = "#48b685"$/;"	v
GREEN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^GREEN = "#48b685"$/;"	v
GREEN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^GREEN = "#48b685"$/;"	v
GTabularize	plugged/tabular/plugin/Tabular.vim	/^   \\ GTabularize <line1>,<line2>$/;"	c
GasLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^class GasLexer(RegexLexer):$/;"	c
GasLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^class GasLexer(RegexLexer):$/;"	c
GenerateRuntimeFiletypes	plugged/ingo-library/autoload/ingo/compat/complete.vim	/^function! s:GenerateRuntimeFiletypes()$/;"	f
GeneratedObjectiveCVariant	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    class GeneratedObjectiveCVariant(baselexer):$/;"	c	function:objective
GeneratedObjectiveCVariant	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    class GeneratedObjectiveCVariant(baselexer):$/;"	c	function:objective
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^    Number, Punctuation, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^    Punctuation, Number$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^    Literal$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    Number, Punctuation, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    Number, Punctuation, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^    Number, Punctuation, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    Number, Punctuation, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    Number, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^     Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    Number, Generic, Literal$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    Number, Punctuation, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/autumn.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/borland.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/bw.py	/^     Operator, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/colorful.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/default.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/emacs.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/friendly.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/fruity.py	/^    Generic, Number, String, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/manni.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/murphy.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/pastie.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/perldoc.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/trac.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vs.py	/^     Operator, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^Generic     = Token.Generic$/;"	v
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^    Number, Punctuation, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^    Punctuation, Number$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^    Literal$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    Number, Punctuation, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    Number, Punctuation, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^    Number, Punctuation, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    Number, Punctuation, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    Number, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^     Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    Number, Generic, Literal$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    Number, Punctuation, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/autumn.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/borland.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/bw.py	/^     Operator, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/colorful.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/default.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/emacs.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/friendly.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/fruity.py	/^    Generic, Number, String, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/manni.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/murphy.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/pastie.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/perldoc.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/trac.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vs.py	/^     Operator, Generic$/;"	i
Generic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^Generic     = Token.Generic$/;"	v
GenericAspxLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^class GenericAspxLexer(RegexLexer):$/;"	c
GenericAspxLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^class GenericAspxLexer(RegexLexer):$/;"	c
GenshiLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class GenshiLexer(DelegatingLexer):$/;"	c
GenshiLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class GenshiLexer(DelegatingLexer):$/;"	c
GenshiMarkupLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class GenshiMarkupLexer(RegexLexer):$/;"	c
GenshiMarkupLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class GenshiMarkupLexer(RegexLexer):$/;"	c
GenshiTextLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class GenshiTextLexer(RegexLexer):$/;"	c
GenshiTextLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class GenshiTextLexer(RegexLexer):$/;"	c
GetBufferRubyClass	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
GetBufferRubyEntity	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
GetBufferRubyModule	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
GetBufferRubySingletonMethods	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
GetCharByPosition	plugged/smartpairs.vim/plugin/smartpairs.vim	/^function! s:GetCharByPosition(str, pos)$/;"	f
GetCoffeeHtmlIndent	plugged/vim-coffee-script/after/indent/html.vim	/^function! GetCoffeeHtmlIndent(curlinenum)$/;"	f
GetCoffeeIndent	plugged/vim-coffee-script/indent/coffee.vim	/^function! GetCoffeeIndent(curlnum)$/;"	f
GetCurrentFile	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:GetCurrentFile()$/;"	f
GetDefaultPolicy	plugged/vim-coffee-script/indent/coffee.vim	/^function! s:GetDefaultPolicy(curlnum)$/;"	f
GetDialect	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^function! s:GetDialect() " {{{2$/;"	f
GetErubyIndent	plugged/vim-ruby/indent/eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetFromStack	plugged/smartpairs.vim/plugin/smartpairs.vim	/^function! s:GetFromStack()$/;"	f
GetHamlIndent	plugged/vim-haml/indent/haml.vim	/^function! GetHamlIndent()$/;"	f
GetJadeIndent	plugged/vim-jade/indent/jade.vim	/^function! GetJadeIndent()$/;"	f
GetJavascriptIndent	plugged/vim-javascript/indent/javascript.vim	/^function GetJavascriptIndent()$/;"	f
GetLastHeartbeat	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:GetLastHeartbeat()$/;"	f
GetMSL	plugged/vim-javascript/indent/javascript.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
GetMSL	plugged/vim-ruby/indent/ruby.vim	/^function s:GetMSL(lnum)$/;"	f
GetMakePrg	plugged/vim-coffee-script/compiler/coffee.vim	/^function! s:GetMakePrg()$/;"	f
GetMakeprg	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetMakeprg() " {{{2$/;"	f
GetMavenClasspath	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenClasspath() " {{{2$/;"	f
GetMavenProperties	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenProperties() " {{{2$/;"	f
GetMissing	plugged/ingo-library/autoload/ingo/collections/differences.vim	/^function! s:GetMissing( list1, list2 )$/;"	f
GetOcamlBuildMakeprg	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlBuildMakeprg() " {{{2$/;"	f
GetOcamlcMakeprg	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlcMakeprg() " {{{2$/;"	f
GetOtherMakeprg	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOtherMakeprg() " {{{2$/;"	f
GetPrevNormalLine	plugged/vim-coffee-script/indent/coffee.vim	/^function! s:GetPrevNormalLine(startlnum)$/;"	f
GetProfile	plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^function! s:GetProfile() " {{{2$/;"	f
GetRCmdBatchOutput	plugged/Nvim-R/ftplugin/r_nvimr.vim	/^function! GetRCmdBatchOutput()$/;"	f
GetROutput	plugged/Nvim-R/R/common_global.vim	/^function GetROutput(outf)$/;"	f
GetRandomNumber	plugged/Nvim-R/R/common_global.vim	/^function GetRandomNumber(width)$/;"	f
GetRubyIndent	plugged/vim-ruby/indent/ruby.vim	/^function GetRubyIndent(...)$/;"	f
GetRubyVarType	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
GetSassIndent	plugged/vim-haml/indent/sass.vim	/^function! GetSassIndent()$/;"	f
GetSelection	plugged/smartpairs.vim/plugin/smartpairs.vim	/^function! s:GetSelection()$/;"	f
GetShell	plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! s:GetShell() " {{{2$/;"	f
GetSortArgumentsExpr	plugged/AdvancedSorters/autoload/AdvancedSorters/Ranges.vim	/^function! s:GetSortArgumentsExpr( captureNum, flagsBeforePatternCardinality, ... )$/;"	f
GetTrimmedLine	plugged/vim-coffee-script/indent/coffee.vim	/^function! s:GetTrimmedLine(lnum)$/;"	f
GetValaModules	plugged/syntastic/syntax_checkers/vala/valac.vim	/^function! s:GetValaModules() " {{{2$/;"	f
GetValaVapiDirs	plugged/syntastic/syntax_checkers/vala/valac.vim	/^function! s:GetValaVapiDirs() " {{{2$/;"	f
GetVarIndent	plugged/vim-javascript/indent/javascript.vim	/^function s:GetVarIndent(lnum)$/;"	f
GettextLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^from pygments.lexers.textfmts import IrcLogsLexer, GettextLexer, HttpLexer$/;"	i
GettextLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^class GettextLexer(RegexLexer):$/;"	c
GettextLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^from pygments.lexers.textfmts import IrcLogsLexer, GettextLexer, HttpLexer$/;"	i
GettextLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^class GettextLexer(RegexLexer):$/;"	c
GherkinLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.testing import GherkinLexer$/;"	i
GherkinLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/testing.py	/^class GherkinLexer(RegexLexer):$/;"	c
GherkinLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.testing import GherkinLexer$/;"	i
GherkinLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/testing.py	/^class GherkinLexer(RegexLexer):$/;"	c
GherkinTokenizer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class GherkinTokenizer(object):$/;"	c
GherkinTokenizer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class GherkinTokenizer(object):$/;"	c
GifImageFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^class GifImageFormatter(ImageFormatter):$/;"	c
GifImageFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^class GifImageFormatter(ImageFormatter):$/;"	c
Git	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang, args) abort$/;"	f
Git	plugged/vim-wakatime/plugin/packages/wakatime/project.py	/^from .projects.git import Git$/;"	i
Git	plugged/vim-wakatime/plugin/packages/wakatime/projects/git.py	/^class Git(BaseProject):$/;"	c
GitComplete	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A, L, P) abort$/;"	f
GitGutter	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutter    call gitgutter#process_buffer(bufnr(''), 0)$/;"	c
GitGutterAll	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterAll call gitgutter#all()$/;"	c
GitGutterDebug	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterDebug call gitgutter#debug#debug()$/;"	c
GitGutterDisable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterDisable call gitgutter#disable()$/;"	c
GitGutterEnable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterEnable  call gitgutter#enable()$/;"	c
GitGutterGetHunkSummary	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunkSummary()$/;"	f
GitGutterGetHunks	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunks()$/;"	f
GitGutterLineHighlightsDisable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterLineHighlightsDisable call gitgutter#line_highlights_disable()$/;"	c
GitGutterLineHighlightsEnable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterLineHighlightsEnable  call gitgutter#line_highlights_enable()$/;"	c
GitGutterLineHighlightsToggle	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterLineHighlightsToggle  call gitgutter#line_highlights_toggle()$/;"	c
GitGutterNextHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command -count=1 GitGutterNextHunk call gitgutter#hunk#next_hunk(<count>)$/;"	c
GitGutterPrevHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command -count=1 GitGutterPrevHunk call gitgutter#hunk#prev_hunk(<count>)$/;"	c
GitGutterPreviewHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterPreviewHunk call gitgutter#preview_hunk()$/;"	c
GitGutterRevertHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterRevertHunk  call gitgutter#revert_hunk()$/;"	c
GitGutterSignsDisable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterSignsDisable call gitgutter#signs_disable()$/;"	c
GitGutterSignsEnable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterSignsEnable  call gitgutter#signs_enable()$/;"	c
GitGutterSignsToggle	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterSignsToggle  call gitgutter#signs_toggle()$/;"	c
GitGutterStageHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterStageHunk   call gitgutter#stage_hunk()$/;"	c
GitGutterToggle	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterToggle  call gitgutter#toggle()$/;"	c
GnuplotLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^class GnuplotLexer(RegexLexer):$/;"	c
GnuplotLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    AsymptoteLexer, PovrayLexer$/;"	i
GnuplotLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^class GnuplotLexer(RegexLexer):$/;"	c
GnuplotLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    AsymptoteLexer, PovrayLexer$/;"	i
GoBuild	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoBuild call go#cmd#Build(<bang>0,<f-args>)$/;"	c
GoCallees	plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallees call go#oracle#Callees(<count>)$/;"	c
GoCallers	plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallers call go#oracle#Callers(<count>)$/;"	c
GoCallstack	plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallstack call go#oracle#Callstack(<count>)$/;"	c
GoChannelPeers	plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoChannelPeers call go#oracle#ChannelPeers(<count>)$/;"	c
GoCoverage	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverage call go#cmd#Coverage(<bang>0, <f-args>)$/;"	c
GoDef	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoDef :call go#def#Jump(<f-args>)$/;"	c
GoDeps	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoDeps echo go#tool#Deps()$/;"	c
GoDescribe	plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoDescribe call go#oracle#Describe(<count>)$/;"	c
GoDoc	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDoc call go#doc#Open('new', 'split', <f-args>)$/;"	c
GoDocBrowser	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDocBrowser call go#doc#OpenBrowser(<f-args>)$/;"	c
GoDown	plugged/Nvim-R/R/common_global.vim	/^function GoDown()$/;"	f
GoDrop	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=customlist,go#package#Complete GoDrop call go#import#SwitchImport(0, '', <f-args>, '')$/;"	c
GoErrCheck	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#package#Complete GoErrCheck call go#errcheck#Run(<f-args>)$/;"	c
GoFiles	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFiles echo go#tool#Files()$/;"	c
GoFmt	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFmt call go#fmt#Format(-1)$/;"	c
GoFreevars	plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoFreevars call go#oracle#Freevars(<count>)$/;"	c
GoGenerate	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoGenerate call go#cmd#Generate(<bang>0,<f-args>)$/;"	c
GoImplements	plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoImplements call go#oracle#Implements(<count>)$/;"	c
GoImport	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=1 -bang -complete=customlist,go#package#Complete GoImport call go#import#SwitchImport(1, '', <f-args>, '<bang>')$/;"	c
GoImportAs	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang -complete=customlist,go#package#Complete GoImportAs call go#import#SwitchImport(1, <f-args>, '<bang>')$/;"	c
GoImports	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoImports call go#fmt#Format(1)$/;"	c
GoIndent	plugged/vim-go/indent/go.vim	/^function! GoIndent(lnum)$/;"	f
GoInfo	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoInfo call go#complete#Info()$/;"	c
GoInstall	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoInstall call go#cmd#Install(<bang>0, <f-args>)$/;"	c
GoInstallBinaries	plugged/vim-go/plugin/go.vim	/^command! GoInstallBinaries call s:GoInstallBinaries(-1)$/;"	c
GoInstallBinaries	plugged/vim-go/plugin/go.vim	/^function! s:GoInstallBinaries(updateBinaries)$/;"	f
GoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.go import GoLexer$/;"	i
GoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^class GoLexer(RegexLexer):$/;"	c
GoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.go import GoLexer$/;"	i
GoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^class GoLexer(RegexLexer):$/;"	c
GoLint	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoLint call go#lint#Run(<f-args>)$/;"	c
GoNeosnippet	plugged/vim-go/ftplugin/go/snippets.vim	/^function! s:GoNeosnippet()$/;"	f
GoOracleScope	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#package#Complete GoOracleScope call go#oracle#Scope(<f-args>)$/;"	c
GoPath	plugged/vim-go/plugin/go.vim	/^command! -nargs=? -complete=dir GoPath call go#path#GoPath(<f-args>)$/;"	c
GoPlay	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 -range=% GoPlay call go#play#Share(<count>, <line1>, <line2>)$/;"	c
GoReferrers	plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoReferrers call go#oracle#Referrers(<count>)$/;"	c
GoRename	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoRename call go#rename#Rename(<f-args>)$/;"	c
GoRun	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoRun call go#cmd#Run(<bang>0,<f-args>)$/;"	c
GoTest	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTest call go#cmd#Test(<bang>0, 0, <f-args>)$/;"	c
GoTestCompile	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTestCompile call go#cmd#Test(<bang>0, 1, <f-args>)$/;"	c
GoTestFunc	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTestFunc call go#cmd#TestFunc(<bang>0, <f-args>)$/;"	c
GoTo	plugged/smartpairs.vim/plugin/smartpairs.vim	/^function! s:GoTo(line, col)$/;"	f
GoToBuf	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! GoToBuf(rnwbn, rnwf, basedir, rnwln)$/;"	f
GoUltiSnips	plugged/vim-go/ftplugin/go/snippets.vim	/^function! s:GoUltiSnips()$/;"	f
GoUpdateBinaries	plugged/vim-go/plugin/go.vim	/^command! GoUpdateBinaries call s:GoInstallBinaries(1)$/;"	c
GoVet	plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoVet call go#cmd#Vet(<bang>0, <f-args>)$/;"	c
GobbleFilter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^class GobbleFilter(Filter):$/;"	c
GobbleFilter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^class GobbleFilter(Filter):$/;"	c
GodocView	plugged/vim-go/autoload/go/doc.vim	/^function! s:GodocView(newposition, position, content)$/;"	f
GoloLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^class GoloLexer(RegexLexer):$/;"	c
GoloLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^class GoloLexer(RegexLexer):$/;"	c
GoodDataCLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^class GoodDataCLLexer(RegexLexer):$/;"	c
GoodDataCLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    GoodDataCLLexer, MaqlLexer$/;"	i
GoodDataCLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^class GoodDataCLLexer(RegexLexer):$/;"	c
GoodDataCLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    GoodDataCLLexer, MaqlLexer$/;"	i
GosuLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^class GosuLexer(RegexLexer):$/;"	c
GosuLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^class GosuLexer(RegexLexer):$/;"	c
GosuTemplateLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^class GosuTemplateLexer(Lexer):$/;"	c
GosuTemplateLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^class GosuTemplateLexer(Lexer):$/;"	c
GreekLangModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langgreekmodel.py	/^GreekLangModel = ($/;"	v
Grep	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
GroffLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^class GroffLexer(RegexLexer):$/;"	c
GroffLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^    TexLexer, GroffLexer$/;"	i
GroffLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^class GroffLexer(RegexLexer):$/;"	c
GroffLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^    TexLexer, GroffLexer$/;"	i
GroovyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^class GroovyLexer(RegexLexer):$/;"	c
GroovyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^class GroovyLexer(RegexLexer):$/;"	c
GzipDecoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^class GzipDecoder(object):$/;"	c
H	plugged/calendar.vim/autoload/calendar/string.vim	/^  fu! s:H(u) abort$/;"	f
HAS_SNI	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^HAS_SNI = SUBJ_ALT_NAME_SUPPORT$/;"	v
HAS_SNI	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^    from ssl import HAS_SNI  # Has SNI?$/;"	i
HAS_SNI	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^HAS_SNI = False$/;"	v
HAS_SQL	plugged/vim-wakatime/plugin/packages/wakatime/offlinequeue.py	/^    HAS_SQL = False$/;"	v
HAS_SQL	plugged/vim-wakatime/plugin/packages/wakatime/offlinequeue.py	/^    HAS_SQL = True$/;"	v
HAS_SQL	plugged/vim-wakatime/plugin/packages/wakatime/session_cache.py	/^    HAS_SQL = False$/;"	v
HAS_SQL	plugged/vim-wakatime/plugin/packages/wakatime/session_cache.py	/^    HAS_SQL = True$/;"	v
HAS_UTF8	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^HAS_UTF8 = re.compile(r'[\\x80-\\xff]')$/;"	v
HEADING	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^HEADING = Token.Generic.Heading$/;"	v
HEADING	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^HEADING = Token.Generic.Heading$/;"	v
HOOKS	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/hooks.py	/^HOOKS = ['response']$/;"	v
HOUR	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^HOUR = datetime.timedelta(hours=1)$/;"	v
HOUR	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^from pytz import utc, UTC, HOUR, ZERO$/;"	i
HOUR	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^HOUR = datetime.timedelta(hours=1)$/;"	v
HOUR	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^from pytz import utc, UTC, HOUR, ZERO$/;"	i
HTTPAdapter	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^class HTTPAdapter(BaseAdapter):$/;"	c
HTTPAdapter	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from .adapters import HTTPAdapter$/;"	i
HTTPBasicAuth	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^class HTTPBasicAuth(AuthBase):$/;"	c
HTTPBasicAuth	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^from .auth import HTTPBasicAuth$/;"	i
HTTPConnection	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^class HTTPConnection(_HTTPConnection, object):$/;"	c
HTTPConnectionPool	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^class HTTPConnectionPool(ConnectionPool, RequestMethods):$/;"	c
HTTPConnectionPool	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^from .connectionpool import HTTPConnectionPool, HTTPSConnectionPool$/;"	i
HTTPDigestAuth	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^class HTTPDigestAuth(AuthBase):$/;"	c
HTTPError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/exceptions.py	/^class HTTPError(RequestException):$/;"	c
HTTPError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class HTTPError(Exception):$/;"	c
HTTPException	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    from http.client import HTTPConnection as _HTTPConnection, HTTPException$/;"	i
HTTPException	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    from httplib import HTTPConnection as _HTTPConnection, HTTPException$/;"	i
HTTPException	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^from .connection import HTTPException, BaseSSLError$/;"	i
HTTPHeaderDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^class HTTPHeaderDict(dict):$/;"	c
HTTPHeaderDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^from ._collections import HTTPHeaderDict$/;"	i
HTTPProxyAuth	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^class HTTPProxyAuth(HTTPBasicAuth):$/;"	c
HTTPResponse	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .packages.urllib3.response import HTTPResponse$/;"	i
HTTPResponse	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^from .response import HTTPResponse$/;"	i
HTTPResponse	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^from .response import HTTPResponse$/;"	i
HTTPResponse	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^class HTTPResponse(io.IOBase):$/;"	c
HTTPSConnection	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    HTTPSConnection = DummyConnection$/;"	v
HTTPSConnection	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    HTTPSConnection = DummyConnection$/;"	v	class:DummyConnection
HTTPSConnection	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    HTTPSConnection = VerifiedHTTPSConnection$/;"	v	class:VerifiedHTTPSConnection
HTTPSConnection	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^class HTTPSConnection(HTTPConnection):$/;"	c
HTTPSConnection	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/ntlmpool.py	/^    from http.client import HTTPSConnection$/;"	i
HTTPSConnection	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/ntlmpool.py	/^    from httplib import HTTPSConnection$/;"	i
HTTPSConnectionPool	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^class HTTPSConnectionPool(HTTPConnectionPool):$/;"	c
HTTPSConnectionPool	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/ntlmpool.py	/^from urllib3 import HTTPSConnectionPool$/;"	i
HTTPSConnectionPool	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^from .connectionpool import HTTPConnectionPool, HTTPSConnectionPool$/;"	i
HTTPWarning	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class HTTPWarning(Warning):$/;"	c
HZCharLenTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escsm.py	/^HZCharLenTable = (0, 0, 0, 0, 0, 0)$/;"	v
HZSMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escprober.py	/^from .escsm import (HZSMModel, ISO2022CNSMModel, ISO2022JPSMModel,$/;"	i
HZSMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escsm.py	/^HZSMModel = {'classTable': HZ_cls,$/;"	v
HZ_cls	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escsm.py	/^HZ_cls = ($/;"	v
HZ_st	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escsm.py	/^HZ_st = ($/;"	v
HamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^class HamlLexer(ExtendedRegexLexer):$/;"	c
HamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^    HamlLexer, ScamlLexer, JadeLexer$/;"	i
HamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^class HamlLexer(ExtendedRegexLexer):$/;"	c
HamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^    HamlLexer, ScamlLexer, JadeLexer$/;"	i
HandlebarsHtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class HandlebarsHtmlLexer(DelegatingLexer):$/;"	c
HandlebarsHtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class HandlebarsHtmlLexer(DelegatingLexer):$/;"	c
HandlebarsHtmlParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^class HandlebarsHtmlParser(HtmlDjangoParser):$/;"	c
HandlebarsLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class HandlebarsLexer(RegexLexer):$/;"	c
HandlebarsLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class HandlebarsLexer(RegexLexer):$/;"	c
HandlerParams	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    HandlerParams = ('about', 'above', 'against', 'apart from', 'around',$/;"	v	class:AppleScriptLexer
HandlerParams	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    HandlerParams = ('about', 'above', 'against', 'apart from', 'around',$/;"	v	class:AppleScriptLexer
Has	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^    from ssl import HAS_SNI  # Has SNI?$/;"	i
HaskellLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/functional.py	/^    KokaLexer$/;"	i
HaskellLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^class HaskellLexer(RegexLexer):$/;"	c
HaskellLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/functional.py	/^    KokaLexer$/;"	i
HaskellLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^class HaskellLexer(RegexLexer):$/;"	c
HaxeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^class HaxeLexer(ExtendedRegexLexer):$/;"	c
HaxeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^class HaxeLexer(ExtendedRegexLexer):$/;"	c
HebrewLangModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langhebrewmodel.py	/^HebrewLangModel = ($/;"	v
HebrewProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^class HebrewProber(CharSetProber):$/;"	c
HebrewProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcsgroupprober.py	/^from .hebrewprober import HebrewProber$/;"	i
HelpFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class HelpFormatter(object):$/;"	c
HiLink	plugged/css.vim/syntax/css.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/css.vim/syntax/css.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HostChangedError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class HostChangedError(RequestError):$/;"	c
HtmlDjangoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class HtmlDjangoLexer(DelegatingLexer):$/;"	c
HtmlDjangoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class HtmlDjangoLexer(DelegatingLexer):$/;"	c
HtmlDjangoParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^class HtmlDjangoParser(TokenParser):$/;"	c
HtmlFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^class HtmlFormatter(Formatter):$/;"	c
HtmlFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^class HtmlFormatter(Formatter):$/;"	c
HtmlGenshiLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class HtmlGenshiLexer(DelegatingLexer):$/;"	c
HtmlGenshiLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class HtmlGenshiLexer(DelegatingLexer):$/;"	c
HtmlGenshiParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^class HtmlGenshiParser(HtmlDjangoParser):$/;"	c
HtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^class HtmlLexer(RegexLexer):$/;"	c
HtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^from pygments.lexers.html import HtmlLexer, XmlLexer$/;"	i
HtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^from pygments.lexers.html import HtmlLexer$/;"	i
HtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^from pygments.lexers.html import HtmlLexer, XmlLexer$/;"	i
HtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^    HamlLexer, ScamlLexer, JadeLexer$/;"	i
HtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^from pygments.lexers.html import HtmlLexer$/;"	i
HtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^class HtmlLexer(RegexLexer):$/;"	c
HtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^from pygments.lexers.html import HtmlLexer, XmlLexer$/;"	i
HtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^from pygments.lexers.html import HtmlLexer$/;"	i
HtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^from pygments.lexers.html import HtmlLexer, XmlLexer$/;"	i
HtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^    HamlLexer, ScamlLexer, JadeLexer$/;"	i
HtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^from pygments.lexers.html import HtmlLexer$/;"	i
HtmlPhpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class HtmlPhpLexer(DelegatingLexer):$/;"	c
HtmlPhpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class HtmlPhpLexer(DelegatingLexer):$/;"	c
HtmlPhpParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^class HtmlPhpParser(HtmlDjangoParser):$/;"	c
HtmlSmartyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class HtmlSmartyLexer(DelegatingLexer):$/;"	c
HtmlSmartyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class HtmlSmartyLexer(DelegatingLexer):$/;"	c
HtmlSmartyParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^class HtmlSmartyParser(HtmlDjangoParser):$/;"	c
HttpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^from pygments.lexers.textfmts import IrcLogsLexer, GettextLexer, HttpLexer$/;"	i
HttpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^class HttpLexer(RegexLexer):$/;"	c
HttpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^from pygments.lexers.textfmts import IrcLogsLexer, GettextLexer, HttpLexer$/;"	i
HttpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^class HttpLexer(RegexLexer):$/;"	c
HungarianLangModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langhungarianmodel.py	/^HungarianLangModel = ($/;"	v
HxmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^class HxmlLexer(RegexLexer):$/;"	c
HxmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^from pygments.lexers.haxe import HxmlLexer$/;"	i
HxmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^class HxmlLexer(RegexLexer):$/;"	c
HxmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^from pygments.lexers.haxe import HxmlLexer$/;"	i
HyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^class HyLexer(RegexLexer):$/;"	c
HyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^class HyLexer(RegexLexer):$/;"	c
HybrisLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    HybrisLexer$/;"	i
HybrisLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^class HybrisLexer(RegexLexer):$/;"	c
HybrisLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    HybrisLexer$/;"	i
HybrisLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^class HybrisLexer(RegexLexer):$/;"	c
IBM855_CharToOrderMap	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langcyrillicmodel.py	/^IBM855_CharToOrderMap = ($/;"	v
IBM866_CharToOrderMap	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langcyrillicmodel.py	/^IBM866_CharToOrderMap = ($/;"	v
IDLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/idl.py	/^class IDLLexer(RegexLexer):$/;"	c
IDLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/math.py	/^from pygments.lexers.idl import IDLLexer$/;"	i
IDLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/idl.py	/^class IDLLexer(RegexLexer):$/;"	c
IDLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/math.py	/^from pygments.lexers.idl import IDLLexer$/;"	i
IMPORT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^IMPORT = Token.Name.Namespace$/;"	v
IMPORT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^IMPORT = Token.Name.Namespace$/;"	v
INC	plugged/vimproc.vim/make_android.mak	/^INC=autoload\/vimstack.c autoload\/ptytty.h$/;"	m
INC	plugged/vimproc.vim/make_sunos.mak	/^INC=autoload\/vimstack.c autoload\/ptytty.h$/;"	m
ISO	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^from .escprober import EscCharSetProber  # ISO-2122, etc.$/;"	i
ISO2022CNCharLenTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escsm.py	/^ISO2022CNCharLenTable = (0, 0, 0, 0, 0, 0, 0, 0, 0)$/;"	v
ISO2022CNSMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escprober.py	/^from .escsm import (HZSMModel, ISO2022CNSMModel, ISO2022JPSMModel,$/;"	i
ISO2022CNSMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escsm.py	/^ISO2022CNSMModel = {'classTable': ISO2022CN_cls,$/;"	v
ISO2022CN_cls	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escsm.py	/^ISO2022CN_cls = ($/;"	v
ISO2022CN_st	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escsm.py	/^ISO2022CN_st = ($/;"	v
ISO2022JPCharLenTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escsm.py	/^ISO2022JPCharLenTable = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0)$/;"	v
ISO2022JPSMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escprober.py	/^from .escsm import (HZSMModel, ISO2022CNSMModel, ISO2022JPSMModel,$/;"	i
ISO2022JPSMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escsm.py	/^ISO2022JPSMModel = {'classTable': ISO2022JP_cls,$/;"	v
ISO2022JP_cls	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escsm.py	/^ISO2022JP_cls = ($/;"	v
ISO2022JP_st	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escsm.py	/^ISO2022JP_st = ($/;"	v
ISO2022KRCharLenTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escsm.py	/^ISO2022KRCharLenTable = (0, 0, 0, 0, 0, 0)$/;"	v
ISO2022KRSMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escsm.py	/^ISO2022KRSMModel = {'classTable': ISO2022KR_cls,$/;"	v
ISO2022KR_cls	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escsm.py	/^ISO2022KR_cls = ($/;"	v
ISO2022KR_st	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escsm.py	/^ISO2022KR_st = ($/;"	v
IS_DIGIT	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^IS_DIGIT(JSON_UNICHR c)$/;"	f	file:
IS_WHITESPACE	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define IS_WHITESPACE(/;"	d	file:
ITER_CHUNK_SIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^ITER_CHUNK_SIZE = 512$/;"	v
Ibm855Model	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langcyrillicmodel.py	/^Ibm855Model = {$/;"	v
Ibm866Model	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langcyrillicmodel.py	/^Ibm866Model = {$/;"	v
Identifiers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    Identifiers = r'[a-zA-Z]\\w*'$/;"	v	class:AppleScriptLexer
Identifiers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    Identifiers = r'[a-zA-Z]\\w*'$/;"	v	class:AppleScriptLexer
IdrisLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^class IdrisLexer(RegexLexer):$/;"	c
IdrisLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^class IdrisLexer(RegexLexer):$/;"	c
IfFocusOnStartup	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IfFocusOnStartup()$/;"	f
IgnoreError	plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! s:IgnoreError(text) " {{{2$/;"	f
IgnoreError	plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:IgnoreError(text) " {{{2$/;"	f
IgorLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^class IgorLexer(RegexLexer):$/;"	c
IgorLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^class IgorLexer(RegexLexer):$/;"	c
IgorStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/igor.py	/^class IgorStyle(Style):$/;"	c
IgorStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/igor.py	/^class IgorStyle(Style):$/;"	c
Image	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    from PIL import Image, ImageDraw, ImageFont$/;"	i
Image	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    from PIL import Image, ImageDraw, ImageFont$/;"	i
ImageDraw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    from PIL import Image, ImageDraw, ImageFont$/;"	i
ImageDraw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    from PIL import Image, ImageDraw, ImageFont$/;"	i
ImageFont	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    from PIL import Image, ImageDraw, ImageFont$/;"	i
ImageFont	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    from PIL import Image, ImageDraw, ImageFont$/;"	i
ImageFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^class ImageFormatter(Formatter):$/;"	c
ImageFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^class ImageFormatter(Formatter):$/;"	c
ImportSetting	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class ImportSetting(Tokenizer):$/;"	c
ImportSetting	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class ImportSetting(Tokenizer):$/;"	c
InMultiVarStatement	plugged/vim-javascript/indent/javascript.vim	/^function s:InMultiVarStatement(lnum)$/;"	f
InOneLineScope	plugged/vim-javascript/indent/javascript.vim	/^function s:InOneLineScope(lnum)$/;"	f
IncompleteTaskText	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    IncompleteTaskText = Text    # Incomplete tasks should look like plain text$/;"	v	class:TodotxtLexer
IncompleteTaskText	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    IncompleteTaskText = Text    # Incomplete tasks should look like plain text$/;"	v	class:TodotxtLexer
IndentWithContinuation	plugged/vim-javascript/indent/javascript.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
Inform6Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^class Inform6Lexer(RegexLexer):$/;"	c
Inform6Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^class Inform6Lexer(RegexLexer):$/;"	c
Inform6TemplateLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^class Inform6TemplateLexer(Inform7Lexer):$/;"	c
Inform6TemplateLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^class Inform6TemplateLexer(Inform7Lexer):$/;"	c
Inform7Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^class Inform7Lexer(RegexLexer):$/;"	c
Inform7Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^class Inform7Lexer(RegexLexer):$/;"	c
IngoLibraryCmdWin	plugged/ingo-library/autoload/ingo/window/cmdwin.vim	/^    augroup IngoLibraryCmdWin$/;"	a
IniLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^class IniLexer(RegexLexer):$/;"	c
IniLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^    SquidConfLexer, LighttpdConfLexer, IniLexer, RegeditLexer, PropertiesLexer$/;"	i
IniLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^class IniLexer(RegexLexer):$/;"	c
IniLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^    SquidConfLexer, LighttpdConfLexer, IniLexer, RegeditLexer, PropertiesLexer$/;"	i
InnerClass	plugged/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^        class InnerClass$/;"	c	class:OuterClass
InsecurePlatformWarning	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class InsecurePlatformWarning(SecurityWarning):$/;"	c
InsecurePlatformWarning	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^from ..exceptions import SSLError, InsecurePlatformWarning$/;"	i
InsecureRequestWarning	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class InsecureRequestWarning(SecurityWarning):$/;"	c
InsertToStack	plugged/smartpairs.vim/plugin/smartpairs.vim	/^function! s:InsertToStack(target, col)$/;"	f
InstantMarkdownPreview	plugged/vim-instant-markdown/after/ftplugin/markdown/instant-markdown.vim	/^    command! -buffer InstantMarkdownPreview call s:previewMarkdown()$/;"	c
InvalidSchema	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/exceptions.py	/^class InvalidSchema(RequestException, ValueError):$/;"	c
InvalidTimeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^from pytz.exceptions import InvalidTimeError$/;"	i
InvalidTimeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/exceptions.py	/^class InvalidTimeError(Exception):$/;"	c
InvalidTimeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^from pytz.exceptions import InvalidTimeError$/;"	i
InvalidTimeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/exceptions.py	/^class InvalidTimeError(Exception):$/;"	c
InvalidURL	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/exceptions.py	/^class InvalidURL(RequestException, ValueError):$/;"	c
InvalidURL	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^from .exceptions import InvalidURL$/;"	i
IoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^from pygments.lexers.iolang import IoLexer$/;"	i
IoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/iolang.py	/^class IoLexer(RegexLexer):$/;"	c
IoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^from pygments.lexers.iolang import IoLexer$/;"	i
IoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/iolang.py	/^class IoLexer(RegexLexer):$/;"	c
IokeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^from pygments.lexers.jvm import IokeLexer, ClojureLexer$/;"	i
IokeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^class IokeLexer(RegexLexer):$/;"	c
IokeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^from pygments.lexers.jvm import IokeLexer, ClojureLexer$/;"	i
IokeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^class IokeLexer(RegexLexer):$/;"	c
IrcLogsLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^from pygments.lexers.textfmts import IrcLogsLexer, GettextLexer, HttpLexer$/;"	i
IrcLogsLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^class IrcLogsLexer(RegexLexer):$/;"	c
IrcLogsLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^from pygments.lexers.textfmts import IrcLogsLexer, GettextLexer, HttpLexer$/;"	i
IrcLogsLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^class IrcLogsLexer(RegexLexer):$/;"	c
IsCmdDelimiter	plugged/ingo-library/autoload/ingo/cmdargs/command.vim	/^function! s:IsCmdDelimiter(char)$/;"	f
IsComment	plugged/vim-coffee-script/indent/coffee.vim	/^function! s:IsComment(lnum, col)$/;"	f
IsCommentOrString	plugged/vim-coffee-script/indent/coffee.vim	/^function! s:IsCommentOrString(lnum, col)$/;"	f
IsCurrentWindowNERDTree	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IsCurrentWindowNERDTree()$/;"	f
IsExternalOBRunning	plugged/Nvim-R/R/common_global.vim	/^function IsExternalOBRunning()$/;"	f
IsFirstRArg	plugged/Nvim-R/R/common_global.vim	/^function IsFirstRArg(lnum, cpos)$/;"	f
IsInClassDef	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
IsInMultilineComment	plugged/vim-javascript/indent/javascript.vim	/^function s:IsInMultilineComment(lnum, col)$/;"	f
IsInString	plugged/vim-javascript/indent/javascript.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInString	plugged/vim-ruby/indent/ruby.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInStringDelimiter	plugged/vim-ruby/indent/ruby.vim	/^function s:IsInStringDelimiter(lnum, col)$/;"	f
IsInStringOrComment	plugged/vim-javascript/indent/javascript.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrComment	plugged/vim-ruby/indent/ruby.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrDocumentation	plugged/vim-ruby/indent/ruby.vim	/^function s:IsInStringOrDocumentation(lnum, col)$/;"	f
IsLineComment	plugged/vim-javascript/indent/javascript.vim	/^function s:IsLineComment(lnum, col)$/;"	f
IsLineInRCode	plugged/Nvim-R/R/common_global.vim	/^function IsLineInRCode(vrb, line)$/;"	f
IsNERDTreeOpenInCurrentTab	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IsNERDTreeOpenInCurrentTab()$/;"	f
IsNERDTreePresentInCurrentTab	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IsNERDTreePresentInCurrentTab()$/;"	f
IsOnOrAfter	plugged/ingo-library/autoload/ingo/compat.vim	/^    function! s:IsOnOrAfter( pos1, pos2 )$/;"	f
IsPosInClassDef	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
IsPrefixMatch	plugged/ingo-library/autoload/ingo/comments.vim	/^function! s:IsPrefixMatch( string, prefix )$/;"	f
IsSendCmdToRFake	plugged/Nvim-R/R/common_global.vim	/^function IsSendCmdToRFake()$/;"	f
IsShellValid	plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! s:IsShellValid() " {{{2$/;"	f
IsString	plugged/vim-coffee-script/indent/coffee.vim	/^function! s:IsString(lnum, col)$/;"	f
IsabelleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^class IsabelleLexer(RegexLexer):$/;"	c
IsabelleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^class IsabelleLexer(RegexLexer):$/;"	c
ItemsView	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    from _abcoll import KeysView, ValuesView, ItemsView$/;"	i
Iterator	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    Iterator = object$/;"	v
Iterator	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    class Iterator(object):$/;"	c
JISCharToFreqOrder	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^from .jisfreq import (JISCharToFreqOrder, JIS_TABLE_SIZE,$/;"	i
JISCharToFreqOrder	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jisfreq.py	/^JISCharToFreqOrder = ($/;"	v
JIS_TABLE_SIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^from .jisfreq import (JISCharToFreqOrder, JIS_TABLE_SIZE,$/;"	i
JIS_TABLE_SIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jisfreq.py	/^JIS_TABLE_SIZE = 4368$/;"	v
JIS_TYPICAL_DISTRIBUTION_RATIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jisfreq.py	/^JIS_TYPICAL_DISTRIBUTION_RATIO = 3.0$/;"	v
JSONArray	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^def JSONArray(state, scan_once, _w=WHITESPACE.match, _ws=WHITESPACE_STR):$/;"	f
JSONDOCS	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_fail.py	/^JSONDOCS = [$/;"	v
JSONDecodeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^from .scanner import JSONDecodeError$/;"	i
JSONDecodeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^from .scanner import make_scanner, JSONDecodeError$/;"	i
JSONDecodeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/scanner.py	/^class JSONDecodeError(ValueError):$/;"	c
JSONDecoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^from .decoder import JSONDecoder$/;"	i
JSONDecoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^class JSONDecoder(object):$/;"	c
JSONEncoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^from .encoder import JSONEncoder, JSONEncoderForHTML$/;"	i
JSONEncoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^class JSONEncoder(object):$/;"	c
JSONEncoderForHTML	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^from .encoder import JSONEncoder, JSONEncoderForHTML$/;"	i
JSONEncoderForHTML	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^class JSONEncoderForHTML(JSONEncoder):$/;"	c
JSONLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^JSONLexer = JsonLexer  # for backwards compatibility with Pygments 1.5$/;"	v
JSONLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^JSONLexer = JsonLexer  # for backwards compatibility with Pygments 1.5$/;"	v
JSONObject	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^def JSONObject(state, encoding, strict, scan_once, object_hook,$/;"	f
JSONTestObject	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_recursion.py	/^class JSONTestObject:$/;"	c
JSON_ALLOW_NAN	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define JSON_ALLOW_NAN /;"	d	file:
JSON_ASCII_AS_STRING	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define JSON_ASCII_AS_STRING /;"	d	file:
JSON_ASCII_Check	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define JSON_ASCII_Check /;"	d	file:
JSON_Accu	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^} JSON_Accu;$/;"	t	typeref:struct:__anon1	file:
JSON_Accu_Accumulate	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^JSON_Accu_Accumulate(JSON_Accu *acc, PyObject *unicode)$/;"	f	file:
JSON_Accu_Destroy	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^JSON_Accu_Destroy(JSON_Accu *acc)$/;"	f	file:
JSON_Accu_FinishAsList	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^JSON_Accu_FinishAsList(JSON_Accu *acc)$/;"	f	file:
JSON_Accu_Init	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^JSON_Accu_Init(JSON_Accu *acc)$/;"	f	file:
JSON_IGNORE_NAN	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define JSON_IGNORE_NAN /;"	d	file:
JSON_InternFromString	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define JSON_InternFromString /;"	d	file:
JSON_Intern_GET_SIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define JSON_Intern_GET_SIZE /;"	d	file:
JSON_NewEmptyUnicode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define JSON_NewEmptyUnicode(/;"	d	file:
JSON_ParseEncoding	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^JSON_ParseEncoding(PyObject *encoding)$/;"	f	file:
JSON_UNICHR	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define JSON_UNICHR /;"	d	file:
JSON_UnicodeFromChar	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^JSON_UnicodeFromChar(JSON_UNICHR c)$/;"	f	file:
JS_IDENT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^JS_IDENT = JS_IDENT_START + '(?:' + JS_IDENT_PART + ')*'$/;"	v
JS_IDENT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^JS_IDENT = JS_IDENT_START + '(?:' + JS_IDENT_PART + ')*'$/;"	v
JS_IDENT_PART	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^JS_IDENT_PART = ('(?:[$' + uni.combine('Lu', 'Ll', 'Lt', 'Lm', 'Lo', 'Nl',$/;"	v
JS_IDENT_PART	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^JS_IDENT_PART = ('(?:[$' + uni.combine('Lu', 'Ll', 'Lt', 'Lm', 'Lo', 'Nl',$/;"	v
JS_IDENT_START	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^JS_IDENT_START = ('(?:[$_' + uni.combine('Lu', 'Ll', 'Lt', 'Lm', 'Lo', 'Nl') +$/;"	v
JS_IDENT_START	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^JS_IDENT_START = ('(?:[$_' + uni.combine('Lu', 'Ll', 'Lt', 'Lm', 'Lo', 'Nl') +$/;"	v
JadeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^class JadeLexer(ExtendedRegexLexer):$/;"	c
JadeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^    HamlLexer, ScamlLexer, JadeLexer$/;"	i
JadeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^class JadeLexer(ExtendedRegexLexer):$/;"	c
JadeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^    HamlLexer, ScamlLexer, JadeLexer$/;"	i
JagsLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/math.py	/^from pygments.lexers.modeling import BugsLexer, JagsLexer, StanLexer$/;"	i
JagsLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^class JagsLexer(RegexLexer):$/;"	c
JagsLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/math.py	/^from pygments.lexers.modeling import BugsLexer, JagsLexer, StanLexer$/;"	i
JagsLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^class JagsLexer(RegexLexer):$/;"	c
JapaneseContextAnalysis	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^class JapaneseContextAnalysis:$/;"	c
JasminLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^class JasminLexer(RegexLexer):$/;"	c
JasminLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^class JasminLexer(RegexLexer):$/;"	c
JavaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.jvm import JavaLexer, ScalaLexer$/;"	i
JavaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^class JavaLexer(RegexLexer):$/;"	c
JavaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^from pygments.lexers.jvm import JavaLexer$/;"	i
JavaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^from pygments.lexers.jvm import JavaLexer, TeaLangLexer$/;"	i
JavaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.jvm import JavaLexer, ScalaLexer$/;"	i
JavaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^class JavaLexer(RegexLexer):$/;"	c
JavaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^from pygments.lexers.jvm import JavaLexer$/;"	i
JavaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^from pygments.lexers.jvm import JavaLexer, TeaLangLexer$/;"	i
JavaParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/jvm.py	/^class JavaParser(TokenParser):$/;"	c
JavascriptDjangoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class JavascriptDjangoLexer(DelegatingLexer):$/;"	c
JavascriptDjangoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class JavascriptDjangoLexer(DelegatingLexer):$/;"	c
JavascriptErbLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class JavascriptErbLexer(DelegatingLexer):$/;"	c
JavascriptErbLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class JavascriptErbLexer(DelegatingLexer):$/;"	c
JavascriptGenshiLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class JavascriptGenshiLexer(DelegatingLexer):$/;"	c
JavascriptGenshiLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class JavascriptGenshiLexer(DelegatingLexer):$/;"	c
JavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^from pygments.lexers.javascript import JavascriptLexer$/;"	i
JavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^class JavascriptLexer(RegexLexer):$/;"	c
JavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^from pygments.lexers.javascript import JavascriptLexer$/;"	i
JavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^from pygments.lexers.javascript import JavascriptLexer, LassoLexer$/;"	i
JavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^    DartLexer, TypeScriptLexer, LassoLexer, ObjectiveJLexer, CoffeeScriptLexer$/;"	i
JavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^from pygments.lexers.javascript import JavascriptLexer$/;"	i
JavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^from pygments.lexers.javascript import JavascriptLexer$/;"	i
JavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^class JavascriptLexer(RegexLexer):$/;"	c
JavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^from pygments.lexers.javascript import JavascriptLexer$/;"	i
JavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^from pygments.lexers.javascript import JavascriptLexer, LassoLexer$/;"	i
JavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^    DartLexer, TypeScriptLexer, LassoLexer, ObjectiveJLexer, CoffeeScriptLexer$/;"	i
JavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^from pygments.lexers.javascript import JavascriptLexer$/;"	i
JavascriptPhpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class JavascriptPhpLexer(DelegatingLexer):$/;"	c
JavascriptPhpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class JavascriptPhpLexer(DelegatingLexer):$/;"	c
JavascriptSmartyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class JavascriptSmartyLexer(DelegatingLexer):$/;"	c
JavascriptSmartyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class JavascriptSmartyLexer(DelegatingLexer):$/;"	c
JoinArgs	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:JoinArgs(args)$/;"	f
JoinRanges	plugged/AdvancedSorters/autoload/AdvancedSorters/Ranges.vim	/^function! s:JoinRanges( bang, startLnum, endLnum, arguments, ArgumentParser, rangeName, RangeCreator )$/;"	f
JpgImageFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^class JpgImageFormatter(ImageFormatter):$/;"	c
JpgImageFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^class JpgImageFormatter(ImageFormatter):$/;"	c
JsonFormatter	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^class JsonFormatter(logging.Formatter):$/;"	c
JsonLdLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^class JsonLdLexer(JsonLexer):$/;"	c
JsonLdLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^class JsonLdLexer(JsonLexer):$/;"	c
JsonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^class JsonLexer(RegexLexer):$/;"	c
JsonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^from pygments.lexers.data import JsonLexer$/;"	i
JsonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^class JsonLexer(RegexLexer):$/;"	c
JsonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^from pygments.lexers.data import JsonLexer$/;"	i
JsonParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/data.py	/^class JsonParser(TokenParser):$/;"	c
JspLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class JspLexer(DelegatingLexer):$/;"	c
JspLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class JspLexer(DelegatingLexer):$/;"	c
JspRootLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class JspRootLexer(RegexLexer):$/;"	c
JspRootLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class JspRootLexer(RegexLexer):$/;"	c
JuliaConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^class JuliaConsoleLexer(Lexer):$/;"	c
JuliaConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/math.py	/^from pygments.lexers.julia import JuliaLexer, JuliaConsoleLexer$/;"	i
JuliaConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^class JuliaConsoleLexer(Lexer):$/;"	c
JuliaConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/math.py	/^from pygments.lexers.julia import JuliaLexer, JuliaConsoleLexer$/;"	i
JuliaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^class JuliaLexer(RegexLexer):$/;"	c
JuliaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/math.py	/^from pygments.lexers.julia import JuliaLexer, JuliaConsoleLexer$/;"	i
JuliaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^class JuliaLexer(RegexLexer):$/;"	c
JuliaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/math.py	/^from pygments.lexers.julia import JuliaLexer, JuliaConsoleLexer$/;"	i
JumpInit	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit() abort$/;"	f
K	plugged/vim-go/ftplugin/go.vim	/^    nnoremap <buffer> <silent> K :GoDoc<cr>$/;"	m
KEYWORD	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    KEYWORD = ('fn', 'do', 'end', 'after', 'else', 'rescue', 'catch')$/;"	v	class:ElixirLexer
KEYWORD	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^KEYWORD = Token.Name.Function$/;"	v
KEYWORD	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    KEYWORD = ('fn', 'do', 'end', 'after', 'else', 'rescue', 'catch')$/;"	v	class:ElixirLexer
KEYWORD	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^KEYWORD = Token.Name.Function$/;"	v
KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^KEYWORDS = [$/;"	v
KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_postgres_builtins.py	/^KEYWORDS = ($/;"	v
KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_stan_builtins.py	/^KEYWORDS = ($/;"	v
KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    PSEUDO_TYPES, PLPGSQL_KEYWORDS$/;"	i
KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_postgres_builtins.py	/^KEYWORDS = ($/;"	v
KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_stan_builtins.py	/^KEYWORDS = ($/;"	v
KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    PSEUDO_TYPES, PLPGSQL_KEYWORDS$/;"	i
KEYWORDS_URL	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_postgres_builtins.py	/^    KEYWORDS_URL = SOURCE_URL + '\/doc\/src\/sgml\/keywords.sgml'$/;"	v
KEYWORDS_URL	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_postgres_builtins.py	/^    KEYWORDS_URL = SOURCE_URL + '\/doc\/src\/sgml\/keywords.sgml'$/;"	v
KEYWORD_OPERATOR	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    KEYWORD_OPERATOR = ('not', 'and', 'or', 'when', 'in')$/;"	v	class:ElixirLexer
KEYWORD_OPERATOR	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    KEYWORD_OPERATOR = ('not', 'and', 'or', 'when', 'in')$/;"	v	class:ElixirLexer
KOI8R_CharToOrderMap	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langcyrillicmodel.py	/^KOI8R_CharToOrderMap = ($/;"	v
KalLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^class KalLexer(RegexLexer):$/;"	c
KalLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^class KalLexer(RegexLexer):$/;"	c
KconfigLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^class KconfigLexer(RegexLexer):$/;"	c
KconfigLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.configs import KconfigLexer, Cfengine3Lexer$/;"	i
KconfigLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^class KconfigLexer(RegexLexer):$/;"	c
KconfigLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.configs import KconfigLexer, Cfengine3Lexer$/;"	i
KeyMap.Add	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
KeysView	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    from _abcoll import KeysView, ValuesView, ItemsView$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    string_to_tokentype$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/apl.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    Other, Keyword, Operator$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    Number, Punctuation, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    Number, Punctuation, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/chapel.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    Number, Punctuation, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^    Punctuation, Number$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dalvik.py	/^    Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    Punctuation, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^    Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    Number, Punctuation, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^    Number, Punctuation, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/eiffel.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    Number, Punctuation, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    Number, Punctuation, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^from pygments.token import Text, Comment, Keyword, Name, String, Number$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    Number, Punctuation, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/foxpro.py	/^     Name, String$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^    String, Number, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    Number, Punctuation, String$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    Number, Punctuation, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    Number, Punctuation, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/idl.py	/^from pygments.token import Text, Comment, Operator, Keyword, Name, Number$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^from pygments.token import Text, Comment, Keyword, Name, String$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^    Name, String, Number$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/iolang.py	/^    Number$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    Number, Punctuation, Other$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^    Number, Punctuation, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    Number, Punctuation, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    Number, Punctuation, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nit.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^    Number, Punctuation, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    Number, Punctuation, Literal, Comment$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ooc.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    Number, Punctuation, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    Number, Punctuation, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    Number, Punctuation, Other$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    Number, Punctuation, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    Number, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^    Keyword, Name$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^    Number, Punctuation, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^     Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/snobol.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^    Number$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/testing.py	/^from pygments.token import Comment, Keyword, Name, String$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    Number, Generic, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    Number, Punctuation, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    Number, Punctuation, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/autumn.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/borland.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/bw.py	/^     Operator, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/colorful.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/default.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/emacs.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/friendly.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/fruity.py	/^    Generic, Number, String, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/igor.py	/^from pygments.token import Keyword, Name, Comment, String$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/manni.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/murphy.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/pastie.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/perldoc.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/rrt.py	/^from pygments.token import Comment, Name, Keyword, String$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/trac.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vs.py	/^     Operator, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/xcode.py	/^     Number, Operator, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^Keyword     = Token.Keyword$/;"	v
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    string_to_tokentype$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/apl.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    Other, Keyword, Operator$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    Number, Punctuation, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    Number, Punctuation, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/chapel.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    Number, Punctuation, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^    Punctuation, Number$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dalvik.py	/^    Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    Punctuation, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^    Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    Number, Punctuation, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^    Number, Punctuation, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/eiffel.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    Number, Punctuation, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    Number, Punctuation, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^from pygments.token import Text, Comment, Keyword, Name, String, Number$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    Number, Punctuation, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/foxpro.py	/^     Name, String$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^    String, Number, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    Number, Punctuation, String$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    Number, Punctuation, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    Number, Punctuation, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/idl.py	/^from pygments.token import Text, Comment, Operator, Keyword, Name, Number$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^from pygments.token import Text, Comment, Keyword, Name, String$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^    Name, String, Number$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/iolang.py	/^    Number$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    Number, Punctuation, Other$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^    Number, Punctuation, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    Number, Punctuation, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    Number, Punctuation, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nit.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^    Number, Punctuation, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    Number, Punctuation, Literal, Comment$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ooc.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    Number, Punctuation, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    Number, Punctuation, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    Number, Punctuation, Other$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    Number, Punctuation, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    Number, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^    Keyword, Name$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^    Number, Punctuation, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^     Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/snobol.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^    Number$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/testing.py	/^from pygments.token import Comment, Keyword, Name, String$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    Number, Generic, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    Number, Punctuation, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^    Number, Punctuation$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    Number, Punctuation, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/autumn.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/borland.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/bw.py	/^     Operator, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/colorful.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/default.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/emacs.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/friendly.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/fruity.py	/^    Generic, Number, String, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/igor.py	/^from pygments.token import Keyword, Name, Comment, String$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/manni.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/murphy.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/pastie.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/perldoc.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/rrt.py	/^from pygments.token import Comment, Name, Keyword, String$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/trac.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vs.py	/^     Operator, Generic$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/xcode.py	/^     Number, Operator, Literal$/;"	i
Keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^Keyword     = Token.Keyword$/;"	v
KeywordCall	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class KeywordCall(Tokenizer):$/;"	c
KeywordCall	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class KeywordCall(Tokenizer):$/;"	c
KeywordCaseFilter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^class KeywordCaseFilter(Filter):$/;"	c
KeywordCaseFilter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^class KeywordCaseFilter(Filter):$/;"	c
KeywordSetting	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class KeywordSetting(TestCaseSetting):$/;"	c
KeywordSetting	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class KeywordSetting(TestCaseSetting):$/;"	c
KeywordTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class KeywordTable(TestCaseTable):$/;"	c
KeywordTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class KeywordTable(TestCaseTable):$/;"	c
KnitChild	plugged/Nvim-R/R/common_global.vim	/^function KnitChild(line, godown)$/;"	f
Koi8rModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langcyrillicmodel.py	/^Koi8rModel = {$/;"	v
Koi8rModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcsgroupprober.py	/^from .langcyrillicmodel import (Win1251CyrillicModel, Koi8rModel,$/;"	i
KokaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/functional.py	/^    KokaLexer$/;"	i
KokaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^class KokaLexer(RegexLexer):$/;"	c
KokaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/functional.py	/^    KokaLexer$/;"	i
KokaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^class KokaLexer(RegexLexer):$/;"	c
KotlinLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^class KotlinLexer(RegexLexer):$/;"	c
KotlinLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^class KotlinLexer(RegexLexer):$/;"	c
LAMBDA_LIST_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cl_builtins.py	/^LAMBDA_LIST_KEYWORDS = set(($/;"	v
LAMBDA_LIST_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^            BUILTIN_TYPES, BUILTIN_CLASSES$/;"	i
LAMBDA_LIST_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cl_builtins.py	/^LAMBDA_LIST_KEYWORDS = set(($/;"	v
LAMBDA_LIST_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^            BUILTIN_TYPES, BUILTIN_CLASSES$/;"	i
LDFLAGS	plugged/vimproc.vim/make_mac.mak	/^LDFLAGS=$/;"	m
LEXERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^from pygments.lexers._mapping import LEXERS$/;"	i
LEXERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_mapping.py	/^LEXERS = {$/;"	v
LEXERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^        from pygments.lexers._mapping import LEXERS$/;"	i
LEXERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^from pygments.lexers._mapping import LEXERS$/;"	i
LEXERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_mapping.py	/^LEXERS = {$/;"	v
LEXERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^        from pygments.lexers._mapping import LEXERS$/;"	i
LEXER_ENTRY_POINT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/plugin.py	/^LEXER_ENTRY_POINT = 'pygments.lexers'$/;"	v
LEXER_ENTRY_POINT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/plugin.py	/^LEXER_ENTRY_POINT = 'pygments.lexers'$/;"	v
LIB	plugged/delimitMate/Makefile	/^LIB      =  $(wildcard autoload\/*.vim)$/;"	m
LOGICAL_HEBREW_NAME	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^LOGICAL_HEBREW_NAME = "windows-1255"$/;"	v
LSLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^class LSLLexer(RegexLexer):$/;"	c
LSLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^class LSLLexer(RegexLexer):$/;"	c
LassoCssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class LassoCssLexer(DelegatingLexer):$/;"	c
LassoCssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class LassoCssLexer(DelegatingLexer):$/;"	c
LassoHtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class LassoHtmlLexer(DelegatingLexer):$/;"	c
LassoHtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class LassoHtmlLexer(DelegatingLexer):$/;"	c
LassoHtmlParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^class LassoHtmlParser(HtmlDjangoParser):$/;"	c
LassoJavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class LassoJavascriptLexer(DelegatingLexer):$/;"	c
LassoJavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class LassoJavascriptLexer(DelegatingLexer):$/;"	c
LassoJavascriptParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^class LassoJavascriptParser(TokenParser):$/;"	c
LassoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^class LassoLexer(RegexLexer):$/;"	c
LassoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^from pygments.lexers.javascript import JavascriptLexer, LassoLexer$/;"	i
LassoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^    DartLexer, TypeScriptLexer, LassoLexer, ObjectiveJLexer, CoffeeScriptLexer$/;"	i
LassoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^class LassoLexer(RegexLexer):$/;"	c
LassoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^from pygments.lexers.javascript import JavascriptLexer, LassoLexer$/;"	i
LassoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^    DartLexer, TypeScriptLexer, LassoLexer, ObjectiveJLexer, CoffeeScriptLexer$/;"	i
LassoXmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class LassoXmlLexer(DelegatingLexer):$/;"	c
LassoXmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class LassoXmlLexer(DelegatingLexer):$/;"	c
LatexEmbeddedLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^from pygments.formatters.latex import LatexEmbeddedLexer, LatexFormatter$/;"	i
LatexEmbeddedLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^class LatexEmbeddedLexer(Lexer):$/;"	c
LatexEmbeddedLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^from pygments.formatters.latex import LatexEmbeddedLexer, LatexFormatter$/;"	i
LatexEmbeddedLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^class LatexEmbeddedLexer(Lexer):$/;"	c
LatexFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^from pygments.formatters.latex import LatexEmbeddedLexer, LatexFormatter$/;"	i
LatexFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^class LatexFormatter(Formatter):$/;"	c
LatexFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^from pygments.formatters.latex import LatexEmbeddedLexer, LatexFormatter$/;"	i
LatexFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^class LatexFormatter(Formatter):$/;"	c
Latin1ClassModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^Latin1ClassModel = ($/;"	v
Latin1Prober	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^class Latin1Prober(CharSetProber):$/;"	c
Latin1Prober	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^from .latin1prober import Latin1Prober  # windows-1252$/;"	i
Latin1_CharToClass	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^Latin1_CharToClass = ($/;"	v
Latin2HungarianModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langhungarianmodel.py	/^Latin2HungarianModel = {$/;"	v
Latin2HungarianModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcsgroupprober.py	/^from .langhungarianmodel import Latin2HungarianModel, Win1250HungarianModel$/;"	i
Latin2_HungarianCharToOrderMap	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langhungarianmodel.py	/^Latin2_HungarianCharToOrderMap = ($/;"	v
Latin5BulgarianModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langbulgarianmodel.py	/^Latin5BulgarianModel = {$/;"	v
Latin5BulgarianModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcsgroupprober.py	/^from .langbulgarianmodel import Latin5BulgarianModel, Win1251BulgarianModel$/;"	i
Latin5CyrillicModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langcyrillicmodel.py	/^Latin5CyrillicModel = {$/;"	v
Latin5_BulgarianCharToOrderMap	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langbulgarianmodel.py	/^Latin5_BulgarianCharToOrderMap = ($/;"	v
Latin7GreekModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langgreekmodel.py	/^Latin7GreekModel = {$/;"	v
Latin7GreekModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcsgroupprober.py	/^from .langgreekmodel import Latin7GreekModel, Win1253GreekModel$/;"	i
Latin7_CharToOrderMap	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langgreekmodel.py	/^Latin7_CharToOrderMap = ($/;"	v
LazyDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^from pytz.lazy import LazyDict, LazyList, LazySet$/;"	i
LazyDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^class LazyDict(DictMixin):$/;"	c
LazyDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^from pytz.lazy import LazyDict, LazyList, LazySet$/;"	i
LazyDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^class LazyDict(DictMixin):$/;"	c
LazyList	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^from pytz.lazy import LazyDict, LazyList, LazySet$/;"	i
LazyList	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^        class LazyList(list):$/;"	c	function:LazyList.__new__
LazyList	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^class LazyList(list):$/;"	c
LazyList	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^from pytz.lazy import LazyDict, LazyList, LazySet$/;"	i
LazyList	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^        class LazyList(list):$/;"	c	function:LazyList.__new__
LazyList	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^class LazyList(list):$/;"	c
LazySet	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^from pytz.lazy import LazyDict, LazyList, LazySet$/;"	i
LazySet	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^        class LazySet(set):$/;"	c	function:LazySet.__new__
LazySet	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^class LazySet(set):$/;"	c
LazySet	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^from pytz.lazy import LazyDict, LazyList, LazySet$/;"	i
LazySet	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^        class LazySet(set):$/;"	c	function:LazySet.__new__
LazySet	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^class LazySet(set):$/;"	c
LeanLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^class LeanLexer(RegexLexer):$/;"	c
LeanLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^class LeanLexer(RegexLexer):$/;"	c
Left	plugged/tabular/autoload/tabular.vim	/^function! s:Left(string, fieldwidth)$/;"	f
LegacyUTCTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class LegacyUTCTestCase(unittest.TestCase, BaseTzInfoTestCase):$/;"	c
LegacyUTCTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class LegacyUTCTestCase(unittest.TestCase, BaseTzInfoTestCase):$/;"	c
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^from pygments.lexer import Lexer$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^class Lexer(object):$/;"	c
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, do_insertions, default$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    include, default$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    default, include$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, combined, do_insertions$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    this, combined, default, words$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    do_insertions, using$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, words, do_insertions$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    using, this, default$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    default, words, combined, do_insertions$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^from pygments.lexer import Lexer, RegexLexer, include, words, do_insertions$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^from pygments.lexer import Lexer$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    bygroups, default, LexerContext, do_insertions, words$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, include$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^from pygments.lexer import Lexer$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, words$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    include, using, this, default, combined$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^from pygments.lexer import Lexer$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^class Lexer(object):$/;"	c
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, do_insertions, default$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    include, default$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    default, include$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, combined, do_insertions$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    this, combined, default, words$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    do_insertions, using$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, words, do_insertions$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    using, this, default$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    default, words, combined, do_insertions$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^from pygments.lexer import Lexer, RegexLexer, include, words, do_insertions$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^from pygments.lexer import Lexer$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    bygroups, default, LexerContext, do_insertions, words$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, include$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^from pygments.lexer import Lexer$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, words$/;"	i
Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    include, using, this, default, combined$/;"	i
LexerContext	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^class LexerContext(object):$/;"	c
LexerContext	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    include, bygroups, inherit$/;"	i
LexerContext	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    bygroups, default, LexerContext, do_insertions, words$/;"	i
LexerContext	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^class LexerContext(object):$/;"	c
LexerContext	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    include, bygroups, inherit$/;"	i
LexerContext	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    bygroups, default, LexerContext, do_insertions, words$/;"	i
LexerMeta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^class LexerMeta(type):$/;"	c
LexerMeta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^class LexerMeta(type):$/;"	c
LifoQueue	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    from Queue import LifoQueue, Empty, Full$/;"	i
LifoQueue	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    from queue import LifoQueue, Empty, Full$/;"	i
Light	configs/gui.vim	/^command! Light execute "LuciusLight"$/;"	c
LightLine	plugged/lightline.vim/plugin/lightline.vim	/^augroup LightLine$/;"	a
LighttpdConfLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^class LighttpdConfLexer(RegexLexer):$/;"	c
LighttpdConfLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^    SquidConfLexer, LighttpdConfLexer, IniLexer, RegeditLexer, PropertiesLexer$/;"	i
LighttpdConfLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^class LighttpdConfLexer(RegexLexer):$/;"	c
LighttpdConfLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^    SquidConfLexer, LighttpdConfLexer, IniLexer, RegeditLexer, PropertiesLexer$/;"	i
LimboLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^class LimboLexer(RegexLexer):$/;"	c
LimboLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^class LimboLexer(RegexLexer):$/;"	c
LineHasOpeningBrackets	plugged/vim-javascript/indent/javascript.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
LiquidLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class LiquidLexer(RegexLexer):$/;"	c
LiquidLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class LiquidLexer(RegexLexer):$/;"	c
ListForJson	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^class ListForJson(list):$/;"	c
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    Punctuation, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^    Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    Number, Punctuation, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    Number, Punctuation, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^    Number, Punctuation, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    Number, Punctuation, Literal, Comment$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    Number, Generic, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    Number, Punctuation, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/xcode.py	/^     Number, Operator, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^Literal     = Token.Literal$/;"	v
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    Punctuation, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^    Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    Number, Punctuation, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    Number, Punctuation, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^    Number, Punctuation, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    Number, Punctuation, Literal, Comment$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    Number, Generic, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    Number, Punctuation, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/xcode.py	/^     Number, Operator, Literal$/;"	i
Literal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^Literal     = Token.Literal$/;"	v
Literals	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    Literals = ('AppleScript', 'current application', 'false', 'linefeed',$/;"	v	class:AppleScriptLexer
Literals	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    Literals = ('AppleScript', 'current application', 'false', 'linefeed',$/;"	v	class:AppleScriptLexer
LiterateAgdaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^class LiterateAgdaLexer(LiterateLexer):$/;"	c
LiterateAgdaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^class LiterateAgdaLexer(LiterateLexer):$/;"	c
LiterateCryptolLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^class LiterateCryptolLexer(LiterateLexer):$/;"	c
LiterateCryptolLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^class LiterateCryptolLexer(LiterateLexer):$/;"	c
LiterateHaskellLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/functional.py	/^    KokaLexer$/;"	i
LiterateHaskellLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^class LiterateHaskellLexer(LiterateLexer):$/;"	c
LiterateHaskellLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/functional.py	/^    KokaLexer$/;"	i
LiterateHaskellLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^class LiterateHaskellLexer(LiterateLexer):$/;"	c
LiterateIdrisLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^class LiterateIdrisLexer(LiterateLexer):$/;"	c
LiterateIdrisLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^class LiterateIdrisLexer(LiterateLexer):$/;"	c
LiterateLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^class LiterateLexer(Lexer):$/;"	c
LiterateLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^class LiterateLexer(Lexer):$/;"	c
LiveScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^class LiveScriptLexer(RegexLexer):$/;"	c
LiveScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^    DartLexer, TypeScriptLexer, LassoLexer, ObjectiveJLexer, CoffeeScriptLexer$/;"	i
LiveScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^class LiveScriptLexer(RegexLexer):$/;"	c
LiveScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^    DartLexer, TypeScriptLexer, LassoLexer, ObjectiveJLexer, CoffeeScriptLexer$/;"	i
Ll	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Ll = u'a-z\\xb5\\xdf-\\xf6\\xf8-\\xff\\u0101\\u0103\\u0105\\u0107\\u0109\\u010b\\u010d\\u010f\\u0111\\u0113\\u0115\\u0117\\u0119\\u011b\\u011d\\u011f\\u0121\\u0123\\u0125\\u0127\\u0129\\u012b\\u012d\\u012f\\u0131\\u0133\\u0135\\u0137-\\u0138\\u013a\\u013c\\u013e\\u0140\\u0142\\u0144\\u0146\\u0148-\\u0149\\u014b\\u014d\\u014f\\u0151\\u0153\\u0155\\u0157\\u0159\\u015b\\u015d\\u015f\\u0161\\u0163\\u0165\\u0167\\u0169\\u016b\\u016d\\u016f\\u0171\\u0173\\u0175\\u0177\\u017a\\u017c\\u017e-\\u0180\\u0183\\u0185\\u0188\\u018c-\\u018d\\u0192\\u0195\\u0199-\\u019b\\u019e\\u01a1\\u01a3\\u01a5\\u01a8\\u01aa-\\u01ab\\u01ad\\u01b0\\u01b4\\u01b6\\u01b9-\\u01ba\\u01bd-\\u01bf\\u01c6\\u01c9\\u01cc\\u01ce\\u01d0\\u01d2\\u01d4\\u01d6\\u01d8\\u01da\\u01dc-\\u01dd\\u01df\\u01e1\\u01e3\\u01e5\\u01e7\\u01e9\\u01eb\\u01ed\\u01ef-\\u01f0\\u01f3\\u01f5\\u01f9\\u01fb\\u01fd\\u01ff\\u0201\\u0203\\u0205\\u0207\\u0209\\u020b\\u020d\\u020f\\u0211\\u0213\\u0215\\u0217\\u0219\\u021b\\u021d\\u021f\\u0221\\u0223\\u0225\\u0227\\u0229\\u022b\\u022d\\u022f\\u0231\\u0233-\\u0239\\u023c\\u023f-\\u0240\\u0242\\u0247\\u0249\\u024b\\u024d\\u024f-\\u0293\\u0295-\\u02af\\u0371\\u0373\\u0377\\u037b-\\u037d\\u0390\\u03ac-\\u03ce\\u03d0-\\u03d1\\u03d5-\\u03d7\\u03d9\\u03db\\u03dd\\u03df\\u03e1\\u03e3\\u03e5\\u03e7\\u03e9\\u03eb\\u03ed\\u03ef-\\u03f3\\u03f5\\u03f8\\u03fb-\\u03fc\\u0430-\\u045f\\u0461\\u0463\\u0465\\u0467\\u0469\\u046b\\u046d\\u046f\\u0471\\u0473\\u0475\\u0477\\u0479\\u047b\\u047d\\u047f\\u0481\\u048b\\u048d\\u048f\\u0491\\u0493\\u0495\\u0497\\u0499\\u049b\\u049d\\u049f\\u04a1\\u04a3\\u04a5\\u04a7\\u04a9\\u04ab\\u04ad\\u04af\\u04b1\\u04b3\\u04b5\\u04b7\\u04b9\\u04bb\\u04bd\\u04bf\\u04c2\\u04c4\\u04c6\\u04c8\\u04ca\\u04cc\\u04ce-\\u04cf\\u04d1\\u04d3\\u04d5\\u04d7\\u04d9\\u04db\\u04dd\\u04df\\u04e1\\u04e3\\u04e5\\u04e7\\u04e9\\u04eb\\u04ed\\u04ef\\u04f1\\u04f3\\u04f5\\u04f7\\u04f9\\u04fb\\u04fd\\u04ff\\u0501\\u0503\\u0505\\u0507\\u0509\\u050b\\u050d\\u050f\\u0511\\u0513\\u0515\\u0517\\u0519\\u051b\\u051d\\u051f\\u0521\\u0523\\u0525\\u0527\\u0561-\\u0587\\u1d00-\\u1d2b\\u1d6b-\\u1d77\\u1d79-\\u1d9a\\u1e01\\u1e03\\u1e05\\u1e07\\u1e09\\u1e0b\\u1e0d\\u1e0f\\u1e11\\u1e13\\u1e15\\u1e17\\u1e19\\u1e1b\\u1e1d\\u1e1f\\u1e21\\u1e23\\u1e25\\u1e27\\u1e29\\u1e2b\\u1e2d\\u1e2f\\u1e31\\u1e33\\u1e35\\u1e37\\u1e39\\u1e3b\\u1e3d\\u1e3f\\u1e41\\u1e43\\u1e45\\u1e47\\u1e49\\u1e4b\\u1e4d\\u1e4f\\u1e51\\u1e53\\u1e55\\u1e57\\u1e59\\u1e5b\\u1e5d\\u1e5f\\u1e61\\u1e63\\u1e65\\u1e67\\u1e69\\u1e6b\\u1e6d\\u1e6f\\u1e71\\u1e73\\u1e75\\u1e77\\u1e79\\u1e7b\\u1e7d\\u1e7f\\u1e81\\u1e83\\u1e85\\u1e87\\u1e89\\u1e8b\\u1e8d\\u1e8f\\u1e91\\u1e93\\u1e95-\\u1e9d\\u1e9f\\u1ea1\\u1ea3\\u1ea5\\u1ea7\\u1ea9\\u1eab\\u1ead\\u1eaf\\u1eb1\\u1eb3\\u1eb5\\u1eb7\\u1eb9\\u1ebb\\u1ebd\\u1ebf\\u1ec1\\u1ec3\\u1ec5\\u1ec7\\u1ec9\\u1ecb\\u1ecd\\u1ecf\\u1ed1\\u1ed3\\u1ed5\\u1ed7\\u1ed9\\u1edb\\u1edd\\u1edf\\u1ee1\\u1ee3\\u1ee5\\u1ee7\\u1ee9\\u1eeb\\u1eed\\u1eef\\u1ef1\\u1ef3\\u1ef5\\u1ef7\\u1ef9\\u1efb\\u1efd\\u1eff-\\u1f07\\u1f10-\\u1f15\\u1f20-\\u1f27\\u1f30-\\u1f37\\u1f40-\\u1f45\\u1f50-\\u1f57\\u1f60-\\u1f67\\u1f70-\\u1f7d\\u1f80-\\u1f87\\u1f90-\\u1f97\\u1fa0-\\u1fa7\\u1fb0-\\u1fb4\\u1fb6-\\u1fb7\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fc7\\u1fd0-\\u1fd3\\u1fd6-\\u1fd7\\u1fe0-\\u1fe7\\u1ff2-\\u1ff4\\u1ff6-\\u1ff7\\u210a\\u210e-\\u210f\\u2113\\u212f\\u2134\\u2139\\u213c-\\u213d\\u2146-\\u2149\\u214e\\u2184\\u2c30-\\u2c5e\\u2c61\\u2c65-\\u2c66\\u2c68\\u2c6a\\u2c6c\\u2c71\\u2c73-\\u2c74\\u2c76-\\u2c7b\\u2c81\\u2c83\\u2c85\\u2c87\\u2c89\\u2c8b\\u2c8d\\u2c8f\\u2c91\\u2c93\\u2c95\\u2c97\\u2c99\\u2c9b\\u2c9d\\u2c9f\\u2ca1\\u2ca3\\u2ca5\\u2ca7\\u2ca9\\u2cab\\u2cad\\u2caf\\u2cb1\\u2cb3\\u2cb5\\u2cb7\\u2cb9\\u2cbb\\u2cbd\\u2cbf\\u2cc1\\u2cc3\\u2cc5\\u2cc7\\u2cc9\\u2ccb\\u2ccd\\u2ccf\\u2cd1\\u2cd3\\u2cd5\\u2cd7\\u2cd9\\u2cdb\\u2cdd\\u2cdf\\u2ce1\\u2ce3-\\u2ce4\\u2cec\\u2cee\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\ua641\\ua643\\ua645\\ua647\\ua649\\ua64b\\ua64d\\ua64f\\ua651\\ua653\\ua655\\ua657\\ua659\\ua65b\\ua65d\\ua65f\\ua661\\ua663\\ua665\\ua667\\ua669\\ua66b\\ua66d\\ua681\\ua683\\ua685\\ua687\\ua689\\ua68b\\ua68d\\ua68f\\ua691\\ua693\\ua695\\ua697\\ua723\\ua725\\ua727\\ua729\\ua72b\\ua72d\\ua72f-\\ua731\\ua733\\ua735\\ua737\\ua739\\ua73b\\ua73d\\ua73f\\ua741\\ua743\\ua745\\ua747\\ua749\\ua74b\\ua74d\\ua74f\\ua751\\ua753\\ua755\\ua757\\ua759\\ua75b\\ua75d\\ua75f\\ua761\\ua763\\ua765\\ua767\\ua769\\ua76b\\ua76d\\ua76f\\ua771-\\ua778\\ua77a\\ua77c\\ua77f\\ua781\\ua783\\ua785\\ua787\\ua78c\\ua78e\\ua791\\ua793\\ua7a1\\ua7a3\\ua7a5\\ua7a7\\ua7a9\\ua7fa\\ufb00-\\ufb06\\ufb13-\\ufb17\\uff41-\\uff5a'$/;"	v
Ll	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Ll = u'a-z\\xb5\\xdf-\\xf6\\xf8-\\xff\\u0101\\u0103\\u0105\\u0107\\u0109\\u010b\\u010d\\u010f\\u0111\\u0113\\u0115\\u0117\\u0119\\u011b\\u011d\\u011f\\u0121\\u0123\\u0125\\u0127\\u0129\\u012b\\u012d\\u012f\\u0131\\u0133\\u0135\\u0137-\\u0138\\u013a\\u013c\\u013e\\u0140\\u0142\\u0144\\u0146\\u0148-\\u0149\\u014b\\u014d\\u014f\\u0151\\u0153\\u0155\\u0157\\u0159\\u015b\\u015d\\u015f\\u0161\\u0163\\u0165\\u0167\\u0169\\u016b\\u016d\\u016f\\u0171\\u0173\\u0175\\u0177\\u017a\\u017c\\u017e-\\u0180\\u0183\\u0185\\u0188\\u018c-\\u018d\\u0192\\u0195\\u0199-\\u019b\\u019e\\u01a1\\u01a3\\u01a5\\u01a8\\u01aa-\\u01ab\\u01ad\\u01b0\\u01b4\\u01b6\\u01b9-\\u01ba\\u01bd-\\u01bf\\u01c6\\u01c9\\u01cc\\u01ce\\u01d0\\u01d2\\u01d4\\u01d6\\u01d8\\u01da\\u01dc-\\u01dd\\u01df\\u01e1\\u01e3\\u01e5\\u01e7\\u01e9\\u01eb\\u01ed\\u01ef-\\u01f0\\u01f3\\u01f5\\u01f9\\u01fb\\u01fd\\u01ff\\u0201\\u0203\\u0205\\u0207\\u0209\\u020b\\u020d\\u020f\\u0211\\u0213\\u0215\\u0217\\u0219\\u021b\\u021d\\u021f\\u0221\\u0223\\u0225\\u0227\\u0229\\u022b\\u022d\\u022f\\u0231\\u0233-\\u0239\\u023c\\u023f-\\u0240\\u0242\\u0247\\u0249\\u024b\\u024d\\u024f-\\u0293\\u0295-\\u02af\\u0371\\u0373\\u0377\\u037b-\\u037d\\u0390\\u03ac-\\u03ce\\u03d0-\\u03d1\\u03d5-\\u03d7\\u03d9\\u03db\\u03dd\\u03df\\u03e1\\u03e3\\u03e5\\u03e7\\u03e9\\u03eb\\u03ed\\u03ef-\\u03f3\\u03f5\\u03f8\\u03fb-\\u03fc\\u0430-\\u045f\\u0461\\u0463\\u0465\\u0467\\u0469\\u046b\\u046d\\u046f\\u0471\\u0473\\u0475\\u0477\\u0479\\u047b\\u047d\\u047f\\u0481\\u048b\\u048d\\u048f\\u0491\\u0493\\u0495\\u0497\\u0499\\u049b\\u049d\\u049f\\u04a1\\u04a3\\u04a5\\u04a7\\u04a9\\u04ab\\u04ad\\u04af\\u04b1\\u04b3\\u04b5\\u04b7\\u04b9\\u04bb\\u04bd\\u04bf\\u04c2\\u04c4\\u04c6\\u04c8\\u04ca\\u04cc\\u04ce-\\u04cf\\u04d1\\u04d3\\u04d5\\u04d7\\u04d9\\u04db\\u04dd\\u04df\\u04e1\\u04e3\\u04e5\\u04e7\\u04e9\\u04eb\\u04ed\\u04ef\\u04f1\\u04f3\\u04f5\\u04f7\\u04f9\\u04fb\\u04fd\\u04ff\\u0501\\u0503\\u0505\\u0507\\u0509\\u050b\\u050d\\u050f\\u0511\\u0513\\u0515\\u0517\\u0519\\u051b\\u051d\\u051f\\u0521\\u0523\\u0525\\u0527\\u0561-\\u0587\\u1d00-\\u1d2b\\u1d6b-\\u1d77\\u1d79-\\u1d9a\\u1e01\\u1e03\\u1e05\\u1e07\\u1e09\\u1e0b\\u1e0d\\u1e0f\\u1e11\\u1e13\\u1e15\\u1e17\\u1e19\\u1e1b\\u1e1d\\u1e1f\\u1e21\\u1e23\\u1e25\\u1e27\\u1e29\\u1e2b\\u1e2d\\u1e2f\\u1e31\\u1e33\\u1e35\\u1e37\\u1e39\\u1e3b\\u1e3d\\u1e3f\\u1e41\\u1e43\\u1e45\\u1e47\\u1e49\\u1e4b\\u1e4d\\u1e4f\\u1e51\\u1e53\\u1e55\\u1e57\\u1e59\\u1e5b\\u1e5d\\u1e5f\\u1e61\\u1e63\\u1e65\\u1e67\\u1e69\\u1e6b\\u1e6d\\u1e6f\\u1e71\\u1e73\\u1e75\\u1e77\\u1e79\\u1e7b\\u1e7d\\u1e7f\\u1e81\\u1e83\\u1e85\\u1e87\\u1e89\\u1e8b\\u1e8d\\u1e8f\\u1e91\\u1e93\\u1e95-\\u1e9d\\u1e9f\\u1ea1\\u1ea3\\u1ea5\\u1ea7\\u1ea9\\u1eab\\u1ead\\u1eaf\\u1eb1\\u1eb3\\u1eb5\\u1eb7\\u1eb9\\u1ebb\\u1ebd\\u1ebf\\u1ec1\\u1ec3\\u1ec5\\u1ec7\\u1ec9\\u1ecb\\u1ecd\\u1ecf\\u1ed1\\u1ed3\\u1ed5\\u1ed7\\u1ed9\\u1edb\\u1edd\\u1edf\\u1ee1\\u1ee3\\u1ee5\\u1ee7\\u1ee9\\u1eeb\\u1eed\\u1eef\\u1ef1\\u1ef3\\u1ef5\\u1ef7\\u1ef9\\u1efb\\u1efd\\u1eff-\\u1f07\\u1f10-\\u1f15\\u1f20-\\u1f27\\u1f30-\\u1f37\\u1f40-\\u1f45\\u1f50-\\u1f57\\u1f60-\\u1f67\\u1f70-\\u1f7d\\u1f80-\\u1f87\\u1f90-\\u1f97\\u1fa0-\\u1fa7\\u1fb0-\\u1fb4\\u1fb6-\\u1fb7\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fc7\\u1fd0-\\u1fd3\\u1fd6-\\u1fd7\\u1fe0-\\u1fe7\\u1ff2-\\u1ff4\\u1ff6-\\u1ff7\\u210a\\u210e-\\u210f\\u2113\\u212f\\u2134\\u2139\\u213c-\\u213d\\u2146-\\u2149\\u214e\\u2184\\u2c30-\\u2c5e\\u2c61\\u2c65-\\u2c66\\u2c68\\u2c6a\\u2c6c\\u2c71\\u2c73-\\u2c74\\u2c76-\\u2c7b\\u2c81\\u2c83\\u2c85\\u2c87\\u2c89\\u2c8b\\u2c8d\\u2c8f\\u2c91\\u2c93\\u2c95\\u2c97\\u2c99\\u2c9b\\u2c9d\\u2c9f\\u2ca1\\u2ca3\\u2ca5\\u2ca7\\u2ca9\\u2cab\\u2cad\\u2caf\\u2cb1\\u2cb3\\u2cb5\\u2cb7\\u2cb9\\u2cbb\\u2cbd\\u2cbf\\u2cc1\\u2cc3\\u2cc5\\u2cc7\\u2cc9\\u2ccb\\u2ccd\\u2ccf\\u2cd1\\u2cd3\\u2cd5\\u2cd7\\u2cd9\\u2cdb\\u2cdd\\u2cdf\\u2ce1\\u2ce3-\\u2ce4\\u2cec\\u2cee\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\ua641\\ua643\\ua645\\ua647\\ua649\\ua64b\\ua64d\\ua64f\\ua651\\ua653\\ua655\\ua657\\ua659\\ua65b\\ua65d\\ua65f\\ua661\\ua663\\ua665\\ua667\\ua669\\ua66b\\ua66d\\ua681\\ua683\\ua685\\ua687\\ua689\\ua68b\\ua68d\\ua68f\\ua691\\ua693\\ua695\\ua697\\ua723\\ua725\\ua727\\ua729\\ua72b\\ua72d\\ua72f-\\ua731\\ua733\\ua735\\ua737\\ua739\\ua73b\\ua73d\\ua73f\\ua741\\ua743\\ua745\\ua747\\ua749\\ua74b\\ua74d\\ua74f\\ua751\\ua753\\ua755\\ua757\\ua759\\ua75b\\ua75d\\ua75f\\ua761\\ua763\\ua765\\ua767\\ua769\\ua76b\\ua76d\\ua76f\\ua771-\\ua778\\ua77a\\ua77c\\ua77f\\ua781\\ua783\\ua785\\ua787\\ua78c\\ua78e\\ua791\\ua793\\ua7a1\\ua7a3\\ua7a5\\ua7a7\\ua7a9\\ua7fa\\ufb00-\\ufb06\\ufb13-\\ufb17\\uff41-\\uff5a'$/;"	v
LlvmLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^class LlvmLexer(RegexLexer):$/;"	c
LlvmLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^class LlvmLexer(RegexLexer):$/;"	c
Lm	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Lm = u'\\u02b0-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0374\\u037a\\u0559\\u0640\\u06e5-\\u06e6\\u07f4-\\u07f5\\u07fa\\u081a\\u0824\\u0828\\u0971\\u0e46\\u0ec6\\u10fc\\u17d7\\u1843\\u1aa7\\u1c78-\\u1c7d\\u1d2c-\\u1d6a\\u1d78\\u1d9b-\\u1dbf\\u2071\\u207f\\u2090-\\u209c\\u2c7c-\\u2c7d\\u2d6f\\u2e2f\\u3005\\u3031-\\u3035\\u303b\\u309d-\\u309e\\u30fc-\\u30fe\\ua015\\ua4f8-\\ua4fd\\ua60c\\ua67f\\ua717-\\ua71f\\ua770\\ua788\\ua7f8-\\ua7f9\\ua9cf\\uaa70\\uaadd\\uaaf3-\\uaaf4\\uff70\\uff9e-\\uff9f'$/;"	v
Lm	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Lm = u'\\u02b0-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0374\\u037a\\u0559\\u0640\\u06e5-\\u06e6\\u07f4-\\u07f5\\u07fa\\u081a\\u0824\\u0828\\u0971\\u0e46\\u0ec6\\u10fc\\u17d7\\u1843\\u1aa7\\u1c78-\\u1c7d\\u1d2c-\\u1d6a\\u1d78\\u1d9b-\\u1dbf\\u2071\\u207f\\u2090-\\u209c\\u2c7c-\\u2c7d\\u2d6f\\u2e2f\\u3005\\u3031-\\u3035\\u303b\\u309d-\\u309e\\u30fc-\\u30fe\\ua015\\ua4f8-\\ua4fd\\ua60c\\ua67f\\ua717-\\ua71f\\ua770\\ua788\\ua7f8-\\ua7f9\\ua9cf\\uaa70\\uaadd\\uaaf3-\\uaaf4\\uff70\\uff9e-\\uff9f'$/;"	v
Lo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Lo = u'\\xaa\\xba\\u01bb\\u01c0-\\u01c3\\u0294\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u063f\\u0641-\\u064a\\u066e-\\u066f\\u0671-\\u06d3\\u06d5\\u06ee-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u0800-\\u0815\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0972-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc-\\u09dd\\u09df-\\u09e1\\u09f0-\\u09f1\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0-\\u0ae1\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c-\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58-\\u0c59\\u0c60-\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0-\\u0ce1\\u0cf1-\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32-\\u0e33\\u0e40-\\u0e45\\u0e81-\\u0e82\\u0e84\\u0e87-\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa-\\u0eab\\u0ead-\\u0eb0\\u0eb2-\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065-\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10d0-\\u10fa\\u10fd-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17dc\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae-\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c77\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5-\\u1cf6\\u2135-\\u2138\\u2d30-\\u2d67\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3006\\u303c\\u3041-\\u3096\\u309f\\u30a1-\\u30fa\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua014\\ua016-\\ua48c\\ua4d0-\\ua4f7\\ua500-\\ua60b\\ua610-\\ua61f\\ua62a-\\ua62b\\ua66e\\ua6a0-\\ua6e5\\ua7fb-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa6f\\uaa71-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5-\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadc\\uaae0-\\uaaea\\uaaf2\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff66-\\uff6f\\uff71-\\uff9d\\uffa0-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc'$/;"	v
Lo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Lo = u'\\xaa\\xba\\u01bb\\u01c0-\\u01c3\\u0294\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u063f\\u0641-\\u064a\\u066e-\\u066f\\u0671-\\u06d3\\u06d5\\u06ee-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u0800-\\u0815\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0972-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc-\\u09dd\\u09df-\\u09e1\\u09f0-\\u09f1\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0-\\u0ae1\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c-\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58-\\u0c59\\u0c60-\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0-\\u0ce1\\u0cf1-\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32-\\u0e33\\u0e40-\\u0e45\\u0e81-\\u0e82\\u0e84\\u0e87-\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa-\\u0eab\\u0ead-\\u0eb0\\u0eb2-\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065-\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10d0-\\u10fa\\u10fd-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17dc\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae-\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c77\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5-\\u1cf6\\u2135-\\u2138\\u2d30-\\u2d67\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3006\\u303c\\u3041-\\u3096\\u309f\\u30a1-\\u30fa\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua014\\ua016-\\ua48c\\ua4d0-\\ua4f7\\ua500-\\ua60b\\ua610-\\ua61f\\ua62a-\\ua62b\\ua66e\\ua6a0-\\ua6e5\\ua7fb-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa6f\\uaa71-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5-\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadc\\uaae0-\\uaaea\\uaaf2\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff66-\\uff6f\\uff71-\\uff9d\\uffa0-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc'$/;"	v
LoadConfigFile	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:LoadConfigFile() " {{{2$/;"	f
LoadPlugin	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:LoadPlugin()$/;"	f
Local	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^Local = LocalTimezone()$/;"	v
Local	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^Local = LocalTimezone()$/;"	v
LocalTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class LocalTestCase(unittest.TestCase):$/;"	c
LocalTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class LocalTestCase(unittest.TestCase):$/;"	c
LocalTimezone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^class LocalTimezone(tzinfo):$/;"	c
LocalTimezone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^class LocalTimezone(tzinfo):$/;"	c
LocationParseError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class LocationParseError(LocationValueError):$/;"	c
LocationParseError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/url.py	/^from ..exceptions import LocationParseError$/;"	i
LocationValueError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class LocationValueError(ValueError, HTTPError):$/;"	c
LocationValueError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^from .exceptions import LocationValueError, MaxRetryError$/;"	i
Log	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd, line1, line2, ...) abort$/;"	f
LogosLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^    ObjectiveCppLexer, LogosLexer$/;"	i
LogosLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^class LogosLexer(ObjectiveCppLexer):$/;"	c
LogosLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^    ObjectiveCppLexer, LogosLexer$/;"	i
LogosLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^class LogosLexer(ObjectiveCppLexer):$/;"	c
LogtalkLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.prolog import LogtalkLexer$/;"	i
LogtalkLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^class LogtalkLexer(RegexLexer):$/;"	c
LogtalkLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.prolog import LogtalkLexer$/;"	i
LogtalkLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^class LogtalkLexer(RegexLexer):$/;"	c
LondonHistoryEndTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class LondonHistoryEndTestCase(USEasternDSTStartTestCase):$/;"	c
LondonHistoryEndTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class LondonHistoryEndTestCase(USEasternDSTStartTestCase):$/;"	c
LondonHistoryStartTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class LondonHistoryStartTestCase(USEasternDSTStartTestCase):$/;"	c
LondonHistoryStartTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class LondonHistoryStartTestCase(USEasternDSTStartTestCase):$/;"	c
LookupDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/status_codes.py	/^from .structures import LookupDict$/;"	i
LookupDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/structures.py	/^class LookupDict(dict):$/;"	c
Lt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Lt = u'\\u01c5\\u01c8\\u01cb\\u01f2\\u1f88-\\u1f8f\\u1f98-\\u1f9f\\u1fa8-\\u1faf\\u1fbc\\u1fcc\\u1ffc'$/;"	v
Lt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Lt = u'\\u01c5\\u01c8\\u01cb\\u01f2\\u1f88-\\u1f8f\\u1f98-\\u1f9f\\u1fa8-\\u1faf\\u1fbc\\u1fcc\\u1ffc'$/;"	v
Lu	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Lu = u'A-Z\\xc0-\\xd6\\xd8-\\xde\\u0100\\u0102\\u0104\\u0106\\u0108\\u010a\\u010c\\u010e\\u0110\\u0112\\u0114\\u0116\\u0118\\u011a\\u011c\\u011e\\u0120\\u0122\\u0124\\u0126\\u0128\\u012a\\u012c\\u012e\\u0130\\u0132\\u0134\\u0136\\u0139\\u013b\\u013d\\u013f\\u0141\\u0143\\u0145\\u0147\\u014a\\u014c\\u014e\\u0150\\u0152\\u0154\\u0156\\u0158\\u015a\\u015c\\u015e\\u0160\\u0162\\u0164\\u0166\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u0174\\u0176\\u0178-\\u0179\\u017b\\u017d\\u0181-\\u0182\\u0184\\u0186-\\u0187\\u0189-\\u018b\\u018e-\\u0191\\u0193-\\u0194\\u0196-\\u0198\\u019c-\\u019d\\u019f-\\u01a0\\u01a2\\u01a4\\u01a6-\\u01a7\\u01a9\\u01ac\\u01ae-\\u01af\\u01b1-\\u01b3\\u01b5\\u01b7-\\u01b8\\u01bc\\u01c4\\u01c7\\u01ca\\u01cd\\u01cf\\u01d1\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u01de\\u01e0\\u01e2\\u01e4\\u01e6\\u01e8\\u01ea\\u01ec\\u01ee\\u01f1\\u01f4\\u01f6-\\u01f8\\u01fa\\u01fc\\u01fe\\u0200\\u0202\\u0204\\u0206\\u0208\\u020a\\u020c\\u020e\\u0210\\u0212\\u0214\\u0216\\u0218\\u021a\\u021c\\u021e\\u0220\\u0222\\u0224\\u0226\\u0228\\u022a\\u022c\\u022e\\u0230\\u0232\\u023a-\\u023b\\u023d-\\u023e\\u0241\\u0243-\\u0246\\u0248\\u024a\\u024c\\u024e\\u0370\\u0372\\u0376\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u038f\\u0391-\\u03a1\\u03a3-\\u03ab\\u03cf\\u03d2-\\u03d4\\u03d8\\u03da\\u03dc\\u03de\\u03e0\\u03e2\\u03e4\\u03e6\\u03e8\\u03ea\\u03ec\\u03ee\\u03f4\\u03f7\\u03f9-\\u03fa\\u03fd-\\u042f\\u0460\\u0462\\u0464\\u0466\\u0468\\u046a\\u046c\\u046e\\u0470\\u0472\\u0474\\u0476\\u0478\\u047a\\u047c\\u047e\\u0480\\u048a\\u048c\\u048e\\u0490\\u0492\\u0494\\u0496\\u0498\\u049a\\u049c\\u049e\\u04a0\\u04a2\\u04a4\\u04a6\\u04a8\\u04aa\\u04ac\\u04ae\\u04b0\\u04b2\\u04b4\\u04b6\\u04b8\\u04ba\\u04bc\\u04be\\u04c0-\\u04c1\\u04c3\\u04c5\\u04c7\\u04c9\\u04cb\\u04cd\\u04d0\\u04d2\\u04d4\\u04d6\\u04d8\\u04da\\u04dc\\u04de\\u04e0\\u04e2\\u04e4\\u04e6\\u04e8\\u04ea\\u04ec\\u04ee\\u04f0\\u04f2\\u04f4\\u04f6\\u04f8\\u04fa\\u04fc\\u04fe\\u0500\\u0502\\u0504\\u0506\\u0508\\u050a\\u050c\\u050e\\u0510\\u0512\\u0514\\u0516\\u0518\\u051a\\u051c\\u051e\\u0520\\u0522\\u0524\\u0526\\u0531-\\u0556\\u10a0-\\u10c5\\u10c7\\u10cd\\u1e00\\u1e02\\u1e04\\u1e06\\u1e08\\u1e0a\\u1e0c\\u1e0e\\u1e10\\u1e12\\u1e14\\u1e16\\u1e18\\u1e1a\\u1e1c\\u1e1e\\u1e20\\u1e22\\u1e24\\u1e26\\u1e28\\u1e2a\\u1e2c\\u1e2e\\u1e30\\u1e32\\u1e34\\u1e36\\u1e38\\u1e3a\\u1e3c\\u1e3e\\u1e40\\u1e42\\u1e44\\u1e46\\u1e48\\u1e4a\\u1e4c\\u1e4e\\u1e50\\u1e52\\u1e54\\u1e56\\u1e58\\u1e5a\\u1e5c\\u1e5e\\u1e60\\u1e62\\u1e64\\u1e66\\u1e68\\u1e6a\\u1e6c\\u1e6e\\u1e70\\u1e72\\u1e74\\u1e76\\u1e78\\u1e7a\\u1e7c\\u1e7e\\u1e80\\u1e82\\u1e84\\u1e86\\u1e88\\u1e8a\\u1e8c\\u1e8e\\u1e90\\u1e92\\u1e94\\u1e9e\\u1ea0\\u1ea2\\u1ea4\\u1ea6\\u1ea8\\u1eaa\\u1eac\\u1eae\\u1eb0\\u1eb2\\u1eb4\\u1eb6\\u1eb8\\u1eba\\u1ebc\\u1ebe\\u1ec0\\u1ec2\\u1ec4\\u1ec6\\u1ec8\\u1eca\\u1ecc\\u1ece\\u1ed0\\u1ed2\\u1ed4\\u1ed6\\u1ed8\\u1eda\\u1edc\\u1ede\\u1ee0\\u1ee2\\u1ee4\\u1ee6\\u1ee8\\u1eea\\u1eec\\u1eee\\u1ef0\\u1ef2\\u1ef4\\u1ef6\\u1ef8\\u1efa\\u1efc\\u1efe\\u1f08-\\u1f0f\\u1f18-\\u1f1d\\u1f28-\\u1f2f\\u1f38-\\u1f3f\\u1f48-\\u1f4d\\u1f59\\u1f5b\\u1f5d\\u1f5f\\u1f68-\\u1f6f\\u1fb8-\\u1fbb\\u1fc8-\\u1fcb\\u1fd8-\\u1fdb\\u1fe8-\\u1fec\\u1ff8-\\u1ffb\\u2102\\u2107\\u210b-\\u210d\\u2110-\\u2112\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u2130-\\u2133\\u213e-\\u213f\\u2145\\u2183\\u2c00-\\u2c2e\\u2c60\\u2c62-\\u2c64\\u2c67\\u2c69\\u2c6b\\u2c6d-\\u2c70\\u2c72\\u2c75\\u2c7e-\\u2c80\\u2c82\\u2c84\\u2c86\\u2c88\\u2c8a\\u2c8c\\u2c8e\\u2c90\\u2c92\\u2c94\\u2c96\\u2c98\\u2c9a\\u2c9c\\u2c9e\\u2ca0\\u2ca2\\u2ca4\\u2ca6\\u2ca8\\u2caa\\u2cac\\u2cae\\u2cb0\\u2cb2\\u2cb4\\u2cb6\\u2cb8\\u2cba\\u2cbc\\u2cbe\\u2cc0\\u2cc2\\u2cc4\\u2cc6\\u2cc8\\u2cca\\u2ccc\\u2cce\\u2cd0\\u2cd2\\u2cd4\\u2cd6\\u2cd8\\u2cda\\u2cdc\\u2cde\\u2ce0\\u2ce2\\u2ceb\\u2ced\\u2cf2\\ua640\\ua642\\ua644\\ua646\\ua648\\ua64a\\ua64c\\ua64e\\ua650\\ua652\\ua654\\ua656\\ua658\\ua65a\\ua65c\\ua65e\\ua660\\ua662\\ua664\\ua666\\ua668\\ua66a\\ua66c\\ua680\\ua682\\ua684\\ua686\\ua688\\ua68a\\ua68c\\ua68e\\ua690\\ua692\\ua694\\ua696\\ua722\\ua724\\ua726\\ua728\\ua72a\\ua72c\\ua72e\\ua732\\ua734\\ua736\\ua738\\ua73a\\ua73c\\ua73e\\ua740\\ua742\\ua744\\ua746\\ua748\\ua74a\\ua74c\\ua74e\\ua750\\ua752\\ua754\\ua756\\ua758\\ua75a\\ua75c\\ua75e\\ua760\\ua762\\ua764\\ua766\\ua768\\ua76a\\ua76c\\ua76e\\ua779\\ua77b\\ua77d-\\ua77e\\ua780\\ua782\\ua784\\ua786\\ua78b\\ua78d\\ua790\\ua792\\ua7a0\\ua7a2\\ua7a4\\ua7a6\\ua7a8\\ua7aa\\uff21-\\uff3a'$/;"	v
Lu	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Lu = u'A-Z\\xc0-\\xd6\\xd8-\\xde\\u0100\\u0102\\u0104\\u0106\\u0108\\u010a\\u010c\\u010e\\u0110\\u0112\\u0114\\u0116\\u0118\\u011a\\u011c\\u011e\\u0120\\u0122\\u0124\\u0126\\u0128\\u012a\\u012c\\u012e\\u0130\\u0132\\u0134\\u0136\\u0139\\u013b\\u013d\\u013f\\u0141\\u0143\\u0145\\u0147\\u014a\\u014c\\u014e\\u0150\\u0152\\u0154\\u0156\\u0158\\u015a\\u015c\\u015e\\u0160\\u0162\\u0164\\u0166\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u0174\\u0176\\u0178-\\u0179\\u017b\\u017d\\u0181-\\u0182\\u0184\\u0186-\\u0187\\u0189-\\u018b\\u018e-\\u0191\\u0193-\\u0194\\u0196-\\u0198\\u019c-\\u019d\\u019f-\\u01a0\\u01a2\\u01a4\\u01a6-\\u01a7\\u01a9\\u01ac\\u01ae-\\u01af\\u01b1-\\u01b3\\u01b5\\u01b7-\\u01b8\\u01bc\\u01c4\\u01c7\\u01ca\\u01cd\\u01cf\\u01d1\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u01de\\u01e0\\u01e2\\u01e4\\u01e6\\u01e8\\u01ea\\u01ec\\u01ee\\u01f1\\u01f4\\u01f6-\\u01f8\\u01fa\\u01fc\\u01fe\\u0200\\u0202\\u0204\\u0206\\u0208\\u020a\\u020c\\u020e\\u0210\\u0212\\u0214\\u0216\\u0218\\u021a\\u021c\\u021e\\u0220\\u0222\\u0224\\u0226\\u0228\\u022a\\u022c\\u022e\\u0230\\u0232\\u023a-\\u023b\\u023d-\\u023e\\u0241\\u0243-\\u0246\\u0248\\u024a\\u024c\\u024e\\u0370\\u0372\\u0376\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u038f\\u0391-\\u03a1\\u03a3-\\u03ab\\u03cf\\u03d2-\\u03d4\\u03d8\\u03da\\u03dc\\u03de\\u03e0\\u03e2\\u03e4\\u03e6\\u03e8\\u03ea\\u03ec\\u03ee\\u03f4\\u03f7\\u03f9-\\u03fa\\u03fd-\\u042f\\u0460\\u0462\\u0464\\u0466\\u0468\\u046a\\u046c\\u046e\\u0470\\u0472\\u0474\\u0476\\u0478\\u047a\\u047c\\u047e\\u0480\\u048a\\u048c\\u048e\\u0490\\u0492\\u0494\\u0496\\u0498\\u049a\\u049c\\u049e\\u04a0\\u04a2\\u04a4\\u04a6\\u04a8\\u04aa\\u04ac\\u04ae\\u04b0\\u04b2\\u04b4\\u04b6\\u04b8\\u04ba\\u04bc\\u04be\\u04c0-\\u04c1\\u04c3\\u04c5\\u04c7\\u04c9\\u04cb\\u04cd\\u04d0\\u04d2\\u04d4\\u04d6\\u04d8\\u04da\\u04dc\\u04de\\u04e0\\u04e2\\u04e4\\u04e6\\u04e8\\u04ea\\u04ec\\u04ee\\u04f0\\u04f2\\u04f4\\u04f6\\u04f8\\u04fa\\u04fc\\u04fe\\u0500\\u0502\\u0504\\u0506\\u0508\\u050a\\u050c\\u050e\\u0510\\u0512\\u0514\\u0516\\u0518\\u051a\\u051c\\u051e\\u0520\\u0522\\u0524\\u0526\\u0531-\\u0556\\u10a0-\\u10c5\\u10c7\\u10cd\\u1e00\\u1e02\\u1e04\\u1e06\\u1e08\\u1e0a\\u1e0c\\u1e0e\\u1e10\\u1e12\\u1e14\\u1e16\\u1e18\\u1e1a\\u1e1c\\u1e1e\\u1e20\\u1e22\\u1e24\\u1e26\\u1e28\\u1e2a\\u1e2c\\u1e2e\\u1e30\\u1e32\\u1e34\\u1e36\\u1e38\\u1e3a\\u1e3c\\u1e3e\\u1e40\\u1e42\\u1e44\\u1e46\\u1e48\\u1e4a\\u1e4c\\u1e4e\\u1e50\\u1e52\\u1e54\\u1e56\\u1e58\\u1e5a\\u1e5c\\u1e5e\\u1e60\\u1e62\\u1e64\\u1e66\\u1e68\\u1e6a\\u1e6c\\u1e6e\\u1e70\\u1e72\\u1e74\\u1e76\\u1e78\\u1e7a\\u1e7c\\u1e7e\\u1e80\\u1e82\\u1e84\\u1e86\\u1e88\\u1e8a\\u1e8c\\u1e8e\\u1e90\\u1e92\\u1e94\\u1e9e\\u1ea0\\u1ea2\\u1ea4\\u1ea6\\u1ea8\\u1eaa\\u1eac\\u1eae\\u1eb0\\u1eb2\\u1eb4\\u1eb6\\u1eb8\\u1eba\\u1ebc\\u1ebe\\u1ec0\\u1ec2\\u1ec4\\u1ec6\\u1ec8\\u1eca\\u1ecc\\u1ece\\u1ed0\\u1ed2\\u1ed4\\u1ed6\\u1ed8\\u1eda\\u1edc\\u1ede\\u1ee0\\u1ee2\\u1ee4\\u1ee6\\u1ee8\\u1eea\\u1eec\\u1eee\\u1ef0\\u1ef2\\u1ef4\\u1ef6\\u1ef8\\u1efa\\u1efc\\u1efe\\u1f08-\\u1f0f\\u1f18-\\u1f1d\\u1f28-\\u1f2f\\u1f38-\\u1f3f\\u1f48-\\u1f4d\\u1f59\\u1f5b\\u1f5d\\u1f5f\\u1f68-\\u1f6f\\u1fb8-\\u1fbb\\u1fc8-\\u1fcb\\u1fd8-\\u1fdb\\u1fe8-\\u1fec\\u1ff8-\\u1ffb\\u2102\\u2107\\u210b-\\u210d\\u2110-\\u2112\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u2130-\\u2133\\u213e-\\u213f\\u2145\\u2183\\u2c00-\\u2c2e\\u2c60\\u2c62-\\u2c64\\u2c67\\u2c69\\u2c6b\\u2c6d-\\u2c70\\u2c72\\u2c75\\u2c7e-\\u2c80\\u2c82\\u2c84\\u2c86\\u2c88\\u2c8a\\u2c8c\\u2c8e\\u2c90\\u2c92\\u2c94\\u2c96\\u2c98\\u2c9a\\u2c9c\\u2c9e\\u2ca0\\u2ca2\\u2ca4\\u2ca6\\u2ca8\\u2caa\\u2cac\\u2cae\\u2cb0\\u2cb2\\u2cb4\\u2cb6\\u2cb8\\u2cba\\u2cbc\\u2cbe\\u2cc0\\u2cc2\\u2cc4\\u2cc6\\u2cc8\\u2cca\\u2ccc\\u2cce\\u2cd0\\u2cd2\\u2cd4\\u2cd6\\u2cd8\\u2cda\\u2cdc\\u2cde\\u2ce0\\u2ce2\\u2ceb\\u2ced\\u2cf2\\ua640\\ua642\\ua644\\ua646\\ua648\\ua64a\\ua64c\\ua64e\\ua650\\ua652\\ua654\\ua656\\ua658\\ua65a\\ua65c\\ua65e\\ua660\\ua662\\ua664\\ua666\\ua668\\ua66a\\ua66c\\ua680\\ua682\\ua684\\ua686\\ua688\\ua68a\\ua68c\\ua68e\\ua690\\ua692\\ua694\\ua696\\ua722\\ua724\\ua726\\ua728\\ua72a\\ua72c\\ua72e\\ua732\\ua734\\ua736\\ua738\\ua73a\\ua73c\\ua73e\\ua740\\ua742\\ua744\\ua746\\ua748\\ua74a\\ua74c\\ua74e\\ua750\\ua752\\ua754\\ua756\\ua758\\ua75a\\ua75c\\ua75e\\ua760\\ua762\\ua764\\ua766\\ua768\\ua76a\\ua76c\\ua76e\\ua779\\ua77b\\ua77d-\\ua77e\\ua780\\ua782\\ua784\\ua786\\ua78b\\ua78d\\ua790\\ua792\\ua7a0\\ua7a2\\ua7a4\\ua7a6\\ua7a8\\ua7aa\\uff21-\\uff3a'$/;"	v
LuaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^from pygments.lexers.scripting import LuaLexer, MoonScriptLexer$/;"	i
LuaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^class LuaLexer(RegexLexer):$/;"	c
LuaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^from pygments.lexers.scripting import LuaLexer, MoonScriptLexer$/;"	i
LuaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^class LuaLexer(RegexLexer):$/;"	c
LuciusBlack	plugged/vim-lucius/colors/lucius.vim	/^command! LuciusBlack call SetLucius("dark", "normal", "high")$/;"	c
LuciusBlackHighContrast	plugged/vim-lucius/colors/lucius.vim	/^command! LuciusBlackHighContrast call SetLucius("dark", "high", "high")$/;"	c
LuciusBlackLowContrast	plugged/vim-lucius/colors/lucius.vim	/^command! LuciusBlackLowContrast call SetLucius("dark", "low", "high")$/;"	c
LuciusDark	plugged/vim-lucius/colors/lucius.vim	/^command! LuciusDark call SetLucius("dark", "normal", "normal")$/;"	c
LuciusDarkHighContrast	plugged/vim-lucius/colors/lucius.vim	/^command! LuciusDarkHighContrast call SetLucius("dark", "high", "normal")$/;"	c
LuciusDarkLowContrast	plugged/vim-lucius/colors/lucius.vim	/^command! LuciusDarkLowContrast call SetLucius("dark", "low", "normal")$/;"	c
LuciusLight	plugged/vim-lucius/colors/lucius.vim	/^command! LuciusLight call SetLucius("light", "normal", "normal")$/;"	c
LuciusLightHighContrast	plugged/vim-lucius/colors/lucius.vim	/^command! LuciusLightHighContrast call SetLucius("light", "high", "normal")$/;"	c
LuciusLightLowContrast	plugged/vim-lucius/colors/lucius.vim	/^command! LuciusLightLowContrast call SetLucius("light", "low", "normal")$/;"	c
LuciusWhite	plugged/vim-lucius/colors/lucius.vim	/^command! LuciusWhite call SetLucius("light", "normal", "high")$/;"	c
LuciusWhiteHighContrast	plugged/vim-lucius/colors/lucius.vim	/^command! LuciusWhiteHighContrast call SetLucius("light", "high", "high")$/;"	c
LuciusWhiteLowContrast	plugged/vim-lucius/colors/lucius.vim	/^command! LuciusWhiteLowContrast call SetLucius("light", "low", "high")$/;"	c
M	plugged/calendar.vim/autoload/calendar/string.vim	/^fu! s:M(s, m, f, p) abort$/;"	f
MACROS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cl_builtins.py	/^MACROS = set(($/;"	v
MACROS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^            BUILTIN_TYPES, BUILTIN_CLASSES$/;"	i
MACROS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cl_builtins.py	/^MACROS = set(($/;"	v
MACROS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^            BUILTIN_TYPES, BUILTIN_CLASSES$/;"	i
MAXSIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^            MAXSIZE = int((1 << 31) - 1)$/;"	v
MAXSIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^            MAXSIZE = int((1 << 63) - 1)$/;"	v
MAXSIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^        MAXSIZE = int((1 << 31) - 1)$/;"	v
MAXSIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    MAXSIZE = sys.maxsize$/;"	v
MAX_REL_THRESHOLD	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^MAX_REL_THRESHOLD = 1000$/;"	v
MBCSGroupProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcsgroupprober.py	/^class MBCSGroupProber(CharSetGroupProber):$/;"	c
MBCSGroupProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^from .mbcsgroupprober import MBCSGroupProber  # multi-byte character sets$/;"	i
MEMBERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lasso_builtins.py	/^MEMBERS = {$/;"	v
MEMBERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^            from pygments.lexers._lasso_builtins import BUILTINS, MEMBERS$/;"	i
MEMBERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lasso_builtins.py	/^MEMBERS = {$/;"	v
MEMBERS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^            from pygments.lexers._lasso_builtins import BUILTINS, MEMBERS$/;"	i
MINIMUM_DATA_THRESHOLD	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^MINIMUM_DATA_THRESHOLD = 3$/;"	v
MINIMUM_DATA_THRESHOLD	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^MINIMUM_DATA_THRESHOLD = 4$/;"	v
MINIMUM_THRESHOLD	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^MINIMUM_THRESHOLD = 0.20$/;"	v
MIN_EXPANSION	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define MIN_EXPANSION /;"	d	file:
MIN_FINAL_CHAR_DISTANCE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^MIN_FINAL_CHAR_DISTANCE = 5$/;"	v
MIN_MODEL_DISTANCE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^MIN_MODEL_DISTANCE = 0.01$/;"	v
MODULES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^MODULES = {'basic': ('_G',$/;"	v
MODULES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_php_builtins.py	/^MODULES = {'.NET': ('dotnet_load',),$/;"	v
MODULES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^            from pygments.lexers._php_builtins import MODULES$/;"	i
MODULES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^            from pygments.lexers._lua_builtins import MODULES$/;"	i
MODULES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^MODULES = {'basic': ('_G',$/;"	v
MODULES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_php_builtins.py	/^MODULES = {'.NET': ('dotnet_load',),$/;"	v
MODULES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^            from pygments.lexers._php_builtins import MODULES$/;"	i
MODULES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^            from pygments.lexers._lua_builtins import MODULES$/;"	i
MOOCodeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    HybrisLexer$/;"	i
MOOCodeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^class MOOCodeLexer(RegexLexer):$/;"	c
MOOCodeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    HybrisLexer$/;"	i
MOOCodeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^class MOOCodeLexer(RegexLexer):$/;"	c
MacCyrillicModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langcyrillicmodel.py	/^MacCyrillicModel = {$/;"	v
MakeRBrowserMenu	plugged/Nvim-R/R/gui_running.vim	/^function MakeRBrowserMenu()$/;"	f
MakeRMenu	plugged/Nvim-R/R/gui_running.vim	/^function MakeRMenu()$/;"	f
MakeUnique	plugged/AdvancedSorters/autoload/AdvancedSorters/Uniq.vim	/^function! s:MakeUnique( lines, modificationExpr )$/;"	f
MakefileLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^class MakefileLexer(Lexer):$/;"	c
MakefileLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^from pygments.lexers.make import MakefileLexer, BaseMakefileLexer, CMakeLexer$/;"	i
MakefileLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^class MakefileLexer(Lexer):$/;"	c
MakefileLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^from pygments.lexers.make import MakefileLexer, BaseMakefileLexer, CMakeLexer$/;"	i
MakoCssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class MakoCssLexer(DelegatingLexer):$/;"	c
MakoCssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class MakoCssLexer(DelegatingLexer):$/;"	c
MakoHtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class MakoHtmlLexer(DelegatingLexer):$/;"	c
MakoHtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class MakoHtmlLexer(DelegatingLexer):$/;"	c
MakoHtmlParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^class MakoHtmlParser(HtmlDjangoParser):$/;"	c
MakoJavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class MakoJavascriptLexer(DelegatingLexer):$/;"	c
MakoJavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class MakoJavascriptLexer(DelegatingLexer):$/;"	c
MakoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class MakoLexer(RegexLexer):$/;"	c
MakoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class MakoLexer(RegexLexer):$/;"	c
MakoXmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class MakoXmlLexer(DelegatingLexer):$/;"	c
MakoXmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class MakoXmlLexer(DelegatingLexer):$/;"	c
ManniStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/manni.py	/^class ManniStyle(Style):$/;"	c
ManniStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/manni.py	/^class ManniStyle(Style):$/;"	c
Map	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:Map() "{{{$/;"	f
Mapping	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^from collections import Mapping, MutableMapping$/;"	i
Mapping	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from collections import Mapping$/;"	i
MaqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^class MaqlLexer(RegexLexer):$/;"	c
MaqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    GoodDataCLLexer, MaqlLexer$/;"	i
MaqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^class MaqlLexer(RegexLexer):$/;"	c
MaqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    GoodDataCLLexer, MaqlLexer$/;"	i
MaskLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^class MaskLexer(RegexLexer):$/;"	c
MaskLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^class MaskLexer(RegexLexer):$/;"	c
MasonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class MasonLexer(RegexLexer):$/;"	c
MasonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class MasonLexer(RegexLexer):$/;"	c
MasonParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^class MasonParser(HtmlDjangoParser):$/;"	c
Match	plugged/vim-javascript/indent/javascript.vim	/^function s:Match(lnum, regex)$/;"	f
Match	plugged/vim-ruby/indent/ruby.vim	/^function s:Match(lnum, regex)$/;"	f
MathematicaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^class MathematicaLexer(RegexLexer):$/;"	c
MathematicaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^class MathematicaLexer(RegexLexer):$/;"	c
MatlabLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/math.py	/^    OctaveLexer, ScilabLexer$/;"	i
MatlabLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^class MatlabLexer(RegexLexer):$/;"	c
MatlabLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/math.py	/^    OctaveLexer, ScilabLexer$/;"	i
MatlabLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^class MatlabLexer(RegexLexer):$/;"	c
MatlabSessionLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/math.py	/^    OctaveLexer, ScilabLexer$/;"	i
MatlabSessionLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^class MatlabSessionLexer(Lexer):$/;"	c
MatlabSessionLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/math.py	/^    OctaveLexer, ScilabLexer$/;"	i
MatlabSessionLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^class MatlabSessionLexer(Lexer):$/;"	c
MavenOutputDirectory	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:MavenOutputDirectory() " {{{2$/;"	f
MaxRetryError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .packages.urllib3.exceptions import MaxRetryError$/;"	i
MaxRetryError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class MaxRetryError(RequestError):$/;"	c
MaxRetryError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^from .exceptions import LocationValueError, MaxRetryError$/;"	i
Mc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Mc = u'\\u0903\\u093b\\u093e-\\u0940\\u0949-\\u094c\\u094e-\\u094f\\u0982-\\u0983\\u09be-\\u09c0\\u09c7-\\u09c8\\u09cb-\\u09cc\\u09d7\\u0a03\\u0a3e-\\u0a40\\u0a83\\u0abe-\\u0ac0\\u0ac9\\u0acb-\\u0acc\\u0b02-\\u0b03\\u0b3e\\u0b40\\u0b47-\\u0b48\\u0b4b-\\u0b4c\\u0b57\\u0bbe-\\u0bbf\\u0bc1-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcc\\u0bd7\\u0c01-\\u0c03\\u0c41-\\u0c44\\u0c82-\\u0c83\\u0cbe\\u0cc0-\\u0cc4\\u0cc7-\\u0cc8\\u0cca-\\u0ccb\\u0cd5-\\u0cd6\\u0d02-\\u0d03\\u0d3e-\\u0d40\\u0d46-\\u0d48\\u0d4a-\\u0d4c\\u0d57\\u0d82-\\u0d83\\u0dcf-\\u0dd1\\u0dd8-\\u0ddf\\u0df2-\\u0df3\\u0f3e-\\u0f3f\\u0f7f\\u102b-\\u102c\\u1031\\u1038\\u103b-\\u103c\\u1056-\\u1057\\u1062-\\u1064\\u1067-\\u106d\\u1083-\\u1084\\u1087-\\u108c\\u108f\\u109a-\\u109c\\u17b6\\u17be-\\u17c5\\u17c7-\\u17c8\\u1923-\\u1926\\u1929-\\u192b\\u1930-\\u1931\\u1933-\\u1938\\u19b0-\\u19c0\\u19c8-\\u19c9\\u1a19-\\u1a1a\\u1a55\\u1a57\\u1a61\\u1a63-\\u1a64\\u1a6d-\\u1a72\\u1b04\\u1b35\\u1b3b\\u1b3d-\\u1b41\\u1b43-\\u1b44\\u1b82\\u1ba1\\u1ba6-\\u1ba7\\u1baa\\u1bac-\\u1bad\\u1be7\\u1bea-\\u1bec\\u1bee\\u1bf2-\\u1bf3\\u1c24-\\u1c2b\\u1c34-\\u1c35\\u1ce1\\u1cf2-\\u1cf3\\u302e-\\u302f\\ua823-\\ua824\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c3\\ua952-\\ua953\\ua983\\ua9b4-\\ua9b5\\ua9ba-\\ua9bb\\ua9bd-\\ua9c0\\uaa2f-\\uaa30\\uaa33-\\uaa34\\uaa4d\\uaa7b\\uaaeb\\uaaee-\\uaaef\\uaaf5\\uabe3-\\uabe4\\uabe6-\\uabe7\\uabe9-\\uabea\\uabec'$/;"	v
Mc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Mc = u'\\u0903\\u093b\\u093e-\\u0940\\u0949-\\u094c\\u094e-\\u094f\\u0982-\\u0983\\u09be-\\u09c0\\u09c7-\\u09c8\\u09cb-\\u09cc\\u09d7\\u0a03\\u0a3e-\\u0a40\\u0a83\\u0abe-\\u0ac0\\u0ac9\\u0acb-\\u0acc\\u0b02-\\u0b03\\u0b3e\\u0b40\\u0b47-\\u0b48\\u0b4b-\\u0b4c\\u0b57\\u0bbe-\\u0bbf\\u0bc1-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcc\\u0bd7\\u0c01-\\u0c03\\u0c41-\\u0c44\\u0c82-\\u0c83\\u0cbe\\u0cc0-\\u0cc4\\u0cc7-\\u0cc8\\u0cca-\\u0ccb\\u0cd5-\\u0cd6\\u0d02-\\u0d03\\u0d3e-\\u0d40\\u0d46-\\u0d48\\u0d4a-\\u0d4c\\u0d57\\u0d82-\\u0d83\\u0dcf-\\u0dd1\\u0dd8-\\u0ddf\\u0df2-\\u0df3\\u0f3e-\\u0f3f\\u0f7f\\u102b-\\u102c\\u1031\\u1038\\u103b-\\u103c\\u1056-\\u1057\\u1062-\\u1064\\u1067-\\u106d\\u1083-\\u1084\\u1087-\\u108c\\u108f\\u109a-\\u109c\\u17b6\\u17be-\\u17c5\\u17c7-\\u17c8\\u1923-\\u1926\\u1929-\\u192b\\u1930-\\u1931\\u1933-\\u1938\\u19b0-\\u19c0\\u19c8-\\u19c9\\u1a19-\\u1a1a\\u1a55\\u1a57\\u1a61\\u1a63-\\u1a64\\u1a6d-\\u1a72\\u1b04\\u1b35\\u1b3b\\u1b3d-\\u1b41\\u1b43-\\u1b44\\u1b82\\u1ba1\\u1ba6-\\u1ba7\\u1baa\\u1bac-\\u1bad\\u1be7\\u1bea-\\u1bec\\u1bee\\u1bf2-\\u1bf3\\u1c24-\\u1c2b\\u1c34-\\u1c35\\u1ce1\\u1cf2-\\u1cf3\\u302e-\\u302f\\ua823-\\ua824\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c3\\ua952-\\ua953\\ua983\\ua9b4-\\ua9b5\\ua9ba-\\ua9bb\\ua9bd-\\ua9c0\\uaa2f-\\uaa30\\uaa33-\\uaa34\\uaa4d\\uaa7b\\uaaeb\\uaaee-\\uaaef\\uaaf5\\uabe3-\\uabe4\\uabe6-\\uabe7\\uabe9-\\uabea\\uabec'$/;"	v
Me	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Me = u'\\u0488-\\u0489\\u20dd-\\u20e0\\u20e2-\\u20e4\\ua670-\\ua672'$/;"	v
Me	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Me = u'\\u0488-\\u0489\\u20dd-\\u20e0\\u20e2-\\u20e4\\ua670-\\ua672'$/;"	v
MenuController.New	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
Mercurial	plugged/vim-wakatime/plugin/packages/wakatime/project.py	/^from .projects.mercurial import Mercurial$/;"	i
Mercurial	plugged/vim-wakatime/plugin/packages/wakatime/projects/mercurial.py	/^class Mercurial(BaseProject):$/;"	c
Merge	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Merge(cmd, bang, args) abort$/;"	f
MiniDLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^from pygments.lexers.d import CrocLexer, MiniDLexer$/;"	i
MiniDLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^class MiniDLexer(CrocLexer):$/;"	c
MiniDLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^from pygments.lexers.d import CrocLexer, MiniDLexer$/;"	i
MiniDLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^class MiniDLexer(CrocLexer):$/;"	c
MissingSchema	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/exceptions.py	/^class MissingSchema(RequestException, ValueError):$/;"	c
Mn	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Mn = u'\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u065f\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7-\\u06e8\\u06ea-\\u06ed\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0902\\u093a\\u093c\\u0941-\\u0948\\u094d\\u0951-\\u0957\\u0962-\\u0963\\u0981\\u09bc\\u09c1-\\u09c4\\u09cd\\u09e2-\\u09e3\\u0a01-\\u0a02\\u0a3c\\u0a41-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a70-\\u0a71\\u0a75\\u0a81-\\u0a82\\u0abc\\u0ac1-\\u0ac5\\u0ac7-\\u0ac8\\u0acd\\u0ae2-\\u0ae3\\u0b01\\u0b3c\\u0b3f\\u0b41-\\u0b44\\u0b4d\\u0b56\\u0b62-\\u0b63\\u0b82\\u0bc0\\u0bcd\\u0c3e-\\u0c40\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c62-\\u0c63\\u0cbc\\u0cbf\\u0cc6\\u0ccc-\\u0ccd\\u0ce2-\\u0ce3\\u0d41-\\u0d44\\u0d4d\\u0d62-\\u0d63\\u0dca\\u0dd2-\\u0dd4\\u0dd6\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0eb1\\u0eb4-\\u0eb9\\u0ebb-\\u0ebc\\u0ec8-\\u0ecd\\u0f18-\\u0f19\\u0f35\\u0f37\\u0f39\\u0f71-\\u0f7e\\u0f80-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102d-\\u1030\\u1032-\\u1037\\u1039-\\u103a\\u103d-\\u103e\\u1058-\\u1059\\u105e-\\u1060\\u1071-\\u1074\\u1082\\u1085-\\u1086\\u108d\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752-\\u1753\\u1772-\\u1773\\u17b4-\\u17b5\\u17b7-\\u17bd\\u17c6\\u17c9-\\u17d3\\u17dd\\u180b-\\u180d\\u18a9\\u1920-\\u1922\\u1927-\\u1928\\u1932\\u1939-\\u193b\\u1a17-\\u1a18\\u1a1b\\u1a56\\u1a58-\\u1a5e\\u1a60\\u1a62\\u1a65-\\u1a6c\\u1a73-\\u1a7c\\u1a7f\\u1b00-\\u1b03\\u1b34\\u1b36-\\u1b3a\\u1b3c\\u1b42\\u1b6b-\\u1b73\\u1b80-\\u1b81\\u1ba2-\\u1ba5\\u1ba8-\\u1ba9\\u1bab\\u1be6\\u1be8-\\u1be9\\u1bed\\u1bef-\\u1bf1\\u1c2c-\\u1c33\\u1c36-\\u1c37\\u1cd0-\\u1cd2\\u1cd4-\\u1ce0\\u1ce2-\\u1ce8\\u1ced\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302d\\u3099-\\u309a\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua802\\ua806\\ua80b\\ua825-\\ua826\\ua8c4\\ua8e0-\\ua8f1\\ua926-\\ua92d\\ua947-\\ua951\\ua980-\\ua982\\ua9b3\\ua9b6-\\ua9b9\\ua9bc\\uaa29-\\uaa2e\\uaa31-\\uaa32\\uaa35-\\uaa36\\uaa43\\uaa4c\\uaab0\\uaab2-\\uaab4\\uaab7-\\uaab8\\uaabe-\\uaabf\\uaac1\\uaaec-\\uaaed\\uaaf6\\uabe5\\uabe8\\uabed\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26'$/;"	v
Mn	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Mn = u'\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u065f\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7-\\u06e8\\u06ea-\\u06ed\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0902\\u093a\\u093c\\u0941-\\u0948\\u094d\\u0951-\\u0957\\u0962-\\u0963\\u0981\\u09bc\\u09c1-\\u09c4\\u09cd\\u09e2-\\u09e3\\u0a01-\\u0a02\\u0a3c\\u0a41-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a70-\\u0a71\\u0a75\\u0a81-\\u0a82\\u0abc\\u0ac1-\\u0ac5\\u0ac7-\\u0ac8\\u0acd\\u0ae2-\\u0ae3\\u0b01\\u0b3c\\u0b3f\\u0b41-\\u0b44\\u0b4d\\u0b56\\u0b62-\\u0b63\\u0b82\\u0bc0\\u0bcd\\u0c3e-\\u0c40\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c62-\\u0c63\\u0cbc\\u0cbf\\u0cc6\\u0ccc-\\u0ccd\\u0ce2-\\u0ce3\\u0d41-\\u0d44\\u0d4d\\u0d62-\\u0d63\\u0dca\\u0dd2-\\u0dd4\\u0dd6\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0eb1\\u0eb4-\\u0eb9\\u0ebb-\\u0ebc\\u0ec8-\\u0ecd\\u0f18-\\u0f19\\u0f35\\u0f37\\u0f39\\u0f71-\\u0f7e\\u0f80-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102d-\\u1030\\u1032-\\u1037\\u1039-\\u103a\\u103d-\\u103e\\u1058-\\u1059\\u105e-\\u1060\\u1071-\\u1074\\u1082\\u1085-\\u1086\\u108d\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752-\\u1753\\u1772-\\u1773\\u17b4-\\u17b5\\u17b7-\\u17bd\\u17c6\\u17c9-\\u17d3\\u17dd\\u180b-\\u180d\\u18a9\\u1920-\\u1922\\u1927-\\u1928\\u1932\\u1939-\\u193b\\u1a17-\\u1a18\\u1a1b\\u1a56\\u1a58-\\u1a5e\\u1a60\\u1a62\\u1a65-\\u1a6c\\u1a73-\\u1a7c\\u1a7f\\u1b00-\\u1b03\\u1b34\\u1b36-\\u1b3a\\u1b3c\\u1b42\\u1b6b-\\u1b73\\u1b80-\\u1b81\\u1ba2-\\u1ba5\\u1ba8-\\u1ba9\\u1bab\\u1be6\\u1be8-\\u1be9\\u1bed\\u1bef-\\u1bf1\\u1c2c-\\u1c33\\u1c36-\\u1c37\\u1cd0-\\u1cd2\\u1cd4-\\u1ce0\\u1ce2-\\u1ce8\\u1ced\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302d\\u3099-\\u309a\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua802\\ua806\\ua80b\\ua825-\\ua826\\ua8c4\\ua8e0-\\ua8f1\\ua926-\\ua92d\\ua947-\\ua951\\ua980-\\ua982\\ua9b3\\ua9b6-\\ua9b9\\ua9bc\\uaa29-\\uaa2e\\uaa31-\\uaa32\\uaa35-\\uaa36\\uaa43\\uaa4c\\uaab0\\uaab2-\\uaab4\\uaab7-\\uaab8\\uaabe-\\uaabf\\uaac1\\uaaec-\\uaaed\\uaaf6\\uabe5\\uabe8\\uabed\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26'$/;"	v
MockRequest	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^class MockRequest(object):$/;"	c
MockResponse	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^class MockResponse(object):$/;"	c
ModelicaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^class ModelicaLexer(RegexLexer):$/;"	c
ModelicaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.modeling import ModelicaLexer$/;"	i
ModelicaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^class ModelicaLexer(RegexLexer):$/;"	c
ModelicaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.modeling import ModelicaLexer$/;"	i
Modern	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^    from ssl import SSLContext  # Modern SSL?$/;"	i
Modula2Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.pascal import DelphiLexer, Modula2Lexer, AdaLexer$/;"	i
Modula2Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^class Modula2Lexer(RegexLexer):$/;"	c
Modula2Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.pascal import DelphiLexer, Modula2Lexer, AdaLexer$/;"	i
Modula2Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^class Modula2Lexer(RegexLexer):$/;"	c
Modules	plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function s:Modules()$/;"	f
MoinWikiLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^class MoinWikiLexer(RegexLexer):$/;"	c
MoinWikiLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^    TexLexer, GroffLexer$/;"	i
MoinWikiLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^class MoinWikiLexer(RegexLexer):$/;"	c
MoinWikiLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^    TexLexer, GroffLexer$/;"	i
MonkeyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^class MonkeyLexer(RegexLexer):$/;"	c
MonkeyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.basic import BlitzBasicLexer, BlitzMaxLexer, MonkeyLexer$/;"	i
MonkeyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^class MonkeyLexer(RegexLexer):$/;"	c
MonkeyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.basic import BlitzBasicLexer, BlitzMaxLexer, MonkeyLexer$/;"	i
MonokaiStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/monokai.py	/^class MonokaiStyle(Style):$/;"	c
MonokaiStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/monokai.py	/^class MonokaiStyle(Style):$/;"	c
MoonScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^from pygments.lexers.scripting import LuaLexer, MoonScriptLexer$/;"	i
MoonScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^class MoonScriptLexer(LuaLexer):$/;"	c
MoonScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^from pygments.lexers.scripting import LuaLexer, MoonScriptLexer$/;"	i
MoonScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^class MoonScriptLexer(LuaLexer):$/;"	c
Morsel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from Cookie import Morsel$/;"	i
Morsel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from http.cookies import Morsel$/;"	i
Morsel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^from .compat import cookielib, urlparse, urlunparse, Morsel$/;"	i
Mountain	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^Mountain = USTimeZone(-7, "Mountain", "MST", "MDT")$/;"	v
Mountain	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^Mountain = USTimeZone(-7, "Mountain", "MST", "MDT")$/;"	v
Move	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination) abort$/;"	f
MoveComplete	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P) abort$/;"	f
MovePosRCodeComment	plugged/Nvim-R/R/common_global.vim	/^function MovePosRCodeComment(mode)$/;"	f
MovePosRLineComment	plugged/Nvim-R/R/common_global.vim	/^function MovePosRLineComment(lnum, cpos)$/;"	f
MovedAttribute	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^class MovedAttribute(_LazyDescr):$/;"	c
MovedModule	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^class MovedModule(_LazyDescr):$/;"	c
MozPreprocCssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^class MozPreprocCssLexer(DelegatingLexer):$/;"	c
MozPreprocCssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^class MozPreprocCssLexer(DelegatingLexer):$/;"	c
MozPreprocHashLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^class MozPreprocHashLexer(RegexLexer):$/;"	c
MozPreprocHashLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^class MozPreprocHashLexer(RegexLexer):$/;"	c
MozPreprocJavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^class MozPreprocJavascriptLexer(DelegatingLexer):$/;"	c
MozPreprocJavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^class MozPreprocJavascriptLexer(DelegatingLexer):$/;"	c
MozPreprocPercentLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^class MozPreprocPercentLexer(MozPreprocHashLexer):$/;"	c
MozPreprocPercentLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^class MozPreprocPercentLexer(MozPreprocHashLexer):$/;"	c
MozPreprocXulLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^class MozPreprocXulLexer(DelegatingLexer):$/;"	c
MozPreprocXulLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^class MozPreprocXulLexer(DelegatingLexer):$/;"	c
MqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^class MqlLexer(CppLexer):$/;"	c
MqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^class MqlLexer(CppLexer):$/;"	c
MscgenLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^class MscgenLexer(RegexLexer):$/;"	c
MscgenLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    MscgenLexer, VGLLexer$/;"	i
MscgenLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^class MscgenLexer(RegexLexer):$/;"	c
MscgenLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    MscgenLexer, VGLLexer$/;"	i
MuPADLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^class MuPADLexer(RegexLexer):$/;"	c
MuPADLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/math.py	/^from pygments.lexers.algebra import MuPADLexer$/;"	i
MuPADLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^class MuPADLexer(RegexLexer):$/;"	c
MuPADLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/math.py	/^from pygments.lexers.algebra import MuPADLexer$/;"	i
MultiByteCharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/big5prober.py	/^from .mbcharsetprober import MultiByteCharSetProber$/;"	i
MultiByteCharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/cp949prober.py	/^from .mbcharsetprober import MultiByteCharSetProber$/;"	i
MultiByteCharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/eucjpprober.py	/^from .mbcharsetprober import MultiByteCharSetProber$/;"	i
MultiByteCharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euckrprober.py	/^from .mbcharsetprober import MultiByteCharSetProber$/;"	i
MultiByteCharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euctwprober.py	/^from .mbcharsetprober import MultiByteCharSetProber$/;"	i
MultiByteCharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/gb2312prober.py	/^from .mbcharsetprober import MultiByteCharSetProber$/;"	i
MultiByteCharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcharsetprober.py	/^class MultiByteCharSetProber(CharSetProber):$/;"	c
MultiByteCharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sjisprober.py	/^from .mbcharsetprober import MultiByteCharSetProber$/;"	i
MurphyStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/murphy.py	/^class MurphyStyle(Style):$/;"	c
MurphyStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/murphy.py	/^class MurphyStyle(Style):$/;"	c
MutableMapping	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^from collections import Mapping, MutableMapping$/;"	i
MxmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^class MxmlLexer(RegexLexer):$/;"	c
MxmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^    ActionScript3Lexer, MxmlLexer$/;"	i
MxmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^class MxmlLexer(RegexLexer):$/;"	c
MxmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^    ActionScript3Lexer, MxmlLexer$/;"	i
MySqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.sql import SqlLexer, MySqlLexer, SqliteConsoleLexer$/;"	i
MySqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^class MySqlLexer(RegexLexer):$/;"	c
MySqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.sql import SqlLexer, MySqlLexer, SqliteConsoleLexer$/;"	i
MySqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^class MySqlLexer(RegexLexer):$/;"	c
MyghtyCssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class MyghtyCssLexer(DelegatingLexer):$/;"	c
MyghtyCssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class MyghtyCssLexer(DelegatingLexer):$/;"	c
MyghtyHtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class MyghtyHtmlLexer(DelegatingLexer):$/;"	c
MyghtyHtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class MyghtyHtmlLexer(DelegatingLexer):$/;"	c
MyghtyHtmlParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^class MyghtyHtmlParser(HtmlDjangoParser):$/;"	c
MyghtyJavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class MyghtyJavascriptLexer(DelegatingLexer):$/;"	c
MyghtyJavascriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class MyghtyJavascriptLexer(DelegatingLexer):$/;"	c
MyghtyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class MyghtyLexer(RegexLexer):$/;"	c
MyghtyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class MyghtyLexer(RegexLexer):$/;"	c
MyghtyXmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class MyghtyXmlLexer(DelegatingLexer):$/;"	c
MyghtyXmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class MyghtyXmlLexer(DelegatingLexer):$/;"	c
N	configs/keybindings.vim	/^nnoremap N Nzz$/;"	m
NAME	plugged/delimitMate/Makefile	/^NAME     =  delimitMate$/;"	m
NEGATIVE_SHORTCUT_THRESHOLD	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcharsetprober.py	/^NEGATIVE_SHORTCUT_THRESHOLD = 0.05$/;"	v
NERDTree	plugged/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree.AddPathFilter	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
NERDTree.Close	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
NERDTree.CloseIfQuitOnOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CloseIfQuitOnOpen()$/;"	f
NERDTree.CursorToBookmarkTable	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
NERDTree.CursorToTreeWin	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin()$/;"	f
NERDTree.ExistsForBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
NERDTree.ExistsForTab	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
NERDTree.ForCurrentBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
NERDTree.GetWinNum	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
NERDTree.IsOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
NERDTree.MustBeOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
NERDTree.New	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path)$/;"	f
NERDTree.PathFilters	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
NERDTree.render	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
NERDTreeAddKeyMap	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeChDirMode	configs/plugins/nerdtree.vim	/^let NERDTreeChDirMode=2$/;"	v
NERDTreeCloseAllTabs	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeCloseAllTabs()$/;"	f
NERDTreeCopyNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeFindFile	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeFindFile()$/;"	f
NERDTreeFocus	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeFocus	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeFocus()$/;"	f
NERDTreeFocusToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeFocusToggle  call <SID>NERDTreeFocusToggle()$/;"	c
NERDTreeFocusToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeFocusToggle()$/;"	f
NERDTreeHijackNetrw	plugged/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeIgnore	configs/plugins/nerdtree.vim	/^let NERDTreeIgnore=['\\.pyc$', '\\.rbc$', '\\~$']$/;"	v
NERDTreeMirrorOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeMirrorOpen   call <SID>NERDTreeMirrorOrCreate()$/;"	c
NERDTreeMirrorOrCreate	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeMirrorOrCreate()$/;"	f
NERDTreeMirrorToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeMirrorToggle call <SID>NERDTreeMirrorToggle()$/;"	c
NERDTreeMirrorToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeMirrorToggle()$/;"	f
NERDTreeMoveNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeOpenAllTabs	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeOpenAllTabs()$/;"	f
NERDTreeQuickLook	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRestoreFocus	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeRestoreFocus()$/;"	f
NERDTreeRevealInFinder	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeShowBookmarks	configs/plugins/nerdtree.vim	/^let NERDTreeShowBookmarks = 1$/;"	v
NERDTreeSteppedClose	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeSteppedClose call <SID>NERDTreeSteppedClose()$/;"	c
NERDTreeSteppedClose	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeSteppedClose()$/;"	f
NERDTreeSteppedOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeSteppedOpen  call <SID>NERDTreeSteppedOpen()$/;"	c
NERDTreeSteppedOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeSteppedOpen()$/;"	f
NERDTreeTabsClose	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeTabsClose    call <SID>NERDTreeCloseAllTabs()$/;"	c
NERDTreeTabsFind	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeTabsFind     call <SID>NERDTreeFindFile()$/;"	c
NERDTreeTabsOpen	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeTabsOpen     call <SID>NERDTreeOpenAllTabs()$/;"	c
NERDTreeTabsToggle	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeTabsToggle   call <SID>NERDTreeToggleAllTabs()$/;"	c
NERDTreeToggleAllTabs	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeToggleAllTabs()$/;"	f
NERDTreeUnfocus	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeUnfocus()$/;"	f
NETRC_FILES	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^NETRC_FILES = ('.netrc', '_netrc')$/;"	v
NORMAL_KAF	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^NORMAL_KAF = 0xeb$/;"	v
NORMAL_MEM	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^NORMAL_MEM = 0xee$/;"	v
NORMAL_NUN	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^NORMAL_NUN = 0xf0$/;"	v
NORMAL_PE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^NORMAL_PE = 0xf4$/;"	v
NORMAL_TSADI	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^NORMAL_TSADI = 0xf6$/;"	v
NOTIME	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^NOTIME = timedelta(0)$/;"	v
NOTIME	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^NOTIME = timedelta(0)$/;"	v
NSISLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^class NSISLexer(RegexLexer):$/;"	c
NSISLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.installers import NSISLexer, RPMSpecLexer$/;"	i
NSISLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^class NSISLexer(RegexLexer):$/;"	c
NSISLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.installers import NSISLexer, RPMSpecLexer$/;"	i
NTLMConnectionPool	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/ntlmpool.py	/^class NTLMConnectionPool(HTTPSConnectionPool):$/;"	c
NUMBER_OF_SEQ_CAT	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcharsetprober.py	/^NUMBER_OF_SEQ_CAT = 4$/;"	v
NUMBER_RE	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/scanner.py	/^NUMBER_RE = re.compile($/;"	v
NUMS	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decimal.py	/^    NUMS = "1.0", "10.00", "1.1", "1234567890.1234567890", "500"$/;"	v	class:TestDecimal
NUM_OF_CATEGORY	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^NUM_OF_CATEGORY = 6$/;"	v
NaN	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_float.py	/^from simplejson.decoder import NaN, PosInf, NegInf$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    string_to_tokentype$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/apl.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    Other, Keyword, Operator$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^    Number, Punctuation, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    Number, Punctuation, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    Number, Punctuation, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/chapel.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    Number, Punctuation, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^    Punctuation, Number$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dalvik.py	/^    Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    Punctuation, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^    Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    Number, Punctuation, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^    Number, Punctuation, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/eiffel.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    Number, Punctuation, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    Number, Punctuation, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^from pygments.token import Text, Comment, Keyword, Name, String, Number$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    Number, Punctuation, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/foxpro.py	/^     Name, String$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^    String, Number, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    Number, Punctuation, String$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    Number, Punctuation, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    Number, Punctuation, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/idl.py	/^from pygments.token import Text, Comment, Operator, Keyword, Name, Number$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^from pygments.token import Text, Comment, Keyword, Name, String$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^    Name, String, Number$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/iolang.py	/^    Number$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    Number, Punctuation, Other$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^    Number, Punctuation, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    Number, Punctuation, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    Number, Punctuation, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nit.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^    Number, Punctuation, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    Number, Punctuation, Literal, Comment$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ooc.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    Number, Punctuation, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    Number, Punctuation, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    Number, Punctuation, Other$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    Number, Punctuation, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    Number, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^    Keyword, Name$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^    Number, Punctuation, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^     Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/snobol.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^    Number$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/testing.py	/^from pygments.token import Comment, Keyword, Name, String$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    Number, Generic, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    Number, Punctuation, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    Number, Punctuation, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/autumn.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/borland.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/bw.py	/^     Operator, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/colorful.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/default.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/emacs.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/friendly.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/fruity.py	/^    Generic, Number, String, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/igor.py	/^from pygments.token import Keyword, Name, Comment, String$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/manni.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/murphy.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/pastie.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/perldoc.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/rrt.py	/^from pygments.token import Comment, Name, Keyword, String$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/trac.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vs.py	/^     Operator, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/xcode.py	/^     Number, Operator, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^Name        = Token.Name$/;"	v
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    string_to_tokentype$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/apl.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    Other, Keyword, Operator$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^    Number, Punctuation, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    Number, Punctuation, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    Number, Punctuation, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/chapel.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    Number, Punctuation, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^    Punctuation, Number$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dalvik.py	/^    Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    Punctuation, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^    Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    Number, Punctuation, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^    Number, Punctuation, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/eiffel.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    Number, Punctuation, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    Number, Punctuation, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^from pygments.token import Text, Comment, Keyword, Name, String, Number$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    Number, Punctuation, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/foxpro.py	/^     Name, String$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^    String, Number, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    Number, Punctuation, String$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    Number, Punctuation, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    Number, Punctuation, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/idl.py	/^from pygments.token import Text, Comment, Operator, Keyword, Name, Number$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^from pygments.token import Text, Comment, Keyword, Name, String$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^    Name, String, Number$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/iolang.py	/^    Number$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    Number, Punctuation, Other$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^    Number, Punctuation, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    Number, Punctuation, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    Number, Punctuation, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nit.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^    Number, Punctuation, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    Number, Punctuation, Literal, Comment$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ooc.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    Number, Punctuation, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    Number, Punctuation, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    Number, Punctuation, Other$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    Number, Punctuation, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    Number, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^    Keyword, Name$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^    Number, Punctuation, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^     Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/snobol.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^    Number$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/testing.py	/^from pygments.token import Comment, Keyword, Name, String$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    Number, Generic, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    Number, Punctuation, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^    Number, Punctuation$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    Number, Punctuation, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/autumn.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/borland.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/bw.py	/^     Operator, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/colorful.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/default.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/emacs.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/friendly.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/fruity.py	/^    Generic, Number, String, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/igor.py	/^from pygments.token import Keyword, Name, Comment, String$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/manni.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/murphy.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/pastie.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/perldoc.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/rrt.py	/^from pygments.token import Comment, Name, Keyword, String$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/trac.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vs.py	/^     Operator, Generic$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/xcode.py	/^     Number, Operator, Literal$/;"	i
Name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^Name        = Token.Name$/;"	v
NameHighlightFilter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^class NameHighlightFilter(Filter):$/;"	c
NameHighlightFilter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^class NameHighlightFilter(Filter):$/;"	c
Namespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class Namespace(_AttributeHolder):$/;"	c
NasmLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^class NasmLexer(RegexLexer):$/;"	c
NasmLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^class NasmLexer(RegexLexer):$/;"	c
NasmObjdumpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^class NasmObjdumpLexer(ObjdumpLexer):$/;"	c
NasmObjdumpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^class NasmObjdumpLexer(ObjdumpLexer):$/;"	c
NativeStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/native.py	/^class NativeStyle(Style):$/;"	c
NativeStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/native.py	/^class NativeStyle(Style):$/;"	c
Nd	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Nd = u'0-9\\u0660-\\u0669\\u06f0-\\u06f9\\u07c0-\\u07c9\\u0966-\\u096f\\u09e6-\\u09ef\\u0a66-\\u0a6f\\u0ae6-\\u0aef\\u0b66-\\u0b6f\\u0be6-\\u0bef\\u0c66-\\u0c6f\\u0ce6-\\u0cef\\u0d66-\\u0d6f\\u0e50-\\u0e59\\u0ed0-\\u0ed9\\u0f20-\\u0f29\\u1040-\\u1049\\u1090-\\u1099\\u17e0-\\u17e9\\u1810-\\u1819\\u1946-\\u194f\\u19d0-\\u19d9\\u1a80-\\u1a89\\u1a90-\\u1a99\\u1b50-\\u1b59\\u1bb0-\\u1bb9\\u1c40-\\u1c49\\u1c50-\\u1c59\\ua620-\\ua629\\ua8d0-\\ua8d9\\ua900-\\ua909\\ua9d0-\\ua9d9\\uaa50-\\uaa59\\uabf0-\\uabf9\\uff10-\\uff19'$/;"	v
Nd	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Nd = u'0-9\\u0660-\\u0669\\u06f0-\\u06f9\\u07c0-\\u07c9\\u0966-\\u096f\\u09e6-\\u09ef\\u0a66-\\u0a6f\\u0ae6-\\u0aef\\u0b66-\\u0b6f\\u0be6-\\u0bef\\u0c66-\\u0c6f\\u0ce6-\\u0cef\\u0d66-\\u0d6f\\u0e50-\\u0e59\\u0ed0-\\u0ed9\\u0f20-\\u0f29\\u1040-\\u1049\\u1090-\\u1099\\u17e0-\\u17e9\\u1810-\\u1819\\u1946-\\u194f\\u19d0-\\u19d9\\u1a80-\\u1a89\\u1a90-\\u1a99\\u1b50-\\u1b59\\u1bb0-\\u1bb9\\u1c40-\\u1c49\\u1c50-\\u1c59\\ua620-\\ua629\\ua8d0-\\ua8d9\\ua900-\\ua909\\ua9d0-\\ua9d9\\uaa50-\\uaa59\\uabf0-\\uabf9\\uff10-\\uff19'$/;"	v
NegInf	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_float.py	/^from simplejson.decoder import NaN, PosInf, NegInf$/;"	i
NemerleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^class NemerleLexer(RegexLexer):$/;"	c
NemerleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^class NemerleLexer(RegexLexer):$/;"	c
NesCLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^class NesCLexer(CLexer):$/;"	c
NesCLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^class NesCLexer(CLexer):$/;"	c
NestedForJson	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^class NestedForJson(object):$/;"	c
NetrcParseError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^        from netrc import netrc, NetrcParseError$/;"	i
NewLispLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/functional.py	/^    NewLispLexer$/;"	i
NewLispLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^class NewLispLexer(RegexLexer):$/;"	c
NewLispLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/functional.py	/^    NewLispLexer$/;"	i
NewLispLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^class NewLispLexer(RegexLexer):$/;"	c
NewTags	plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! s:NewTags(name) " {{{2$/;"	f
NewspeakLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.smalltalk import SmalltalkLexer, NewspeakLexer$/;"	i
NewspeakLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^class NewspeakLexer(RegexLexer):$/;"	c
NewspeakLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.smalltalk import SmalltalkLexer, NewspeakLexer$/;"	i
NewspeakLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^class NewspeakLexer(RegexLexer):$/;"	c
NextNormalWindow	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NextNormalWindow()$/;"	f
NextPairs	plugged/smartpairs.vim/plugin/smartpairs.vim	/^command! NextPairs  call s:NextPairs()$/;"	c
NextPairs	plugged/smartpairs.vim/plugin/smartpairs.vim	/^function! s:NextPairs(...)$/;"	f
NextPairsA	plugged/smartpairs.vim/plugin/smartpairs.vim	/^command! NextPairsA call s:NextPairs('a')$/;"	c
NextPairsI	plugged/smartpairs.vim/plugin/smartpairs.vim	/^command! NextPairsI call s:NextPairs('i')$/;"	c
NextPairsToggleUberMode	plugged/smartpairs.vim/plugin/smartpairs.vim	/^command! NextPairsToggleUberMode call s:ToggleUberMode()$/;"	c
NginxConfLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^class NginxConfLexer(RegexLexer):$/;"	c
NginxConfLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^    SquidConfLexer, LighttpdConfLexer, IniLexer, RegeditLexer, PropertiesLexer$/;"	i
NginxConfLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^class NginxConfLexer(RegexLexer):$/;"	c
NginxConfLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^    SquidConfLexer, LighttpdConfLexer, IniLexer, RegeditLexer, PropertiesLexer$/;"	i
NimrodLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.nimrod import NimrodLexer$/;"	i
NimrodLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^class NimrodLexer(RegexLexer):$/;"	c
NimrodLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.nimrod import NimrodLexer$/;"	i
NimrodLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^class NimrodLexer(RegexLexer):$/;"	c
NitLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nit.py	/^class NitLexer(RegexLexer):$/;"	c
NitLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nit.py	/^class NitLexer(RegexLexer):$/;"	c
NixLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^class NixLexer(RegexLexer):$/;"	c
NixLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^class NixLexer(RegexLexer):$/;"	c
Nl	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Nl = u'\\u16ee-\\u16f0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303a\\ua6e6-\\ua6ef'$/;"	v
Nl	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Nl = u'\\u16ee-\\u16f0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303a\\ua6e6-\\ua6ef'$/;"	v
No	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^No = u'\\xb2-\\xb3\\xb9\\xbc-\\xbe\\u09f4-\\u09f9\\u0b72-\\u0b77\\u0bf0-\\u0bf2\\u0c78-\\u0c7e\\u0d70-\\u0d75\\u0f2a-\\u0f33\\u1369-\\u137c\\u17f0-\\u17f9\\u19da\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u215f\\u2189\\u2460-\\u249b\\u24ea-\\u24ff\\u2776-\\u2793\\u2cfd\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324f\\u3251-\\u325f\\u3280-\\u3289\\u32b1-\\u32bf\\ua830-\\ua835'$/;"	v
No	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^No = u'\\xb2-\\xb3\\xb9\\xbc-\\xbe\\u09f4-\\u09f9\\u0b72-\\u0b77\\u0bf0-\\u0bf2\\u0c78-\\u0c7e\\u0d70-\\u0d75\\u0f2a-\\u0f33\\u1369-\\u137c\\u17f0-\\u17f9\\u19da\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u215f\\u2189\\u2460-\\u249b\\u24ea-\\u24ff\\u2776-\\u2793\\u2cfd\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324f\\u3251-\\u325f\\u3280-\\u3289\\u32b1-\\u32bf\\ua830-\\ua835'$/;"	v
NoAutoClose	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:NoAutoClose() "{{{$/;"	f
NoExtensionTestSuite	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^class NoExtensionTestSuite(unittest.TestSuite):$/;"	c
NonExistentTimeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^from pytz.exceptions import NonExistentTimeError$/;"	i
NonExistentTimeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/exceptions.py	/^class NonExistentTimeError(InvalidTimeError):$/;"	c
NonExistentTimeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^from pytz.exceptions import AmbiguousTimeError, NonExistentTimeError$/;"	i
NonExistentTimeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^from pytz.exceptions import NonExistentTimeError$/;"	i
NonExistentTimeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/exceptions.py	/^class NonExistentTimeError(InvalidTimeError):$/;"	c
NonExistentTimeError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^from pytz.exceptions import AmbiguousTimeError, NonExistentTimeError$/;"	i
Notifier.AddListener	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
Notifier.GetListenersForEvent	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
Notifier.GetListenersMap	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
Notifier.NotifyListeners	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, params)$/;"	f
NoumeaDSTEndTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class NoumeaDSTEndTestCase(USEasternDSTStartTestCase):$/;"	c
NoumeaDSTEndTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class NoumeaDSTEndTestCase(USEasternDSTStartTestCase):$/;"	c
NoumeaHistoryStartTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class NoumeaHistoryStartTestCase(USEasternDSTStartTestCase):$/;"	c
NoumeaHistoryStartTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class NoumeaHistoryStartTestCase(USEasternDSTStartTestCase):$/;"	c
NoumeaNoMoreDSTTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class NoumeaNoMoreDSTTestCase(NoumeaDSTEndTestCase):$/;"	c
NoumeaNoMoreDSTTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class NoumeaNoMoreDSTTestCase(NoumeaDSTEndTestCase):$/;"	c
NullFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^class NullFormatter(Formatter):$/;"	c
NullFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^class NullFormatter(Formatter):$/;"	c
NullHandler	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^    class NullHandler(logging.Handler):$/;"	c
NullHandler	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^    from logging import NullHandler$/;"	i
NullHandler	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^    class NullHandler(logging.Handler):$/;"	c
NullHandler	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^    from logging import NullHandler$/;"	i
NumPyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/math.py	/^from pygments.lexers.python import NumPyLexer$/;"	i
NumPyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^class NumPyLexer(PythonLexer):$/;"	c
NumPyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/math.py	/^from pygments.lexers.python import NumPyLexer$/;"	i
NumPyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^class NumPyLexer(PythonLexer):$/;"	c
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/apl.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    Other, Keyword, Operator$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^    Number, Punctuation, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    Number, Punctuation, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    Number, Punctuation, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/chapel.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    Number, Punctuation, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^    Punctuation, Number$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dalvik.py	/^    Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    Punctuation, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    Number, Punctuation, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^    Number, Punctuation, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/eiffel.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    Number, Punctuation, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    Number, Punctuation, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^from pygments.token import Text, Comment, Keyword, Name, String, Number$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    Number, Punctuation, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^    String, Number, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    Number, Punctuation, String$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    Number, Punctuation, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    Number, Punctuation, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/idl.py	/^from pygments.token import Text, Comment, Operator, Keyword, Name, Number$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^    Name, String, Number$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/iolang.py	/^    Number$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    Number, Punctuation, Other$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^    Number, Punctuation, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    Number, Punctuation, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    Number, Punctuation, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nit.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^    Number, Punctuation, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    Number, Punctuation, Literal, Comment$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ooc.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    Number, Punctuation, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    Number, Punctuation, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    Number, Punctuation, Other$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    Number, Punctuation, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    Number, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^    Keyword, Name$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^    Number, Punctuation, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^     Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/snobol.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^    Number$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    Number, Generic, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    Number, Punctuation, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    Number, Punctuation, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/autumn.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/borland.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/colorful.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/default.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/emacs.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/friendly.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/fruity.py	/^    Generic, Number, String, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/manni.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/murphy.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/pastie.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/perldoc.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/trac.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/xcode.py	/^     Number, Operator, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^Number      = Literal.Number$/;"	v
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/apl.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    Other, Keyword, Operator$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^    Number, Punctuation, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    Number, Punctuation, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    Number, Punctuation, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/chapel.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    Number, Punctuation, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^    Punctuation, Number$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dalvik.py	/^    Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    Punctuation, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    Number, Punctuation, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^    Number, Punctuation, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/eiffel.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    Number, Punctuation, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    Number, Punctuation, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^from pygments.token import Text, Comment, Keyword, Name, String, Number$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    Number, Punctuation, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^    String, Number, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    Number, Punctuation, String$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    Number, Punctuation, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    Number, Punctuation, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/idl.py	/^from pygments.token import Text, Comment, Operator, Keyword, Name, Number$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^    Name, String, Number$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/iolang.py	/^    Number$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    Number, Punctuation, Other$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^    Number, Punctuation, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    Number, Punctuation, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    Number, Punctuation, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nit.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^    Number, Punctuation, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    Number, Punctuation, Literal, Comment$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ooc.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    Number, Punctuation, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    Number, Punctuation, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    Number, Punctuation, Other$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    Number, Punctuation, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    Number, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^    Keyword, Name$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^    Number, Punctuation, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^     Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/snobol.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^    Number$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    Number, Generic, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    Number, Punctuation, Generic$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^    Number, Punctuation$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    Number, Punctuation, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/autumn.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/borland.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/colorful.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/default.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/emacs.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/friendly.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/fruity.py	/^    Generic, Number, String, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/manni.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/murphy.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/pastie.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/perldoc.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/trac.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/xcode.py	/^     Number, Operator, Literal$/;"	i
Number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^Number      = Literal.Number$/;"	v
OBJS	plugged/vimproc.vim/make_msvc.mak	/^OBJS = $(OUTDIR)\/proc_w32.obj$/;"	m
OLSEN_VERSION	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^OLSEN_VERSION = OLSON_VERSION # Old releases had this misspelling$/;"	v
OLSEN_VERSION	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^OLSEN_VERSION = OLSON_VERSION # Old releases had this misspelling$/;"	v
OLSON_VERSION	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^OLSON_VERSION = '2013d'$/;"	v
OLSON_VERSION	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^OLSON_VERSION = '2013d'$/;"	v
ONE_CHAR_PROB	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/utf8prober.py	/^ONE_CHAR_PROB = 0.5$/;"	v
ONE_OR_MORE	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^ONE_OR_MORE = '+'$/;"	v
OPENEDGEKEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_openedge_builtins.py	/^OPENEDGEKEYWORDS = ($/;"	v
OPENEDGEKEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^from pygments.lexers._openedge_builtins import OPENEDGEKEYWORDS$/;"	i
OPENEDGEKEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_openedge_builtins.py	/^OPENEDGEKEYWORDS = ($/;"	v
OPENEDGEKEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^from pygments.lexers._openedge_builtins import OPENEDGEKEYWORDS$/;"	i
OPEN_MAX	plugged/vimproc.vim/autoload/fakepoll.h	/^  #define OPEN_MAX /;"	d
OPERATORS1	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    OPERATORS1 = ('<', '>', '+', '-', '*', '\/', '!', '^', '&')$/;"	v	class:ElixirLexer
OPERATORS1	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    OPERATORS1 = ('<', '>', '+', '-', '*', '\/', '!', '^', '&')$/;"	v	class:ElixirLexer
OPERATORS2	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    OPERATORS2 = ($/;"	v	class:ElixirLexer
OPERATORS2	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    OPERATORS2 = ($/;"	v	class:ElixirLexer
OPERATORS3	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    OPERATORS3 = ($/;"	v	class:ElixirLexer
OPERATORS3	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    OPERATORS3 = ($/;"	v	class:ElixirLexer
OPTIONAL	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^OPTIONAL = '?'$/;"	v
OP_NO_COMPRESSION	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^    OP_NO_COMPRESSION = 0x20000$/;"	v
OP_NO_COMPRESSION	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^    from ssl import OP_NO_SSLv2, OP_NO_SSLv3, OP_NO_COMPRESSION$/;"	i
OP_NO_SSLv2	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^    from ssl import OP_NO_SSLv2, OP_NO_SSLv3, OP_NO_COMPRESSION$/;"	i
OP_NO_SSLv3	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^    from ssl import OP_NO_SSLv2, OP_NO_SSLv3, OP_NO_COMPRESSION$/;"	i
ORANGE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^ORANGE = "#f99b15"$/;"	v
ORANGE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^ORANGE = "#f99b15"$/;"	v
ORANGE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^ORANGE = "#f99b15"$/;"	v
ORANGE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^ORANGE = "#f99b15"$/;"	v
OTH	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^OTH = 1  # other$/;"	v
OUTDIR	plugged/vimproc.vim/make_msvc.mak	/^OUTDIR = $(SRCDIR)\\obj$(CPU)$/;"	m
ObjdumpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^class ObjdumpLexer(RegexLexer):$/;"	c
ObjdumpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^class ObjdumpLexer(RegexLexer):$/;"	c
ObjectiveCLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^    ObjectiveCppLexer, LogosLexer$/;"	i
ObjectiveCLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^class ObjectiveCLexer(objective(CLexer)):$/;"	c
ObjectiveCLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^from pygments.lexers.objective import ObjectiveCLexer$/;"	i
ObjectiveCLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^    ObjectiveCppLexer, LogosLexer$/;"	i
ObjectiveCLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^class ObjectiveCLexer(objective(CLexer)):$/;"	c
ObjectiveCLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^from pygments.lexers.objective import ObjectiveCLexer$/;"	i
ObjectiveCppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^    ObjectiveCppLexer, LogosLexer$/;"	i
ObjectiveCppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^class ObjectiveCppLexer(objective(CppLexer)):$/;"	c
ObjectiveCppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^    ObjectiveCppLexer, LogosLexer$/;"	i
ObjectiveCppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^class ObjectiveCppLexer(objective(CppLexer)):$/;"	c
ObjectiveJLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^class ObjectiveJLexer(RegexLexer):$/;"	c
ObjectiveJLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^    DartLexer, TypeScriptLexer, LassoLexer, ObjectiveJLexer, CoffeeScriptLexer$/;"	i
ObjectiveJLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^class ObjectiveJLexer(RegexLexer):$/;"	c
ObjectiveJLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^    DartLexer, TypeScriptLexer, LassoLexer, ObjectiveJLexer, CoffeeScriptLexer$/;"	i
OcamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.ml import OcamlLexer$/;"	i
OcamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/functional.py	/^from pygments.lexers.ml import SMLLexer, OcamlLexer, OpaLexer$/;"	i
OcamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^class OcamlLexer(RegexLexer):$/;"	c
OcamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.ml import OcamlLexer$/;"	i
OcamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/functional.py	/^from pygments.lexers.ml import SMLLexer, OcamlLexer, OpaLexer$/;"	i
OcamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^class OcamlLexer(RegexLexer):$/;"	c
OctaveLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/math.py	/^    OctaveLexer, ScilabLexer$/;"	i
OctaveLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^class OctaveLexer(RegexLexer):$/;"	c
OctaveLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/math.py	/^    OctaveLexer, ScilabLexer$/;"	i
OctaveLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^class OctaveLexer(RegexLexer):$/;"	c
OnOBBufUnload	plugged/Nvim-R/ftplugin/rbrowser.vim	/^function! OnOBBufUnload()$/;"	f
OocLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.ooc import OocLexer$/;"	i
OocLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ooc.py	/^class OocLexer(RegexLexer):$/;"	c
OocLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.ooc import OocLexer$/;"	i
OocLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ooc.py	/^class OocLexer(RegexLexer):$/;"	c
OpaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/functional.py	/^from pygments.lexers.ml import SMLLexer, OcamlLexer, OpaLexer$/;"	i
OpaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^class OpaLexer(RegexLexer):$/;"	c
OpaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/functional.py	/^from pygments.lexers.ml import SMLLexer, OcamlLexer, OpaLexer$/;"	i
OpaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^class OpaLexer(RegexLexer):$/;"	c
OpenEdgeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^class OpenEdgeLexer(RegexLexer):$/;"	c
OpenEdgeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    GoodDataCLLexer, MaqlLexer$/;"	i
OpenEdgeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^class OpenEdgeLexer(RegexLexer):$/;"	c
OpenEdgeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    GoodDataCLLexer, MaqlLexer$/;"	i
OpenRScratch	plugged/Nvim-R/R/common_global.vim	/^function OpenRScratch()$/;"	f
OpenSSL	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^import OpenSSL.SSL$/;"	i
Opener	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_sourcemod_builtins.py	/^    class Opener(FancyURLopener):$/;"	c
Opener	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_sourcemod_builtins.py	/^    class Opener(FancyURLopener):$/;"	c
Opener.New	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._bufInWindows	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
Opener._checkToCloseTree	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._firstUsableWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
Opener._gotoTargetWin	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._isWindowUsable	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
Opener._newSplit	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/apl.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    Other, Keyword, Operator$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^    Number, Punctuation, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    Number, Punctuation, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    Number, Punctuation, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/chapel.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    Number, Punctuation, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^    Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    Number, Punctuation, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^    Number, Punctuation, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/eiffel.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    Number, Punctuation, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    Number, Punctuation, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    Number, Punctuation, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/foxpro.py	/^     Name, String$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^    String, Number, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    Number, Punctuation, String$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    Number, Punctuation, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    Number, Punctuation, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/idl.py	/^from pygments.token import Text, Comment, Operator, Keyword, Name, Number$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^    Name, String, Number$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/iolang.py	/^    Number$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    Number, Punctuation, Other$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^    Number, Punctuation, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    Number, Punctuation, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    Number, Punctuation, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nit.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^    Number, Punctuation, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    Number, Punctuation, Literal, Comment$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ooc.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    Number, Punctuation, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    Number, Punctuation, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    Number, Punctuation, Other$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    Number, Punctuation, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    Number, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^    Keyword, Name$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^    Number, Punctuation, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^     Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/snobol.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^    Number$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    Number, Generic, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    Number, Punctuation, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    Number, Punctuation, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/autumn.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/borland.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/bw.py	/^     Operator, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/colorful.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/default.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/emacs.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/friendly.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/manni.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/murphy.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/pastie.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/perldoc.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/trac.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vs.py	/^     Operator, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/xcode.py	/^     Number, Operator, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^Operator    = Token.Operator$/;"	v
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/apl.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    Other, Keyword, Operator$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^    Number, Punctuation, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    Number, Punctuation, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    Number, Punctuation, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/chapel.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    Number, Punctuation, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^    Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    Number, Punctuation, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^    Number, Punctuation, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/eiffel.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    Number, Punctuation, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    Number, Punctuation, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    Number, Punctuation, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/foxpro.py	/^     Name, String$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^    String, Number, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    Number, Punctuation, String$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    Number, Punctuation, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    Number, Punctuation, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/idl.py	/^from pygments.token import Text, Comment, Operator, Keyword, Name, Number$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^    Name, String, Number$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/iolang.py	/^    Number$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    Number, Punctuation, Other$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^    Number, Punctuation, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    Number, Punctuation, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    Number, Punctuation, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nit.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^    Number, Punctuation, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    Number, Punctuation, Literal, Comment$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ooc.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    Number, Punctuation, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    Number, Punctuation, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    Number, Punctuation, Other$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    Number, Punctuation, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    Number, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^    Keyword, Name$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^    Number, Punctuation, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^     Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/snobol.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^    Number$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    Number, Generic, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    Number, Punctuation, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^    Number, Punctuation$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    Number, Punctuation, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/autumn.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/borland.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/bw.py	/^     Operator, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/colorful.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/default.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/emacs.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/friendly.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/manni.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/murphy.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/pastie.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/perldoc.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/trac.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vs.py	/^     Operator, Generic$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/xcode.py	/^     Number, Operator, Literal$/;"	i
Operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^Operator    = Token.Operator$/;"	v
Operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    Operators = ("and", "or", "is equal", "equals", "(is )?equal to", "is not",$/;"	v	class:AppleScriptLexer
Operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    Operators = ("and", "or", "is equal", "equals", "(is )?equal to", "is not",$/;"	v	class:AppleScriptLexer
OpfuncExpression	plugged/ingo-library/autoload/ingo/mapmaker.vim	/^function! s:OpfuncExpression( opfunc )$/;"	f
OptimizedUTCTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class OptimizedUTCTestCase(unittest.TestCase, BaseTzInfoTestCase):$/;"	c
OptimizedUTCTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class OptimizedUTCTestCase(unittest.TestCase, BaseTzInfoTestCase):$/;"	c
OptionError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    guess_decode, guess_decode_from_terminal, terminal_encoding$/;"	i
OptionError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^     get_choice_opt, ClassNotFound, OptionError, text_type, string_types$/;"	i
OptionError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^from pygments.util import OptionError, get_choice_opt$/;"	i
OptionError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^class OptionError(Exception):$/;"	c
OptionError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    guess_decode, guess_decode_from_terminal, terminal_encoding$/;"	i
OptionError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^     get_choice_opt, ClassNotFound, OptionError, text_type, string_types$/;"	i
OptionError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^from pygments.util import OptionError, get_choice_opt$/;"	i
OptionError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^class OptionError(Exception):$/;"	c
OrderedDict	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^    from .packages.ordereddict import OrderedDict  # pragma: nocover$/;"	i
OrderedDict	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^    from collections import OrderedDict  # pragma: nocover$/;"	i
OrderedDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^class OrderedDict(dict, DictMixin):$/;"	c
OrderedDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from .packages.urllib3.packages.ordered_dict import OrderedDict$/;"	i
OrderedDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from collections import OrderedDict$/;"	i
OrderedDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    from .packages.ordered_dict import OrderedDict$/;"	i
OrderedDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    from collections import OrderedDict$/;"	i
OrderedDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^class OrderedDict(dict):$/;"	c
OrderedDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from .compat import cookielib, OrderedDict, urljoin, urlparse$/;"	i
OrderedDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^from .compat import (quote, urlparse, bytes, str, OrderedDict, unquote, is_py2,$/;"	i
OrderedDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^OrderedDict = _import_OrderedDict()$/;"	v
OrderedDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^class OrderedDict(dict, DictMixin):$/;"	c
OrderedDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decode.py	/^from simplejson import OrderedDict$/;"	i
OrderedDict	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^    from ..packages.ordereddict import OrderedDict  # pragma: nocover$/;"	i
OrderedDict	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^    from collections import OrderedDict$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^from pygments.token import Error, Text, Other, _TokenType$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    Other, Keyword, Operator$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    Number, Punctuation, Other$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    Number, Punctuation, Other$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^Other       = Token.Other$/;"	v
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^from pygments.token import Error, Text, Other, _TokenType$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    Other, Keyword, Operator$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    Number, Punctuation, Other$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    Number, Punctuation, Other$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Other	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^Other       = Token.Other$/;"	v
OuterClass	plugged/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^      class OuterClass$/;"	c
PARSER	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^PARSER = 'A...'$/;"	v
PATTERNS_AND_WEIGHTS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    PATTERNS_AND_WEIGHTS = ($/;"	v	class:RexxLexer
PATTERNS_AND_WEIGHTS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    PATTERNS_AND_WEIGHTS = ($/;"	v	class:RexxLexer
PERL	plugged/delimitMate/Makefile	/^PERL     =  perl$/;"	m
PERL6_BRACKETS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    PERL6_BRACKETS = {$/;"	v	class:Perl6Lexer
PERL6_BRACKETS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    PERL6_BRACKETS = {$/;"	v	class:Perl6Lexer
PERL6_BUILTINS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    PERL6_BUILTINS = ($/;"	v	class:Perl6Lexer
PERL6_BUILTINS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    PERL6_BUILTINS = ($/;"	v	class:Perl6Lexer
PERL6_BUILTIN_CLASSES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    PERL6_BUILTIN_CLASSES = ($/;"	v	class:Perl6Lexer
PERL6_BUILTIN_CLASSES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    PERL6_BUILTIN_CLASSES = ($/;"	v	class:Perl6Lexer
PERL6_IDENTIFIER_RANGE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    PERL6_IDENTIFIER_RANGE = "['\\w:-]"$/;"	v	class:Perl6Lexer
PERL6_IDENTIFIER_RANGE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    PERL6_IDENTIFIER_RANGE = "['\\w:-]"$/;"	v	class:Perl6Lexer
PERL6_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    PERL6_KEYWORDS = ($/;"	v	class:Perl6Lexer
PERL6_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    PERL6_KEYWORDS = ($/;"	v	class:Perl6Lexer
PERL6_OPERATORS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    PERL6_OPERATORS = ($/;"	v	class:Perl6Lexer
PERL6_OPERATORS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    PERL6_OPERATORS = ($/;"	v	class:Perl6Lexer
PHP_MANUAL_DIR	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_php_builtins.py	/^    PHP_MANUAL_DIR     = '.\/php-chunked-xhtml\/'$/;"	v
PHP_MANUAL_DIR	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_php_builtins.py	/^    PHP_MANUAL_DIR     = '.\/php-chunked-xhtml\/'$/;"	v
PHP_MANUAL_URL	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_php_builtins.py	/^    PHP_MANUAL_URL     = 'http:\/\/us3.php.net\/distributions\/manual\/php_manual_en.tar.gz'$/;"	v
PHP_MANUAL_URL	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_php_builtins.py	/^    PHP_MANUAL_URL     = 'http:\/\/us3.php.net\/distributions\/manual\/php_manual_en.tar.gz'$/;"	v
PHP_MODULE_RE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_php_builtins.py	/^    PHP_MODULE_RE      = '<title>(.*?) Functions<\/title>'$/;"	v
PHP_MODULE_RE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_php_builtins.py	/^    PHP_MODULE_RE      = '<title>(.*?) Functions<\/title>'$/;"	v
PHP_REFERENCE_GLOB	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_php_builtins.py	/^    PHP_REFERENCE_GLOB = 'ref.*'$/;"	v
PHP_REFERENCE_GLOB	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_php_builtins.py	/^    PHP_REFERENCE_GLOB = 'ref.*'$/;"	v
PIPE	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^from subprocess import Popen, PIPE$/;"	i
PLATFORM	plugged/vimproc.vim/Makefile	/^        PLATFORM = mac$/;"	m
PLATFORM	plugged/vimproc.vim/Makefile	/^        PLATFORM = sunos$/;"	m
PLATFORM	plugged/vimproc.vim/Makefile	/^        PLATFORM = unix$/;"	m
PLATFORM	plugged/vimproc.vim/Makefile	/^      PLATFORM = cygwin$/;"	m
PLATFORM	plugged/vimproc.vim/Makefile	/^      PLATFORM = mingw32$/;"	m
PLATFORM	plugged/vimproc.vim/Makefile	/^      PLATFORM = mingw64$/;"	m
PLPGSQL_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_postgres_builtins.py	/^PLPGSQL_KEYWORDS = ($/;"	v
PLPGSQL_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    PSEUDO_TYPES, PLPGSQL_KEYWORDS$/;"	i
PLPGSQL_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_postgres_builtins.py	/^PLPGSQL_KEYWORDS = ($/;"	v
PLPGSQL_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    PSEUDO_TYPES, PLPGSQL_KEYWORDS$/;"	i
PLUGIN	plugged/delimitMate/Makefile	/^PLUGIN   =  $(wildcard plugin\/*.vim)$/;"	m
PLUGINHOME	plugged/Nvim-R/Makefile	/^PLUGINHOME=`pwd`$/;"	m
PLUGINRELEASEDATE	plugged/Nvim-R/Makefile	/^PLUGINRELEASEDATE=`date +"%Y-%m-%d"`$/;"	m
PLUGINVERSION	plugged/Nvim-R/Makefile	/^PLUGINVERSION=0.9.0$/;"	m
POLLERR	plugged/vimproc.vim/autoload/fakepoll.h	/^#define POLLERR /;"	d
POLLHUP	plugged/vimproc.vim/autoload/fakepoll.h	/^#define POLLHUP /;"	d
POLLIN	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/connection.py	/^    from select import poll, POLLIN$/;"	i
POLLIN	plugged/vimproc.vim/autoload/fakepoll.h	/^#define POLLIN /;"	d
POLLNORM	plugged/vimproc.vim/autoload/fakepoll.h	/^#define POLLNORM /;"	d
POLLNVAL	plugged/vimproc.vim/autoload/fakepoll.h	/^#define POLLNVAL /;"	d
POLLOUT	plugged/vimproc.vim/autoload/fakepoll.h	/^#define POLLOUT /;"	d
POLLPRI	plugged/vimproc.vim/autoload/fakepoll.h	/^#define POLLPRI /;"	d
POLLRDBAND	plugged/vimproc.vim/autoload/fakepoll.h	/^#define POLLRDBAND /;"	d
POLLRDNORM	plugged/vimproc.vim/autoload/fakepoll.h	/^#define POLLRDNORM /;"	d
POLLWRBAND	plugged/vimproc.vim/autoload/fakepoll.h	/^#define POLLWRBAND /;"	d
POLLWRNORM	plugged/vimproc.vim/autoload/fakepoll.h	/^#define POLLWRNORM /;"	d
POSITIVE_CAT	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcharsetprober.py	/^POSITIVE_CAT = NUMBER_OF_SEQ_CAT - 1$/;"	v
POSITIVE_SHORTCUT_THRESHOLD	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcharsetprober.py	/^POSITIVE_SHORTCUT_THRESHOLD = 0.95$/;"	v
PROTOCOL_SSLv23	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^    from ssl import wrap_socket, CERT_NONE, PROTOCOL_SSLv23$/;"	i
PSEUDO_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_postgres_builtins.py	/^PSEUDO_TYPES = ($/;"	v
PSEUDO_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_postgres_builtins.py	/^PSEUDO_TYPES = tuple(sorted(set(PSEUDO_TYPES) - set(map(str.lower, KEYWORDS))))$/;"	v
PSEUDO_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    PSEUDO_TYPES, PLPGSQL_KEYWORDS$/;"	i
PSEUDO_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_postgres_builtins.py	/^PSEUDO_TYPES = ($/;"	v
PSEUDO_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_postgres_builtins.py	/^PSEUDO_TYPES = tuple(sorted(set(PSEUDO_TYPES) - set(map(str.lower, KEYWORDS))))$/;"	v
PSEUDO_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    PSEUDO_TYPES, PLPGSQL_KEYWORDS$/;"	i
PSEUDO_VAR	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    PSEUDO_VAR = ('_', '__MODULE__', '__DIR__', '__ENV__', '__CALLER__')$/;"	v	class:ElixirLexer
PSEUDO_VAR	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    PSEUDO_VAR = ('_', '__MODULE__', '__DIR__', '__ENV__', '__CALLER__')$/;"	v	class:ElixirLexer
PUNCTUATION	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    PUNCTUATION = ($/;"	v	class:ElixirLexer
PUNCTUATION	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    PUNCTUATION = ($/;"	v	class:ElixirLexer
PURPLE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^PURPLE = "#815ba4"$/;"	v
PURPLE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^PURPLE = "#815ba4"$/;"	v
PURPLE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^PURPLE = "#815ba4"$/;"	v
PURPLE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^PURPLE = "#815ba4"$/;"	v
PY2_UNUSED	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PY2_UNUSED /;"	d	file:
PY2_UNUSED	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PY2_UNUSED$/;"	d	file:
PY3	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^from .packages.six import iterkeys, itervalues, PY3$/;"	i
PY3	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^from .packages.six import string_types as basestring, binary_type, PY3$/;"	i
PY3	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    PY3 = False$/;"	v
PY3	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    PY3 = True$/;"	v
PY3	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^from .compat import fromhex, b, u, text_type, binary_type, PY3, unichr$/;"	i
PY3	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^from .compat import u, unichr, binary_type, string_types, integer_types, PY3$/;"	i
PY3	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^from simplejson.compat import StringIO, long_type, b, binary_type, PY3$/;"	i
PY3	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_scanstring.py	/^from simplejson.compat import b, PY3$/;"	i
PY3_UNUSED	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PY3_UNUSED /;"	d	file:
PY3_UNUSED	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PY3_UNUSED$/;"	d	file:
PY_SSIZE_T_MAX	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PY_SSIZE_T_MAX /;"	d	file:
PY_SSIZE_T_MIN	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PY_SSIZE_T_MIN /;"	d	file:
Pacific	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^Pacific  = USTimeZone(-8, "Pacific",  "PST", "PDT")$/;"	v
Pacific	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^Pacific  = USTimeZone(-8, "Pacific",  "PST", "PDT")$/;"	v
PanLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^class PanLexer(RegexLexer):$/;"	c
PanLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^class PanLexer(RegexLexer):$/;"	c
ParaisoDarkStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^class ParaisoDarkStyle(Style):$/;"	c
ParaisoDarkStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^class ParaisoDarkStyle(Style):$/;"	c
ParaisoLightStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^class ParaisoLightStyle(Style):$/;"	c
ParaisoLightStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^class ParaisoLightStyle(Style):$/;"	c
Parse	plugged/AdvancedSorters/autoload/AdvancedSorters/Uniq.vim	/^function! s:Parse( arguments )$/;"	f
Parse	plugged/ingo-library/autoload/ingo/cmdargs/pattern.vim	/^function! s:Parse( arguments, ... )$/;"	f
ParseCoffeeError	plugged/vim-coffee-script/ftplugin/coffee.vim	/^function! s:ParseCoffeeError(output, src, startline)$/;"	f
ParseExpressionAndSortArguments	plugged/AdvancedSorters/autoload/AdvancedSorters/Ranges.vim	/^function! s:ParseExpressionAndSortArguments( arguments )$/;"	f
ParsePattern	plugged/tabular/plugin/Tabular.vim	/^function! s:ParsePattern(string)$/;"	f
ParseRangeAndSortArguments	plugged/AdvancedSorters/autoload/AdvancedSorters/Ranges.vim	/^function! s:ParseRangeAndSortArguments( arguments )$/;"	f
PastieStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/pastie.py	/^class PastieStyle(Style):$/;"	c
PastieStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/pastie.py	/^class PastieStyle(Style):$/;"	c
Path.AbsolutePathFor	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(path)$/;"	f
Path.Resolve	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.Slash	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._escChars	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
Path._ignorePatternMatches	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._str	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
Path.changeToDir	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.createParentDirectories	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
Path.delete	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortKey	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
Path.getSortOrderIndex	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore()$/;"	f
Path.isUnder	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.isUnixHiddenFile	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh()$/;"	f
Path.refreshFlags	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags()$/;"	f
Path.rename	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
PawnLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.pawn import SourcePawnLexer, PawnLexer$/;"	i
PawnLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^class PawnLexer(RegexLexer):$/;"	c
PawnLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.pawn import SourcePawnLexer, PawnLexer$/;"	i
PawnLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^class PawnLexer(RegexLexer):$/;"	c
Pc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Pc = u'_\\u203f-\\u2040\\u2054\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\uff3f'$/;"	v
Pc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Pc = u'_\\u203f-\\u2040\\u2054\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\uff3f'$/;"	v
Pd	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Pd = u'\\\\-\\u058a\\u05be\\u1400\\u1806\\u2010-\\u2015\\u2e17\\u2e1a\\u2e3a-\\u2e3b\\u301c\\u3030\\u30a0\\ufe31-\\ufe32\\ufe58\\ufe63\\uff0d'$/;"	v
Pd	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Pd = u'\\\\-\\u058a\\u05be\\u1400\\u1806\\u2010-\\u2015\\u2e17\\u2e1a\\u2e3a-\\u2e3b\\u301c\\u3030\\u30a0\\ufe31-\\ufe32\\ufe58\\ufe63\\uff0d'$/;"	v
Pe	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Pe = u')\\\\]}\\u0f3b\\u0f3d\\u169c\\u2046\\u207e\\u208e\\u2309\\u230b\\u232a\\u2769\\u276b\\u276d\\u276f\\u2771\\u2773\\u2775\\u27c6\\u27e7\\u27e9\\u27eb\\u27ed\\u27ef\\u2984\\u2986\\u2988\\u298a\\u298c\\u298e\\u2990\\u2992\\u2994\\u2996\\u2998\\u29d9\\u29db\\u29fd\\u2e23\\u2e25\\u2e27\\u2e29\\u3009\\u300b\\u300d\\u300f\\u3011\\u3015\\u3017\\u3019\\u301b\\u301e-\\u301f\\ufd3f\\ufe18\\ufe36\\ufe38\\ufe3a\\ufe3c\\ufe3e\\ufe40\\ufe42\\ufe44\\ufe48\\ufe5a\\ufe5c\\ufe5e\\uff09\\uff3d\\uff5d\\uff60\\uff63'$/;"	v
Pe	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Pe = u')\\\\]}\\u0f3b\\u0f3d\\u169c\\u2046\\u207e\\u208e\\u2309\\u230b\\u232a\\u2769\\u276b\\u276d\\u276f\\u2771\\u2773\\u2775\\u27c6\\u27e7\\u27e9\\u27eb\\u27ed\\u27ef\\u2984\\u2986\\u2988\\u298a\\u298c\\u298e\\u2990\\u2992\\u2994\\u2996\\u2998\\u29d9\\u29db\\u29fd\\u2e23\\u2e25\\u2e27\\u2e29\\u3009\\u300b\\u300d\\u300f\\u3011\\u3015\\u3017\\u3019\\u301b\\u301e-\\u301f\\ufd3f\\ufe18\\ufe36\\ufe38\\ufe3a\\ufe3c\\ufe3e\\ufe40\\ufe42\\ufe44\\ufe48\\ufe5a\\ufe5c\\ufe5e\\uff09\\uff3d\\uff5d\\uff60\\uff63'$/;"	v
Perl6Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^from pygments.lexers.perl import PerlLexer, Perl6Lexer$/;"	i
Perl6Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^class Perl6Lexer(ExtendedRegexLexer):$/;"	c
Perl6Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^from pygments.lexers.perl import PerlLexer, Perl6Lexer$/;"	i
Perl6Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^class Perl6Lexer(ExtendedRegexLexer):$/;"	c
PerlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^from pygments.lexers.perl import PerlLexer, Perl6Lexer$/;"	i
PerlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^from pygments.lexers.perl import PerlLexer$/;"	i
PerlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^class PerlLexer(RegexLexer):$/;"	c
PerlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^from pygments.lexers.perl import PerlLexer$/;"	i
PerlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^from pygments.lexers.perl import PerlLexer, Perl6Lexer$/;"	i
PerlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^from pygments.lexers.perl import PerlLexer$/;"	i
PerlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^class PerlLexer(RegexLexer):$/;"	c
PerlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^from pygments.lexers.perl import PerlLexer$/;"	i
PerldocStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/perldoc.py	/^class PerldocStyle(Style):$/;"	c
PerldocStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/perldoc.py	/^class PerldocStyle(Style):$/;"	c
Pf	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Pf = u'\\xbb\\u2019\\u201d\\u203a\\u2e03\\u2e05\\u2e0a\\u2e0d\\u2e1d\\u2e21'$/;"	v
Pf	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Pf = u'\\xbb\\u2019\\u201d\\u203a\\u2e03\\u2e05\\u2e0a\\u2e0d\\u2e1d\\u2e21'$/;"	v
PhpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^class PhpLexer(RegexLexer):$/;"	c
PhpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^from pygments.lexers.php import PhpLexer$/;"	i
PhpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^from pygments.lexers.php import PhpLexer$/;"	i
PhpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^class PhpLexer(RegexLexer):$/;"	c
PhpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^from pygments.lexers.php import PhpLexer$/;"	i
PhpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^from pygments.lexers.php import PhpLexer$/;"	i
PhpParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/php.py	/^class PhpParser(TokenParser):$/;"	c
Pi	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Pi = u'\\xab\\u2018\\u201b-\\u201c\\u201f\\u2039\\u2e02\\u2e04\\u2e09\\u2e0c\\u2e1c\\u2e20'$/;"	v
Pi	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Pi = u'\\xab\\u2018\\u201b-\\u201c\\u201f\\u2039\\u2e02\\u2e04\\u2e09\\u2e0c\\u2e1c\\u2e20'$/;"	v
PicklingTest	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class PicklingTest(unittest.TestCase):$/;"	c
PicklingTest	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class PicklingTest(unittest.TestCase):$/;"	c
PigLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^class PigLexer(RegexLexer):$/;"	c
PigLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^class PigLexer(RegexLexer):$/;"	c
PikeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^class PikeLexer(CppLexer):$/;"	c
PikeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^class PikeLexer(CppLexer):$/;"	c
PilNotAvailable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^class PilNotAvailable(ImportError):$/;"	c
PilNotAvailable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^class PilNotAvailable(ImportError):$/;"	c
PlPgsqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^class PlPgsqlLexer(PostgresBase, RegexLexer):$/;"	c
PlPgsqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^class PlPgsqlLexer(PostgresBase, RegexLexer):$/;"	c
Platform	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    import Queue as _  # Platform-specific: Windows$/;"	i
Po	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Po = u"!-#%-'*,.-\/:-;?-@\\\\\\\\\\xa1\\xa7\\xb6-\\xb7\\xbf\\u037e\\u0387\\u055a-\\u055f\\u0589\\u05c0\\u05c3\\u05c6\\u05f3-\\u05f4\\u0609-\\u060a\\u060c-\\u060d\\u061b\\u061e-\\u061f\\u066a-\\u066d\\u06d4\\u0700-\\u070d\\u07f7-\\u07f9\\u0830-\\u083e\\u085e\\u0964-\\u0965\\u0970\\u0af0\\u0df4\\u0e4f\\u0e5a-\\u0e5b\\u0f04-\\u0f12\\u0f14\\u0f85\\u0fd0-\\u0fd4\\u0fd9-\\u0fda\\u104a-\\u104f\\u10fb\\u1360-\\u1368\\u166d-\\u166e\\u16eb-\\u16ed\\u1735-\\u1736\\u17d4-\\u17d6\\u17d8-\\u17da\\u1800-\\u1805\\u1807-\\u180a\\u1944-\\u1945\\u1a1e-\\u1a1f\\u1aa0-\\u1aa6\\u1aa8-\\u1aad\\u1b5a-\\u1b60\\u1bfc-\\u1bff\\u1c3b-\\u1c3f\\u1c7e-\\u1c7f\\u1cc0-\\u1cc7\\u1cd3\\u2016-\\u2017\\u2020-\\u2027\\u2030-\\u2038\\u203b-\\u203e\\u2041-\\u2043\\u2047-\\u2051\\u2053\\u2055-\\u205e\\u2cf9-\\u2cfc\\u2cfe-\\u2cff\\u2d70\\u2e00-\\u2e01\\u2e06-\\u2e08\\u2e0b\\u2e0e-\\u2e16\\u2e18-\\u2e19\\u2e1b\\u2e1e-\\u2e1f\\u2e2a-\\u2e2e\\u2e30-\\u2e39\\u3001-\\u3003\\u303d\\u30fb\\ua4fe-\\ua4ff\\ua60d-\\ua60f\\ua673\\ua67e\\ua6f2-\\ua6f7\\ua874-\\ua877\\ua8ce-\\ua8cf\\ua8f8-\\ua8fa\\ua92e-\\ua92f\\ua95f\\ua9c1-\\ua9cd\\ua9de-\\ua9df\\uaa5c-\\uaa5f\\uaade-\\uaadf\\uaaf0-\\uaaf1\\uabeb\\ufe10-\\ufe16\\ufe19\\ufe30\\ufe45-\\ufe46\\ufe49-\\ufe4c\\ufe50-\\ufe52\\ufe54-\\ufe57\\ufe5f-\\ufe61\\ufe68\\ufe6a-\\ufe6b\\uff01-\\uff03\\uff05-\\uff07\\uff0a\\uff0c\\uff0e-\\uff0f\\uff1a-\\uff1b\\uff1f-\\uff20\\uff3c\\uff61\\uff64-\\uff65"$/;"	v
Po	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Po = u"!-#%-'*,.-\/:-;?-@\\\\\\\\\\xa1\\xa7\\xb6-\\xb7\\xbf\\u037e\\u0387\\u055a-\\u055f\\u0589\\u05c0\\u05c3\\u05c6\\u05f3-\\u05f4\\u0609-\\u060a\\u060c-\\u060d\\u061b\\u061e-\\u061f\\u066a-\\u066d\\u06d4\\u0700-\\u070d\\u07f7-\\u07f9\\u0830-\\u083e\\u085e\\u0964-\\u0965\\u0970\\u0af0\\u0df4\\u0e4f\\u0e5a-\\u0e5b\\u0f04-\\u0f12\\u0f14\\u0f85\\u0fd0-\\u0fd4\\u0fd9-\\u0fda\\u104a-\\u104f\\u10fb\\u1360-\\u1368\\u166d-\\u166e\\u16eb-\\u16ed\\u1735-\\u1736\\u17d4-\\u17d6\\u17d8-\\u17da\\u1800-\\u1805\\u1807-\\u180a\\u1944-\\u1945\\u1a1e-\\u1a1f\\u1aa0-\\u1aa6\\u1aa8-\\u1aad\\u1b5a-\\u1b60\\u1bfc-\\u1bff\\u1c3b-\\u1c3f\\u1c7e-\\u1c7f\\u1cc0-\\u1cc7\\u1cd3\\u2016-\\u2017\\u2020-\\u2027\\u2030-\\u2038\\u203b-\\u203e\\u2041-\\u2043\\u2047-\\u2051\\u2053\\u2055-\\u205e\\u2cf9-\\u2cfc\\u2cfe-\\u2cff\\u2d70\\u2e00-\\u2e01\\u2e06-\\u2e08\\u2e0b\\u2e0e-\\u2e16\\u2e18-\\u2e19\\u2e1b\\u2e1e-\\u2e1f\\u2e2a-\\u2e2e\\u2e30-\\u2e39\\u3001-\\u3003\\u303d\\u30fb\\ua4fe-\\ua4ff\\ua60d-\\ua60f\\ua673\\ua67e\\ua6f2-\\ua6f7\\ua874-\\ua877\\ua8ce-\\ua8cf\\ua8f8-\\ua8fa\\ua92e-\\ua92f\\ua95f\\ua9c1-\\ua9cd\\ua9de-\\ua9df\\uaa5c-\\uaa5f\\uaade-\\uaadf\\uaaf0-\\uaaf1\\uabeb\\ufe10-\\ufe16\\ufe19\\ufe30\\ufe45-\\ufe46\\ufe49-\\ufe4c\\ufe50-\\ufe52\\ufe54-\\ufe57\\ufe5f-\\ufe61\\ufe68\\ufe6a-\\ufe6b\\uff01-\\uff03\\uff05-\\uff07\\uff0a\\uff0c\\uff0e-\\uff0f\\uff1a-\\uff1b\\uff1f-\\uff20\\uff3c\\uff61\\uff64-\\uff65"$/;"	v
Point	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^    Point = namedtuple('Point', ['x', 'y'])$/;"	v
Point	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^    class Point(tuple):$/;"	c
PoolError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class PoolError(HTTPError):$/;"	c
PoolManager	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .packages.urllib3.poolmanager import PoolManager, proxy_from_url$/;"	i
PoolManager	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^from .poolmanager import PoolManager, ProxyManager, proxy_from_url$/;"	i
PoolManager	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^class PoolManager(RequestMethods):$/;"	c
Popen	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^from subprocess import Popen, PIPE$/;"	i
PosInf	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^from simplejson.decoder import PosInf$/;"	i
PosInf	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_float.py	/^from simplejson.decoder import NaN, PosInf, NegInf$/;"	i
PostScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^class PostScriptLexer(RegexLexer):$/;"	c
PostScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    AsymptoteLexer, PovrayLexer$/;"	i
PostScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^class PostScriptLexer(RegexLexer):$/;"	c
PostScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    AsymptoteLexer, PovrayLexer$/;"	i
PostgresBase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^class PostgresBase(object):$/;"	c
PostgresBase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^class PostgresBase(object):$/;"	c
PostgresConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^class PostgresConsoleLexer(Lexer):$/;"	c
PostgresConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^class PostgresConsoleLexer(Lexer):$/;"	c
PostgresLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^class PostgresLexer(PostgresBase, RegexLexer):$/;"	c
PostgresLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^class PostgresLexer(PostgresBase, RegexLexer):$/;"	c
PovrayLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^class PovrayLexer(RegexLexer):$/;"	c
PovrayLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    AsymptoteLexer, PovrayLexer$/;"	i
PovrayLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^class PovrayLexer(RegexLexer):$/;"	c
PovrayLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    AsymptoteLexer, PovrayLexer$/;"	i
PowerShellLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^class PowerShellLexer(RegexLexer):$/;"	c
PowerShellLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^class PowerShellLexer(RegexLexer):$/;"	c
PreparedRequest	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^from .models import Request, Response, PreparedRequest$/;"	i
PreparedRequest	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):$/;"	c
PreparedRequest	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from .models import Request, PreparedRequest, DEFAULT_REDIRECT_LIMIT$/;"	i
PrevNonBlankNonString	plugged/vim-javascript/indent/javascript.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PrevNonBlankNonString	plugged/vim-ruby/indent/ruby.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PrintRObject	plugged/Nvim-R/R/common_global.vim	/^function PrintRObject(rkeyword)$/;"	f
Priority	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    Priority = Generic.Heading$/;"	v	class:TodotxtLexer
Priority	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    Priority = Generic.Heading$/;"	v	class:TodotxtLexer
ProcessFormat	plugged/ingo-library/autoload/ingo/format.vim	/^function! s:ProcessFormat( originalArgs, args, argCnt )$/;"	f
ProfilingRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^class ProfilingRegexLexer(RegexLexer):$/;"	c
ProfilingRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^class ProfilingRegexLexer(RegexLexer):$/;"	c
ProfilingRegexLexerMeta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^class ProfilingRegexLexerMeta(RegexLexerMeta):$/;"	c
ProfilingRegexLexerMeta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^class ProfilingRegexLexerMeta(RegexLexerMeta):$/;"	c
Project	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    Project = Generic.Error$/;"	v	class:TodotxtLexer
Project	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    Project = Generic.Error$/;"	v	class:TodotxtLexer
ProjectMap	plugged/vim-wakatime/plugin/packages/wakatime/project.py	/^from .projects.projectmap import ProjectMap$/;"	i
ProjectMap	plugged/vim-wakatime/plugin/packages/wakatime/projects/projectmap.py	/^class ProjectMap(BaseProject):$/;"	c
PrologLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.prolog import PrologLexer$/;"	i
PrologLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^class PrologLexer(RegexLexer):$/;"	c
PrologLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.prolog import PrologLexer$/;"	i
PrologLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^class PrologLexer(RegexLexer):$/;"	c
PropertiesLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^class PropertiesLexer(RegexLexer):$/;"	c
PropertiesLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^    SquidConfLexer, LighttpdConfLexer, IniLexer, RegeditLexer, PropertiesLexer$/;"	i
PropertiesLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^class PropertiesLexer(RegexLexer):$/;"	c
PropertiesLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^    SquidConfLexer, LighttpdConfLexer, IniLexer, RegeditLexer, PropertiesLexer$/;"	i
ProtoBufLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^class ProtoBufLexer(RegexLexer):$/;"	c
ProtoBufLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    MscgenLexer, VGLLexer$/;"	i
ProtoBufLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^class ProtoBufLexer(RegexLexer):$/;"	c
ProtoBufLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    MscgenLexer, VGLLexer$/;"	i
ProtocolError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .packages.urllib3.exceptions import ProtocolError$/;"	i
ProtocolError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class ProtocolError(HTTPError):$/;"	c
ProxyError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/exceptions.py	/^class ProxyError(ConnectionError):$/;"	c
ProxyError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class ProxyError(HTTPError):$/;"	c
ProxyManager	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^from .poolmanager import PoolManager, ProxyManager, proxy_from_url$/;"	i
ProxyManager	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^class ProxyManager(PoolManager):$/;"	c
Ps	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Ps = u'(\\\\[{\\u0f3a\\u0f3c\\u169b\\u201a\\u201e\\u2045\\u207d\\u208d\\u2308\\u230a\\u2329\\u2768\\u276a\\u276c\\u276e\\u2770\\u2772\\u2774\\u27c5\\u27e6\\u27e8\\u27ea\\u27ec\\u27ee\\u2983\\u2985\\u2987\\u2989\\u298b\\u298d\\u298f\\u2991\\u2993\\u2995\\u2997\\u29d8\\u29da\\u29fc\\u2e22\\u2e24\\u2e26\\u2e28\\u3008\\u300a\\u300c\\u300e\\u3010\\u3014\\u3016\\u3018\\u301a\\u301d\\ufd3e\\ufe17\\ufe35\\ufe37\\ufe39\\ufe3b\\ufe3d\\ufe3f\\ufe41\\ufe43\\ufe47\\ufe59\\ufe5b\\ufe5d\\uff08\\uff3b\\uff5b\\uff5f\\uff62'$/;"	v
Ps	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Ps = u'(\\\\[{\\u0f3a\\u0f3c\\u169b\\u201a\\u201e\\u2045\\u207d\\u208d\\u2308\\u230a\\u2329\\u2768\\u276a\\u276c\\u276e\\u2770\\u2772\\u2774\\u27c5\\u27e6\\u27e8\\u27ea\\u27ec\\u27ee\\u2983\\u2985\\u2987\\u2989\\u298b\\u298d\\u298f\\u2991\\u2993\\u2995\\u2997\\u29d8\\u29da\\u29fc\\u2e22\\u2e24\\u2e26\\u2e28\\u3008\\u300a\\u300c\\u300e\\u3010\\u3014\\u3016\\u3018\\u301a\\u301d\\ufd3e\\ufe17\\ufe35\\ufe37\\ufe39\\ufe3b\\ufe3d\\ufe3f\\ufe41\\ufe43\\ufe47\\ufe59\\ufe5b\\ufe5d\\uff08\\uff3b\\uff5b\\uff5f\\uff62'$/;"	v
PsqlRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^class PsqlRegexLexer(PostgresBase, RegexLexer):$/;"	c
PsqlRegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^class PsqlRegexLexer(PostgresBase, RegexLexer):$/;"	c
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/apl.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    Other, Keyword, Operator$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^    Number, Punctuation, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    Number, Punctuation, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    Number, Punctuation, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/chapel.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    Number, Punctuation, Whitespace$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^    Punctuation, Number$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dalvik.py	/^    Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    Punctuation, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    Number, Punctuation, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^    Number, Punctuation, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/eiffel.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    Number, Punctuation, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    Number, Punctuation, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    Number, Punctuation, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/foxpro.py	/^     Name, String$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^    String, Number, Whitespace$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    Number, Punctuation, String$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    Number, Punctuation, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    Number, Punctuation, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^    Name, String, Number$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    Number, Punctuation, Other$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^    Number, Punctuation, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    Number, Punctuation, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    Number, Punctuation, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nit.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^    Number, Punctuation, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    Number, Punctuation, Literal, Comment$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ooc.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    Number, Punctuation, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    Number, Punctuation, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    Number, Punctuation, Other$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    Number, Punctuation, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^    Number, Punctuation, Whitespace$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^     Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/snobol.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    Number, Punctuation, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    Number, Punctuation, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^Punctuation = Token.Punctuation$/;"	v
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/apl.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    Other, Keyword, Operator$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^    Number, Punctuation, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    Number, Punctuation, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    Number, Punctuation, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/chapel.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    Number, Punctuation, Whitespace$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^    Punctuation, Number$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dalvik.py	/^    Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    Punctuation, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    Number, Punctuation, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^    Number, Punctuation, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/eiffel.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    Number, Punctuation, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    Number, Punctuation, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    Number, Punctuation, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/foxpro.py	/^     Name, String$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^    String, Number, Whitespace$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    Number, Punctuation, String$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    Number, Punctuation, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    Number, Punctuation, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^    Name, String, Number$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    Number, Punctuation, Other$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^    Number, Punctuation, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    Number, Punctuation, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    Number, Punctuation, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nit.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^    Number, Punctuation, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    Number, Punctuation, Literal, Comment$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ooc.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    Number, Punctuation, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    Number, Punctuation, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    Number, Punctuation, Other$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    Number, Punctuation, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^    Number, Punctuation, Whitespace$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^     Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/snobol.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    Number, Punctuation, Generic$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^    Number, Punctuation$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    Number, Punctuation, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^Punctuation = Token.Punctuation$/;"	v
PuppetLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^class PuppetLexer(RegexLexer):$/;"	c
PuppetLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    MscgenLexer, VGLLexer$/;"	i
PuppetLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^class PuppetLexer(RegexLexer):$/;"	c
PuppetLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    MscgenLexer, VGLLexer$/;"	i
PyEncoderObject	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^} PyEncoderObject;$/;"	t	typeref:struct:_PyEncoderObject	file:
PyEncoderType	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^PyTypeObject PyEncoderType = {$/;"	v	file:
PyEncoderType	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^static PyTypeObject PyEncoderType;$/;"	v	file:
PyEncoder_Check	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyEncoder_Check(/;"	d	file:
PyEncoder_CheckExact	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyEncoder_CheckExact(/;"	d	file:
PyInit__speedups	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^PyInit__speedups(void)$/;"	f
PyInt_AsSsize_t	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyInt_AsSsize_t /;"	d	file:
PyInt_Check	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyInt_Check(/;"	d	file:
PyInt_CheckExact	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyInt_CheckExact(/;"	d	file:
PyInt_FromSsize_t	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyInt_FromSsize_t /;"	d	file:
PyInt_FromString	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyInt_FromString /;"	d	file:
PyInt_Type	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyInt_Type /;"	d	file:
PyOS_string_to_double	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyOS_string_to_double /;"	d	file:
PyPyLogLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^class PyPyLogLexer(RegexLexer):$/;"	c
PyPyLogLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^from pygments.lexers.console import PyPyLogLexer$/;"	i
PyPyLogLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^class PyPyLogLexer(RegexLexer):$/;"	c
PyPyLogLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^from pygments.lexers.console import PyPyLogLexer$/;"	i
PyScannerObject	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^} PyScannerObject;$/;"	t	typeref:struct:_PyScannerObject	file:
PyScannerType	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^PyTypeObject PyScannerType = {$/;"	v	file:
PyScannerType	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^static PyTypeObject PyScannerType;$/;"	v	file:
PyScanner_Check	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyScanner_Check(/;"	d	file:
PyScanner_CheckExact	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyScanner_CheckExact(/;"	d	file:
PyString_AS_STRING	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyString_AS_STRING /;"	d	file:
PyString_Check	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyString_Check /;"	d	file:
PyString_FromStringAndSize	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyString_FromStringAndSize /;"	d	file:
PyString_GET_SIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyString_GET_SIZE /;"	d	file:
PyUnicode_DATA	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyUnicode_DATA(/;"	d	file:
PyUnicode_GetLength	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyUnicode_GetLength /;"	d	file:
PyUnicode_KIND	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyUnicode_KIND(/;"	d	file:
PyUnicode_READ	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyUnicode_READ(/;"	d	file:
PyUnicode_READY	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyUnicode_READY(/;"	d	file:
PyVarObject_HEAD_INIT	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyVarObject_HEAD_INIT(/;"	d	file:
Py_IS_FINITE	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define Py_IS_FINITE(/;"	d	file:
Py_SIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define Py_SIZE(/;"	d	file:
Py_TYPE	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define Py_TYPE(/;"	d	file:
Py_ssize_t	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^typedef int Py_ssize_t;$/;"	t	file:
PygmentsDoc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^class PygmentsDoc(Directive):$/;"	c
PygmentsDoc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^class PygmentsDoc(Directive):$/;"	c
Python3Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^    PythonTracebackLexer, Python3Lexer, Python3TracebackLexer, DgLexer$/;"	i
Python3Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^class Python3Lexer(RegexLexer):$/;"	c
Python3Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^    PythonTracebackLexer, Python3Lexer, Python3TracebackLexer, DgLexer$/;"	i
Python3Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^class Python3Lexer(RegexLexer):$/;"	c
Python3TracebackLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^    PythonTracebackLexer, Python3Lexer, Python3TracebackLexer, DgLexer$/;"	i
Python3TracebackLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^class Python3TracebackLexer(RegexLexer):$/;"	c
Python3TracebackLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^    PythonTracebackLexer, Python3Lexer, Python3TracebackLexer, DgLexer$/;"	i
Python3TracebackLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^class Python3TracebackLexer(RegexLexer):$/;"	c
PythonConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^    PythonTracebackLexer, Python3Lexer, Python3TracebackLexer, DgLexer$/;"	i
PythonConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^class PythonConsoleLexer(Lexer):$/;"	c
PythonConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^    PythonTracebackLexer, Python3Lexer, Python3TracebackLexer, DgLexer$/;"	i
PythonConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^class PythonConsoleLexer(Lexer):$/;"	c
PythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^    PythonTracebackLexer, Python3Lexer, Python3TracebackLexer, DgLexer$/;"	i
PythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^from pygments.lexers.python import PythonLexer$/;"	i
PythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^from pygments.lexers.python import PythonLexer$/;"	i
PythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^class PythonLexer(RegexLexer):$/;"	c
PythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^from pygments.lexers.python import PythonLexer$/;"	i
PythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^from pygments.lexers.python import PythonLexer$/;"	i
PythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^    PythonTracebackLexer, Python3Lexer, Python3TracebackLexer, DgLexer$/;"	i
PythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^from pygments.lexers.python import PythonLexer$/;"	i
PythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^from pygments.lexers.python import PythonLexer$/;"	i
PythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^class PythonLexer(RegexLexer):$/;"	c
PythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^from pygments.lexers.python import PythonLexer$/;"	i
PythonLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^from pygments.lexers.python import PythonLexer$/;"	i
PythonParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/python.py	/^class PythonParser(TokenParser):$/;"	c
PythonTracebackLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^    PythonTracebackLexer, Python3Lexer, Python3TracebackLexer, DgLexer$/;"	i
PythonTracebackLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^class PythonTracebackLexer(RegexLexer):$/;"	c
PythonTracebackLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^    PythonTracebackLexer, Python3Lexer, Python3TracebackLexer, DgLexer$/;"	i
PythonTracebackLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^class PythonTracebackLexer(RegexLexer):$/;"	c
QBasicLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^class QBasicLexer(RegexLexer):$/;"	c
QBasicLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^class QBasicLexer(RegexLexer):$/;"	c
QmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^from pygments.lexers.webmisc import DuelLexer, XQueryLexer, SlimLexer, QmlLexer$/;"	i
QmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^class QmlLexer(RegexLexer):$/;"	c
QmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^from pygments.lexers.webmisc import DuelLexer, XQueryLexer, SlimLexer, QmlLexer$/;"	i
QmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^class QmlLexer(RegexLexer):$/;"	c
Question	plugged/ingo-library/autoload/ingo/query/substitute.vim	/^function! s:Question( msg )$/;"	f
Queue	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^from .offlinequeue import Queue$/;"	i
Queue	plugged/vim-wakatime/plugin/packages/wakatime/offlinequeue.py	/^class Queue(object):$/;"	c
QueueCls	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    QueueCls = LifoQueue$/;"	v	class:ConnectionPool
QuitPreHook	plugged/syntastic/plugin/syntastic.vim	/^function! s:QuitPreHook() abort " {{{2$/;"	f
R	plugged/calendar.vim/autoload/calendar/string.vim	/^fu! s:R(s, w) abort$/;"	f
RAction	plugged/Nvim-R/R/common_global.vim	/^function RAction(rcmd)$/;"	f
RArgsStatusLine	plugged/Nvim-R/R/common_global.vim	/^function RArgsStatusLine()$/;"	f
RAskHelp	plugged/Nvim-R/R/common_global.vim	/^function RAskHelp(...)$/;"	f
RBGetPkgName	plugged/Nvim-R/ftplugin/rbrowser.vim	/^function! RBGetPkgName()$/;"	f
RBrOpenCloseLs_Nvim	plugged/Nvim-R/R/common_global.vim	/^function RBrOpenCloseLs_Nvim(status)$/;"	f
RBrOpenCloseLs_TmuxNeovim	plugged/Nvim-R/R/common_global.vim	/^function RBrOpenCloseLs_TmuxNeovim(status)$/;"	f
RBrowserCleanTailTick	plugged/Nvim-R/ftplugin/rbrowser.vim	/^function! RBrowserCleanTailTick(word, cleantail, cleantick)$/;"	f
RBrowserDoubleClick	plugged/Nvim-R/ftplugin/rbrowser.vim	/^function! RBrowserDoubleClick()$/;"	f
RBrowserFindParent	plugged/Nvim-R/ftplugin/rbrowser.vim	/^function! RBrowserFindParent(word, curline, curpos)$/;"	f
RBrowserGetName	plugged/Nvim-R/ftplugin/rbrowser.vim	/^function! RBrowserGetName(cleantail, cleantick)$/;"	f
RBrowserMenu	plugged/Nvim-R/R/gui_running.vim	/^function RBrowserMenu()$/;"	f
RBrowserRightClick	plugged/Nvim-R/ftplugin/rbrowser.vim	/^function! RBrowserRightClick()$/;"	f
RBufEnter	plugged/Nvim-R/R/common_global.vim	/^function RBufEnter()$/;"	f
RBuildTags	plugged/Nvim-R/R/common_global.vim	/^command RBuildTags :call g:SendCmdToR('rtags(ofile = "TAGS")')$/;"	c
RCheckLibList	plugged/Nvim-R/R/functions.vim	/^function RCheckLibList()$/;"	f
RClearAll	plugged/Nvim-R/R/common_global.vim	/^function RClearAll()$/;"	f
RClearConsole	plugged/Nvim-R/R/common_global.vim	/^function RClearConsole()$/;"	f
RComment	plugged/Nvim-R/R/common_global.vim	/^function RComment(mode)$/;"	f
RCommentLine	plugged/Nvim-R/R/common_global.vim	/^function RCommentLine(lnum, ind, cmt)$/;"	f
RCompleteArgs	plugged/Nvim-R/R/common_global.vim	/^function RCompleteArgs()$/;"	f
RConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/math.py	/^from pygments.lexers.r import RConsoleLexer, SLexer, RdLexer$/;"	i
RConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^class RConsoleLexer(Lexer):$/;"	c
RConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/math.py	/^from pygments.lexers.r import RConsoleLexer, SLexer, RdLexer$/;"	i
RConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^class RConsoleLexer(Lexer):$/;"	c
RControlMaps	plugged/Nvim-R/R/common_global.vim	/^function RControlMaps()$/;"	f
RControlMenu	plugged/Nvim-R/R/gui_running.vim	/^function RControlMenu()$/;"	f
RCreateEditMaps	plugged/Nvim-R/R/common_global.vim	/^function RCreateEditMaps()$/;"	f
RCreateMaps	plugged/Nvim-R/R/common_global.vim	/^function RCreateMaps(type, plug, combo, target)$/;"	f
RCreateMenuItem	plugged/Nvim-R/R/gui_running.vim	/^function RCreateMenuItem(type, label, plug, combo, target)$/;"	f
RCreateSendMaps	plugged/Nvim-R/R/common_global.vim	/^function RCreateSendMaps()$/;"	f
RCreateStartMaps	plugged/Nvim-R/R/common_global.vim	/^function RCreateStartMaps()$/;"	f
RDocExSection	plugged/Nvim-R/ftplugin/rdoc.vim	/^function! RDocExSection()$/;"	f
RECENT_DATE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^RECENT_DATE = datetime.date(2014, 1, 1)$/;"	v
RED	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^RED = "#ef6155"$/;"	v
RED	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^RED = "#ef6155"$/;"	v
RED	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^RED = "#ef6155"$/;"	v
RED	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^RED = "#ef6155"$/;"	v
REDIRECT_CACHE_SIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^REDIRECT_CACHE_SIZE = 1000$/;"	v
REDIRECT_STATI	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^REDIRECT_STATI = ($/;"	v
REDIRECT_STATI	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from .models import REDIRECT_STATI$/;"	i
REDIRECT_STATUSES	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    REDIRECT_STATUSES = [301, 302, 303, 307, 308]$/;"	v	class:HTTPResponse
REF	plugged/vim-coffee-script/Makefile	/^REF = HEAD$/;"	m
REMAINDER	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^REMAINDER = '...'$/;"	v
RESERVED	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_stan_builtins.py	/^RESERVED = ($/;"	v
RESERVED	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_stan_builtins.py	/^RESERVED = ($/;"	v
REV_CONTROL_PLUGINS	plugged/vim-wakatime/plugin/packages/wakatime/project.py	/^REV_CONTROL_PLUGINS = [$/;"	v
RFormatCode	plugged/Nvim-R/R/common_global.vim	/^function RFormatCode() range$/;"	f
RGetClassFor	plugged/Nvim-R/R/common_global.vim	/^function RGetClassFor(rkeyword)$/;"	f
RGetFL	plugged/Nvim-R/R/common_global.vim	/^function RGetFL(mode)$/;"	f
RGetKeyWord	plugged/Nvim-R/R/common_global.vim	/^function RGetKeyWord()$/;"	f
RIMapCmd	plugged/Nvim-R/R/common_global.vim	/^function RIMapCmd(plug)$/;"	f
RInsert	plugged/Nvim-R/R/common_global.vim	/^function RInsert(...)$/;"	f
RKnit	plugged/Nvim-R/R/common_global.vim	/^function RKnit()$/;"	f
RKnitRmCache	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! RKnitRmCache()$/;"	f
RKnitRnw	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! RKnitRnw()$/;"	f
RLisObjs	plugged/Nvim-R/R/functions.vim	/^function RLisObjs(arglead, cmdline, curpos)$/;"	f
RLock	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^from threading import RLock$/;"	i
RLock	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^from threading import RLock$/;"	i
RLock	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    class RLock:$/;"	c
RLock	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    from threading import RLock$/;"	i
RMakeHTMLrrst	plugged/Nvim-R/ftplugin/rrst_nvimr.vim	/^function! RMakeHTMLrrst(t)$/;"	f
RMakePDF	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! RMakePDF(bibtex, knit)$/;"	f
RMakePDFrrst	plugged/Nvim-R/ftplugin/rrst_nvimr.vim	/^function! RMakePDFrrst()$/;"	f
RMakeRmd	plugged/Nvim-R/ftplugin/rmd_nvimr.vim	/^function! RMakeRmd(t)$/;"	f
RNMapCmd	plugged/Nvim-R/R/common_global.vim	/^function RNMapCmd(plug)$/;"	f
RObjBrowser	plugged/Nvim-R/R/common_global.vim	/^function RObjBrowser()$/;"	f
ROnJobExit	plugged/Nvim-R/R/common_global.vim	/^function ROnJobExit(job_id, data)$/;"	f
ROnJobStderr	plugged/Nvim-R/R/common_global.vim	/^function ROnJobStderr(job_id, data)$/;"	f
ROnJobStdout	plugged/Nvim-R/R/common_global.vim	/^function ROnJobStdout(job_id, data)$/;"	f
ROpenPDF	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! ROpenPDF(path)$/;"	f
RPMSpecLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^class RPMSpecLexer(RegexLexer):$/;"	c
RPMSpecLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.installers import NSISLexer, RPMSpecLexer$/;"	i
RPMSpecLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^class RPMSpecLexer(RegexLexer):$/;"	c
RPMSpecLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.installers import NSISLexer, RPMSpecLexer$/;"	i
RQuit	plugged/Nvim-R/R/common_global.vim	/^function RQuit(how)$/;"	f
RSendMyPort	plugged/Nvim-R/R/common_global.vim	/^function RSendMyPort()$/;"	f
RSendPartOfLine	plugged/Nvim-R/R/common_global.vim	/^function RSendPartOfLine(direction, correctpos)$/;"	f
RSetDefaultValue	plugged/Nvim-R/R/common_global.vim	/^function RSetDefaultValue(var, val)$/;"	f
RSetMyPort	plugged/Nvim-R/R/common_global.vim	/^function RSetMyPort(p)$/;"	f
RSetPDFViewer	plugged/Nvim-R/R/common_global.vim	/^function RSetPDFViewer()$/;"	f
RSetWD	plugged/Nvim-R/R/common_global.vim	/^function RSetWD()$/;"	f
RSimpleCommentLine	plugged/Nvim-R/R/common_global.vim	/^function RSimpleCommentLine(mode, what)$/;"	f
RSourceDir	plugged/Nvim-R/R/common_global.vim	/^command -nargs=? -complete=dir RSourceDir :call RSourceDirectory(<q-args>)$/;"	c
RSourceDirectory	plugged/Nvim-R/R/common_global.vim	/^function RSourceDirectory(...)$/;"	f
RSourceLines	plugged/Nvim-R/R/common_global.vim	/^function RSourceLines(...)$/;"	f
RSourceOtherScripts	plugged/Nvim-R/R/common_global.vim	/^function RSourceOtherScripts()$/;"	f
RSpin	plugged/Nvim-R/ftplugin/r_nvimr.vim	/^function! RSpin()$/;"	f
RStart_Zathura	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! RStart_Zathura(basenm)$/;"	f
RStop	plugged/Nvim-R/R/common_global.vim	/^command RStop :call StopR()$/;"	c
RSweave	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! RSweave()$/;"	f
RUBY_OPERATORS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^RUBY_OPERATORS = ($/;"	v
RUBY_OPERATORS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^RUBY_OPERATORS = ($/;"	v
RVMapCmd	plugged/Nvim-R/R/common_global.vim	/^function RVMapCmd(plug)$/;"	f
RViewDF	plugged/Nvim-R/R/common_global.vim	/^function RViewDF(oname)$/;"	f
RVimLeave	plugged/Nvim-R/R/common_global.vim	/^function RVimLeave()$/;"	f
RWarningMsg	plugged/Nvim-R/R/common_global.vim	/^function RWarningMsg(wmsg)$/;"	f
RWarningMsgInp	plugged/Nvim-R/R/common_global.vim	/^function RWarningMsgInp(wmsg)$/;"	f
RWriteChunk	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! RWriteChunk()$/;"	f
R_only_in_tmux	plugged/Nvim-R/R/common_global.vim	/^    let R_only_in_tmux = 0$/;"	v
RacketLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/functional.py	/^    NewLispLexer$/;"	i
RacketLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^class RacketLexer(RegexLexer):$/;"	c
RacketLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/functional.py	/^    NewLispLexer$/;"	i
RacketLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^class RacketLexer(RegexLexer):$/;"	c
RagelCLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class RagelCLexer(DelegatingLexer):$/;"	c
RagelCLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class RagelCLexer(DelegatingLexer):$/;"	c
RagelCppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class RagelCppLexer(DelegatingLexer):$/;"	c
RagelCppLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class RagelCppLexer(DelegatingLexer):$/;"	c
RagelDLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class RagelDLexer(DelegatingLexer):$/;"	c
RagelDLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class RagelDLexer(DelegatingLexer):$/;"	c
RagelEmbeddedLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class RagelEmbeddedLexer(RegexLexer):$/;"	c
RagelEmbeddedLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class RagelEmbeddedLexer(RegexLexer):$/;"	c
RagelJavaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class RagelJavaLexer(DelegatingLexer):$/;"	c
RagelJavaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class RagelJavaLexer(DelegatingLexer):$/;"	c
RagelLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class RagelLexer(RegexLexer):$/;"	c
RagelLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class RagelLexer(RegexLexer):$/;"	c
RagelObjectiveCLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class RagelObjectiveCLexer(DelegatingLexer):$/;"	c
RagelObjectiveCLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class RagelObjectiveCLexer(DelegatingLexer):$/;"	c
RagelRubyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class RagelRubyLexer(DelegatingLexer):$/;"	c
RagelRubyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class RagelRubyLexer(DelegatingLexer):$/;"	c
RainbowParenthesesActivate	plugged/rainbow_parentheses.vim/plugin/rainbow_parentheses.vim	/^com! RainbowParenthesesActivate     cal rainbow_parentheses#activate()$/;"	c
RainbowParenthesesLoadBraces	plugged/rainbow_parentheses.vim/plugin/rainbow_parentheses.vim	/^com! RainbowParenthesesLoadBraces   cal rainbow_parentheses#load(2)$/;"	c
RainbowParenthesesLoadChevrons	plugged/rainbow_parentheses.vim/plugin/rainbow_parentheses.vim	/^com! RainbowParenthesesLoadChevrons cal rainbow_parentheses#load(3)$/;"	c
RainbowParenthesesLoadRound	plugged/rainbow_parentheses.vim/plugin/rainbow_parentheses.vim	/^com! RainbowParenthesesLoadRound    cal rainbow_parentheses#load(0)$/;"	c
RainbowParenthesesLoadSquare	plugged/rainbow_parentheses.vim/plugin/rainbow_parentheses.vim	/^com! RainbowParenthesesLoadSquare   cal rainbow_parentheses#load(1)$/;"	c
RainbowParenthesesToggle	plugged/rainbow_parentheses.vim/plugin/rainbow_parentheses.vim	/^com! RainbowParenthesesToggle       cal rainbow_parentheses#toggle()$/;"	c
RainbowParenthesesToggleAll	plugged/rainbow_parentheses.vim/plugin/rainbow_parentheses.vim	/^com! RainbowParenthesesToggleAll    cal rainbow_parentheses#toggleall()$/;"	c
RaiseOnErrorTokenFilter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^class RaiseOnErrorTokenFilter(Filter):$/;"	c
RaiseOnErrorTokenFilter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^class RaiseOnErrorTokenFilter(Filter):$/;"	c
RawDescriptionHelpFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class RawDescriptionHelpFormatter(HelpFormatter):$/;"	c
RawTextHelpFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class RawTextHelpFormatter(RawDescriptionHelpFormatter):$/;"	c
RawTokenFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^class RawTokenFormatter(Formatter):$/;"	c
RawTokenFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^class RawTokenFormatter(Formatter):$/;"	c
RawTokenLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^class RawTokenLexer(Lexer):$/;"	c
RawTokenLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^class RawTokenLexer(Lexer):$/;"	c
RdLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/math.py	/^from pygments.lexers.r import RConsoleLexer, SLexer, RdLexer$/;"	i
RdLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^class RdLexer(RegexLexer):$/;"	c
RdLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/math.py	/^from pygments.lexers.r import RConsoleLexer, SLexer, RdLexer$/;"	i
RdLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^class RdLexer(RegexLexer):$/;"	c
RdocIsInRCode	plugged/Nvim-R/ftplugin/rdoc.vim	/^function! RdocIsInRCode(vrb)$/;"	f
ReadEvalReply	plugged/Nvim-R/R/common_global.vim	/^function ReadEvalReply()$/;"	f
ReadTimeout	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,$/;"	i
ReadTimeout	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/exceptions.py	/^class ReadTimeout(Timeout):$/;"	c
ReadTimeoutError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .packages.urllib3.exceptions import ReadTimeoutError$/;"	i
ReadTimeoutError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class ReadTimeoutError(TimeoutError, RequestError):$/;"	c
RebolLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.rebol import RebolLexer$/;"	i
RebolLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^class RebolLexer(RegexLexer):$/;"	c
RebolLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.rebol import RebolLexer$/;"	i
RebolLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^class RebolLexer(RegexLexer):$/;"	c
RecentlyUsedContainer	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^class RecentlyUsedContainer(MutableMapping):$/;"	c
RecentlyUsedContainer	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^from ._collections import RecentlyUsedContainer$/;"	i
RecentlyUsedContainer	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from .packages.urllib3._collections import RecentlyUsedContainer$/;"	i
RecordLine	plugged/ingo-library/autoload/ingo/range/lines.vim	/^function! s:RecordLine( records, startLnum, endLnum )$/;"	f
RecordLines	plugged/ingo-library/autoload/ingo/range/lines.vim	/^function! s:RecordLines( records, startLines, endLines, startLnum, endLnum ) range$/;"	f
RecursiveJSONEncoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_recursion.py	/^class RecursiveJSONEncoder(json.JSONEncoder):$/;"	c
RedLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^class RedLexer(RegexLexer):$/;"	c
RedLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^class RedLexer(RegexLexer):$/;"	c
RedcodeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^class RedcodeLexer(RegexLexer):$/;"	c
RedcodeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.esoteric import BrainfuckLexer, BefungeLexer, RedcodeLexer$/;"	i
RedcodeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^class RedcodeLexer(RegexLexer):$/;"	c
RedcodeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.esoteric import BrainfuckLexer, BefungeLexer, RedcodeLexer$/;"	i
ReferenceUSEasternDSTEndTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class ReferenceUSEasternDSTEndTestCase(USEasternDSTEndTestCase):$/;"	c
ReferenceUSEasternDSTEndTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class ReferenceUSEasternDSTEndTestCase(USEasternDSTEndTestCase):$/;"	c
ReferenceUSEasternDSTStartTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class ReferenceUSEasternDSTStartTestCase(USEasternDSTStartTestCase):$/;"	c
ReferenceUSEasternDSTStartTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class ReferenceUSEasternDSTStartTestCase(USEasternDSTStartTestCase):$/;"	c
References	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    References = ('(in )?back of', '(in )?front of', '[0-9]+(st|nd|rd|th)',$/;"	v	class:AppleScriptLexer
References	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    References = ('(in )?back of', '(in )?front of', '[0-9]+(st|nd|rd|th)',$/;"	v	class:AppleScriptLexer
RegeditLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^class RegeditLexer(RegexLexer):$/;"	c
RegeditLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^    SquidConfLexer, LighttpdConfLexer, IniLexer, RegeditLexer, PropertiesLexer$/;"	i
RegeditLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^class RegeditLexer(RegexLexer):$/;"	c
RegeditLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^    SquidConfLexer, LighttpdConfLexer, IniLexer, RegeditLexer, PropertiesLexer$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^class RegexLexer(Lexer):$/;"	c
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^from pygments.lexer import RegexLexer, bygroups, using, this, words, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/apl.py	/^from pygments.lexer import RegexLexer$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, DelegatingLexer$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^from pygments.lexer import RegexLexer, include, bygroups, combined$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^from pygments.lexer import RegexLexer, bygroups, default, words, include$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^from pygments.lexer import RegexLexer, include, words, bygroups$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    this, inherit, default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/chapel.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^from pygments.lexer import RegexLexer, default, words, bygroups, include, using$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dalvik.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    include, bygroups, inherit$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    using, this, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^from pygments.lexer import RegexLexer, bygroups, words, include, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, do_insertions, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^from pygments.lexer import RegexLexer, include, bygroups, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/eiffel.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    include, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^from pygments.lexer import RegexLexer, include$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^from pygments.lexer import RegexLexer, bygroups, default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    this, default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    combined$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/foxpro.py	/^from pygments.lexer import RegexLexer$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    this, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    default, include$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^from pygments.lexer import RegexLexer, bygroups, include, using, this, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    default, using$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/idl.py	/^from pygments.lexer import RegexLexer, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^from pygments.lexer import RegexLexer, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^from pygments.lexer import RegexLexer, include, bygroups, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    this, default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/iolang.py	/^from pygments.lexer import RegexLexer$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, combined, do_insertions$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    this, combined, default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    do_insertions, using$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    using, this, do_insertions, default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, words, do_insertions$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^from pygments.lexer import RegexLexer, include, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nit.py	/^from pygments.lexer import RegexLexer, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^from pygments.lexer import RegexLexer, include$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    inherit, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ooc.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    include, bygroups, using$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    using, this, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^from pygments.lexer import RegexLexer$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    using, this, default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^from pygments.lexer import RegexLexer, bygroups$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    default, words, combined, do_insertions$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^from pygments.lexer import Lexer, RegexLexer, include, words, do_insertions$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^from pygments.lexer import RegexLexer, bygroups, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^from pygments.lexer import RegexLexer, bygroups$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    bygroups, default, LexerContext, do_insertions, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, include$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^from pygments.lexer import RegexLexer, include, bygroups, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/snobol.py	/^from pygments.lexer import RegexLexer, bygroups$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    include, using, this, default, combined$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/testing.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^from pygments.lexer import RegexLexer, include, default, bygroups, using, this$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^from pygments.lexer import RegexLexer, bygroups$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^from pygments.lexer import RegexLexer, default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    default, using$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^class RegexLexer(Lexer):$/;"	c
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^from pygments.lexer import RegexLexer, bygroups, using, this, words, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/apl.py	/^from pygments.lexer import RegexLexer$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, DelegatingLexer$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^from pygments.lexer import RegexLexer, include, bygroups, combined$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^from pygments.lexer import RegexLexer, bygroups, default, words, include$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^from pygments.lexer import RegexLexer, include, words, bygroups$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    this, inherit, default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/chapel.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^from pygments.lexer import RegexLexer, default, words, bygroups, include, using$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dalvik.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    include, bygroups, inherit$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    using, this, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^from pygments.lexer import RegexLexer, bygroups, words, include, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, do_insertions, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^from pygments.lexer import RegexLexer, include, bygroups, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/eiffel.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    include, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^from pygments.lexer import RegexLexer, include$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^from pygments.lexer import RegexLexer, bygroups, default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    this, default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    combined$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/foxpro.py	/^from pygments.lexer import RegexLexer$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    this, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    default, include$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^from pygments.lexer import RegexLexer, bygroups, include, using, this, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    default, using$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/idl.py	/^from pygments.lexer import RegexLexer, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^from pygments.lexer import RegexLexer, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^from pygments.lexer import RegexLexer, include, bygroups, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    this, default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/iolang.py	/^from pygments.lexer import RegexLexer$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, combined, do_insertions$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    this, combined, default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    do_insertions, using$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    using, this, do_insertions, default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, words, do_insertions$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^from pygments.lexer import RegexLexer, include, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nit.py	/^from pygments.lexer import RegexLexer, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^from pygments.lexer import RegexLexer, include$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    inherit, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ooc.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    include, bygroups, using$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    using, this, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^from pygments.lexer import RegexLexer$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    using, this, default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^from pygments.lexer import RegexLexer, bygroups$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    default, words, combined, do_insertions$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^from pygments.lexer import Lexer, RegexLexer, include, words, do_insertions$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^from pygments.lexer import RegexLexer, bygroups, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^from pygments.lexer import RegexLexer, bygroups$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    bygroups, default, LexerContext, do_insertions, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, include$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^from pygments.lexer import RegexLexer, include, bygroups, default$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/snobol.py	/^from pygments.lexer import RegexLexer, bygroups$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    include, using, this, default, combined$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/testing.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^from pygments.lexer import RegexLexer, include, default, bygroups, using, this$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^from pygments.lexer import RegexLexer, bygroups$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^from pygments.lexer import RegexLexer, default, words$/;"	i
RegexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    default, using$/;"	i
RegexLexerMeta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^class RegexLexerMeta(LexerMeta):$/;"	c
RegexLexerMeta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^class RegexLexerMeta(LexerMeta):$/;"	c
RehighlightBlame	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:RehighlightBlame() abort$/;"	f
Relative	plugged/ingo-library/autoload/ingo/date.vim	/^function! s:Relative( isShortFormat, isRightAligned, isInFuture, time, timeunit )$/;"	f
RemoteComplete	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:RemoteComplete(A, L, P) abort$/;"	f
Remove	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(force) abort$/;"	f
RemoveCarriageReturn	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:RemoveCarriageReturn(line) " {{{2$/;"	f
RemoveLastFromStack	plugged/smartpairs.vim/plugin/smartpairs.vim	/^function! s:RemoveLastFromStack()$/;"	f
RemoveTrailingComments	plugged/vim-javascript/indent/javascript.vim	/^function s:RemoveTrailingComments(content)$/;"	f
RenderList	plugged/ingo-library/autoload/ingo/query/fromlist.vim	/^function! s:RenderList( list, defaultIndex, formatString )$/;"	f
ReplaceAll	plugged/smartpairs.vim/plugin/smartpairs.vim	/^function! s:ReplaceAll(source, regex)$/;"	f
ReplaceCmd	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
ReplaceRange	plugged/ingo-library/autoload/ingo/text/replace.vim	/^function! s:ReplaceRange( source, startIdx, endIdx, string )$/;"	f
ReplaceTextInRange	plugged/ingo-library/autoload/ingo/text/replace.vim	/^function! s:ReplaceTextInRange( startIdx, endIdx, Text, where )$/;"	f
ReplaceUnderS	plugged/Nvim-R/R/common_global.vim	/^function ReplaceUnderS()$/;"	f
Request	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^from .models import Request, Response, PreparedRequest$/;"	i
Request	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^class Request(RequestHooksMixin):$/;"	c
Request	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from .models import Request, PreparedRequest, DEFAULT_REDIRECT_LIMIT$/;"	i
RequestEncodingMixin	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^class RequestEncodingMixin(object):$/;"	c
RequestError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class RequestError(PoolError):$/;"	c
RequestException	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^from .packages.requests.exceptions import RequestException$/;"	i
RequestException	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/exceptions.py	/^class RequestException(IOError):$/;"	c
RequestField	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^from .packages.urllib3.fields import RequestField$/;"	i
RequestField	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/fields.py	/^class RequestField(object):$/;"	c
RequestField	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/filepost.py	/^from .fields import RequestField$/;"	i
RequestHooksMixin	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^class RequestHooksMixin(object):$/;"	c
RequestMethods	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^from .request import RequestMethods$/;"	i
RequestMethods	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^from .request import RequestMethods$/;"	i
RequestMethods	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/request.py	/^class RequestMethods(object):$/;"	c
RequestsCookieJar	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^class RequestsCookieJar(cookielib.CookieJar, collections.MutableMapping):$/;"	c
RequestsCookieJar	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^from .cookies import RequestsCookieJar, cookiejar_from_dict$/;"	i
Reserved	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    Reserved = ('but', 'put', 'returning', 'the')$/;"	v	class:AppleScriptLexer
Reserved	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    Reserved = ('but', 'put', 'returning', 'the')$/;"	v	class:AppleScriptLexer
ResourceLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^class ResourceLexer(RegexLexer):$/;"	c
ResourceLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^class ResourceLexer(RegexLexer):$/;"	c
Response	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^from .models import Request, Response, PreparedRequest$/;"	i
Response	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .models import Response$/;"	i
Response	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^class Response(object):$/;"	c
ResponseError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .packages.urllib3.exceptions import ResponseError$/;"	i
ResponseError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class ResponseError(HTTPError):$/;"	c
ResponseNotChunked	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class ResponseNotChunked(ProtocolError, ValueError):$/;"	c
RestoreNERDTreeViewIfPossible	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:RestoreNERDTreeViewIfPossible()$/;"	f
RestoreStatusLine	plugged/Nvim-R/R/common_global.vim	/^function RestoreStatusLine()$/;"	f
Retry	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .packages.urllib3.util.retry import Retry$/;"	i
Retry	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^from .util.retry import Retry$/;"	i
Retry	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^from .util.retry import Retry$/;"	i
Retry	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^from .util.retry import Retry$/;"	i
Retry	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/__init__.py	/^from .retry import Retry$/;"	i
Retry	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/retry.py	/^class Retry(object):$/;"	c
RetryError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/exceptions.py	/^class RetryError(RequestException):$/;"	c
ReturnToStack	plugged/smartpairs.vim/plugin/smartpairs.vim	/^function! s:ReturnToStack(stop)$/;"	f
Revert	plugged/smartpairs.vim/plugin/smartpairs.vim	/^function! s:Revert()$/;"	f
RevisionComplete	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:RevisionComplete(A, L, P) abort$/;"	f
RexxLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^class RexxLexer(RegexLexer):$/;"	c
RexxLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^class RexxLexer(RegexLexer):$/;"	c
Rformat	plugged/Nvim-R/R/common_global.vim	/^command -range=% Rformat <line1>,<line2>:call RFormatCode()$/;"	c
Rhelp	plugged/Nvim-R/R/common_global.vim	/^command -nargs=? -complete=customlist,RLisObjs Rhelp :call RAskHelp(<q-args>)$/;"	c
RhelpIsInRCode	plugged/Nvim-R/ftplugin/rhelp_nvimr.vim	/^function! RhelpIsInRCode(vrb)$/;"	f
RhtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class RhtmlLexer(DelegatingLexer):$/;"	c
RhtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class RhtmlLexer(DelegatingLexer):$/;"	c
RhtmlParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^class RhtmlParser(HtmlDjangoParser):$/;"	c
Right	plugged/tabular/autoload/tabular.vim	/^function! s:Right(string, fieldwidth)$/;"	f
Rinsert	plugged/Nvim-R/R/common_global.vim	/^command -nargs=1 -complete=customlist,RLisObjs Rinsert :call RInsert(<q-args>)$/;"	c
RmFromRLibList	plugged/Nvim-R/R/functions.vim	/^function RmFromRLibList(lib)$/;"	f
RmdIsInRCode	plugged/Nvim-R/ftplugin/rmd_nvimr.vim	/^function! RmdIsInRCode(vrb)$/;"	f
RmdNextChunk	plugged/Nvim-R/ftplugin/rmd_nvimr.vim	/^function! RmdNextChunk() range$/;"	f
RmdPreviousChunk	plugged/Nvim-R/ftplugin/rmd_nvimr.vim	/^function! RmdPreviousChunk() range$/;"	f
RnwIsInRCode	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! RnwIsInRCode(vrb)$/;"	f
RnwNextChunk	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! RnwNextChunk() range$/;"	f
RnwPreviousChunk	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! RnwPreviousChunk() range$/;"	f
RnwSendChunkToR	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! RnwSendChunkToR(e, m)$/;"	f
RobotFrameworkLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.robotframework import RobotFrameworkLexer$/;"	i
RobotFrameworkLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class RobotFrameworkLexer(Lexer):$/;"	c
RobotFrameworkLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.robotframework import RobotFrameworkLexer$/;"	i
RobotFrameworkLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class RobotFrameworkLexer(Lexer):$/;"	c
RowSplitter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class RowSplitter(object):$/;"	c
RowSplitter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class RowSplitter(object):$/;"	c
RowTokenizer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class RowTokenizer(object):$/;"	c
RowTokenizer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class RowTokenizer(object):$/;"	c
RqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^class RqlLexer(RegexLexer):$/;"	c
RqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^class RqlLexer(RegexLexer):$/;"	c
RrstIsInRCode	plugged/Nvim-R/ftplugin/rrst_nvimr.vim	/^function! RrstIsInRCode(vrb)$/;"	f
RrstNextChunk	plugged/Nvim-R/ftplugin/rrst_nvimr.vim	/^function! RrstNextChunk() range$/;"	f
RrstPreviousChunk	plugged/Nvim-R/ftplugin/rrst_nvimr.vim	/^function! RrstPreviousChunk() range$/;"	f
RrtStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/rrt.py	/^class RrtStyle(Style):$/;"	c
RrtStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/rrt.py	/^class RrtStyle(Style):$/;"	c
RslLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^class RslLexer(RegexLexer):$/;"	c
RslLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^class RslLexer(RegexLexer):$/;"	c
RstLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^class RstLexer(RegexLexer):$/;"	c
RstLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^    TexLexer, GroffLexer$/;"	i
RstLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^class RstLexer(RegexLexer):$/;"	c
RstLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^    TexLexer, GroffLexer$/;"	i
RtfFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/rtf.py	/^class RtfFormatter(Formatter):$/;"	c
RtfFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/rtf.py	/^class RtfFormatter(Formatter):$/;"	c
RubyBalloonexpr	plugged/vim-ruby/ftplugin/ruby.vim	/^function! RubyBalloonexpr()$/;"	f
RubyConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^from pygments.lexers.ruby import RubyLexer, RubyConsoleLexer, FancyLexer$/;"	i
RubyConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^class RubyConsoleLexer(Lexer):$/;"	c
RubyConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^from pygments.lexers.ruby import RubyLexer, RubyConsoleLexer, FancyLexer$/;"	i
RubyConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^class RubyConsoleLexer(Lexer):$/;"	c
RubyCursorIdentifier	plugged/vim-ruby/ftplugin/ruby.vim	/^function! RubyCursorIdentifier()$/;"	f
RubyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^from pygments.lexers.ruby import RubyLexer, RubyConsoleLexer, FancyLexer$/;"	i
RubyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^from pygments.lexers.ruby import RubyLexer$/;"	i
RubyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^from pygments.lexers.ruby import RubyLexer$/;"	i
RubyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^class RubyLexer(ExtendedRegexLexer):$/;"	c
RubyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^        from pygments.lexers.ruby import RubyLexer$/;"	i
RubyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^from pygments.lexers.ruby import RubyLexer$/;"	i
RubyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^from pygments.lexers.ruby import RubyLexer, RubyConsoleLexer, FancyLexer$/;"	i
RubyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^from pygments.lexers.ruby import RubyLexer$/;"	i
RubyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^from pygments.lexers.ruby import RubyLexer$/;"	i
RubyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^class RubyLexer(ExtendedRegexLexer):$/;"	c
RubyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^        from pygments.lexers.ruby import RubyLexer$/;"	i
RubyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^from pygments.lexers.ruby import RubyLexer$/;"	i
RunOracle	plugged/vim-go/autoload/go/oracle.vim	/^func! s:RunOracle(mode, selected, needs_package) range abort$/;"	f
Run_EvinceBackward	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! Run_EvinceBackward()$/;"	f
RussianLangModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langcyrillicmodel.py	/^RussianLangModel = ($/;"	v
RustLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.rust import RustLexer$/;"	i
RustLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^class RustLexer(RegexLexer):$/;"	c
RustLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.rust import RustLexer$/;"	i
RustLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^class RustLexer(RegexLexer):$/;"	c
S	plugged/calendar.vim/autoload/calendar/string.vim	/^  fu! s:S(s) abort$/;"	f
SAMPLE_SIZE	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcharsetprober.py	/^SAMPLE_SIZE = 64$/;"	v
SBCSGroupProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcsgroupprober.py	/^class SBCSGroupProber(CharSetGroupProber):$/;"	c
SBCSGroupProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^from .sbcsgroupprober import SBCSGroupProber  # single-byte character sets$/;"	i
SB_ENOUGH_REL_THRESHOLD	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcharsetprober.py	/^SB_ENOUGH_REL_THRESHOLD = 1024$/;"	v
SED	plugged/delimitMate/Makefile	/^SED      =  $(shell command -v gsed || command -v sed)$/;"	m
SELECTION	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^SELECTION = "#4f424c"$/;"	v
SELECTION	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^SELECTION = "#a39e9b"$/;"	v
SELECTION	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^SELECTION = "#4f424c"$/;"	v
SELECTION	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^SELECTION = "#a39e9b"$/;"	v
SEPARATOR	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^SEPARATOR = Token.Punctuation$/;"	v
SEPARATOR	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^SEPARATOR = Token.Punctuation$/;"	v
SETTING	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^SETTING = Token.Keyword.Namespace$/;"	v
SETTING	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^SETTING = Token.Keyword.Namespace$/;"	v
SHORTCUT_THRESHOLD	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/constants.py	/^SHORTCUT_THRESHOLD = 0.95$/;"	v
SID	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function s:SID()$/;"	f
SID_PREFIX	plugged/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:SID_PREFIX()$/;"	f
SID_PREFIX	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:SID_PREFIX()$/;"	f
SID_PREFIX	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:SID_PREFIX()$/;"	f
SJISCharLenTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^SJISCharLenTable = (0, 1, 1, 2, 0, 0)$/;"	v
SJISContextAnalysis	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^class SJISContextAnalysis(JapaneseContextAnalysis):$/;"	c
SJISContextAnalysis	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sjisprober.py	/^from .jpcntx import SJISContextAnalysis$/;"	i
SJISDistributionAnalysis	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^class SJISDistributionAnalysis(CharDistributionAnalysis):$/;"	c
SJISDistributionAnalysis	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sjisprober.py	/^from .chardistribution import SJISDistributionAnalysis$/;"	i
SJISProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcsgroupprober.py	/^from .sjisprober import SJISProber$/;"	i
SJISProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sjisprober.py	/^class SJISProber(MultiByteCharSetProber):$/;"	c
SJISSMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^SJISSMModel = {'classTable': SJIS_cls,$/;"	v
SJISSMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sjisprober.py	/^from .mbcssm import SJISSMModel$/;"	i
SJIS_cls	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^SJIS_cls = ($/;"	v
SJIS_st	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^SJIS_st = ($/;"	v
SKIPS	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_fail.py	/^SKIPS = {$/;"	v
SLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/math.py	/^from pygments.lexers.r import RConsoleLexer, SLexer, RdLexer$/;"	i
SLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^class SLexer(RegexLexer):$/;"	c
SLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/math.py	/^from pygments.lexers.r import RConsoleLexer, SLexer, RdLexer$/;"	i
SLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^class SLexer(RegexLexer):$/;"	c
SMLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/functional.py	/^from pygments.lexers.ml import SMLLexer, OcamlLexer, OpaLexer$/;"	i
SMLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^class SMLLexer(RegexLexer):$/;"	c
SMLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/functional.py	/^from pygments.lexers.ml import SMLLexer, OcamlLexer, OpaLexer$/;"	i
SMLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^class SMLLexer(RegexLexer):$/;"	c
SM_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    SM_TYPES = set(('Action', 'bool', 'Float', 'Plugin', 'String', 'any',$/;"	v	class:SourcePawnLexer
SM_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    SM_TYPES = set(('Action', 'bool', 'Float', 'Plugin', 'String', 'any',$/;"	v	class:SourcePawnLexer
SNI	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^    from ssl import HAS_SNI  # Has SNI?$/;"	i
SOURCES	plugged/delimitMate/Makefile	/^SOURCES  =  $(PLUGIN)$/;"	m
SOURCE_URL	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_postgres_builtins.py	/^    SOURCE_URL = 'https:\/\/github.com\/postgres\/postgres\/raw\/master'$/;"	v
SOURCE_URL	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_postgres_builtins.py	/^    SOURCE_URL = 'https:\/\/github.com\/postgres\/postgres\/raw\/master'$/;"	v
SPECIAL_FORMS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cl_builtins.py	/^SPECIAL_FORMS = set(($/;"	v
SPECIAL_FORMS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^            BUILTIN_TYPES, BUILTIN_CLASSES$/;"	i
SPECIAL_FORMS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cl_builtins.py	/^SPECIAL_FORMS = set(($/;"	v
SPECIAL_FORMS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^            BUILTIN_TYPES, BUILTIN_CLASSES$/;"	i
SPECIFIC_ERROR	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^    SPECIFIC_ERROR = 'too many {status_code} error responses'$/;"	v	class:ResponseError
SRC	plugged/vimproc.vim/make_android.mak	/^SRC=autoload\/proc.c autoload\/ptytty.c$/;"	m
SRC	plugged/vimproc.vim/make_cygwin.mak	/^SRC=autoload\/proc.c$/;"	m
SRC	plugged/vimproc.vim/make_mac.mak	/^SRC=autoload\/proc.c$/;"	m
SRC	plugged/vimproc.vim/make_mingw32.mak	/^SRC=autoload\/proc_w32.c$/;"	m
SRC	plugged/vimproc.vim/make_mingw64.mak	/^SRC=autoload\/proc_w32.c$/;"	m
SRC	plugged/vimproc.vim/make_sunos.mak	/^SRC=autoload\/proc.c autoload\/ptytty.c$/;"	m
SRC	plugged/vimproc.vim/make_unix.mak	/^SRC=autoload\/proc.c$/;"	m
SRCDIR	plugged/vimproc.vim/make_msvc.mak	/^SRCDIR = autoload$/;"	m
SSL	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^import OpenSSL.SSL$/;"	i
SSL	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^    from ssl import SSLContext  # Modern SSL?$/;"	i
SSLContext	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^    class SSLContext(object):  # Platform-specific: Python 2 & 3.1$/;"	c
SSLContext	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^    from ssl import SSLContext  # Modern SSL?$/;"	i
SSLContext	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^SSLContext = None$/;"	v
SSLError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,$/;"	i
SSLError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/exceptions.py	/^class SSLError(ConnectionError):$/;"	c
SSLError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class SSLError(HTTPError):$/;"	c
SSLError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^from ..exceptions import SSLError, InsecurePlatformWarning$/;"	i
SSL_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^SSL_KEYWORDS = ('key_file', 'cert_file', 'cert_reqs', 'ca_certs',$/;"	v
STANDARD_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^from pygments.token import Token, Text, STANDARD_TYPES$/;"	i
STANDARD_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^from pygments.token import Token, STANDARD_TYPES$/;"	i
STANDARD_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/style.py	/^from pygments.token import Token, STANDARD_TYPES$/;"	i
STANDARD_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^STANDARD_TYPES = {$/;"	v
STANDARD_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^from pygments.token import Token, Text, STANDARD_TYPES$/;"	i
STANDARD_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^from pygments.token import Token, STANDARD_TYPES$/;"	i
STANDARD_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/style.py	/^from pygments.token import Token, STANDARD_TYPES$/;"	i
STANDARD_TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^STANDARD_TYPES = {$/;"	v
STDOFFSET	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^STDOFFSET = timedelta(seconds = -_time.timezone)$/;"	v
STDOFFSET	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^STDOFFSET = timedelta(seconds = -_time.timezone)$/;"	v
STRINGCHUNK	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^STRINGCHUNK = re.compile(r'(.*?)(["\\\\\\x00-\\x1f])', FLAGS)$/;"	v
STYLES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^STYLES = {$/;"	v
STYLES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^STYLES = {$/;"	v
STYLE_ENTRY_POINT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/plugin.py	/^STYLE_ENTRY_POINT = 'pygments.styles'$/;"	v
STYLE_ENTRY_POINT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/plugin.py	/^STYLE_ENTRY_POINT = 'pygments.styles'$/;"	v
STYLE_MAP	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/__init__.py	/^STYLE_MAP = {$/;"	v
STYLE_MAP	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/__init__.py	/^STYLE_MAP = {$/;"	v
SUBJ_ALT_NAME_SUPPORT	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^    from ndg.httpsclient.ssl_peer_verification import SUBJ_ALT_NAME_SUPPORT$/;"	i
SUFFIX	plugged/vimproc.vim/make_unix.mak	/^	SUFFIX=linux$(if $(wildcard \/lib*\/ld-linux*64.so.2),64,32)$/;"	m
SUFFIX	plugged/vimproc.vim/make_unix.mak	/^	SUFFIX=unix$/;"	m
SURE_NO	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^SURE_NO = 0.01$/;"	v
SURE_YES	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^SURE_YES = 0.99$/;"	v
SYMBOL_CAT_ORDER	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcharsetprober.py	/^SYMBOL_CAT_ORDER = 250$/;"	v
SYNTAX	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^SYNTAX = Token.Punctuation$/;"	v
SYNTAX	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^SYNTAX = Token.Punctuation$/;"	v
SYS	plugged/vimproc.vim/Makefile	/^    SYS := $(shell gcc -dumpmachine)$/;"	m
S_CHAR	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define S_CHAR(/;"	d	file:
SamoaInternationalDateLineChange	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class SamoaInternationalDateLineChange(USEasternDSTStartTestCase):$/;"	c
SamoaInternationalDateLineChange	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class SamoaInternationalDateLineChange(USEasternDSTStartTestCase):$/;"	c
SassLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^class SassLexer(ExtendedRegexLexer):$/;"	c
SassLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^from pygments.lexers.css import CssLexer, SassLexer, ScssLexer$/;"	i
SassLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^class SassLexer(ExtendedRegexLexer):$/;"	c
SassLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^from pygments.lexers.css import CssLexer, SassLexer, ScssLexer$/;"	i
SaveClasspath	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveClasspath() " {{{2$/;"	f
SaveConfig	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveConfig() " {{{2$/;"	f
SaveGlobalFocus	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:SaveGlobalFocus()$/;"	f
SaveNERDTreeViewIfPossible	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:SaveNERDTreeViewIfPossible()$/;"	f
Sc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Sc = u'$\\xa2-\\xa5\\u058f\\u060b\\u09f2-\\u09f3\\u09fb\\u0af1\\u0bf9\\u0e3f\\u17db\\u20a0-\\u20ba\\ua838\\ufdfc\\ufe69\\uff04\\uffe0-\\uffe1\\uffe5-\\uffe6'$/;"	v
Sc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Sc = u'$\\xa2-\\xa5\\u058f\\u060b\\u09f2-\\u09f3\\u09fb\\u0af1\\u0bf9\\u0e3f\\u17db\\u20a0-\\u20ba\\ua838\\ufdfc\\ufe69\\uff04\\uffe0-\\uffe1\\uffe5-\\uffe6'$/;"	v
ScalaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.jvm import JavaLexer, ScalaLexer$/;"	i
ScalaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^from pygments.lexers.jvm import ScalaLexer$/;"	i
ScalaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^class ScalaLexer(RegexLexer):$/;"	c
ScalaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.jvm import JavaLexer, ScalaLexer$/;"	i
ScalaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^from pygments.lexers.jvm import ScalaLexer$/;"	i
ScalaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^class ScalaLexer(RegexLexer):$/;"	c
ScamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^class ScamlLexer(ExtendedRegexLexer):$/;"	c
ScamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^    HamlLexer, ScamlLexer, JadeLexer$/;"	i
ScamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^class ScamlLexer(ExtendedRegexLexer):$/;"	c
ScamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^    HamlLexer, ScamlLexer, JadeLexer$/;"	i
Scanner	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^from pygments.scanner import Scanner$/;"	i
Scanner	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/scanner.py	/^class Scanner(object):$/;"	c
Scanner	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^from pygments.scanner import Scanner$/;"	i
Scanner	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/scanner.py	/^class Scanner(object):$/;"	c
SchemeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^from pygments.lexers.lisp import SchemeLexer$/;"	i
SchemeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/functional.py	/^    NewLispLexer$/;"	i
SchemeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^class SchemeLexer(RegexLexer):$/;"	c
SchemeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^from pygments.lexers.lisp import SchemeLexer$/;"	i
SchemeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/functional.py	/^    NewLispLexer$/;"	i
SchemeLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^class SchemeLexer(RegexLexer):$/;"	c
ScilabLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/math.py	/^    OctaveLexer, ScilabLexer$/;"	i
ScilabLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^class ScilabLexer(RegexLexer):$/;"	c
ScilabLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/math.py	/^    OctaveLexer, ScilabLexer$/;"	i
ScilabLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^class ScilabLexer(RegexLexer):$/;"	c
ScratchBufBuild	plugged/vim-coffee-script/ftplugin/coffee.vim	/^function! s:ScratchBufBuild(src, vert, size)$/;"	f
ScratchBufUpdate	plugged/vim-coffee-script/ftplugin/coffee.vim	/^function! s:ScratchBufUpdate(buf, text)$/;"	f
ScssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^class ScssLexer(RegexLexer):$/;"	c
ScssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^from pygments.lexers.css import CssLexer, SassLexer, ScssLexer$/;"	i
ScssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^class ScssLexer(RegexLexer):$/;"	c
ScssLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^from pygments.lexers.css import CssLexer, SassLexer, ScssLexer$/;"	i
SearchCode	plugged/vim-coffee-script/indent/coffee.vim	/^function! s:SearchCode(lnum, regex)$/;"	f
SearchMatchingKeyword	plugged/vim-coffee-script/indent/coffee.vim	/^function! s:SearchMatchingKeyword(startlnum, open, close)$/;"	f
SearchPair	plugged/vim-coffee-script/indent/coffee.vim	/^function! s:SearchPair(startlnum, lookback, skip, open, close)$/;"	f
SecurityWarning	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class SecurityWarning(HTTPWarning):$/;"	c
SelectJavascript	plugged/vim-javascript/ftdetect/javascript.vim	/^fun! s:SelectJavascript()$/;"	f
SendCmdToR_Neovim	plugged/Nvim-R/R/nvimbuffer.vim	/^function SendCmdToR_Neovim(...)$/;"	f
SendCmdToR_OSX	plugged/Nvim-R/R/osx.vim	/^function SendCmdToR_OSX(...)$/;"	f
SendCmdToR_Term	plugged/Nvim-R/R/external_term.vim	/^function SendCmdToR_Term(...)$/;"	f
SendCmdToR_TmuxSplit	plugged/Nvim-R/R/common_global.vim	/^function SendCmdToR_TmuxSplit(...)$/;"	f
SendCmdToR_Windows	plugged/Nvim-R/R/windows.vim	/^function SendCmdToR_Windows(...)$/;"	f
SendCmdToR_fake	plugged/Nvim-R/R/common_global.vim	/^function SendCmdToR_fake(...)$/;"	f
SendFHChunkToR	plugged/Nvim-R/R/common_global.vim	/^function SendFHChunkToR()$/;"	f
SendFileToR	plugged/Nvim-R/R/common_global.vim	/^function SendFileToR(e)$/;"	f
SendFunctionToR	plugged/Nvim-R/R/common_global.vim	/^function SendFunctionToR(e, m)$/;"	f
SendLineToR	plugged/Nvim-R/R/common_global.vim	/^function SendLineToR(godown)$/;"	f
SendLineToRAndInsertOutput	plugged/Nvim-R/R/common_global.vim	/^function SendLineToRAndInsertOutput()$/;"	f
SendMBlockToR	plugged/Nvim-R/R/common_global.vim	/^function SendMBlockToR(e, m)$/;"	f
SendParagraphToR	plugged/Nvim-R/R/common_global.vim	/^function SendParagraphToR(e, m)$/;"	f
SendRmdChunkToR	plugged/Nvim-R/ftplugin/rmd_nvimr.vim	/^function! SendRmdChunkToR(e, m)$/;"	f
SendRrstChunkToR	plugged/Nvim-R/ftplugin/rrst_nvimr.vim	/^function! SendRrstChunkToR(e, m)$/;"	f
SendSelectionToR	plugged/Nvim-R/R/common_global.vim	/^function SendSelectionToR(...)$/;"	f
SendToNvimcom	plugged/Nvim-R/R/common_global.vim	/^function SendToNvimcom(cmd)$/;"	f
SendToOtherNvim	plugged/Nvim-R/R/common_global.vim	/^function SendToOtherNvim(cmd)$/;"	f
Session	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^from .sessions import session, Session$/;"	i
Session	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^class Session(SessionRedirectMixin):$/;"	c
SessionCache	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^from .session_cache import SessionCache$/;"	i
SessionCache	plugged/vim-wakatime/plugin/packages/wakatime/session_cache.py	/^class SessionCache(object):$/;"	c
SessionRedirectMixin	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^class SessionRedirectMixin(object):$/;"	c
SetCompilerType	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! s:SetCompilerType(exe) " {{{2$/;"	f
SetLastHeartbeat	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:SetLastHeartbeat(time, last_update, targetFile)$/;"	f
SetLines	plugged/tabular/autoload/tabular.vim	/^function! s:SetLines(start, len, strings)$/;"	f
SetLucius	plugged/vim-lucius/colors/lucius.vim	/^function! SetLucius(style, contrast, contrast_bg)$/;"	f
SetMakePrg	plugged/vim-coffee-script/compiler/coffee.vim	/^function! s:SetMakePrg()$/;"	f
SetRTextWidth	plugged/Nvim-R/R/common_global.vim	/^function SetRTextWidth(rkeyword)$/;"	f
SetTagbar	plugged/vim-go/ftplugin/go/tagbar.vim	/^function! s:SetTagbar()$/;"	f
Setting	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class Setting(Tokenizer):$/;"	c
Setting	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class Setting(Tokenizer):$/;"	c
SettingTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class SettingTable(_Table):$/;"	c
SettingTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class SettingTable(_Table):$/;"	c
Setup	plugged/vim-gitgutter/test/helper.vim	/^function! Setup()$/;"	f
SetupConfigFile	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:SetupConfigFile()$/;"	f
ShellSessionLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^class ShellSessionLexer(Lexer):$/;"	c
ShellSessionLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^class ShellSessionLexer(Lexer):$/;"	c
ShiftWidth	plugged/vim-coffee-script/indent/coffee.vim	/^  function! s:ShiftWidth()$/;"	f
ShouldSkip	plugged/vim-coffee-script/indent/coffee.vim	/^function! s:ShouldSkip(startlnum, lnum, col)$/;"	f
ShowRDoc	plugged/Nvim-R/R/common_global.vim	/^function ShowRDoc(rkeyword)$/;"	f
ShowRObject	plugged/Nvim-R/R/common_global.vim	/^function ShowRObject(fname)$/;"	f
ShowRout	plugged/Nvim-R/ftplugin/r_nvimr.vim	/^function! ShowRout()$/;"	f
SingleByteCharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcharsetprober.py	/^class SingleByteCharSetProber(CharSetProber):$/;"	c
SingleByteCharSetProber	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcsgroupprober.py	/^from .sbcharsetprober import SingleByteCharSetProber$/;"	i
Sk	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Sk = u'\\\\^`\\xa8\\xaf\\xb4\\xb8\\u02c2-\\u02c5\\u02d2-\\u02df\\u02e5-\\u02eb\\u02ed\\u02ef-\\u02ff\\u0375\\u0384-\\u0385\\u1fbd\\u1fbf-\\u1fc1\\u1fcd-\\u1fcf\\u1fdd-\\u1fdf\\u1fed-\\u1fef\\u1ffd-\\u1ffe\\u309b-\\u309c\\ua700-\\ua716\\ua720-\\ua721\\ua789-\\ua78a\\ufbb2-\\ufbc1\\uff3e\\uff40\\uffe3'$/;"	v
Sk	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Sk = u'\\\\^`\\xa8\\xaf\\xb4\\xb8\\u02c2-\\u02c5\\u02d2-\\u02df\\u02e5-\\u02eb\\u02ed\\u02ef-\\u02ff\\u0375\\u0384-\\u0385\\u1fbd\\u1fbf-\\u1fc1\\u1fcd-\\u1fcf\\u1fdd-\\u1fdf\\u1fed-\\u1fef\\u1ffd-\\u1ffe\\u309b-\\u309c\\ua700-\\ua716\\ua720-\\ua721\\ua789-\\ua78a\\ufbb2-\\ufbc1\\uff3e\\uff40\\uffe3'$/;"	v
SlimLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^from pygments.lexers.webmisc import DuelLexer, XQueryLexer, SlimLexer, QmlLexer$/;"	i
SlimLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^class SlimLexer(ExtendedRegexLexer):$/;"	c
SlimLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^from pygments.lexers.webmisc import DuelLexer, XQueryLexer, SlimLexer, QmlLexer$/;"	i
SlimLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^class SlimLexer(ExtendedRegexLexer):$/;"	c
Sm	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Sm = u'+<->|~\\xac\\xb1\\xd7\\xf7\\u03f6\\u0606-\\u0608\\u2044\\u2052\\u207a-\\u207c\\u208a-\\u208c\\u2118\\u2140-\\u2144\\u214b\\u2190-\\u2194\\u219a-\\u219b\\u21a0\\u21a3\\u21a6\\u21ae\\u21ce-\\u21cf\\u21d2\\u21d4\\u21f4-\\u22ff\\u2320-\\u2321\\u237c\\u239b-\\u23b3\\u23dc-\\u23e1\\u25b7\\u25c1\\u25f8-\\u25ff\\u266f\\u27c0-\\u27c4\\u27c7-\\u27e5\\u27f0-\\u27ff\\u2900-\\u2982\\u2999-\\u29d7\\u29dc-\\u29fb\\u29fe-\\u2aff\\u2b30-\\u2b44\\u2b47-\\u2b4c\\ufb29\\ufe62\\ufe64-\\ufe66\\uff0b\\uff1c-\\uff1e\\uff5c\\uff5e\\uffe2\\uffe9-\\uffec'$/;"	v
Sm	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Sm = u'+<->|~\\xac\\xb1\\xd7\\xf7\\u03f6\\u0606-\\u0608\\u2044\\u2052\\u207a-\\u207c\\u208a-\\u208c\\u2118\\u2140-\\u2144\\u214b\\u2190-\\u2194\\u219a-\\u219b\\u21a0\\u21a3\\u21a6\\u21ae\\u21ce-\\u21cf\\u21d2\\u21d4\\u21f4-\\u22ff\\u2320-\\u2321\\u237c\\u239b-\\u23b3\\u23dc-\\u23e1\\u25b7\\u25c1\\u25f8-\\u25ff\\u266f\\u27c0-\\u27c4\\u27c7-\\u27e5\\u27f0-\\u27ff\\u2900-\\u2982\\u2999-\\u29d7\\u29dc-\\u29fb\\u29fe-\\u2aff\\u2b30-\\u2b44\\u2b47-\\u2b4c\\ufb29\\ufe62\\ufe64-\\ufe66\\uff0b\\uff1c-\\uff1e\\uff5c\\uff5e\\uffe2\\uffe9-\\uffec'$/;"	v
SmaliLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dalvik.py	/^class SmaliLexer(RegexLexer):$/;"	c
SmaliLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dalvik.py	/^class SmaliLexer(RegexLexer):$/;"	c
SmalltalkLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.smalltalk import SmalltalkLexer, NewspeakLexer$/;"	i
SmalltalkLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^class SmalltalkLexer(RegexLexer):$/;"	c
SmalltalkLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.smalltalk import SmalltalkLexer, NewspeakLexer$/;"	i
SmalltalkLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^class SmalltalkLexer(RegexLexer):$/;"	c
SmartPairs	plugged/smartpairs.vim/plugin/smartpairs.vim	/^function! s:SmartPairs(type, mod, ...)$/;"	f
SmartPairsA	plugged/smartpairs.vim/plugin/smartpairs.vim	/^command! -nargs=1 SmartPairsA call s:SmartPairs(<f-args>, 'a')$/;"	c
SmartPairsI	plugged/smartpairs.vim/plugin/smartpairs.vim	/^command! -nargs=1 SmartPairsI call s:SmartPairs(<f-args>, 'i')$/;"	c
SmartyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class SmartyLexer(RegexLexer):$/;"	c
SmartyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class SmartyLexer(RegexLexer):$/;"	c
SnobolLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.snobol import SnobolLexer$/;"	i
SnobolLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/snobol.py	/^class SnobolLexer(RegexLexer):$/;"	c
SnobolLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.snobol import SnobolLexer$/;"	i
SnobolLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/snobol.py	/^class SnobolLexer(RegexLexer):$/;"	c
So	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^So = u'\\xa6\\xa9\\xae\\xb0\\u0482\\u060e-\\u060f\\u06de\\u06e9\\u06fd-\\u06fe\\u07f6\\u09fa\\u0b70\\u0bf3-\\u0bf8\\u0bfa\\u0c7f\\u0d79\\u0f01-\\u0f03\\u0f13\\u0f15-\\u0f17\\u0f1a-\\u0f1f\\u0f34\\u0f36\\u0f38\\u0fbe-\\u0fc5\\u0fc7-\\u0fcc\\u0fce-\\u0fcf\\u0fd5-\\u0fd8\\u109e-\\u109f\\u1390-\\u1399\\u1940\\u19de-\\u19ff\\u1b61-\\u1b6a\\u1b74-\\u1b7c\\u2100-\\u2101\\u2103-\\u2106\\u2108-\\u2109\\u2114\\u2116-\\u2117\\u211e-\\u2123\\u2125\\u2127\\u2129\\u212e\\u213a-\\u213b\\u214a\\u214c-\\u214d\\u214f\\u2195-\\u2199\\u219c-\\u219f\\u21a1-\\u21a2\\u21a4-\\u21a5\\u21a7-\\u21ad\\u21af-\\u21cd\\u21d0-\\u21d1\\u21d3\\u21d5-\\u21f3\\u2300-\\u2307\\u230c-\\u231f\\u2322-\\u2328\\u232b-\\u237b\\u237d-\\u239a\\u23b4-\\u23db\\u23e2-\\u23f3\\u2400-\\u2426\\u2440-\\u244a\\u249c-\\u24e9\\u2500-\\u25b6\\u25b8-\\u25c0\\u25c2-\\u25f7\\u2600-\\u266e\\u2670-\\u26ff\\u2701-\\u2767\\u2794-\\u27bf\\u2800-\\u28ff\\u2b00-\\u2b2f\\u2b45-\\u2b46\\u2b50-\\u2b59\\u2ce5-\\u2cea\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u2ff0-\\u2ffb\\u3004\\u3012-\\u3013\\u3020\\u3036-\\u3037\\u303e-\\u303f\\u3190-\\u3191\\u3196-\\u319f\\u31c0-\\u31e3\\u3200-\\u321e\\u322a-\\u3247\\u3250\\u3260-\\u327f\\u328a-\\u32b0\\u32c0-\\u32fe\\u3300-\\u33ff\\u4dc0-\\u4dff\\ua490-\\ua4c6\\ua828-\\ua82b\\ua836-\\ua837\\ua839\\uaa77-\\uaa79\\ufdfd\\uffe4\\uffe8\\uffed-\\uffee\\ufffc-\\ufffd'$/;"	v
So	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^So = u'\\xa6\\xa9\\xae\\xb0\\u0482\\u060e-\\u060f\\u06de\\u06e9\\u06fd-\\u06fe\\u07f6\\u09fa\\u0b70\\u0bf3-\\u0bf8\\u0bfa\\u0c7f\\u0d79\\u0f01-\\u0f03\\u0f13\\u0f15-\\u0f17\\u0f1a-\\u0f1f\\u0f34\\u0f36\\u0f38\\u0fbe-\\u0fc5\\u0fc7-\\u0fcc\\u0fce-\\u0fcf\\u0fd5-\\u0fd8\\u109e-\\u109f\\u1390-\\u1399\\u1940\\u19de-\\u19ff\\u1b61-\\u1b6a\\u1b74-\\u1b7c\\u2100-\\u2101\\u2103-\\u2106\\u2108-\\u2109\\u2114\\u2116-\\u2117\\u211e-\\u2123\\u2125\\u2127\\u2129\\u212e\\u213a-\\u213b\\u214a\\u214c-\\u214d\\u214f\\u2195-\\u2199\\u219c-\\u219f\\u21a1-\\u21a2\\u21a4-\\u21a5\\u21a7-\\u21ad\\u21af-\\u21cd\\u21d0-\\u21d1\\u21d3\\u21d5-\\u21f3\\u2300-\\u2307\\u230c-\\u231f\\u2322-\\u2328\\u232b-\\u237b\\u237d-\\u239a\\u23b4-\\u23db\\u23e2-\\u23f3\\u2400-\\u2426\\u2440-\\u244a\\u249c-\\u24e9\\u2500-\\u25b6\\u25b8-\\u25c0\\u25c2-\\u25f7\\u2600-\\u266e\\u2670-\\u26ff\\u2701-\\u2767\\u2794-\\u27bf\\u2800-\\u28ff\\u2b00-\\u2b2f\\u2b45-\\u2b46\\u2b50-\\u2b59\\u2ce5-\\u2cea\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u2ff0-\\u2ffb\\u3004\\u3012-\\u3013\\u3020\\u3036-\\u3037\\u303e-\\u303f\\u3190-\\u3191\\u3196-\\u319f\\u31c0-\\u31e3\\u3200-\\u321e\\u322a-\\u3247\\u3250\\u3260-\\u327f\\u328a-\\u32b0\\u32c0-\\u32fe\\u3300-\\u33ff\\u4dc0-\\u4dff\\ua490-\\ua4c6\\ua828-\\ua82b\\ua836-\\ua837\\ua839\\uaa77-\\uaa79\\ufdfd\\uffe4\\uffe8\\uffed-\\uffee\\ufffc-\\ufffd'$/;"	v
SocketError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^from socket import error as SocketError, timeout as SocketTimeout$/;"	i
SocketTimeout	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^from socket import timeout as SocketTimeout$/;"	i
SocketTimeout	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^from socket import error as SocketError, timeout as SocketTimeout$/;"	i
SocketTimeout	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^from socket import timeout as SocketTimeout$/;"	i
SortByCharLength	plugged/AdvancedSorters/plugin/AdvancedSorters.vim	/^command! -bang -range=% SortByCharLength$/;"	c
SortByExpr	plugged/AdvancedSorters/plugin/AdvancedSorters.vim	/^command! -bang -range=% -nargs=1 -complete=expression SortByExpr$/;"	c
SortByExprUnique	plugged/AdvancedSorters/plugin/AdvancedSorters.vim	/^command! -bang -range=% -nargs=1 -complete=expression SortByExprUnique$/;"	c
SortByWidth	plugged/AdvancedSorters/plugin/AdvancedSorters.vim	/^command! -bang -range=% SortByWidth$/;"	c
SortRanges	plugged/AdvancedSorters/autoload/AdvancedSorters/Ranges.vim	/^function! s:SortRanges( bang, startLnum, endLnum, sortArgs, rangeName, rangeNum, joinCnt )$/;"	f
SortRangesByHeader	plugged/AdvancedSorters/plugin/AdvancedSorters.vim	/^command! -bang -range=% -nargs=+ SortRangesByHeader$/;"	c
SortRangesByMatch	plugged/AdvancedSorters/plugin/AdvancedSorters.vim	/^command! -bang -range=% -nargs=+ SortRangesByMatch$/;"	c
SortRangesByRange	plugged/AdvancedSorters/plugin/AdvancedSorters.vim	/^command! -bang -range=% -nargs=+ SortRangesByRange$/;"	c
SortUnfolded	plugged/AdvancedSorters/plugin/AdvancedSorters.vim	/^command! -bang -range=% -nargs=* SortUnfolded$/;"	c
SortWORDs	plugged/AdvancedSorters/plugin/AdvancedSorters.vim	/^command! -bang -range -nargs=* SortWORDs$/;"	c
SourceObjBrLines	plugged/Nvim-R/ftplugin/rbrowser.vim	/^function! SourceObjBrLines()$/;"	f
SourcePawnLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.pawn import SourcePawnLexer, PawnLexer$/;"	i
SourcePawnLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^class SourcePawnLexer(RegexLexer):$/;"	c
SourcePawnLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.pawn import SourcePawnLexer, PawnLexer$/;"	i
SourcePawnLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^class SourcePawnLexer(RegexLexer):$/;"	c
SourceRFunList	plugged/Nvim-R/R/functions.vim	/^function SourceRFunList(lib)$/;"	f
SourcesListLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^class SourcesListLexer(RegexLexer):$/;"	c
SourcesListLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^from pygments.lexers.installers import DebianControlLexer, SourcesListLexer$/;"	i
SourcesListLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^class SourcesListLexer(RegexLexer):$/;"	c
SourcesListLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^from pygments.lexers.installers import DebianControlLexer, SourcesListLexer$/;"	i
SpaceForRGrDevice	plugged/Nvim-R/R/common_global.vim	/^function SpaceForRGrDevice()$/;"	f
SparqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^class SparqlLexer(RegexLexer):$/;"	c
SparqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^class SparqlLexer(RegexLexer):$/;"	c
SplitCDeclarations	plugged/tabular/after/plugin/TabularMaps.vim	/^function! SplitCDeclarations(lines)$/;"	f
SplitClasspath	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:SplitClasspath(classpath) " {{{2$/;"	f
SplitCommands	plugged/tabular/plugin/Tabular.vim	/^function! s:SplitCommands(string)$/;"	f
SplitDelim	plugged/tabular/autoload/tabular.vim	/^function! s:SplitDelim(string, delim)$/;"	f
SplitDelimTest	plugged/tabular/autoload/tabular.vim	/^function! s:SplitDelimTest(string, delim, expected)$/;"	f
SplitPair	plugged/ingo-library/autoload/ingo/subst/pairs.vim	/^function! s:SplitPair( pair )$/;"	f
SqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.sql import SqlLexer, MySqlLexer, SqliteConsoleLexer$/;"	i
SqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^class SqlLexer(RegexLexer):$/;"	c
SqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.sql import SqlLexer, MySqlLexer, SqliteConsoleLexer$/;"	i
SqlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^class SqlLexer(RegexLexer):$/;"	c
SqliteConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.sql import SqlLexer, MySqlLexer, SqliteConsoleLexer$/;"	i
SqliteConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^class SqliteConsoleLexer(Lexer):$/;"	c
SqliteConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.sql import SqlLexer, MySqlLexer, SqliteConsoleLexer$/;"	i
SqliteConsoleLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^class SqliteConsoleLexer(Lexer):$/;"	c
SquidConfLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^class SquidConfLexer(RegexLexer):$/;"	c
SquidConfLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^    SquidConfLexer, LighttpdConfLexer, IniLexer, RegeditLexer, PropertiesLexer$/;"	i
SquidConfLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^class SquidConfLexer(RegexLexer):$/;"	c
SquidConfLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^    SquidConfLexer, LighttpdConfLexer, IniLexer, RegeditLexer, PropertiesLexer$/;"	i
SspLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class SspLexer(DelegatingLexer):$/;"	c
SspLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class SspLexer(DelegatingLexer):$/;"	c
StageDiff	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageNext	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:StageNext(count) abort$/;"	f
StagePatch	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StagePrevious	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePrevious(count) abort$/;"	f
StageReloadSeek	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2) abort$/;"	f
StageToggle	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
StageUndo	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:StageUndo() abort$/;"	f
StanLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/math.py	/^from pygments.lexers.modeling import BugsLexer, JagsLexer, StanLexer$/;"	i
StanLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^class StanLexer(RegexLexer):$/;"	c
StanLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/math.py	/^from pygments.lexers.modeling import BugsLexer, JagsLexer, StanLexer$/;"	i
StanLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^class StanLexer(RegexLexer):$/;"	c
StartObjBrowser_Nvim	plugged/Nvim-R/R/common_global.vim	/^function StartObjBrowser_Nvim()$/;"	f
StartObjBrowser_Tmux	plugged/Nvim-R/R/common_global.vim	/^function StartObjBrowser_Tmux()$/;"	f
StartR	plugged/Nvim-R/R/common_global.vim	/^function StartR(whatr)$/;"	f
StartR_ExternalTerm	plugged/Nvim-R/R/external_term.vim	/^function StartR_ExternalTerm(rcmd)$/;"	f
StartR_Neovim	plugged/Nvim-R/R/nvimbuffer.vim	/^function StartR_Neovim()$/;"	f
StartR_OSX	plugged/Nvim-R/R/osx.vim	/^function StartR_OSX()$/;"	f
StartR_TmuxSplit	plugged/Nvim-R/R/common_global.vim	/^function StartR_TmuxSplit(rcmd)$/;"	f
StartR_Windows	plugged/Nvim-R/R/windows.vim	/^function StartR_Windows()$/;"	f
StaticTzInfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^from pytz.tzinfo import DstTzInfo, StaticTzInfo$/;"	i
StaticTzInfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^from pytz.tzinfo import StaticTzInfo, DstTzInfo, memorized_ttinfo$/;"	i
StaticTzInfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^class StaticTzInfo(BaseTzInfo):$/;"	c
StaticTzInfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^from pytz.tzinfo import DstTzInfo, StaticTzInfo$/;"	i
StaticTzInfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^from pytz.tzinfo import StaticTzInfo, DstTzInfo, memorized_ttinfo$/;"	i
StaticTzInfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^class StaticTzInfo(BaseTzInfo):$/;"	c
StaticTzInfoTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class StaticTzInfoTestCase(unittest.TestCase, BaseTzInfoTestCase):$/;"	c
StaticTzInfoTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class StaticTzInfoTestCase(unittest.TestCase, BaseTzInfoTestCase):$/;"	c
Status	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
StopR	plugged/Nvim-R/R/common_global.vim	/^function StopR()$/;"	f
StreamConsumedError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/exceptions.py	/^class StreamConsumedError(RequestException, TypeError):$/;"	c
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    string_to_tokentype$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/apl.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    Other, Keyword, Operator$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^    Number, Punctuation, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    Number, Punctuation, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    Number, Punctuation, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/chapel.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    Number, Punctuation, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^    Punctuation, Number$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dalvik.py	/^    Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    Punctuation, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    Number, Punctuation, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^    Number, Punctuation, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/eiffel.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    Number, Punctuation, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    Number, Punctuation, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^from pygments.token import Text, Comment, Keyword, Name, String, Number$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    Number, Punctuation, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/foxpro.py	/^     Name, String$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^    String, Number, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    Number, Punctuation, String$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    Number, Punctuation, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    Number, Punctuation, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^from pygments.token import Text, Comment, Keyword, Name, String$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^    Name, String, Number$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/iolang.py	/^    Number$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    Number, Punctuation, Other$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^    Number, Punctuation, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    Number, Punctuation, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    Number, Punctuation, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nit.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^    Number, Punctuation, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    Number, Punctuation, Literal, Comment$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ooc.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    Number, Punctuation, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    Number, Punctuation, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    Number, Punctuation, Other$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    Number, Punctuation, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    Number, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^    Keyword, Name$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^    Number, Punctuation, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^     Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/snobol.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^    Number$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/testing.py	/^from pygments.token import Comment, Keyword, Name, String$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    Number, Generic, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    Number, Punctuation, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    Number, Punctuation, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/autumn.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/borland.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/bw.py	/^     Operator, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/colorful.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/default.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/emacs.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/friendly.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/fruity.py	/^    Generic, Number, String, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/igor.py	/^from pygments.token import Keyword, Name, Comment, String$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/manni.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/murphy.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/pastie.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/perldoc.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/rrt.py	/^from pygments.token import Comment, Name, Keyword, String$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/trac.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vs.py	/^     Operator, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/xcode.py	/^     Number, Operator, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^String      = Literal.String$/;"	v
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    string_to_tokentype$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/apl.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    Other, Keyword, Operator$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^    Number, Punctuation, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    Number, Punctuation, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    Number, Punctuation, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/chapel.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    Number, Punctuation, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^    Punctuation, Number$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dalvik.py	/^    Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    Punctuation, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    Number, Punctuation, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^    Number, Punctuation, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/eiffel.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    Number, Punctuation, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    Number, Punctuation, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^from pygments.token import Text, Comment, Keyword, Name, String, Number$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    Number, Punctuation, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/foxpro.py	/^     Name, String$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^    String, Number, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    Number, Punctuation, String$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    Number, Punctuation, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    Number, Punctuation, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^from pygments.token import Text, Comment, Keyword, Name, String$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^    Name, String, Number$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/iolang.py	/^    Number$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    Number, Punctuation, Other$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^    Number, Punctuation, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    Number, Punctuation, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    Number, Punctuation, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nit.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^    Number, Punctuation, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    Number, Punctuation, Literal, Comment$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ooc.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    Number, Punctuation, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    Number, Punctuation, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    Number, Punctuation, Other$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    Number, Punctuation, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    Number, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^    Keyword, Name$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^    Number, Punctuation, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^     Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/snobol.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^    Number$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/testing.py	/^from pygments.token import Comment, Keyword, Name, String$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    Number, Generic, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    Number, Punctuation, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^    Number, Punctuation$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    Number, Punctuation, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/autumn.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/borland.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/bw.py	/^     Operator, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/colorful.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/default.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/emacs.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/friendly.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/fruity.py	/^    Generic, Number, String, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/igor.py	/^from pygments.token import Keyword, Name, Comment, String$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/manni.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/murphy.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/pastie.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/perldoc.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/rrt.py	/^from pygments.token import Comment, Name, Keyword, String$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/trac.py	/^     Number, Operator, Generic, Whitespace$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vs.py	/^     Operator, Generic$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/xcode.py	/^     Number, Operator, Literal$/;"	i
String	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^String      = Literal.String$/;"	v
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/__init__.py	/^from pygments.util import StringIO, BytesIO$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    StringIO, string_types, iteritems$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^    iteritems$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^    from io import StringIO, BytesIO$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^    import StringIO, cStringIO$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/__init__.py	/^from pygments.util import StringIO, BytesIO$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    StringIO, string_types, iteritems$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^    iteritems$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^    from io import StringIO, BytesIO$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^    import StringIO, cStringIO$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^    from cStringIO import StringIO$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^    from io import StringIO$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^    from io import StringIO$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from StringIO import StringIO$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from io import StringIO$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    import StringIO$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    StringIO = io.StringIO$/;"	v
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    import cStringIO as StringIO$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decimal.py	/^from simplejson.compat import StringIO, reload_module$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decode.py	/^from simplejson.compat import StringIO$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^from simplejson.compat import StringIO, long_type, b, binary_type, PY3$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_indent.py	/^from simplejson.compat import StringIO$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_iterable.py	/^from StringIO import StringIO$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^from simplejson.compat import StringIO$/;"	i
StringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tuple.py	/^from simplejson.compat import StringIO$/;"	i
StripAccellerator	plugged/ingo-library/autoload/ingo/query.vim	/^function! s:StripAccellerator( choice )$/;"	f
StripLeadingSpaces	plugged/tabular/autoload/tabular.vim	/^function! s:StripLeadingSpaces(string)$/;"	f
StripTrailingSpaces	plugged/tabular/autoload/tabular.vim	/^function! s:StripTrailingSpaces(string)$/;"	f
StripWhitespace	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:StripWhitespace(str)$/;"	f
Strlen	plugged/tabular/autoload/tabular.vim	/^  function! s:Strlen(string)$/;"	f
StudioClasses	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    StudioClasses = ('action cell', 'alert reply', 'application', 'box',$/;"	v	class:AppleScriptLexer
StudioClasses	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    StudioClasses = ('action cell', 'alert reply', 'application', 'box',$/;"	v	class:AppleScriptLexer
StudioCommands	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    StudioCommands = ('animate', 'append', 'call method', 'center',$/;"	v	class:AppleScriptLexer
StudioCommands	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    StudioCommands = ('animate', 'append', 'call method', 'center',$/;"	v	class:AppleScriptLexer
StudioEvents	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    StudioEvents = ('accept outline drop', 'accept table drop', 'action',$/;"	v	class:AppleScriptLexer
StudioEvents	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    StudioEvents = ('accept outline drop', 'accept table drop', 'action',$/;"	v	class:AppleScriptLexer
StudioProperties	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    StudioProperties = ('accepts arrow key', 'action method', 'active',$/;"	v	class:AppleScriptLexer
StudioProperties	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    StudioProperties = ('accepts arrow key', 'action method', 'active',$/;"	v	class:AppleScriptLexer
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/style.py	/^class Style(object):$/;"	c
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/autumn.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/borland.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/bw.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/colorful.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/default.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/emacs.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/friendly.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/fruity.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/igor.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/manni.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/monokai.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/murphy.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/native.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/pastie.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/perldoc.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/rrt.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/tango.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/trac.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vim.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vs.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/xcode.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/style.py	/^class Style(object):$/;"	c
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/autumn.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/borland.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/bw.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/colorful.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/default.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/emacs.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/friendly.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/fruity.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/igor.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/manni.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/monokai.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/murphy.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/native.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/pastie.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/perldoc.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/rrt.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/tango.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/trac.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vim.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vs.py	/^from pygments.style import Style$/;"	i
Style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/xcode.py	/^from pygments.style import Style$/;"	i
StyleMeta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/style.py	/^class StyleMeta(type):$/;"	c
StyleMeta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/style.py	/^class StyleMeta(type):$/;"	c
SubjectAltName	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^class SubjectAltName(BaseSubjectAltName):$/;"	c
Submatch	plugged/ingo-library/autoload/ingo/subst/expr/emulation.vim	/^function! s:Submatch( idx )$/;"	f
Subversion	plugged/vim-wakatime/plugin/packages/wakatime/project.py	/^from .projects.subversion import Subversion$/;"	i
Subversion	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^class Subversion(BaseProject):$/;"	c
SumatraInPath	plugged/Nvim-R/R/windows.vim	/^function SumatraInPath()$/;"	f
Support	plugged/smartpairs.vim/spec/support/vim.rb	/^module Support$/;"	m
SvgFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/svg.py	/^class SvgFormatter(Formatter):$/;"	c
SvgFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/svg.py	/^class SvgFormatter(Formatter):$/;"	c
SwiftLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^class SwiftLexer(RegexLexer):$/;"	c
SwiftLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^class SwiftLexer(RegexLexer):$/;"	c
SwigLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^class SwigLexer(CppLexer):$/;"	c
SwigLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^class SwigLexer(CppLexer):$/;"	c
SwitchWindow	plugged/vim-coffee-script/ftplugin/coffee.vim	/^function! s:SwitchWindow(buf)$/;"	f
SyncTeX_GetMaster	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! SyncTeX_GetMaster()$/;"	f
SyncTeX_SetPID	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! SyncTeX_SetPID(spid)$/;"	f
SyncTeX_backward	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! SyncTeX_backward(fname, ln)$/;"	f
SyncTeX_forward	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! SyncTeX_forward(...)$/;"	f
SyncTeX_forward_Zathura	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! SyncTeX_forward_Zathura(basenm, texln, vrbs)$/;"	f
SyncTeX_readconc	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^function! SyncTeX_readconc(basenm)$/;"	f
SyncView	plugged/Nvim-R/R/synctex_evince_forward.py	/^    def SyncView(self, input_file, data):$/;"	m	class:EvinceWindowProxy
SyntasticAutoloclistNotifier.AutoToggle	plugged/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.AutoToggle(loclist) abort " {{{2$/;"	f
SyntasticAutoloclistNotifier.New	plugged/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.New() abort " {{{2$/;"	f
SyntasticAutoloclistNotifier.refresh	plugged/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticBalloonsExprNotifier	plugged/syntastic/plugin/syntastic/balloons.vim	/^function! SyntasticBalloonsExprNotifier() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.New	plugged/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.New() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.enabled	plugged/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.enabled() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.refresh	plugged/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticBalloonsNotifier.reset	plugged/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticCheck	plugged/syntastic/plugin/syntastic.vim	/^command! -nargs=* -complete=custom,s:CompleteCheckerName SyntasticCheck call SyntasticCheck(<f-args>)$/;"	c
SyntasticCheck	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticCheck(...) abort " {{{2$/;"	f
SyntasticChecker.New	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.New(args) abort " {{{2$/;"	f
SyntasticChecker._getOpt	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._getOpt(opts, basename, name, default) abort " {{{2$/;"	f
SyntasticChecker._populateHighlightRegexes	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._populateHighlightRegexes(errors) abort " {{{2$/;"	f
SyntasticChecker._quietMessages	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._quietMessages(errors) abort " {{{2$/;"	f
SyntasticChecker.getExec	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getExec() abort " {{{2$/;"	f
SyntasticChecker.getExecEscaped	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getExecEscaped() abort " {{{2$/;"	f
SyntasticChecker.getFiletype	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getFiletype() abort " {{{2$/;"	f
SyntasticChecker.getLocList	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocList() abort " {{{2$/;"	f
SyntasticChecker.getLocListRaw	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocListRaw() abort " {{{2$/;"	f
SyntasticChecker.getName	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getName() abort " {{{2$/;"	f
SyntasticChecker.getVersion	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getVersion(...) abort " {{{2$/;"	f
SyntasticChecker.isAvailable	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.isAvailable() abort " {{{2$/;"	f
SyntasticChecker.log	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.log(msg, ...) abort " {{{2$/;"	f
SyntasticChecker.makeprgBuild	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.makeprgBuild(opts) abort " {{{2$/;"	f
SyntasticChecker.setVersion	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.setVersion(version) abort " {{{2$/;"	f
SyntasticChecker.setWantSort	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.setWantSort(val) abort " {{{2$/;"	f
SyntasticChecker.syncExec	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.syncExec() dict " {{{2$/;"	f
SyntasticChecker.wantSort	plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.wantSort() abort " {{{2$/;"	f
SyntasticCursorNotifier.New	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.New() abort " {{{2$/;"	f
SyntasticCursorNotifier.enabled	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.enabled() abort " {{{2$/;"	f
SyntasticCursorNotifier.refresh	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticCursorNotifier.reset	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticErrors	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticErrors() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.New	plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.New() abort " {{{2$/;"	f
SyntasticHighlightingNotifier._reset	plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier._reset() abort " {{{2$/;"	f
SyntasticHighlightingNotifier._setup	plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier._setup() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.enabled	plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.enabled() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.refresh	plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticHighlightingNotifier.reset	plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticInfo	plugged/syntastic/plugin/syntastic.vim	/^command! -nargs=? -complete=custom,s:CompleteFiletypes   SyntasticInfo  call SyntasticInfo(<f-args>)$/;"	c
SyntasticInfo	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticInfo(...) abort " {{{2$/;"	f
SyntasticJavacEditClasspath	plugged/syntastic/syntax_checkers/java/javac.vim	/^command! SyntasticJavacEditClasspath call s:EditClasspath()$/;"	c
SyntasticJavacEditConfig	plugged/syntastic/syntax_checkers/java/javac.vim	/^    command! SyntasticJavacEditConfig call s:EditConfig()$/;"	c
SyntasticLoclist.New	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.New(rawLoclist) abort " {{{2$/;"	f
SyntasticLoclist.balloons	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.balloons() abort " {{{2$/;"	f
SyntasticLoclist.copyRaw	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.copyRaw() abort " {{{2$/;"	f
SyntasticLoclist.current	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.current() abort " {{{2$/;"	f
SyntasticLoclist.decorate	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.decorate(tag) abort " {{{2$/;"	f
SyntasticLoclist.deploy	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.deploy() abort " {{{2$/;"	f
SyntasticLoclist.destroy	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.destroy() abort " {{{2$/;"	f
SyntasticLoclist.errors	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.errors() abort " {{{2$/;"	f
SyntasticLoclist.extend	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.extend(other) abort " {{{2$/;"	f
SyntasticLoclist.filter	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.filter(filters) abort " {{{2$/;"	f
SyntasticLoclist.getBuffers	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getBuffers() abort " {{{2$/;"	f
SyntasticLoclist.getCursorColumns	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getCursorColumns() abort " {{{2$/;"	f
SyntasticLoclist.getFirstError	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getFirstError(...) abort " {{{2$/;"	f
SyntasticLoclist.getName	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getName() abort " {{{2$/;"	f
SyntasticLoclist.getOwner	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getOwner() abort " {{{2$/;"	f
SyntasticLoclist.getRaw	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getRaw() abort " {{{2$/;"	f
SyntasticLoclist.getStatuslineFlag	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getStatuslineFlag() abort " {{{2$/;"	f
SyntasticLoclist.hasErrorsOrWarningsToDisplay	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.hasErrorsOrWarningsToDisplay() abort " {{{2$/;"	f
SyntasticLoclist.isEmpty	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isEmpty() abort " {{{2$/;"	f
SyntasticLoclist.isNewerThan	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isNewerThan(stamp) abort " {{{2$/;"	f
SyntasticLoclist.messages	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.messages(buf) abort " {{{2$/;"	f
SyntasticLoclist.setName	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setName(name) abort " {{{2$/;"	f
SyntasticLoclist.setOwner	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setOwner(buffer) abort " {{{2$/;"	f
SyntasticLoclist.setloclist	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setloclist() abort " {{{2$/;"	f
SyntasticLoclist.show	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.show() abort " {{{2$/;"	f
SyntasticLoclist.sort	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.sort() abort " {{{2$/;"	f
SyntasticLoclist.warnings	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.warnings() abort " {{{2$/;"	f
SyntasticLoclistHide	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! SyntasticLoclistHide() abort " {{{2$/;"	f
SyntasticMake	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticMake(options) abort " {{{2$/;"	f
SyntasticModeMap.Instance	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.Instance() abort " {{{2$/;"	f
SyntasticModeMap._isOneFiletypeActive	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._isOneFiletypeActive(filetypes) abort " {{{2$/;"	f
SyntasticModeMap._noFiletypesArePassive	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._noFiletypesArePassive(filetypes) abort " {{{2$/;"	f
SyntasticModeMap.allowsAutoChecking	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.allowsAutoChecking(filetype) abort " {{{2$/;"	f
SyntasticModeMap.doAutoChecking	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.doAutoChecking() abort " {{{2$/;"	f
SyntasticModeMap.echoMode	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.echoMode() abort " {{{2$/;"	f
SyntasticModeMap.isPassive	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.isPassive() abort " {{{2$/;"	f
SyntasticModeMap.modeInfo	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.modeInfo(filetypes) abort " {{{2$/;"	f
SyntasticModeMap.synch	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.synch() abort " {{{2$/;"	f
SyntasticModeMap.toggleMode	plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.toggleMode() abort " {{{2$/;"	f
SyntasticNotifiers.Instance	plugged/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.Instance() abort " {{{2$/;"	f
SyntasticNotifiers._initNotifiers	plugged/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers._initNotifiers() abort " {{{2$/;"	f
SyntasticNotifiers.refresh	plugged/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.refresh(loclist) abort " {{{2$/;"	f
SyntasticNotifiers.reset	plugged/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.reset(loclist) abort " {{{2$/;"	f
SyntasticRefreshCursor	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! SyntasticRefreshCursor() abort " {{{2$/;"	f
SyntasticRegistry.CreateAndRegisterChecker	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.CreateAndRegisterChecker(args) abort " {{{2$/;"	f
SyntasticRegistry.Instance	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.Instance() abort " {{{2$/;"	f
SyntasticRegistry._checkDeprecation	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._checkDeprecation(filetype) abort " {{{2$/;"	f
SyntasticRegistry._filterCheckersByName	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByName(checkers_map, list) abort " {{{2$/;"	f
SyntasticRegistry._loadCheckersFor	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._loadCheckersFor(filetype) abort " {{{2$/;"	f
SyntasticRegistry._registerChecker	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._registerChecker(checker) abort " {{{2$/;"	f
SyntasticRegistry.echoInfoFor	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.echoInfoFor(ftalias_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckers	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckers(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckersAvailable	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckersAvailable(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getKnownFiletypes	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getKnownFiletypes() abort " {{{2$/;"	f
SyntasticRegistry.getNamesOfAvailableCheckers	plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getNamesOfAvailableCheckers(ftalias) abort " {{{2$/;"	f
SyntasticReset	plugged/syntastic/plugin/syntastic.vim	/^command! SyntasticReset      call SyntasticReset()$/;"	c
SyntasticReset	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticReset() abort " {{{2$/;"	f
SyntasticSetLoclist	plugged/syntastic/plugin/syntastic.vim	/^command! SyntasticSetLoclist call SyntasticSetLoclist()$/;"	c
SyntasticSetLoclist	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticSetLoclist() abort " {{{2$/;"	f
SyntasticSignsNotifier.New	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.New() abort " {{{2$/;"	f
SyntasticSignsNotifier._bufSignIds	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._bufSignIds() abort " {{{2$/;"	f
SyntasticSignsNotifier._removeSigns	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._removeSigns(ids) abort " {{{2$/;"	f
SyntasticSignsNotifier._setup	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._setup() abort " {{{2$/;"	f
SyntasticSignsNotifier._signErrors	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._signErrors(loclist) abort " {{{2$/;"	f
SyntasticSignsNotifier.enabled	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.enabled() abort " {{{2$/;"	f
SyntasticSignsNotifier.refresh	plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticStatuslineFlag	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticStatuslineFlag() abort " {{{2$/;"	f
SyntasticToggleMode	plugged/syntastic/plugin/syntastic.vim	/^command! SyntasticToggleMode call SyntasticToggleMode()$/;"	c
SyntasticToggleMode	plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticToggleMode() abort " {{{2$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex	plugged/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetLocList	plugged/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_GetLocList	plugged/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_IsAvailable	plugged/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_apiblueprint_snowcrash_GetLocList	plugged/syntastic/syntax_checkers/apiblueprint/snowcrash.vim	/^function! SyntaxCheckers_apiblueprint_snowcrash_GetLocList() dict$/;"	f
SyntaxCheckers_applescript_osacompile_GetLocList	plugged/syntastic/syntax_checkers/applescript/osacompile.vim	/^function! SyntaxCheckers_applescript_osacompile_GetLocList() dict$/;"	f
SyntaxCheckers_asciidoc_asciidoc_GetLocList	plugged/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^function! SyntaxCheckers_asciidoc_asciidoc_GetLocList() dict$/;"	f
SyntaxCheckers_asm_gcc_GetLocList	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^function! SyntaxCheckers_asm_gcc_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_asm_gcc_IsAvailable	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^function! SyntaxCheckers_asm_gcc_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_bemhtml_bemhtmllint_GetLocList	plugged/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^function SyntaxCheckers_bemhtml_bemhtmllint_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_GetHighlightRegex	plugged/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_bro_bro_GetLocList	plugged/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_IsAvailable	plugged/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_IsAvailable() dict$/;"	f
SyntaxCheckers_c_avrgcc_GetLocList	plugged/syntastic/syntax_checkers/c/avrgcc.vim	/^function! SyntaxCheckers_c_avrgcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_GetLocList	plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_IsAvailable	plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_IsAvailable() dict$/;"	f
SyntaxCheckers_c_clang_check_GetLocList	plugged/syntastic/syntax_checkers/c/clang_check.vim	/^function! SyntaxCheckers_c_clang_check_GetLocList() dict$/;"	f
SyntaxCheckers_c_clang_tidy_GetLocList	plugged/syntastic/syntax_checkers/c/clang_tidy.vim	/^function! SyntaxCheckers_c_clang_tidy_GetLocList() dict$/;"	f
SyntaxCheckers_c_cppcheck_GetLocList	plugged/syntastic/syntax_checkers/c/cppcheck.vim	/^function! SyntaxCheckers_c_cppcheck_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_GetLocList	plugged/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_IsAvailable	plugged/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_c_make_GetLocList	plugged/syntastic/syntax_checkers/c/make.vim	/^function! SyntaxCheckers_c_make_GetLocList() dict$/;"	f
SyntaxCheckers_c_oclint_GetLocList	plugged/syntastic/syntax_checkers/c/oclint.vim	/^function! SyntaxCheckers_c_oclint_GetLocList() dict$/;"	f
SyntaxCheckers_c_pc_lint_GetLocList	plugged/syntastic/syntax_checkers/c/pc_lint.vim	/^function! SyntaxCheckers_c_pc_lint_GetLocList() dict$/;"	f
SyntaxCheckers_c_sparse_GetLocList	plugged/syntastic/syntax_checkers/c/sparse.vim	/^function! SyntaxCheckers_c_sparse_GetLocList() dict$/;"	f
SyntaxCheckers_c_splint_GetLocList	plugged/syntastic/syntax_checkers/c/splint.vim	/^function! SyntaxCheckers_c_splint_GetLocList() dict$/;"	f
SyntaxCheckers_cabal_cabal_GetHighlightRegex	plugged/syntastic/syntax_checkers/cabal/cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_cabal_cabal_GetLocList	plugged/syntastic/syntax_checkers/cabal/cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetLocList() dict$/;"	f
SyntaxCheckers_chef_foodcritic_GetLocList	plugged/syntastic/syntax_checkers/chef/foodcritic.vim	/^function! SyntaxCheckers_chef_foodcritic_GetLocList() dict$/;"	f
SyntaxCheckers_co_coco_GetLocList	plugged/syntastic/syntax_checkers/co/coco.vim	/^function! SyntaxCheckers_co_coco_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_GetLocList	plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_IsAvailable	plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffee_GetLocList	plugged/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_GetLocList() dict$/;"	f
SyntaxCheckers_coffee_coffee_IsAvailable	plugged/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffeelint_GetLocList	plugged/syntastic/syntax_checkers/coffee/coffeelint.vim	/^function! SyntaxCheckers_coffee_coffeelint_GetLocList() dict$/;"	f
SyntaxCheckers_coq_coqtop_GetLocList	plugged/syntastic/syntax_checkers/coq/coqtop.vim	/^function! SyntaxCheckers_coq_coqtop_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_cpplint_GetLocList	plugged/syntastic/syntax_checkers/cpp/cpplint.vim	/^function! SyntaxCheckers_cpp_cpplint_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_GetLocList	plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_IsAvailable	plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_cpp_verapp_GetLocList	plugged/syntastic/syntax_checkers/cpp/verapp.vim	/^function! SyntaxCheckers_cpp_verapp_GetLocList() dict$/;"	f
SyntaxCheckers_cs_mcs_GetLocList	plugged/syntastic/syntax_checkers/cs/mcs.vim	/^function! SyntaxCheckers_cs_mcs_GetLocList() dict$/;"	f
SyntaxCheckers_css_csslint_GetLocList	plugged/syntastic/syntax_checkers/css/csslint.vim	/^function! SyntaxCheckers_css_csslint_GetLocList() dict$/;"	f
SyntaxCheckers_css_prettycss_GetHighlightRegex	plugged/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_css_prettycss_GetLocList	plugged/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetLocList() dict$/;"	f
SyntaxCheckers_cucumber_cucumber_GetLocList	plugged/syntastic/syntax_checkers/cucumber/cucumber.vim	/^function! SyntaxCheckers_cucumber_cucumber_GetLocList() dict$/;"	f
SyntaxCheckers_cuda_nvcc_GetLocList	plugged/syntastic/syntax_checkers/cuda/nvcc.vim	/^function! SyntaxCheckers_cuda_nvcc_GetLocList() dict$/;"	f
SyntaxCheckers_d_dmd_GetLocList	plugged/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_GetLocList() dict$/;"	f
SyntaxCheckers_d_dmd_IsAvailable	plugged/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_IsAvailable() dict$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex	plugged/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex(error)$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetLocList	plugged/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetLocList() dict$/;"	f
SyntaxCheckers_docbk_igor_GetLocList	plugged/syntastic/syntax_checkers/docbk/igor.vim	/^function! SyntaxCheckers_docbk_igor_GetLocList() dict$/;"	f
SyntaxCheckers_dustjs_swiffer_GetLocList	plugged/syntastic/syntax_checkers/dustjs/swiffer.vim	/^function! SyntaxCheckers_dustjs_swiffer_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_GetLocList	plugged/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_IsAvailable	plugged/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_IsAvailable() dict$/;"	f
SyntaxCheckers_erlang_escript_GetLocList	plugged/syntastic/syntax_checkers/erlang/escript.vim	/^function! SyntaxCheckers_erlang_escript_GetLocList() dict$/;"	f
SyntaxCheckers_erlang_syntaxerl_GetLocList	plugged/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^function! SyntaxCheckers_erlang_syntaxerl_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_GetLocList	plugged/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_IsAvailable	plugged/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_IsAvailable() dict$/;"	f
SyntaxCheckers_fortran_gfortran_GetLocList	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_fortran_gfortran_IsAvailable	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_glsl_cgc_GetLocList	plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^function! SyntaxCheckers_glsl_cgc_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_go_go_GetLocList	plugged/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_GetLocList() dict$/;"	f
SyntaxCheckers_go_go_IsAvailable	plugged/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_IsAvailable() dict$/;"	f
SyntaxCheckers_go_gofmt_GetLocList	plugged/syntastic/syntax_checkers/go/gofmt.vim	/^function! SyntaxCheckers_go_gofmt_GetLocList() dict$/;"	f
SyntaxCheckers_go_golint_GetLocList	plugged/syntastic/syntax_checkers/go/golint.vim	/^function! SyntaxCheckers_go_golint_GetLocList() dict$/;"	f
SyntaxCheckers_go_gotype_GetLocList	plugged/syntastic/syntax_checkers/go/gotype.vim	/^function! SyntaxCheckers_go_gotype_GetLocList() dict$/;"	f
SyntaxCheckers_go_govet_GetLocList	plugged/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_GetLocList() dict$/;"	f
SyntaxCheckers_go_govet_IsAvailable	plugged/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_IsAvailable() dict$/;"	f
SyntaxCheckers_haml_haml_GetLocList	plugged/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_GetLocList() dict$/;"	f
SyntaxCheckers_haml_haml_IsAvailable	plugged/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_IsAvailable() dict$/;"	f
SyntaxCheckers_haml_haml_lint_GetLocList	plugged/syntastic/syntax_checkers/haml/haml_lint.vim	/^function! SyntaxCheckers_haml_haml_lint_GetLocList() dict$/;"	f
SyntaxCheckers_handlebars_handlebars_GetLocList	plugged/syntastic/syntax_checkers/handlebars/handlebars.vim	/^function! SyntaxCheckers_handlebars_handlebars_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_ghc_mod_GetLocList	plugged/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_ghc_mod_IsAvailable	plugged/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_IsAvailable() dict$/;"	f
SyntaxCheckers_haskell_hdevtools_GetLocList	plugged/syntastic/syntax_checkers/haskell/hdevtools.vim	/^function! SyntaxCheckers_haskell_hdevtools_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_hlint_GetLocList	plugged/syntastic/syntax_checkers/haskell/hlint.vim	/^function! SyntaxCheckers_haskell_hlint_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_scan_GetLocList	plugged/syntastic/syntax_checkers/haskell/scan.vim	/^function! SyntaxCheckers_haskell_scan_GetLocList() dict$/;"	f
SyntaxCheckers_haxe_haxe_GetLocList	plugged/syntastic/syntax_checkers/haxe/haxe.vim	/^function! SyntaxCheckers_haxe_haxe_GetLocList() dict$/;"	f
SyntaxCheckers_hss_hss_GetLocList	plugged/syntastic/syntax_checkers/hss/hss.vim	/^function! SyntaxCheckers_hss_hss_GetLocList() dict$/;"	f
SyntaxCheckers_html_jshint_GetLocList	plugged/syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_html_jshint_IsAvailable	plugged/syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_html_tidy_GetLocList	plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! SyntaxCheckers_html_tidy_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_html_validator_GetLocList	plugged/syntastic/syntax_checkers/html/validator.vim	/^function! SyntaxCheckers_html_validator_GetLocList() dict$/;"	f
SyntaxCheckers_html_w3_GetLocList	plugged/syntastic/syntax_checkers/html/w3.vim	/^function! SyntaxCheckers_html_w3_GetLocList() dict$/;"	f
SyntaxCheckers_java_checkstyle_GetLocList	plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_GetLocList() dict$/;"	f
SyntaxCheckers_java_checkstyle_IsAvailable	plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_IsAvailable() dict$/;"	f
SyntaxCheckers_java_javac_GetLocList	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_java_javac_IsAvailable	plugged/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_javascript_closurecompiler_GetLocList	plugged/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_closurecompiler_IsAvailable	plugged/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_eslint_GetLocList	plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^function! SyntaxCheckers_javascript_eslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_eslint_IsAvailable	plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^function! SyntaxCheckers_javascript_eslint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_flow_GetLocList	plugged/syntastic/syntax_checkers/javascript/flow.vim	/^function! SyntaxCheckers_javascript_flow_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_flow_IsAvailable	plugged/syntastic/syntax_checkers/javascript/flow.vim	/^function! SyntaxCheckers_javascript_flow_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_gjslint_GetLocList	plugged/syntastic/syntax_checkers/javascript/gjslint.vim	/^function! SyntaxCheckers_javascript_gjslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jscs_GetLocList	plugged/syntastic/syntax_checkers/javascript/jscs.vim	/^function! SyntaxCheckers_javascript_jscs_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jshint_GetLocList	plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jshint_IsAvailable	plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_jsl_GetLocList	plugged/syntastic/syntax_checkers/javascript/jsl.vim	/^function! SyntaxCheckers_javascript_jsl_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jslint_GetHighlightRegex	plugged/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_javascript_jslint_GetLocList	plugged/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jsxhint_GetLocList	plugged/syntastic/syntax_checkers/javascript/jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jsxhint_IsAvailable	plugged/syntastic/syntax_checkers/javascript/jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_standard_GetLocList	plugged/syntastic/syntax_checkers/javascript/standard.vim	/^function! SyntaxCheckers_javascript_standard_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_standard_IsAvailable	plugged/syntastic/syntax_checkers/javascript/standard.vim	/^function! SyntaxCheckers_javascript_standard_IsAvailable() dict$/;"	f
SyntaxCheckers_json_jsonlint_GetLocList	plugged/syntastic/syntax_checkers/json/jsonlint.vim	/^function! SyntaxCheckers_json_jsonlint_GetLocList() dict$/;"	f
SyntaxCheckers_json_jsonval_GetLocList	plugged/syntastic/syntax_checkers/json/jsonval.vim	/^function! SyntaxCheckers_json_jsonval_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_GetLocList	plugged/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_IsAvailable	plugged/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_IsAvailable() dict$/;"	f
SyntaxCheckers_less_recess_GetLocList	plugged/syntastic/syntax_checkers/less/recess.vim	/^function! SyntaxCheckers_less_recess_GetLocList() dict$/;"	f
SyntaxCheckers_lex_flex_GetHighlightRegex	plugged/syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lex_flex_GetLocList	plugged/syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetLocList() dict$/;"	f
SyntaxCheckers_limbo_limbo_GetLocList	plugged/syntastic/syntax_checkers/limbo/limbo.vim	/^function! SyntaxCheckers_limbo_limbo_GetLocList() dict$/;"	f
SyntaxCheckers_lisp_clisp_GetLocList	plugged/syntastic/syntax_checkers/lisp/clisp.vim	/^function! SyntaxCheckers_lisp_clisp_GetLocList() dict$/;"	f
SyntaxCheckers_llvm_llvm_GetLocList	plugged/syntastic/syntax_checkers/llvm/llvm.vim	/^function! SyntaxCheckers_llvm_llvm_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luac_GetHighlightRegex	plugged/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetHighlightRegex(pos)$/;"	f
SyntaxCheckers_lua_luac_GetLocList	plugged/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luacheck_GetHighlightRegex	plugged/syntastic/syntax_checkers/lua/luacheck.vim	/^function! SyntaxCheckers_lua_luacheck_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lua_luacheck_GetLocList	plugged/syntastic/syntax_checkers/lua/luacheck.vim	/^function! SyntaxCheckers_lua_luacheck_GetLocList() dict$/;"	f
SyntaxCheckers_markdown_mdl_GetLocList	plugged/syntastic/syntax_checkers/markdown/mdl.vim	/^function! SyntaxCheckers_markdown_mdl_GetLocList() dict$/;"	f
SyntaxCheckers_matlab_mlint_GetLocList	plugged/syntastic/syntax_checkers/matlab/mlint.vim	/^function! SyntaxCheckers_matlab_mlint_GetLocList() dict$/;"	f
SyntaxCheckers_mercury_mmc_GetLocList	plugged/syntastic/syntax_checkers/mercury/mmc.vim	/^function! SyntaxCheckers_mercury_mmc_GetLocList() dict$/;"	f
SyntaxCheckers_nasm_nasm_GetLocList	plugged/syntastic/syntax_checkers/nasm/nasm.vim	/^function! SyntaxCheckers_nasm_nasm_GetLocList() dict$/;"	f
SyntaxCheckers_nroff_mandoc_GetLocList	plugged/syntastic/syntax_checkers/nroff/mandoc.vim	/^function! SyntaxCheckers_nroff_mandoc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_GetLocList	plugged/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_IsAvailable	plugged/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_objcpp_gcc_GetLocList	plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objcpp_gcc_IsAvailable	plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_ocaml_camlp4o_GetLocList	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_ocaml_camlp4o_IsAvailable	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_perl_perl_GetLocList	plugged/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_GetLocList() dict$/;"	f
SyntaxCheckers_perl_perl_IsAvailable	plugged/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_IsAvailable() dict$/;"	f
SyntaxCheckers_perl_perlcritic_GetLocList	plugged/syntastic/syntax_checkers/perl/perlcritic.vim	/^function! SyntaxCheckers_perl_perlcritic_GetLocList() dict$/;"	f
SyntaxCheckers_php_php_GetHighlightRegex	plugged/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_php_GetLocList	plugged/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpcs_GetLocList	plugged/syntastic/syntax_checkers/php/phpcs.vim	/^function! SyntaxCheckers_php_phpcs_GetLocList() dict$/;"	f
SyntaxCheckers_php_phplint_GetHighlightRegex	plugged/syntastic/syntax_checkers/php/phplint.vim	/^function! SyntaxCheckers_php_phplint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phplint_GetLocList	plugged/syntastic/syntax_checkers/php/phplint.vim	/^function! SyntaxCheckers_php_phplint_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpmd_GetHighlightRegex	plugged/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phpmd_GetLocList	plugged/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetLocList() dict$/;"	f
SyntaxCheckers_po_msgfmt_GetHighlightRegex	plugged/syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_po_msgfmt_GetLocList	plugged/syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetLocList() dict$/;"	f
SyntaxCheckers_pod_podchecker_GetLocList	plugged/syntastic/syntax_checkers/pod/podchecker.vim	/^function! SyntaxCheckers_pod_podchecker_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppet_GetLocList	plugged/syntastic/syntax_checkers/puppet/puppet.vim	/^function! SyntaxCheckers_puppet_puppet_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_GetLocList	plugged/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_IsAvailable	plugged/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_IsAvailable() dict$/;"	f
SyntaxCheckers_python_flake8_GetHighlightRegex	plugged/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_flake8_GetLocList	plugged/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetLocList() dict$/;"	f
SyntaxCheckers_python_frosted_GetLocList	plugged/syntastic/syntax_checkers/python/frosted.vim	/^function! SyntaxCheckers_python_frosted_GetLocList() dict$/;"	f
SyntaxCheckers_python_mypy_GetLocList	plugged/syntastic/syntax_checkers/python/mypy.vim	/^function! SyntaxCheckers_python_mypy_GetLocList() dict$/;"	f
SyntaxCheckers_python_pep257_GetLocList	plugged/syntastic/syntax_checkers/python/pep257.vim	/^function! SyntaxCheckers_python_pep257_GetLocList() dict$/;"	f
SyntaxCheckers_python_pep8_GetLocList	plugged/syntastic/syntax_checkers/python/pep8.vim	/^function! SyntaxCheckers_python_pep8_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_GetLocList	plugged/syntastic/syntax_checkers/python/prospector.vim	/^function! SyntaxCheckers_python_prospector_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_IsAvailable	plugged/syntastic/syntax_checkers/python/prospector.vim	/^function! SyntaxCheckers_python_prospector_IsAvailable() dict$/;"	f
SyntaxCheckers_python_py3kwarn_GetLocList	plugged/syntastic/syntax_checkers/python/py3kwarn.vim	/^function! SyntaxCheckers_python_py3kwarn_GetLocList() dict$/;"	f
SyntaxCheckers_python_pyflakes_GetHighlightRegex	plugged/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_python_pyflakes_GetLocList	plugged/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylama_GetHighlightRegex	plugged/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_pylama_GetLocList	plugged/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylint_GetLocList	plugged/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylint_IsAvailable	plugged/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_IsAvailable() dict$/;"	f
SyntaxCheckers_python_python_GetLocList	plugged/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_GetLocList() dict$/;"	f
SyntaxCheckers_python_python_IsAvailable	plugged/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_IsAvailable() dict$/;"	f
SyntaxCheckers_r_lint_GetHighlightRegex	plugged/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_lint_GetLocList	plugged/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_GetLocList() dict$/;"	f
SyntaxCheckers_r_lint_IsAvailable	plugged/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_r_svtools_GetHighlightRegex	plugged/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_svtools_GetLocList	plugged/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_GetLocList() dict$/;"	f
SyntaxCheckers_r_svtools_IsAvailable	plugged/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_GetLocList	plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_GetLocList() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_IsAvailable	plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_racket_GetLocList	plugged/syntastic/syntax_checkers/racket/racket.vim	/^function! SyntaxCheckers_racket_racket_GetLocList() dict$/;"	f
SyntaxCheckers_rnc_rnv_GetLocList	plugged/syntastic/syntax_checkers/rnc/rnv.vim	/^function! SyntaxCheckers_rnc_rnv_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_GetLocList	plugged/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rstcheck_GetLocList	plugged/syntastic/syntax_checkers/rst/rstcheck.vim	/^function! SyntaxCheckers_rst_rstcheck_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_jruby_GetLocList	plugged/syntastic/syntax_checkers/ruby/jruby.vim	/^function! SyntaxCheckers_ruby_jruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_macruby_GetLocList	plugged/syntastic/syntax_checkers/ruby/macruby.vim	/^function! SyntaxCheckers_ruby_macruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_GetHighlightRegex	plugged/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_ruby_mri_GetLocList	plugged/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_IsAvailable	plugged/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_reek_GetLocList	plugged/syntastic/syntax_checkers/ruby/reek.vim	/^function! SyntaxCheckers_ruby_reek_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_reek_IsAvailable	plugged/syntastic/syntax_checkers/ruby/reek.vim	/^function! SyntaxCheckers_ruby_reek_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubocop_GetLocList	plugged/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_rubocop_IsAvailable	plugged/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubylint_GetLocList	plugged/syntastic/syntax_checkers/ruby/rubylint.vim	/^function! SyntaxCheckers_ruby_rubylint_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sass_GetLocList	plugged/syntastic/syntax_checkers/sass/sass.vim	/^function! SyntaxCheckers_sass_sass_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sassc_GetLocList	plugged/syntastic/syntax_checkers/sass/sassc.vim	/^function! SyntaxCheckers_sass_sassc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_fsc_GetLocList	plugged/syntastic/syntax_checkers/scala/fsc.vim	/^function! SyntaxCheckers_scala_fsc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalac_GetLocList	plugged/syntastic/syntax_checkers/scala/scalac.vim	/^function! SyntaxCheckers_scala_scalac_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_GetLocList	plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_IsAvailable	plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_IsAvailable() dict$/;"	f
SyntaxCheckers_scss_scss_lint_GetLocList	plugged/syntastic/syntax_checkers/scss/scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_GetLocList() dict$/;"	f
SyntaxCheckers_scss_scss_lint_IsAvailable	plugged/syntastic/syntax_checkers/scss/scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_sh_bashate_GetLocList	plugged/syntastic/syntax_checkers/sh/bashate.vim	/^function! SyntaxCheckers_sh_bashate_GetLocList() dict$/;"	f
SyntaxCheckers_sh_checkbashisms_GetLocList	plugged/syntastic/syntax_checkers/sh/checkbashisms.vim	/^function! SyntaxCheckers_sh_checkbashisms_GetLocList() dict$/;"	f
SyntaxCheckers_sh_sh_GetLocList	plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_sh_sh_IsAvailable	plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_sh_shellcheck_GetLocList	plugged/syntastic/syntax_checkers/sh/shellcheck.vim	/^function! SyntaxCheckers_sh_shellcheck_GetLocList() dict$/;"	f
SyntaxCheckers_slim_slimrb_GetLocList	plugged/syntastic/syntax_checkers/slim/slimrb.vim	/^function! SyntaxCheckers_slim_slimrb_GetLocList() dict$/;"	f
SyntaxCheckers_sml_smlnj_GetLocList	plugged/syntastic/syntax_checkers/sml/smlnj.vim	/^function! SyntaxCheckers_sml_smlnj_GetLocList() dict$/;"	f
SyntaxCheckers_spec_rpmlint_GetLocList	plugged/syntastic/syntax_checkers/spec/rpmlint.vim	/^function! SyntaxCheckers_spec_rpmlint_GetLocList() dict$/;"	f
SyntaxCheckers_tcl_nagelfar_GetLocList	plugged/syntastic/syntax_checkers/tcl/nagelfar.vim	/^function! SyntaxCheckers_tcl_nagelfar_GetLocList() dict$/;"	f
SyntaxCheckers_tex_chktex_GetLocList	plugged/syntastic/syntax_checkers/tex/chktex.vim	/^function! SyntaxCheckers_tex_chktex_GetLocList() dict$/;"	f
SyntaxCheckers_tex_lacheck_GetLocList	plugged/syntastic/syntax_checkers/tex/lacheck.vim	/^function! SyntaxCheckers_tex_lacheck_GetLocList() dict$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex	plugged/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetLocList	plugged/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetLocList() dict$/;"	f
SyntaxCheckers_text_atdtool_GetHighlightRegex	plugged/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_text_atdtool_GetLocList	plugged/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetLocList() dict$/;"	f
SyntaxCheckers_text_language_check_GetLocList	plugged/syntastic/syntax_checkers/text/language_check.vim	/^function! SyntaxCheckers_text_language_check_GetLocList() dict$/;"	f
SyntaxCheckers_twig_twiglint_GetLocList	plugged/syntastic/syntax_checkers/twig/twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_GetLocList() dict$/;"	f
SyntaxCheckers_typescript_tsc_GetLocList	plugged/syntastic/syntax_checkers/typescript/tsc.vim	/^function! SyntaxCheckers_typescript_tsc_GetLocList() dict$/;"	f
SyntaxCheckers_typescript_tslint_GetHighlightRegex	plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_typescript_tslint_GetLocList	plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetLocList() dict$/;"	f
SyntaxCheckers_vala_valac_GetHighlightRegex	plugged/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetHighlightRegex(pos) " {{{1$/;"	f
SyntaxCheckers_vala_valac_GetLocList	plugged/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_verilog_verilator_GetLocList	plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_IsAvailable	plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_IsAvailable() dict$/;"	f
SyntaxCheckers_vhdl_ghdl_GetLocList	plugged/syntastic/syntax_checkers/vhdl/ghdl.vim	/^function! SyntaxCheckers_vhdl_ghdl_GetLocList() dict$/;"	f
SyntaxCheckers_vim_vimlint_GetHighlightRegex	plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetHighlightRegex(item) " {{{1$/;"	f
SyntaxCheckers_vim_vimlint_GetLocList	plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_vim_vimlint_IsAvailable	plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_vim_vint_GetLocList	plugged/syntastic/syntax_checkers/vim/vint.vim	/^function! SyntaxCheckers_vim_vint_GetLocList() dict$/;"	f
SyntaxCheckers_xhtml_tidy_GetLocList	plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! SyntaxCheckers_xhtml_tidy_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_xml_plutil_GetLocList	plugged/syntastic/syntax_checkers/xml/plutil.vim	/^function! SyntaxCheckers_xml_plutil_GetLocList() dict$/;"	f
SyntaxCheckers_xml_xmllint_GetLocList	plugged/syntastic/syntax_checkers/xml/xmllint.vim	/^function! SyntaxCheckers_xml_xmllint_GetLocList() dict$/;"	f
SyntaxCheckers_yacc_bison_GetLocList	plugged/syntastic/syntax_checkers/yacc/bison.vim	/^function! SyntaxCheckers_yacc_bison_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_jsyaml_GetLocList	plugged/syntastic/syntax_checkers/yaml/jsyaml.vim	/^function! SyntaxCheckers_yaml_jsyaml_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_GetLocList	plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_IsAvailable	plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_IsAvailable() dict$/;"	f
SyntaxCheckers_z80_z80syntaxchecker_GetLocList	plugged/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^function! SyntaxCheckers_z80_z80syntaxchecker_GetLocList() dict$/;"	f
SyntaxCheckers_zpt_zptlint_GetLocList	plugged/syntastic/syntax_checkers/zpt/zptlint.vim	/^function! SyntaxCheckers_zpt_zptlint_GetLocList() dict$/;"	f
SyntaxCheckers_zsh_zsh_GetLocList	plugged/syntastic/syntax_checkers/zsh/zsh.vim	/^function! SyntaxCheckers_zsh_zsh_GetLocList() dict$/;"	f
SyntaxName	plugged/vim-coffee-script/indent/coffee.vim	/^function! s:SyntaxName(lnum, col)$/;"	f
SystemTimeWarning	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class SystemTimeWarning(SecurityWarning):$/;"	c
SystemVerilogLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^class SystemVerilogLexer(RegexLexer):$/;"	c
SystemVerilogLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^class SystemVerilogLexer(RegexLexer):$/;"	c
T	plugged/calendar.vim/autoload/calendar/string.vim	/^fu! s:T(s, w) abort$/;"	f
TARGET	plugged/vimproc.vim/make_android.mak	/^TARGET=autoload\/vimproc_unix.so$/;"	m
TARGET	plugged/vimproc.vim/make_cygwin.mak	/^TARGET=autoload\/vimproc_cygwin.dll$/;"	m
TARGET	plugged/vimproc.vim/make_mac.mak	/^TARGET=autoload\/vimproc_mac.so$/;"	m
TARGET	plugged/vimproc.vim/make_mingw32.mak	/^TARGET=autoload\/vimproc_win32.dll$/;"	m
TARGET	plugged/vimproc.vim/make_mingw64.mak	/^TARGET=autoload\/vimproc_win64.dll$/;"	m
TARGET	plugged/vimproc.vim/make_msvc.mak	/^TARGET = WINNT$/;"	m
TARGET	plugged/vimproc.vim/make_sunos.mak	/^TARGET=autoload\/vimproc_unix.so$/;"	m
TARGET	plugged/vimproc.vim/make_unix.mak	/^TARGET=autoload\/vimproc_$(SUFFIX).so$/;"	m
TC_KW_NAME	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^TC_KW_NAME = Token.Generic.Subheading$/;"	v
TC_KW_NAME	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^TC_KW_NAME = Token.Generic.Subheading$/;"	v
TERMINAL_COLORS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^TERMINAL_COLORS = {$/;"	v
TERMINAL_COLORS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^TERMINAL_COLORS = {$/;"	v
TIS620CharToOrderMap	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langthaimodel.py	/^TIS620CharToOrderMap = ($/;"	v
TIS620ThaiModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langthaimodel.py	/^TIS620ThaiModel = {$/;"	v
TIS620ThaiModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcsgroupprober.py	/^from .langthaimodel import TIS620ThaiModel$/;"	i
TURBO_PASCAL_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    TURBO_PASCAL_KEYWORDS = ($/;"	v	class:DelphiLexer
TURBO_PASCAL_KEYWORDS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    TURBO_PASCAL_KEYWORDS = ($/;"	v	class:DelphiLexer
TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_stan_builtins.py	/^TYPES = ($/;"	v
TYPES	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_stan_builtins.py	/^TYPES = ($/;"	v
TabEnterHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:TabEnterHandler()$/;"	f
TabLeaveHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:TabLeaveHandler()$/;"	f
Tabularize	plugged/tabular/plugin/Tabular.vim	/^   \\ Tabularize <line1>,<line2>call Tabularize(<q-args>)$/;"	c
Tabularize	plugged/tabular/plugin/Tabular.vim	/^function! Tabularize(command, ...) range$/;"	f
Tads3Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^class Tads3Lexer(RegexLexer):$/;"	c
Tads3Lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^class Tads3Lexer(RegexLexer):$/;"	c
TahitiTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class TahitiTestCase(USEasternDSTStartTestCase):$/;"	c
TahitiTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class TahitiTestCase(USEasternDSTStartTestCase):$/;"	c
TangoStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/tango.py	/^class TangoStyle(Style):$/;"	c
TangoStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/tango.py	/^class TangoStyle(Style):$/;"	c
TclLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^from pygments.lexers.tcl import TclLexer$/;"	i
TclLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^class TclLexer(RegexLexer):$/;"	c
TclLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^from pygments.lexers.tcl import TclLexer$/;"	i
TclLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^class TclLexer(RegexLexer):$/;"	c
TcshLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    TcshLexer$/;"	i
TcshLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^class TcshLexer(RegexLexer):$/;"	c
TcshLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    TcshLexer$/;"	i
TcshLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^class TcshLexer(RegexLexer):$/;"	c
TeaLangLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^class TeaLangLexer(RegexLexer):$/;"	c
TeaLangLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^from pygments.lexers.jvm import JavaLexer, TeaLangLexer$/;"	i
TeaLangLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^class TeaLangLexer(RegexLexer):$/;"	c
TeaLangLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^from pygments.lexers.jvm import JavaLexer, TeaLangLexer$/;"	i
TeaTemplateLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class TeaTemplateLexer(DelegatingLexer):$/;"	c
TeaTemplateLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class TeaTemplateLexer(DelegatingLexer):$/;"	c
TeaTemplateRootLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class TeaTemplateRootLexer(RegexLexer):$/;"	c
TeaTemplateRootLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class TeaTemplateRootLexer(RegexLexer):$/;"	c
Template	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^from string import Template$/;"	i
Template	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^from string import Template$/;"	i
TemplatedKeywordCall	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class TemplatedKeywordCall(Tokenizer):$/;"	c
TemplatedKeywordCall	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class TemplatedKeywordCall(Tokenizer):$/;"	c
Terminal256Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal256.py	/^class Terminal256Formatter(Formatter):$/;"	c
Terminal256Formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal256.py	/^class Terminal256Formatter(Formatter):$/;"	c
TerminalFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    TerminalFormatter  # pylint:disable-msg=E0611$/;"	i
TerminalFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^class TerminalFormatter(Formatter):$/;"	c
TerminalFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    TerminalFormatter  # pylint:disable-msg=E0611$/;"	i
TerminalFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^class TerminalFormatter(Formatter):$/;"	c
TestBigintAsString	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_bigint_as_string.py	/^class TestBigintAsString(TestCase):$/;"	c
TestBitSizeIntAsString	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_bitsize_int_as_string.py	/^class TestBitSizeIntAsString(TestCase):$/;"	c
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_bigint_as_string.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_bitsize_int_as_string.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_check_circular.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decimal.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decode.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_default.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_encode_basestring_ascii.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_errors.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_fail.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_float.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_indent.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_item_sort_key.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_pass1.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_pass2.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_pass3.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_recursion.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_scanstring.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_separators.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_speedups.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_subclass.py	/^from unittest import TestCase$/;"	i
TestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^from unittest import TestCase$/;"	i
TestCaseSetting	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class TestCaseSetting(Setting):$/;"	c
TestCaseSetting	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class TestCaseSetting(Setting):$/;"	c
TestCaseTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class TestCaseTable(_Table):$/;"	c
TestCaseTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class TestCaseTable(_Table):$/;"	c
TestCheckCircular	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_check_circular.py	/^class TestCheckCircular(TestCase):$/;"	c
TestDecimal	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decimal.py	/^class TestDecimal(TestCase):$/;"	c
TestDecode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decode.py	/^class TestDecode(TestCase):$/;"	c
TestDecode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_speedups.py	/^class TestDecode(TestCase):$/;"	c
TestDefault	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_default.py	/^class TestDefault(TestCase):$/;"	c
TestDump	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^class TestDump(TestCase):$/;"	c
TestEncodeBaseStringAscii	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_encode_basestring_ascii.py	/^class TestEncodeBaseStringAscii(TestCase):$/;"	c
TestEncodeForHTML	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_encode_for_html.py	/^class TestEncodeForHTML(unittest.TestCase):$/;"	c
TestErrors	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_errors.py	/^class TestErrors(TestCase):$/;"	c
TestFail	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_fail.py	/^class TestFail(TestCase):$/;"	c
TestFloat	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_float.py	/^class TestFloat(TestCase):$/;"	c
TestForJson	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^class TestForJson(unittest.TestCase):$/;"	c
TestIndent	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_indent.py	/^class TestIndent(TestCase):$/;"	c
TestItemSortKey	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_item_sort_key.py	/^class TestItemSortKey(TestCase):$/;"	c
TestIterable	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_iterable.py	/^class TestIterable(unittest.TestCase):$/;"	c
TestMissingSpeedups	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^class TestMissingSpeedups(unittest.TestCase):$/;"	c
TestNamedTuple	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^class TestNamedTuple(unittest.TestCase):$/;"	c
TestPass1	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_pass1.py	/^class TestPass1(TestCase):$/;"	c
TestPass2	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_pass2.py	/^class TestPass2(TestCase):$/;"	c
TestPass3	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_pass3.py	/^class TestPass3(TestCase):$/;"	c
TestRecursion	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_recursion.py	/^class TestRecursion(TestCase):$/;"	c
TestScanString	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_scanstring.py	/^class TestScanString(TestCase):$/;"	c
TestSeparators	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_separators.py	/^class TestSeparators(TestCase):$/;"	c
TestSubclass	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_subclass.py	/^class TestSubclass(TestCase):$/;"	c
TestTool	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tool.py	/^class TestTool(unittest.TestCase):$/;"	c
TestTuples	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tuple.py	/^class TestTuples(unittest.TestCase):$/;"	c
TestUnicode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^class TestUnicode(TestCase):$/;"	c
TestcaseFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^class TestcaseFormatter(Formatter):$/;"	c
TestcaseFormatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^class TestcaseFormatter(Formatter):$/;"	c
TexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^            from pygments.lexers.markup import TexLexer$/;"	i
TexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^class TexLexer(RegexLexer):$/;"	c
TexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^    TexLexer, GroffLexer$/;"	i
TexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^            from pygments.lexers.markup import TexLexer$/;"	i
TexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^class TexLexer(RegexLexer):$/;"	c
TexLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^    TexLexer, GroffLexer$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^from pygments.token import Token, Text, STANDARD_TYPES$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^from pygments.token import Error, Text, Other, _TokenType$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/apl.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    Other, Keyword, Operator$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^    Number, Punctuation, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    Number, Punctuation, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    Number, Punctuation, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/chapel.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    Number, Punctuation, Whitespace$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^    Punctuation, Number$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dalvik.py	/^    Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    Punctuation, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^    Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    Number, Punctuation, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^    Number, Punctuation, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/eiffel.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    Number, Punctuation, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    Number, Punctuation, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^from pygments.token import Text, Comment, Keyword, Name, String, Number$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    Number, Punctuation, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/foxpro.py	/^     Name, String$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    Number, Punctuation, String$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    Number, Punctuation, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    Number, Punctuation, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/idl.py	/^from pygments.token import Text, Comment, Operator, Keyword, Name, Number$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^from pygments.token import Text, Comment, Keyword, Name, String$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^    Name, String, Number$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/iolang.py	/^    Number$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    Number, Punctuation, Other$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^    Number, Punctuation, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    Number, Punctuation, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    Number, Punctuation, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nit.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^    Number, Punctuation, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    Number, Punctuation, Literal, Comment$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ooc.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    Number, Punctuation, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    Number, Punctuation, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    Number, Punctuation, Other$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    Number, Punctuation, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    Number, Generic, Whitespace$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^    Keyword, Name$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^     Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/snobol.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^from pygments.token import Token, Error, Text$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^    Number$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    Number, Generic, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    Number, Punctuation, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    Number, Punctuation, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^Text        = Token.Text$/;"	v
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^from pygments.token import Token, Text, STANDARD_TYPES$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^from pygments.token import Error, Text, Other, _TokenType$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/apl.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    Other, Keyword, Operator$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^    Number, Punctuation, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    Number, Punctuation, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    Number, Punctuation, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/chapel.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    Number, Punctuation, Whitespace$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^    Punctuation, Number$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dalvik.py	/^    Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    Punctuation, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^    Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Literal, Other$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    Number, Punctuation, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    Number, Punctuation, Generic, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^    Number, Punctuation, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/eiffel.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    Number, Punctuation, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    Number, Punctuation, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^from pygments.token import Text, Comment, Keyword, Name, String, Number$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    Number, Punctuation, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/foxpro.py	/^     Name, String$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    Number, Punctuation, String$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    Number, Punctuation, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    Number, Punctuation, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/idl.py	/^from pygments.token import Text, Comment, Operator, Keyword, Name, Number$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^from pygments.token import Text, Comment, Keyword, Name, String$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^    Name, String, Number$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    Number, Punctuation, Error, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/iolang.py	/^    Number$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    Number, Punctuation, Other$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^    Number, Punctuation, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    Number, Punctuation, Literal, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    Number, Punctuation, Generic, Other$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    Number, Punctuation, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    Number, Punctuation, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nit.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^    Number, Punctuation, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    Number, Punctuation, Literal, Comment$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ooc.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    Number, Punctuation, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    Number, Punctuation, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    Number, Punctuation, Other$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    Number, Punctuation, Generic, Other, Error$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    Number, Punctuation, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    Number, Generic, Whitespace$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^    Keyword, Name$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    Number, Punctuation, Error, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^     Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/snobol.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^from pygments.token import Token, Error, Text$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^    Number$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    Number, Generic, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    Number, Punctuation, Generic$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^    Number, Punctuation$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    Number, Punctuation, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^Text        = Token.Text$/;"	v
TextLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    get_lexer_for_filename, find_lexer_class, TextLexer$/;"	i
TextLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^class TextLexer(Lexer):$/;"	c
TextLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    get_lexer_for_filename, find_lexer_class, TextLexer$/;"	i
TextLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^class TextLexer(Lexer):$/;"	c
ThaiLangModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langthaimodel.py	/^ThaiLangModel = ($/;"	v
TidyEncOptByFenc	plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! s:TidyEncOptByFenc() " {{{2$/;"	f
TidyEncOptByFenc	plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:TidyEncOptByFenc()$/;"	f
Timeout	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/exceptions.py	/^class Timeout(RequestException):$/;"	c
Timeout	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^from .util.timeout import Timeout$/;"	i
Timeout	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^from .util.timeout import Timeout$/;"	i
Timeout	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/timeout.py	/^class Timeout(object):$/;"	c
TimeoutError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class TimeoutError(HTTPError):$/;"	c
TimeoutSauce	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .packages.urllib3.util import Timeout as TimeoutSauce$/;"	i
TimeoutStateError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^class TimeoutStateError(HTTPError):$/;"	c
TimeoutStateError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/timeout.py	/^from ..exceptions import TimeoutStateError$/;"	i
TmuxActivePane	plugged/Nvim-R/R/common_global.vim	/^function TmuxActivePane()$/;"	f
TodotxtLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^class TodotxtLexer(RegexLexer):$/;"	c
TodotxtLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^class TodotxtLexer(RegexLexer):$/;"	c
ToggleUberMode	plugged/smartpairs.vim/plugin/smartpairs.vim	/^function! s:ToggleUberMode()$/;"	f
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^from pygments.token import Token, Text, STANDARD_TYPES$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^from pygments.token import Token, STANDARD_TYPES$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^from pygments.token import Token$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^from pygments.token import Token$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^from pygments.token import Token, Error, Text$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/style.py	/^from pygments.token import Token, STANDARD_TYPES$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/fruity.py	/^    Generic, Number, String, Whitespace$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^Token       = _TokenType()$/;"	v
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^from pygments.token import Token, Text, STANDARD_TYPES$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^from pygments.token import Token, STANDARD_TYPES$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^from pygments.token import Token$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^from pygments.token import Token$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^from pygments.token import Token, Error, Text$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/style.py	/^from pygments.token import Token, STANDARD_TYPES$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/fruity.py	/^    Generic, Number, String, Whitespace$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
Token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^Token       = _TokenType()$/;"	v
TokenMergeFilter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^class TokenMergeFilter(Filter):$/;"	c
TokenMergeFilter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^class TokenMergeFilter(Filter):$/;"	c
TokenParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^class TokenParser(object):$/;"	c
TokenParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/c_cpp.py	/^from . import TokenParser$/;"	i
TokenParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/data.py	/^from . import TokenParser$/;"	i
TokenParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/dotnet.py	/^from . import TokenParser$/;"	i
TokenParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/jvm.py	/^from . import TokenParser$/;"	i
TokenParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/php.py	/^from . import TokenParser$/;"	i
TokenParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/python.py	/^from . import TokenParser$/;"	i
TokenParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^from . import TokenParser$/;"	i
TokenParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/unknown.py	/^from . import TokenParser$/;"	i
Tokenizer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class Tokenizer(object):$/;"	c
Tokenizer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class Tokenizer(object):$/;"	c
TooManyRedirects	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/exceptions.py	/^class TooManyRedirects(RequestException):$/;"	c
TracStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/trac.py	/^class TracStyle(Style):$/;"	c
TracStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/trac.py	/^class TracStyle(Style):$/;"	c
TreeDirNode.AbsoluteTreeRoot	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path)$/;"	f
TreeDirNode._initChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode._openRecursively2	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.activate	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.findNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getVisibleChildCount	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.open	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.refreshDirFlags	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
TreeDirNode.refreshFlags	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
TreeDirNode.removeChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path)$/;"	f
TreeDirNode.sortChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetSelected	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path)$/;"	f
TreeFileNode._renderToString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText, vertMap, isLastChild)$/;"	f
TreeFileNode.activate	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.isRoot	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.makeRoot	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.makeRoot()$/;"	f
TreeFileNode.open	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openInNewTab	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.refreshFlags	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
TreeFileNode.rename	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TreetopBaseLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class TreetopBaseLexer(RegexLexer):$/;"	c
TreetopBaseLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class TreetopBaseLexer(RegexLexer):$/;"	c
TreetopLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^class TreetopLexer(DelegatingLexer):$/;"	c
TreetopLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^class TreetopLexer(DelegatingLexer):$/;"	c
TriggerAbb	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:TriggerAbb() "{{{$/;"	f
TryGotoChange	plugged/ingo-library/autoload/ingo/motion/boundary.vim	/^function! s:TryGotoChange()$/;"	f
TwigHtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class TwigHtmlLexer(DelegatingLexer):$/;"	c
TwigHtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class TwigHtmlLexer(DelegatingLexer):$/;"	c
TwigHtmlParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^class TwigHtmlParser(HtmlDjangoParser):$/;"	c
TwigLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class TwigLexer(RegexLexer):$/;"	c
TwigLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class TwigLexer(RegexLexer):$/;"	c
TypeScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^class TypeScriptLexer(RegexLexer):$/;"	c
TypeScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^    DartLexer, TypeScriptLexer, LassoLexer, ObjectiveJLexer, CoffeeScriptLexer$/;"	i
TypeScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^class TypeScriptLexer(RegexLexer):$/;"	c
TypeScriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^    DartLexer, TypeScriptLexer, LassoLexer, ObjectiveJLexer, CoffeeScriptLexer$/;"	i
TzLocalTests	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/tests.py	/^class TzLocalTests(unittest.TestCase):$/;"	c
TzLocalTests	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/tests.py	/^class TzLocalTests(unittest.TestCase):$/;"	c
TzWin32Tests	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/tests.py	/^    class TzWin32Tests(unittest.TestCase):$/;"	c	class:TzLocalTests
TzWin32Tests	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/tests.py	/^    class TzWin32Tests(unittest.TestCase):$/;"	c	class:TzLocalTests
U	plugged/calendar.vim/autoload/calendar/string.vim	/^fu! s:U(s, w) abort$/;"	f
U	plugged/repeat.vim/autoload/repeat.vim	/^    nnoremap <silent> U     :<C-U>call repeat#wrap('U',v:count)<CR>$/;"	m
UCS2BECharLenTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^UCS2BECharLenTable = (2, 2, 2, 0, 2, 2)$/;"	v
UCS2BESMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^UCS2BESMModel = {'classTable': UCS2BE_cls,$/;"	v
UCS2BE_cls	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^UCS2BE_cls = ($/;"	v
UCS2BE_st	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^UCS2BE_st  = ($/;"	v
UCS2LECharLenTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^UCS2LECharLenTable = (2, 2, 2, 2, 2, 2)$/;"	v
UCS2LESMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^UCS2LESMModel = {'classTable': UCS2LE_cls,$/;"	v
UCS2LE_cls	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^UCS2LE_cls = ($/;"	v
UCS2LE_st	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^UCS2LE_st = ($/;"	v
UDF	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^UDF = 0  # undefined$/;"	v
UI.IndentWid	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
UI.MarkupReg	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
UI.New	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
UI.UpDirLine	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
UI._dumpHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
UI._indentLevelFor	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
UI._renderBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
UI._stripMarkup	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line, removeLeadingSpaces)$/;"	f
UI.centerView	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
UI.getLineNum	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(file_node)$/;"	f
UI.getPath	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
UI.getRootLineNum	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
UI.render	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
UI.renderViewSavingPosition	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
UI.restoreScreenState	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
UI.saveScreenState	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
UI.toggleIgnoreFilter	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
UI.toggleShowBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
UI.toggleShowFiles	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
UI.toggleShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
UI.toggleZoom	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
UNAME_S	plugged/vimproc.vim/Makefile	/^    UNAME_S := $(shell uname -s)$/;"	m
UNRESERVED_SET	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^UNRESERVED_SET = frozenset($/;"	v
UNUSED	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define UNUSED /;"	d	file:
UNUSED	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define UNUSED$/;"	d	file:
URLRequired	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/exceptions.py	/^class URLRequired(RequestException):$/;"	c
USEasternDSTEndTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class USEasternDSTEndTestCase(USEasternDSTStartTestCase):$/;"	c
USEasternDSTEndTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class USEasternDSTEndTestCase(USEasternDSTStartTestCase):$/;"	c
USEasternDSTStartTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class USEasternDSTStartTestCase(unittest.TestCase):$/;"	c
USEasternDSTStartTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class USEasternDSTStartTestCase(unittest.TestCase):$/;"	c
USEasternEPTEndTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class USEasternEPTEndTestCase(USEasternDSTStartTestCase):$/;"	c
USEasternEPTEndTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class USEasternEPTEndTestCase(USEasternDSTStartTestCase):$/;"	c
USEasternEPTStartTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class USEasternEPTStartTestCase(USEasternDSTStartTestCase):$/;"	c
USEasternEPTStartTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class USEasternEPTStartTestCase(USEasternDSTStartTestCase):$/;"	c
USTimeZone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^class USTimeZone(tzinfo):$/;"	c
USTimeZone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^class USTimeZone(tzinfo):$/;"	c
UTC	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^class UTC(datetime.tzinfo):$/;"	c
UTC	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^from pytz import utc, UTC, HOUR, ZERO$/;"	i
UTC	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^UTC = pytz.timezone('UTC')$/;"	v
UTC	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^class UTC(datetime.tzinfo):$/;"	c
UTC	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^from pytz import utc, UTC, HOUR, ZERO$/;"	i
UTC	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^UTC = pytz.timezone('UTC')$/;"	v
UTF8CharLenTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^UTF8CharLenTable = (0, 1, 0, 0, 0, 0, 2, 3, 3, 3, 4, 4, 5, 5, 6, 6)$/;"	v
UTF8Prober	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcsgroupprober.py	/^from .utf8prober import UTF8Prober$/;"	i
UTF8Prober	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/utf8prober.py	/^class UTF8Prober(CharSetProber):$/;"	c
UTF8SMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^UTF8SMModel = {'classTable': UTF8_cls,$/;"	v
UTF8SMModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/utf8prober.py	/^from .mbcssm import UTF8SMModel$/;"	i
UTF8_cls	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^UTF8_cls = ($/;"	v
UTF8_st	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^UTF8_st = ($/;"	v
UnMakeRMenu	plugged/Nvim-R/R/gui_running.vim	/^function UnMakeRMenu()$/;"	f
UndefineMappings	plugged/ingo-library/autoload/ingo/window/cmdwin.vim	/^function! s:UndefineMappings()$/;"	f
Uniq	plugged/AdvancedSorters/plugin/AdvancedSorters.vim	/^command! -range=% -nargs=* Uniq$/;"	c
UniqueAdd	plugged/ingo-library/autoload/ingo/text/frompattern.vim	/^function! s:UniqueAdd( list, expr )$/;"	f
Unite	plugged/unite.vim/plugin/unite.vim	/^      \\ Unite$/;"	c
UniteBookmarkAdd	plugged/unite.vim/plugin/unite/bookmark.vim	/^command! -nargs=? -complete=file UniteBookmarkAdd$/;"	c
UniteClose	plugged/unite.vim/plugin/unite.vim	/^      \\ UniteClose call unite#view#_close(<q-args>)$/;"	c
UniteFirst	plugged/unite.vim/plugin/unite.vim	/^      \\ UniteFirst call unite#start#_pos(<q-args>, 'first', 1)$/;"	c
UniteLast	plugged/unite.vim/plugin/unite.vim	/^      \\ UniteLast call unite#start#_pos(<q-args>, 'last', 1)$/;"	c
UniteNext	plugged/unite.vim/plugin/unite.vim	/^      \\ UniteNext call unite#start#_pos(<q-args>, 'next', expand('<count>'))$/;"	c
UnitePrevious	plugged/unite.vim/plugin/unite.vim	/^      \\ UnitePrevious call unite#start#_pos(<q-args>, 'previous', expand('<count>'))$/;"	c
UniteResume	plugged/unite.vim/plugin/unite.vim	/^      \\ UniteResume call s:call_unite_resume(<q-args>)$/;"	c
UniteWithBufferDir	plugged/unite.vim/plugin/unite.vim	/^      \\ UniteWithBufferDir$/;"	c
UniteWithCurrentDir	plugged/unite.vim/plugin/unite.vim	/^      \\ UniteWithCurrentDir$/;"	c
UniteWithCursorWord	plugged/unite.vim/plugin/unite.vim	/^      \\ UniteWithCursorWord call s:call_unite_cursor_word(<q-args>)$/;"	c
UniteWithInput	plugged/unite.vim/plugin/unite.vim	/^      \\ UniteWithInput call s:call_unite_input(<q-args>)$/;"	c
UniteWithInputDirectory	plugged/unite.vim/plugin/unite.vim	/^      \\ UniteWithInputDirectory call s:call_unite_input_directory(<q-args>)$/;"	c
UniteWithProjectDir	plugged/unite.vim/plugin/unite.vim	/^      \\ UniteWithProjectDir$/;"	c
UniversalDetector	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardetect.py	/^from chardet.universaldetector import UniversalDetector$/;"	i
UniversalDetector	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^class UniversalDetector:$/;"	c
UnknownParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/unknown.py	/^class UnknownParser(TokenParser):$/;"	c
UnknownTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class UnknownTable(_Table):$/;"	c
UnknownTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class UnknownTable(_Table):$/;"	c
UnknownTimeZoneError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^from pytz.exceptions import UnknownTimeZoneError$/;"	i
UnknownTimeZoneError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/exceptions.py	/^class UnknownTimeZoneError(KeyError):$/;"	c
UnknownTimeZoneError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^from pytz.exceptions import UnknownTimeZoneError$/;"	i
UnknownTimeZoneError	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/exceptions.py	/^class UnknownTimeZoneError(KeyError):$/;"	c
Unmap	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:Unmap() " {{{$/;"	f
UnsupportedOperation	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^from io import BytesIO, UnsupportedOperation$/;"	i
UnverifiedHTTPSConnection	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    UnverifiedHTTPSConnection = HTTPSConnection$/;"	v	class:VerifiedHTTPSConnection
UpdateErrors	plugged/syntastic/plugin/syntastic.vim	/^function! s:UpdateErrors(auto_invoked, checker_names) abort " {{{2$/;"	f
UpdateMakePrg	plugged/vim-coffee-script/compiler/coffee.vim	/^  function! s:UpdateMakePrg()$/;"	f
UpdateOB	plugged/Nvim-R/ftplugin/rbrowser.vim	/^function! UpdateOB(what)$/;"	f
UrbiscriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^from pygments.lexers.urbi import UrbiscriptLexer$/;"	i
UrbiscriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^class UrbiscriptLexer(ExtendedRegexLexer):$/;"	c
UrbiscriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^from pygments.lexers.urbi import UrbiscriptLexer$/;"	i
UrbiscriptLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^class UrbiscriptLexer(ExtendedRegexLexer):$/;"	c
Url	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/url.py	/^class Url(namedtuple('Url', url_attrs)):$/;"	c
VARIABLE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^VARIABLE = Token.Name.Variable$/;"	v
VARIABLE	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^VARIABLE = Token.Name.Variable$/;"	v
VCTreeStatusLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^class VCTreeStatusLexer(RegexLexer):$/;"	c
VCTreeStatusLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^class VCTreeStatusLexer(RegexLexer):$/;"	c
VERSION	plugged/delimitMate/Makefile	/^VERSION  =  $(shell $(SED) -n -e '\/Current \\+release\/{s\/^ \\+\\([0-9.]\\+\\).*\/\\1\/;p;}' $(firstword $(DOC)))$/;"	m
VERSION	plugged/vim-coffee-script/Makefile	/^VERSION = $(shell git describe --always $(REF))$/;"	m
VERSION	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^VERSION = OLSON_VERSION$/;"	v
VERSION	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^VERSION = OLSON_VERSION$/;"	v
VGLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^class VGLLexer(RegexLexer):$/;"	c
VGLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^    MscgenLexer, VGLLexer$/;"	i
VGLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^class VGLLexer(RegexLexer):$/;"	c
VGLLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^    MscgenLexer, VGLLexer$/;"	i
VIM	plugged/delimitMate/Makefile	/^VIM      =  vim$/;"	m
VIM	plugged/smartpairs.vim/spec/spec_helper.rb	/^module VIM$/;"	m
VIM2HTML	plugged/Nvim-R/Makefile	/^VIM2HTML=\/usr\/local\/share\/vim\/vim74\/doc\/vim2html.pl $/;"	m
VIMPROC	plugged/vimproc.vim/make_msvc.mak	/^VIMPROC=vimproc_win32$/;"	m
VIMPROC	plugged/vimproc.vim/make_msvc.mak	/^VIMPROC=vimproc_win64$/;"	m
VISUAL_HEBREW_NAME	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^VISUAL_HEBREW_NAME = "ISO-8859-8"$/;"	v
VP_BUFSIZE	plugged/vimproc.vim/autoload/proc.c	/^#define VP_BUFSIZE /;"	d	file:
VP_BUFSIZE	plugged/vimproc.vim/autoload/proc_w32.c	/^#define VP_BUFSIZE /;"	d	file:
VP_CHR_TO_OFLAG	plugged/vimproc.vim/autoload/proc.c	/^#define VP_CHR_TO_OFLAG(/;"	d	file:
VP_CHR_TO_OFLAG	plugged/vimproc.vim/autoload/proc.c	/^#undef VP_CHR_TO_OFLAG$/;"	d	file:
VP_CHR_TO_OFLAG	plugged/vimproc.vim/autoload/proc_w32.c	/^#define VP_CHR_TO_OFLAG(/;"	d	file:
VP_CHR_TO_OFLAG	plugged/vimproc.vim/autoload/proc_w32.c	/^#undef VP_CHR_TO_OFLAG$/;"	d	file:
VP_DUP_HANDLE	plugged/vimproc.vim/autoload/proc_w32.c	/^#define VP_DUP_HANDLE(/;"	d	file:
VP_DUP_HANDLE	plugged/vimproc.vim/autoload/proc_w32.c	/^#undef VP_DUP_HANDLE$/;"	d	file:
VP_EOV	plugged/vimproc.vim/autoload/vimstack.c	/^#define VP_EOV /;"	d	file:
VP_EOV_STR	plugged/vimproc.vim/autoload/vimstack.c	/^#define VP_EOV_STR /;"	d	file:
VP_ERRMSG_SIZE	plugged/vimproc.vim/autoload/vimstack.c	/^#define VP_ERRMSG_SIZE /;"	d	file:
VP_GOTO_ERROR	plugged/vimproc.vim/autoload/proc.c	/^#define VP_GOTO_ERROR(/;"	d	file:
VP_GOTO_ERROR	plugged/vimproc.vim/autoload/proc.c	/^#undef VP_GOTO_ERROR$/;"	d	file:
VP_GOTO_ERROR	plugged/vimproc.vim/autoload/proc_w32.c	/^#define VP_GOTO_ERROR(/;"	d	file:
VP_GOTO_ERROR	plugged/vimproc.vim/autoload/proc_w32.c	/^#undef VP_GOTO_ERROR$/;"	d	file:
VP_INITIAL_BUFSIZE	plugged/vimproc.vim/autoload/vimstack.c	/^#define VP_INITIAL_BUFSIZE /;"	d	file:
VP_NUMFMT_BUFSIZE	plugged/vimproc.vim/autoload/vimstack.c	/^#define VP_NUMFMT_BUFSIZE /;"	d	file:
VP_NUM_BUFSIZE	plugged/vimproc.vim/autoload/vimstack.c	/^#define VP_NUM_BUFSIZE /;"	d	file:
VP_POLLIN	plugged/vimproc.vim/autoload/proc.c	/^# define VP_POLLIN /;"	d	file:
VP_POLLIN	plugged/vimproc.vim/autoload/proc.c	/^#undef VP_POLLIN$/;"	d	file:
VP_PTYTTY_H_	plugged/vimproc.vim/autoload/ptytty.h	/^#define VP_PTYTTY_H_$/;"	d
VP_READ_BUFSIZE	plugged/vimproc.vim/autoload/proc.c	/^#define VP_READ_BUFSIZE /;"	d	file:
VP_READ_BUFSIZE	plugged/vimproc.vim/autoload/proc_w32.c	/^#define VP_READ_BUFSIZE /;"	d	file:
VP_RETURN_IF_FAIL	plugged/vimproc.vim/autoload/vimstack.c	/^#define VP_RETURN_IF_FAIL(/;"	d	file:
VP_SET_NONBLOCK_IF_NEEDED	plugged/vimproc.vim/autoload/proc.c	/^# define VP_SET_NONBLOCK_IF_NEEDED(/;"	d	file:
VP_STACK_NULL	plugged/vimproc.vim/autoload/vimstack.c	/^#define VP_STACK_NULL /;"	d	file:
VP_STACK_PUSH_ALTSIGNAME	plugged/vimproc.vim/autoload/proc.c	/^#define VP_STACK_PUSH_ALTSIGNAME(/;"	d	file:
VP_STACK_PUSH_ALTSIGNAME	plugged/vimproc.vim/autoload/proc.c	/^#undef VP_STACK_PUSH_ALTSIGNAME$/;"	d	file:
VP_STACK_PUSH_SIGNAME	plugged/vimproc.vim/autoload/proc.c	/^#define VP_STACK_PUSH_SIGNAME(/;"	d	file:
VP_STACK_PUSH_SIGNAME	plugged/vimproc.vim/autoload/proc.c	/^#undef VP_STACK_PUSH_SIGNAME$/;"	d	file:
VP_STR_TO_OFLAG	plugged/vimproc.vim/autoload/proc.c	/^#define VP_STR_TO_OFLAG(/;"	d	file:
VP_STR_TO_OFLAG	plugged/vimproc.vim/autoload/proc.c	/^#undef VP_STR_TO_OFLAG$/;"	d	file:
VP_STR_TO_OFLAG	plugged/vimproc.vim/autoload/proc_w32.c	/^#define VP_STR_TO_OFLAG(/;"	d	file:
VP_STR_TO_OFLAG	plugged/vimproc.vim/autoload/proc_w32.c	/^#undef VP_STR_TO_OFLAG$/;"	d	file:
ValaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^class ValaLexer(RegexLexer):$/;"	c
ValaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^from pygments.lexers.c_like import ECLexer, ValaLexer, CudaLexer$/;"	i
ValaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^class ValaLexer(RegexLexer):$/;"	c
ValaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^from pygments.lexers.c_like import ECLexer, ValaLexer, CudaLexer$/;"	i
Value	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^    Value = namedtuple('Value', ['value'])$/;"	v
Value	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^    class Value(tuple):$/;"	c
ValuesView	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    from _abcoll import KeysView, ValuesView, ItemsView$/;"	i
Variable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class Variable(Tokenizer):$/;"	c
Variable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class Variable(Tokenizer):$/;"	c
VariableSplitter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class VariableSplitter:$/;"	c
VariableSplitter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class VariableSplitter:$/;"	c
VariableTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class VariableTable(_Table):$/;"	c
VariableTable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class VariableTable(_Table):$/;"	c
VariableTokenizer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class VariableTokenizer(object):$/;"	c
VariableTokenizer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class VariableTokenizer(object):$/;"	c
VbNetAspxLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^class VbNetAspxLexer(DelegatingLexer):$/;"	c
VbNetAspxLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^class VbNetAspxLexer(DelegatingLexer):$/;"	c
VbNetLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^class VbNetLexer(RegexLexer):$/;"	c
VbNetLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^class VbNetLexer(RegexLexer):$/;"	c
VelocityHtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class VelocityHtmlLexer(DelegatingLexer):$/;"	c
VelocityHtmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class VelocityHtmlLexer(DelegatingLexer):$/;"	c
VelocityHtmlParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^class VelocityHtmlParser(HtmlDjangoParser):$/;"	c
VelocityLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class VelocityLexer(RegexLexer):$/;"	c
VelocityLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class VelocityLexer(RegexLexer):$/;"	c
VelocityXmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class VelocityXmlLexer(DelegatingLexer):$/;"	c
VelocityXmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class VelocityXmlLexer(DelegatingLexer):$/;"	c
VerifiedHTTPSConnection	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^class VerifiedHTTPSConnection(HTTPSConnection):$/;"	c
VerilogLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^class VerilogLexer(RegexLexer):$/;"	c
VerilogLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^class VerilogLexer(RegexLexer):$/;"	c
VhdlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^class VhdlLexer(RegexLexer):$/;"	c
VhdlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^class VhdlLexer(RegexLexer):$/;"	c
ViewList	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^from docutils.statemachine import ViewList$/;"	i
ViewList	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^from docutils.statemachine import ViewList$/;"	i
VilniusCESTStartTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class VilniusCESTStartTestCase(USEasternDSTStartTestCase):$/;"	c
VilniusCESTStartTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class VilniusCESTStartTestCase(USEasternDSTStartTestCase):$/;"	c
VilniusWMTEndTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class VilniusWMTEndTestCase(USEasternDSTStartTestCase):$/;"	c
VilniusWMTEndTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class VilniusWMTEndTestCase(USEasternDSTStartTestCase):$/;"	c
Vim	plugged/smartpairs.vim/spec/support/vim.rb	/^  module Vim$/;"	m	class:Support
VimEnterHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:VimEnterHandler()$/;"	f
VimLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^from pygments.lexers.textedit import VimLexer$/;"	i
VimLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^class VimLexer(RegexLexer):$/;"	c
VimLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^from pygments.lexers.textedit import VimLexer$/;"	i
VimLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^class VimLexer(RegexLexer):$/;"	c
VimProcBang	plugged/vimproc.vim/plugin/vimproc.vim	/^command! -nargs=+ -complete=shellcmd VimProcBang call s:bang(<q-args>)$/;"	c
VimProcInstall	plugged/vimproc.vim/plugin/vimproc.vim	/^command! -nargs=* VimProcInstall call s:install(<q-args>)$/;"	c
VimProcRead	plugged/vimproc.vim/plugin/vimproc.vim	/^command! -nargs=+ -complete=shellcmd VimProcRead call s:read(<q-args>)$/;"	c
VimStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vim.py	/^class VimStyle(Style):$/;"	c
VimStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vim.py	/^class VimStyle(Style):$/;"	c
VisibleWhitespaceFilter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^class VisibleWhitespaceFilter(Filter):$/;"	c
VisibleWhitespaceFilter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^class VisibleWhitespaceFilter(Filter):$/;"	c
VisualStudioStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vs.py	/^class VisualStudioStyle(Style):$/;"	c
VisualStudioStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vs.py	/^class VisualStudioStyle(Style):$/;"	c
WHITESPACE	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^WHITESPACE = re.compile(r'[ \\t\\n\\r]*', FLAGS)$/;"	v
WHITESPACE_STR	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^WHITESPACE_STR = ' \\t\\n\\r'$/;"	v
WIFCONTINUED	plugged/vimproc.vim/autoload/proc.c	/^# define WIFCONTINUED(/;"	d	file:
WINVER	plugged/vimproc.vim/autoload/proc_w32.c	/^#define WINVER /;"	d	file:
WINVER	plugged/vimproc.vim/make_msvc.mak	/^WINVER = 0x0500$/;"	m
WaitNvimcomStart	plugged/Nvim-R/R/common_global.vim	/^function WaitNvimcomStart()$/;"	f
WakaTimeProjectFile	plugged/vim-wakatime/plugin/packages/wakatime/project.py	/^from .projects.wakatime_project_file import WakaTimeProjectFile$/;"	i
WakaTimeProjectFile	plugged/vim-wakatime/plugin/packages/wakatime/projects/wakatime_project_file.py	/^class WakaTimeProjectFile(BaseProject):$/;"	c
Wakatime	plugged/vim-wakatime/plugin/wakatime.vim	/^    augroup Wakatime$/;"	a
WarsawWMTEndTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^class WarsawWMTEndTestCase(USEasternDSTStartTestCase):$/;"	c
WarsawWMTEndTestCase	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^class WarsawWMTEndTestCase(USEasternDSTStartTestCase):$/;"	c
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    string_to_tokentype$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    Number, Punctuation, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^    String, Number, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    Number, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^    Number, Punctuation, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/autumn.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/borland.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/colorful.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/default.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/emacs.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/friendly.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/fruity.py	/^    Generic, Number, String, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/manni.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/murphy.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/pastie.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/perldoc.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/trac.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^Whitespace  = Text.Whitespace$/;"	v
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    string_to_tokentype$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^    Number, Operator, Generic, Token, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    Number, Punctuation, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^    String, Number, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    Punctuation, Generic, Number, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    Number, Punctuation, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    Keyword, Name, String, Number, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^    Whitespace, Name, Literal, Comment, Text$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    Number, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^    Number, Punctuation, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    Number, Punctuation, Error, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    Text, Comment, Operator, Keyword, Name, String, Number, Other, Token$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/autumn.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/borland.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/colorful.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/default.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/emacs.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/friendly.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/fruity.py	/^    Generic, Number, String, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/manni.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/monokai.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/murphy.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/native.py	/^     Number, Operator, Generic, Token, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^    Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/pastie.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/perldoc.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/tango.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/trac.py	/^     Number, Operator, Generic, Whitespace$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vim.py	/^     Number, Operator, Generic, Whitespace, Token$/;"	i
Whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^Whitespace  = Text.Whitespace$/;"	v
Win1250HungarianModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langhungarianmodel.py	/^Win1250HungarianModel = {$/;"	v
Win1250HungarianModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcsgroupprober.py	/^from .langhungarianmodel import Latin2HungarianModel, Win1250HungarianModel$/;"	i
Win1251BulgarianModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langbulgarianmodel.py	/^Win1251BulgarianModel = {$/;"	v
Win1251BulgarianModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcsgroupprober.py	/^from .langbulgarianmodel import Latin5BulgarianModel, Win1251BulgarianModel$/;"	i
Win1251CyrillicModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langcyrillicmodel.py	/^Win1251CyrillicModel = {$/;"	v
Win1251CyrillicModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcsgroupprober.py	/^from .langcyrillicmodel import (Win1251CyrillicModel, Koi8rModel,$/;"	i
Win1253GreekModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langgreekmodel.py	/^Win1253GreekModel = {$/;"	v
Win1253GreekModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcsgroupprober.py	/^from .langgreekmodel import Latin7GreekModel, Win1253GreekModel$/;"	i
Win1255HebrewModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langhebrewmodel.py	/^Win1255HebrewModel = {$/;"	v
Win1255HebrewModel	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcsgroupprober.py	/^from .langhebrewmodel import Win1255HebrewModel$/;"	i
WinEnterHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:WinEnterHandler()$/;"	f
WinLeaveHandler	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:WinLeaveHandler()$/;"	f
Windows	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    import Queue as _  # Platform-specific: Windows$/;"	i
Wq	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
WrapForTmux	configs/gui.vim	/^function! WrapForTmux(s)$/;"	f
WrappedSocket	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^class WrappedSocket(object):$/;"	c
Write	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
X	plugged/vim-ruby/spec/indent/blocks_spec.rb	/^      module X$/;"	m
X	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^        class X(object):$/;"	c
XQueryLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^from pygments.lexers.webmisc import DuelLexer, XQueryLexer, SlimLexer, QmlLexer$/;"	i
XQueryLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^class XQueryLexer(ExtendedRegexLexer):$/;"	c
XQueryLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^from pygments.lexers.webmisc import DuelLexer, XQueryLexer, SlimLexer, QmlLexer$/;"	i
XQueryLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^class XQueryLexer(ExtendedRegexLexer):$/;"	c
XTermPasteBegin	configs/gui.vim	/^function! XTermPasteBegin()$/;"	f
XcodeStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/xcode.py	/^class XcodeStyle(Style):$/;"	c
XcodeStyle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/xcode.py	/^class XcodeStyle(Style):$/;"	c
XmlDjangoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class XmlDjangoLexer(DelegatingLexer):$/;"	c
XmlDjangoLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class XmlDjangoLexer(DelegatingLexer):$/;"	c
XmlErbLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class XmlErbLexer(DelegatingLexer):$/;"	c
XmlErbLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class XmlErbLexer(DelegatingLexer):$/;"	c
XmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^from pygments.lexers.html import XmlLexer$/;"	i
XmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^class XmlLexer(RegexLexer):$/;"	c
XmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^from pygments.lexers.html import HtmlLexer, XmlLexer$/;"	i
XmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^from pygments.lexers.html import HtmlLexer, XmlLexer$/;"	i
XmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^    HamlLexer, ScamlLexer, JadeLexer$/;"	i
XmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^from pygments.lexers.html import XmlLexer$/;"	i
XmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^class XmlLexer(RegexLexer):$/;"	c
XmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^from pygments.lexers.html import HtmlLexer, XmlLexer$/;"	i
XmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^from pygments.lexers.html import HtmlLexer, XmlLexer$/;"	i
XmlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^    HamlLexer, ScamlLexer, JadeLexer$/;"	i
XmlPhpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class XmlPhpLexer(DelegatingLexer):$/;"	c
XmlPhpLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class XmlPhpLexer(DelegatingLexer):$/;"	c
XmlSmartyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class XmlSmartyLexer(DelegatingLexer):$/;"	c
XmlSmartyLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class XmlSmartyLexer(DelegatingLexer):$/;"	c
XsltLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^class XsltLexer(XmlLexer):$/;"	c
XsltLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^    HamlLexer, ScamlLexer, JadeLexer$/;"	i
XsltLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^class XsltLexer(XmlLexer):$/;"	c
XsltLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^    HamlLexer, ScamlLexer, JadeLexer$/;"	i
XtendLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^class XtendLexer(RegexLexer):$/;"	c
XtendLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^class XtendLexer(RegexLexer):$/;"	c
YELLOW	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^YELLOW = "#fec418"$/;"	v
YELLOW	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^YELLOW = "#fec418"$/;"	v
YELLOW	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^YELLOW = "#fec418"$/;"	v
YELLOW	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^YELLOW = "#fec418"$/;"	v
YamlJinjaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^class YamlJinjaLexer(DelegatingLexer):$/;"	c
YamlJinjaLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^class YamlJinjaLexer(DelegatingLexer):$/;"	c
YamlJinjaParser	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^class YamlJinjaParser(HtmlDjangoParser):$/;"	c
YamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^class YamlLexer(ExtendedRegexLexer):$/;"	c
YamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^from pygments.lexers.data import YamlLexer$/;"	i
YamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^from pygments.lexers.data import YamlLexer$/;"	i
YamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^class YamlLexer(ExtendedRegexLexer):$/;"	c
YamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^from pygments.lexers.data import YamlLexer$/;"	i
YamlLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^from pygments.lexers.data import YamlLexer$/;"	i
YamlLexerContext	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^class YamlLexerContext(LexerContext):$/;"	c
YamlLexerContext	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^class YamlLexerContext(LexerContext):$/;"	c
ZERO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^ZERO = datetime.timedelta(0)$/;"	v
ZERO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^from pytz import utc, UTC, HOUR, ZERO$/;"	i
ZERO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^ZERO = datetime.timedelta(0)$/;"	v
ZERO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^from pytz import utc, UTC, HOUR, ZERO$/;"	i
ZERO_OR_MORE	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^ZERO_OR_MORE = '*'$/;"	v
ZephirLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^class ZephirLexer(RegexLexer):$/;"	c
ZephirLexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^class ZephirLexer(RegexLexer):$/;"	c
Zl	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Zl = u'\\u2028'$/;"	v
Zl	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Zl = u'\\u2028'$/;"	v
Zp	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Zp = u'\\u2029'$/;"	v
Zp	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Zp = u'\\u2029'$/;"	v
Zs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^Zs = u' \\xa0\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000'$/;"	v
Zs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^Zs = u' \\xa0\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000'$/;"	v
[M	plugged/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','b','n')<CR>$/;"	m
[[	plugged/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[]	plugged/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[c	plugged/vim-gitgutter/plugin/gitgutter.vim	/^    nmap [c <Plug>GitGutterPrevHunk$/;"	m
[m	plugged/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','b','n')<CR>$/;"	m
]M	plugged/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','','n')<CR>$/;"	m
][	plugged/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]]	plugged/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]c	plugged/vim-gitgutter/plugin/gitgutter.vim	/^    nmap ]c <Plug>GitGutterNextHunk$/;"	m
]m	plugged/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','','n')<CR>$/;"	m
_	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^from gettext import gettext as _$/;"	i
_	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    import Queue as _  # Platform-specific: Windows$/;"	i
_ADDRESS_COMMAND_PATTERN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    _ADDRESS_COMMAND_PATTERN = _c(r'^\\s*address\\s+command\\b')$/;"	v	class:RexxLexer
_ADDRESS_COMMAND_PATTERN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    _ADDRESS_COMMAND_PATTERN = _c(r'^\\s*address\\s+command\\b')$/;"	v	class:RexxLexer
_ADDRESS_PATTERN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    _ADDRESS_PATTERN = _c(r'^\\s*address\\s+')$/;"	v	class:RexxLexer
_ADDRESS_PATTERN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    _ADDRESS_PATTERN = _c(r'^\\s*address\\s+')$/;"	v	class:RexxLexer
_ActionsContainer	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class _ActionsContainer(object):$/;"	c
_AppendAction	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class _AppendAction(Action):$/;"	c
_AppendConstAction	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class _AppendConstAction(Action):$/;"	c
_ArgumentGroup	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class _ArgumentGroup(_ActionsContainer):$/;"	c
_AttributeHolder	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class _AttributeHolder(object):$/;"	c
_BUILTIN_LIB	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/idl.py	/^    _BUILTIN_LIB = ($/;"	v	class:IDLLexer
_BUILTIN_LIB	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/idl.py	/^    _BUILTIN_LIB = ($/;"	v	class:IDLLexer
_CONSTANTS	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^_CONSTANTS = {$/;"	v
_ChoicesPseudoAction	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    class _ChoicesPseudoAction(Action):$/;"	c	class:_SubParsersAction
_CountAction	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class _CountAction(Action):$/;"	c
_CountryNameDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^class _CountryNameDict(LazyDict):$/;"	c
_CountryNameDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^class _CountryNameDict(LazyDict):$/;"	c
_CountryTimezoneDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^class _CountryTimezoneDict(LazyDict):$/;"	c
_CountryTimezoneDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^class _CountryTimezoneDict(LazyDict):$/;"	c
_DISTRIBUTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    _DISTRIBUTIONS = ('dbern', 'dbin', 'dcat', 'dnegbin', 'dpois',$/;"	v	class:BugsLexer
_DISTRIBUTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    _DISTRIBUTIONS = tuple('[dpq]%s' % x for x in$/;"	v	class:JagsLexer
_DISTRIBUTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    _DISTRIBUTIONS = ('dbern', 'dbin', 'dcat', 'dnegbin', 'dpois',$/;"	v	class:BugsLexer
_DISTRIBUTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    _DISTRIBUTIONS = tuple('[dpq]%s' % x for x in$/;"	v	class:JagsLexer
_DO_WHILE_PATTERN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    _DO_WHILE_PATTERN = _c(r'^\\s*do\\s+while\\b')$/;"	v	class:RexxLexer
_DO_WHILE_PATTERN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    _DO_WHILE_PATTERN = _c(r'^\\s*do\\s+while\\b')$/;"	v	class:RexxLexer
_Default	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^_Default = object()$/;"	v
_Default	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/timeout.py	/^_Default = object()$/;"	v
_ELSE_DO_PATTERN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    _ELSE_DO_PATTERN = _c(r'\\belse\\s+do\\s*$')$/;"	v	class:RexxLexer
_ELSE_DO_PATTERN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    _ELSE_DO_PATTERN = _c(r'\\belse\\s+do\\s*$')$/;"	v	class:RexxLexer
_FAKE_POLL_H	plugged/vimproc.vim/autoload/fakepoll.h	/^#define _FAKE_POLL_H$/;"	d
_FUNCTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    _FUNCTIONS = ($/;"	v	class:BugsLexer
_FUNCTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    _FUNCTIONS = ($/;"	v	class:JagsLexer
_FUNCTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    _FUNCTIONS = ($/;"	v	class:BugsLexer
_FUNCTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    _FUNCTIONS = ($/;"	v	class:JagsLexer
_FixedOffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^class _FixedOffset(datetime.tzinfo):$/;"	c
_FixedOffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^class _FixedOffset(datetime.tzinfo):$/;"	c
_GLOBAL_DEFAULT_TIMEOUT	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/timeout.py	/^from socket import _GLOBAL_DEFAULT_TIMEOUT$/;"	i
_GNU_SOURCE	plugged/vimproc.vim/autoload/ptytty.c	/^# define _GNU_SOURCE$/;"	d	file:
_HTTPConnection	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    from http.client import HTTPConnection as _HTTPConnection, HTTPException$/;"	i
_HTTPConnection	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    from httplib import HTTPConnection as _HTTPConnection, HTTPException$/;"	i
_HTTPError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .packages.urllib3.exceptions import HTTPError as _HTTPError$/;"	i
_HelpAction	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class _HelpAction(Action):$/;"	c
_IF_THEN_DO_PATTERN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    _IF_THEN_DO_PATTERN = _c(r'^\\s*if\\b.+\\bthen\\s+do\\s*$')$/;"	v	class:RexxLexer
_IF_THEN_DO_PATTERN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    _IF_THEN_DO_PATTERN = _c(r'^\\s*if\\b.+\\bthen\\s+do\\s*$')$/;"	v	class:RexxLexer
_INT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    _INT = r'[0-9]+'$/;"	v	class:AntlrLexer
_INT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    _INT = r'[0-9]+'$/;"	v	class:AntlrLexer
_LazyDescr	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^class _LazyDescr(object):$/;"	c
_MovedItems	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^class _MovedItems(types.ModuleType):$/;"	c
_MutuallyExclusiveGroup	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class _MutuallyExclusiveGroup(_ArgumentGroup):$/;"	c
_NULL	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^_NULL = _byte_string('\\0')$/;"	v
_NULL	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^_NULL = _byte_string('\\0')$/;"	v
_Null	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^_Null = object()$/;"	v
_OTHER_DISTRIBUTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    _OTHER_DISTRIBUTIONS = ($/;"	v	class:JagsLexer
_OTHER_DISTRIBUTIONS	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    _OTHER_DISTRIBUTIONS = ($/;"	v	class:JagsLexer
_PARSE_ARG_PATTERN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    _PARSE_ARG_PATTERN = _c(r'^\\s*parse\\s+(upper\\s+)?(arg|value)\\b')$/;"	v	class:RexxLexer
_PARSE_ARG_PATTERN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    _PARSE_ARG_PATTERN = _c(r'^\\s*parse\\s+(upper\\s+)?(arg|value)\\b')$/;"	v	class:RexxLexer
_POSIX_	plugged/vimproc.vim/autoload/proc_w32.c	/^#define _POSIX_$/;"	d	file:
_PROCEDURE_PATTERN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    _PROCEDURE_PATTERN = _c(r'^\\s*([a-z_]\\w*)(\\s*)(:)(\\s*)(procedure)\\b')$/;"	v	class:RexxLexer
_PROCEDURE_PATTERN	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    _PROCEDURE_PATTERN = _c(r'^\\s*([a-z_]\\w*)(\\s*)(:)(\\s*)(procedure)\\b')$/;"	v	class:RexxLexer
_ProxyError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .packages.urllib3.exceptions import ProxyError as _ProxyError$/;"	i
_PseudoMatch	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^class _PseudoMatch(object):$/;"	c
_PseudoMatch	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^class _PseudoMatch(object):$/;"	c
_PyEncoderObject	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^typedef struct _PyEncoderObject {$/;"	s	file:
_PyScannerObject	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^typedef struct _PyScannerObject {$/;"	s	file:
_RESERVED	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/idl.py	/^    _RESERVED = ($/;"	v	class:IDLLexer
_RESERVED	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/idl.py	/^    _RESERVED = ($/;"	v	class:IDLLexer
_RULE_REF	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    _RULE_REF = r'[a-z]\\w*'$/;"	v	class:AntlrLexer
_RULE_REF	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    _RULE_REF = r'[a-z]\\w*'$/;"	v	class:AntlrLexer
_SSLError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .packages.urllib3.exceptions import SSLError as _SSLError$/;"	i
_STRING_LITERAL	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    _STRING_LITERAL = r'\\'(?:\\\\\\\\|\\\\\\'|[^\\']*)\\''$/;"	v	class:AntlrLexer
_STRING_LITERAL	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    _STRING_LITERAL = r'\\'(?:\\\\\\\\|\\\\\\'|[^\\']*)\\''$/;"	v	class:AntlrLexer
_Section	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    class _Section(object):$/;"	c	class:HelpFormatter
_StoreAction	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class _StoreAction(Action):$/;"	c
_StoreConstAction	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class _StoreConstAction(Action):$/;"	c
_StoreFalseAction	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class _StoreFalseAction(_StoreConstAction):$/;"	c
_StoreTrueAction	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class _StoreTrueAction(_StoreConstAction):$/;"	c
_SubParsersAction	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class _SubParsersAction(Action):$/;"	c
_TOKEN_REF	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    _TOKEN_REF = r'[A-Z]\\w*'$/;"	v	class:AntlrLexer
_TOKEN_REF	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    _TOKEN_REF = r'[A-Z]\\w*'$/;"	v	class:AntlrLexer
_Table	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^class _Table(object):$/;"	c
_Table	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^class _Table(object):$/;"	c
_This	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^class _This(object):$/;"	c
_This	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^class _This(object):$/;"	c
_TokenType	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^from pygments.token import Error, Text, Other, _TokenType$/;"	i
_TokenType	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^class _TokenType(tuple):$/;"	c
_TokenType	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^from pygments.token import Error, Text, Other, _TokenType$/;"	i
_TokenType	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^class _TokenType(tuple):$/;"	c
_UNRECOGNIZED_ARGS_ATTR	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^_UNRECOGNIZED_ARGS_ATTR = '_unrecognized_args'$/;"	v
_UTC	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^def _UTC():$/;"	f
_UTC	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^def _UTC():$/;"	f
_VersionAction	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^class _VersionAction(Action):$/;"	c
_WIN32_IE	plugged/vimproc.vim/make_msvc.mak	/^_WIN32_IE = 0x0500$/;"	m
_WIN32_WINNT	plugged/vimproc.vim/autoload/proc_w32.c	/^#define _WIN32_WINNT /;"	d	file:
_XOPEN_SOURCE	plugged/vimproc.vim/autoload/proc.c	/^#define _XOPEN_SOURCE /;"	d	file:
__BSD_VISIBLE	plugged/vimproc.vim/autoload/proc.c	/^# define __BSD_VISIBLE /;"	d	file:
__all__	plugged/vim-wakatime/plugin/packages/wakatime/__init__.py	/^__all__ = ['main']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^__all__ = [$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/__init__.py	/^__all__ = ['lex', 'format', 'highlight']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatter.py	/^__all__ = ['Formatter']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^__all__ = ['get_formatter_by_name', 'get_formatter_for_filename',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/bbcode.py	/^__all__ = ['BBCodeFormatter']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^__all__ = ['HtmlFormatter']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^__all__ = ['ImageFormatter', 'GifImageFormatter', 'JpgImageFormatter',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^__all__ = ['LatexFormatter']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^__all__ = ['NullFormatter', 'RawTokenFormatter', 'TestcaseFormatter']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/rtf.py	/^__all__ = ['RtfFormatter']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/svg.py	/^__all__ = ['SvgFormatter']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^__all__ = ['TerminalFormatter']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal256.py	/^__all__ = ['Terminal256Formatter']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^__all__ = ['Lexer', 'RegexLexer', 'ExtendedRegexLexer', 'DelegatingLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^__all__ = ['get_lexer_by_name', 'get_lexer_for_filename', 'find_lexer_class',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^__all__ = ['ActionScriptLexer', 'ActionScript3Lexer', 'MxmlLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/agile.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^__all__ = ['GAPLexer', 'MathematicaLexer', 'MuPADLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^__all__ = ['AmbientTalkLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/apl.py	/^__all__ = ['APLLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^__all__ = ['GasLexer', 'ObjdumpLexer', 'DObjdumpLexer', 'CppObjdumpLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^__all__ = ['AutohotkeyLexer', 'AutoItLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^__all__ = ['BlitzBasicLexer', 'BlitzMaxLexer', 'MonkeyLexer', 'CbmBasicV2Lexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^__all__ = ['CobolLexer', 'CobolFreeformatLexer', 'ABAPLexer', 'OpenEdgeLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^__all__ = ['CLexer', 'CppLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^__all__ = ['PikeLexer', 'NesCLexer', 'ClayLexer', 'ECLexer', 'ValaLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/chapel.py	/^__all__ = ['ChapelLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/compiled.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^__all__ = ['IniLexer', 'RegeditLexer', 'PropertiesLexer', 'KconfigLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^__all__ = ['VCTreeStatusLexer', 'PyPyLogLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^__all__ = ['CssLexer', 'SassLexer', 'ScssLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^__all__ = ['DLexer', 'CrocLexer', 'MiniDLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dalvik.py	/^__all__ = ['SmaliLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^__all__ = ['YamlLexer', 'JsonLexer', 'JsonLdLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^__all__ = ['DiffLexer', 'DarcsPatchLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^__all__ = ['CSharpLexer', 'NemerleLexer', 'BooLexer', 'VbNetLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^__all__ = ['ProtoBufLexer', 'BroLexer', 'PuppetLexer', 'RslLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^__all__ = ['DylanLexer', 'DylanConsoleLexer', 'DylanLidLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^__all__ = ['ECLLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/eiffel.py	/^__all__ = ['EiffelLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^__all__ = ['ErlangLexer', 'ErlangShellLexer', 'ElixirConsoleLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^__all__ = ['BrainfuckLexer', 'BefungeLexer', 'RedcodeLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^__all__ = ['FactorLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^__all__ = ['FantomLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^__all__ = ['FelixLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^__all__ = ['FortranLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/foxpro.py	/^__all__ = ['FoxProLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/functional.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^__all__ = ['GoLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^__all__ = ['CypherLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^__all__ = ['GLShaderLexer', 'PostScriptLexer', 'AsymptoteLexer', 'GnuplotLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^__all__ = ['HaskellLexer', 'IdrisLexer', 'AgdaLexer', 'CryptolLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^__all__ = ['HaxeLexer', 'HxmlLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^__all__ = ['VerilogLexer', 'SystemVerilogLexer', 'VhdlLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^__all__ = ['HtmlLexer', 'DtdLexer', 'XmlLexer', 'XsltLexer', 'HamlLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/idl.py	/^__all__ = ['IDLLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^__all__ = ['IgorLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^__all__ = ['LimboLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^__all__ = ['NSISLexer', 'RPMSpecLexer', 'SourcesListLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^__all__ = ['Inform6Lexer', 'Inform6TemplateLexer', 'Inform7Lexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/iolang.py	/^__all__ = ['IoLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^__all__ = ['JavascriptLexer', 'KalLexer', 'LiveScriptLexer', 'DartLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^__all__ = ['JuliaLexer', 'JuliaConsoleLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^__all__ = ['JavaLexer', 'ScalaLexer', 'GosuLexer', 'GosuTemplateLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^__all__ = ['SchemeLexer', 'CommonLispLexer', 'HyLexer', 'RacketLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^__all__ = ['MakefileLexer', 'BaseMakefileLexer', 'CMakeLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^__all__ = ['BBCodeLexer', 'MoinWikiLexer', 'RstLexer', 'TexLexer', 'GroffLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/math.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^__all__ = ['MatlabLexer', 'MatlabSessionLexer', 'OctaveLexer', 'ScilabLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^__all__ = ['SMLLexer', 'OcamlLexer', 'OpaLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^__all__ = ['ModelicaLexer', 'BugsLexer', 'JagsLexer', 'StanLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^__all__ = ['NimrodLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nit.py	/^__all__ = ['NitLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^__all__ = ['NixLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^__all__ = ['ObjectiveCLexer', 'ObjectiveCppLexer', 'LogosLexer', 'SwiftLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ooc.py	/^__all__ = ['OocLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/other.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^__all__ = ['RagelLexer', 'RagelEmbeddedLexer', 'RagelCLexer', 'RagelDLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^__all__ = ['DelphiLexer', 'Modula2Lexer', 'AdaLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^__all__ = ['SourcePawnLexer', 'PawnLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^__all__ = ['PerlLexer', 'Perl6Lexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^__all__ = ['ZephirLexer', 'PhpLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^__all__ = ['PrologLexer', 'LogtalkLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^__all__ = ['PythonLexer', 'PythonConsoleLexer', 'PythonTracebackLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^__all__ = ['RConsoleLexer', 'SLexer', 'RdLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^__all__ = ['SparqlLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^__all__ = ['RebolLexer', 'RedLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^__all__ = ['ResourceLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^__all__ = ['RobotFrameworkLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^__all__ = ['RubyLexer', 'RubyConsoleLexer', 'FancyLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^__all__ = ['RustLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^__all__ = ['LuaLexer', 'MoonScriptLexer', 'ChaiscriptLexer', 'LSLLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^__all__ = ['BashLexer', 'BashSessionLexer', 'TcshLexer', 'BatchLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^__all__ = ['SmalltalkLexer', 'NewspeakLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/snobol.py	/^__all__ = ['SnobolLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^__all__ = ['TextLexer', 'RawTokenLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^__all__ = ['PostgresLexer', 'PlPgsqlLexer', 'PostgresConsoleLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^__all__ = ['TclLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^__all__ = ['HtmlPhpLexer', 'XmlPhpLexer', 'CssPhpLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/testing.py	/^__all__ = ['GherkinLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/text.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^__all__ = ['AwkLexer', 'VimLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^__all__ = ['IrcLogsLexer', 'TodotxtLexer', 'HttpLexer', 'GettextLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^__all__ = ['CoqLexer', 'IsabelleLexer', 'LeanLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^__all__ = ['UrbiscriptLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/web.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^__all__ = ['DuelLexer', 'SlimLexer', 'XQueryLexer', 'QmlLexer', 'CirruLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/modeline.py	/^__all__ = ['get_filetype_from_buffer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/__init__.py	/^__all__ = ['lex', 'format', 'highlight']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatter.py	/^__all__ = ['Formatter']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^__all__ = ['get_formatter_by_name', 'get_formatter_for_filename',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/bbcode.py	/^__all__ = ['BBCodeFormatter']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^__all__ = ['HtmlFormatter']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^__all__ = ['ImageFormatter', 'GifImageFormatter', 'JpgImageFormatter',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^__all__ = ['LatexFormatter']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^__all__ = ['NullFormatter', 'RawTokenFormatter', 'TestcaseFormatter']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/rtf.py	/^__all__ = ['RtfFormatter']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/svg.py	/^__all__ = ['SvgFormatter']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^__all__ = ['TerminalFormatter']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal256.py	/^__all__ = ['Terminal256Formatter']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^__all__ = ['Lexer', 'RegexLexer', 'ExtendedRegexLexer', 'DelegatingLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^__all__ = ['get_lexer_by_name', 'get_lexer_for_filename', 'find_lexer_class',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^__all__ = ['ActionScriptLexer', 'ActionScript3Lexer', 'MxmlLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/agile.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^__all__ = ['GAPLexer', 'MathematicaLexer', 'MuPADLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^__all__ = ['AmbientTalkLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/apl.py	/^__all__ = ['APLLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^__all__ = ['GasLexer', 'ObjdumpLexer', 'DObjdumpLexer', 'CppObjdumpLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^__all__ = ['AutohotkeyLexer', 'AutoItLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^__all__ = ['BlitzBasicLexer', 'BlitzMaxLexer', 'MonkeyLexer', 'CbmBasicV2Lexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^__all__ = ['CobolLexer', 'CobolFreeformatLexer', 'ABAPLexer', 'OpenEdgeLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^__all__ = ['CLexer', 'CppLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^__all__ = ['PikeLexer', 'NesCLexer', 'ClayLexer', 'ECLexer', 'ValaLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/chapel.py	/^__all__ = ['ChapelLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/compiled.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^__all__ = ['IniLexer', 'RegeditLexer', 'PropertiesLexer', 'KconfigLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^__all__ = ['VCTreeStatusLexer', 'PyPyLogLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^__all__ = ['CssLexer', 'SassLexer', 'ScssLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^__all__ = ['DLexer', 'CrocLexer', 'MiniDLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dalvik.py	/^__all__ = ['SmaliLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^__all__ = ['YamlLexer', 'JsonLexer', 'JsonLdLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^__all__ = ['DiffLexer', 'DarcsPatchLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^__all__ = ['CSharpLexer', 'NemerleLexer', 'BooLexer', 'VbNetLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^__all__ = ['ProtoBufLexer', 'BroLexer', 'PuppetLexer', 'RslLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^__all__ = ['DylanLexer', 'DylanConsoleLexer', 'DylanLidLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^__all__ = ['ECLLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/eiffel.py	/^__all__ = ['EiffelLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^__all__ = ['ErlangLexer', 'ErlangShellLexer', 'ElixirConsoleLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^__all__ = ['BrainfuckLexer', 'BefungeLexer', 'RedcodeLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^__all__ = ['FactorLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^__all__ = ['FantomLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^__all__ = ['FelixLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^__all__ = ['FortranLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/foxpro.py	/^__all__ = ['FoxProLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/functional.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^__all__ = ['GoLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^__all__ = ['CypherLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^__all__ = ['GLShaderLexer', 'PostScriptLexer', 'AsymptoteLexer', 'GnuplotLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^__all__ = ['HaskellLexer', 'IdrisLexer', 'AgdaLexer', 'CryptolLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^__all__ = ['HaxeLexer', 'HxmlLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^__all__ = ['VerilogLexer', 'SystemVerilogLexer', 'VhdlLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^__all__ = ['HtmlLexer', 'DtdLexer', 'XmlLexer', 'XsltLexer', 'HamlLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/idl.py	/^__all__ = ['IDLLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^__all__ = ['IgorLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^__all__ = ['LimboLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^__all__ = ['NSISLexer', 'RPMSpecLexer', 'SourcesListLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^__all__ = ['Inform6Lexer', 'Inform6TemplateLexer', 'Inform7Lexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/iolang.py	/^__all__ = ['IoLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^__all__ = ['JavascriptLexer', 'KalLexer', 'LiveScriptLexer', 'DartLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^__all__ = ['JuliaLexer', 'JuliaConsoleLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^__all__ = ['JavaLexer', 'ScalaLexer', 'GosuLexer', 'GosuTemplateLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^__all__ = ['SchemeLexer', 'CommonLispLexer', 'HyLexer', 'RacketLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^__all__ = ['MakefileLexer', 'BaseMakefileLexer', 'CMakeLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^__all__ = ['BBCodeLexer', 'MoinWikiLexer', 'RstLexer', 'TexLexer', 'GroffLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/math.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^__all__ = ['MatlabLexer', 'MatlabSessionLexer', 'OctaveLexer', 'ScilabLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^__all__ = ['SMLLexer', 'OcamlLexer', 'OpaLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^__all__ = ['ModelicaLexer', 'BugsLexer', 'JagsLexer', 'StanLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^__all__ = ['NimrodLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nit.py	/^__all__ = ['NitLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^__all__ = ['NixLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^__all__ = ['ObjectiveCLexer', 'ObjectiveCppLexer', 'LogosLexer', 'SwiftLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ooc.py	/^__all__ = ['OocLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/other.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^__all__ = ['RagelLexer', 'RagelEmbeddedLexer', 'RagelCLexer', 'RagelDLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^__all__ = ['DelphiLexer', 'Modula2Lexer', 'AdaLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^__all__ = ['SourcePawnLexer', 'PawnLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^__all__ = ['PerlLexer', 'Perl6Lexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^__all__ = ['ZephirLexer', 'PhpLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^__all__ = ['PrologLexer', 'LogtalkLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^__all__ = ['PythonLexer', 'PythonConsoleLexer', 'PythonTracebackLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^__all__ = ['RConsoleLexer', 'SLexer', 'RdLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^__all__ = ['SparqlLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^__all__ = ['RebolLexer', 'RedLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^__all__ = ['ResourceLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^__all__ = ['RobotFrameworkLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^__all__ = ['RubyLexer', 'RubyConsoleLexer', 'FancyLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^__all__ = ['RustLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^__all__ = ['LuaLexer', 'MoonScriptLexer', 'ChaiscriptLexer', 'LSLLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^__all__ = ['BashLexer', 'BashSessionLexer', 'TcshLexer', 'BatchLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^__all__ = ['SmalltalkLexer', 'NewspeakLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/snobol.py	/^__all__ = ['SnobolLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^__all__ = ['TextLexer', 'RawTokenLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^__all__ = ['PostgresLexer', 'PlPgsqlLexer', 'PostgresConsoleLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^__all__ = ['TclLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^__all__ = ['HtmlPhpLexer', 'XmlPhpLexer', 'CssPhpLexer',$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/testing.py	/^__all__ = ['GherkinLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/text.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^__all__ = ['AwkLexer', 'VimLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^__all__ = ['IrcLogsLexer', 'TodotxtLexer', 'HttpLexer', 'GettextLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^__all__ = ['CoqLexer', 'IsabelleLexer', 'LeanLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^__all__ = ['UrbiscriptLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/web.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^__all__ = ['DuelLexer', 'SlimLexer', 'XQueryLexer', 'QmlLexer', 'CirruLexer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/modeline.py	/^__all__ = ['get_filetype_from_buffer']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^__all__ = [$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/exceptions.py	/^__all__ = [$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^__all__ = [$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/exceptions.py	/^__all__ = [$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^__all__ = ['RecentlyUsedContainer', 'HTTPHeaderDict']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^__all__ = ['inject_into_urllib3', 'extract_from_urllib3']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ssl_match_hostname/__init__.py	/^__all__ = ('CertificateError', 'match_hostname')$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^__all__ = ['PoolManager', 'ProxyManager', 'proxy_from_url']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/request.py	/^__all__ = ['RequestMethods']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^__all__ = [$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^__all__ = ['JSONDecoder']$/;"	v
__all__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/scanner.py	/^__all__ = ['make_scanner', 'JSONDecodeError']$/;"	v
__attrs__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^    __attrs__ = ['max_retries', 'config', '_pool_connections', '_pool_maxsize',$/;"	v	class:HTTPAdapter
__attrs__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    __attrs__ = [$/;"	v	class:Response
__attrs__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    __attrs__ = [$/;"	v	class:Session
__author__	plugged/vim-wakatime/plugin/packages/wakatime/__about__.py	/^__author__ = 'Alan Hamlett'$/;"	v
__author__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^__author__ = 'Kenneth Reitz'$/;"	v
__author__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^__author__ = 'Andrey Petrov (andrey.petrov@shazow.net)'$/;"	v
__author__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^__author__ = "Benjamin Peterson <benjamin@python.org>"$/;"	v
__author__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^__author__ = 'Bob Ippolito <bob@redivi.com>'$/;"	v
__author_email__	plugged/vim-wakatime/plugin/packages/wakatime/__about__.py	/^__author_email__ = 'alan@wakatime.com'$/;"	v
__bool__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def __bool__(self):$/;"	m	class:Response	file:
__build__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^__build__ = 0x020700$/;"	v
__call__	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:FileAction	file:
__call__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:Action	file:
__call__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_AppendAction	file:
__call__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_AppendConstAction	file:
__call__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_CountAction	file:
__call__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_HelpAction	file:
__call__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_StoreAction	file:
__call__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_StoreConstAction	file:
__call__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_SubParsersAction	file:
__call__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_VersionAction	file:
__call__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __call__(self, string):$/;"	m	class:FileType	file:
__call__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def __call__(cls, *args, **kwds):$/;"	m	class:RegexLexerMeta	file:
__call__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def __call__(cls, *args, **kwds):$/;"	m	class:RegexLexerMeta	file:
__call__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def __call__(self, iso3166_code):$/;"	m	class:_CountryTimezoneDict	file:
__call__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def __call__(self, iso3166_code):$/;"	m	class:_CountryTimezoneDict	file:
__call__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^    def __call__(self, r):$/;"	m	class:AuthBase	file:
__call__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^    def __call__(self, r):$/;"	m	class:HTTPBasicAuth	file:
__call__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^    def __call__(self, r):$/;"	m	class:HTTPDigestAuth	file:
__call__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^    def __call__(self, r):$/;"	m	class:HTTPProxyAuth	file:
__contains__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __contains__(self, key):$/;"	m	class:Namespace	file:
__contains__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^    def __contains__(self, val):$/;"	m	class:_TokenType	file:
__contains__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^    def __contains__(self, val):$/;"	m	class:_TokenType	file:
__contains__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^    def __contains__(self, key):$/;"	m	class:LazyDict	file:
__contains__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^    def __contains__(self, key):$/;"	m	class:LazyDict	file:
__contains__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def __contains__(self, key):$/;"	m	class:HTTPHeaderDict	file:
__copyright__	plugged/vim-wakatime/plugin/packages/wakatime/__about__.py	/^__copyright__ = 'Copyright 2014 Alan Hamlett'$/;"	v
__copyright__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^__copyright__ = 'Copyright 2015 Kenneth Reitz'$/;"	v
__delitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    def __delitem__(self, key):$/;"	m	class:OrderedDict	file:
__delitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def __delitem__(self, name):$/;"	m	class:RequestsCookieJar	file:
__delitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def __delitem__(self, key):$/;"	m	class:HTTPHeaderDict	file:
__delitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def __delitem__(self, key):$/;"	m	class:RecentlyUsedContainer	file:
__delitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def __delitem__(self, key, dict_delitem=dict.__delitem__):$/;"	m	class:OrderedDict	file:
__delitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/structures.py	/^    def __delitem__(self, key):$/;"	m	class:CaseInsensitiveDict	file:
__delitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def __delitem__(self, key):$/;"	m	class:OrderedDict	file:
__description__	plugged/vim-wakatime/plugin/packages/wakatime/__about__.py	/^__description__ = 'Common interface to the WakaTime api.'$/;"	v
__docformat__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/__init__.py	/^__docformat__ = 'restructuredtext'$/;"	v
__docformat__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/__init__.py	/^__docformat__ = 'restructuredtext'$/;"	v
__enter__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^        def __enter__(self):$/;"	m	class:RLock	file:
__enter__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def __enter__(self):$/;"	m	class:ConnectionPool	file:
__enter__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^    def __enter__(self):$/;"	m	class:PoolManager	file:
__enter__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def __enter__(self):$/;"	m	class:Session	file:
__eq__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __eq__(self, other):$/;"	m	class:Namespace	file:
__eq__	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    def __eq__(self, other):$/;"	m	class:OrderedDict	file:
__eq__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def __eq__(self, other):$/;"	m	class:HTTPHeaderDict	file:
__eq__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def __eq__(self, other):$/;"	m	class:OrderedDict	file:
__eq__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/structures.py	/^    def __eq__(self, other):$/;"	m	class:CaseInsensitiveDict	file:
__eq__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def __eq__(self, other):$/;"	m	class:OrderedDict	file:
__exit__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^        def __exit__(self, exc_type, exc_value, traceback):$/;"	m	class:RLock	file:
__exit__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def __exit__(self, exc_type, exc_val, exc_tb):$/;"	m	class:ConnectionPool	file:
__exit__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^    def __exit__(self, exc_type, exc_val, exc_tb):$/;"	m	class:PoolManager	file:
__exit__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def __exit__(self, *args):$/;"	m	class:Session	file:
__external_lib__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^__external_lib__ = True  # to make sure the tests really test THIS lib,$/;"	v
__get__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    def __get__(self, obj, tp):$/;"	m	class:_LazyDescr	file:
__getattr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^    def __getattr__(self, name):$/;"	m	class:_automodule	file:
__getattr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^    def __getattr__(self, name):$/;"	m	class:_automodule	file:
__getattr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^    def __getattr__(self, val):$/;"	m	class:_TokenType	file:
__getattr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^    def __getattr__(self, name):$/;"	m	class:_automodule	file:
__getattr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^    def __getattr__(self, name):$/;"	m	class:_automodule	file:
__getattr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^    def __getattr__(self, val):$/;"	m	class:_TokenType	file:
__getattr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def __getattr__(self, name):$/;"	m	class:DeflateDecoder	file:
__getattr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def __getattr__(self, name):$/;"	m	class:GzipDecoder	file:
__getitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^    def __getitem__(self, key):$/;"	m	class:LazyDict	file:
__getitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^    def __getitem__(self, key):$/;"	m	class:LazyDict	file:
__getitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def __getitem__(self, name):$/;"	m	class:RequestsCookieJar	file:
__getitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def __getitem__(self, key):$/;"	m	class:HTTPHeaderDict	file:
__getitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def __getitem__(self, key):$/;"	m	class:RecentlyUsedContainer	file:
__getitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/structures.py	/^    def __getitem__(self, key):$/;"	m	class:CaseInsensitiveDict	file:
__getitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/structures.py	/^    def __getitem__(self, key):$/;"	m	class:LookupDict	file:
__getstate__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^    def __getstate__(self):$/;"	m	class:HTTPAdapter	file:
__getstate__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def __getstate__(self):$/;"	m	class:RequestsCookieJar	file:
__getstate__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def __getstate__(self):$/;"	m	class:Response	file:
__getstate__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def __getstate__(self):$/;"	m	class:Session	file:
__hash__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    __hash__ = None$/;"	v	class:Namespace
__init__	plugged/Nvim-R/R/synctex_evince_backward.py	/^    def __init__(self, uri, spawn = False):$/;"	m	class:EvinceWindowProxy
__init__	plugged/Nvim-R/R/synctex_evince_forward.py	/^    def __init__(self, uri, spawn = False):$/;"	m	class:EvinceWindowProxy
__init__	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^    def __init__(self, source_file, lexer):$/;"	m	class:DependencyParser
__init__	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^    def __init__(self, source_file, lexer=None):$/;"	m	class:TokenParser
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^        def __init__(self, formatter, parent, heading=None):$/;"	m	class:HelpFormatter._Section
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^        def __init__(self, name, aliases, help):$/;"	m	class:_SubParsersAction._ChoicesPseudoAction
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __init__(self, **kwargs):$/;"	m	class:Namespace
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __init__(self, argument, message):$/;"	m	class:ArgumentError
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __init__(self, container, required=False):$/;"	m	class:_MutuallyExclusiveGroup
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __init__(self, container, title=None, description=None, **kwargs):$/;"	m	class:_ArgumentGroup
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __init__(self, mode='r', bufsize=None):$/;"	m	class:FileType
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:Action
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:ArgumentParser
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:HelpFormatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_ActionsContainer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_AppendAction
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_AppendConstAction
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_CountAction
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_HelpAction
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_StoreAction
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_StoreConstAction
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_StoreFalseAction
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_StoreTrueAction
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_SubParsersAction
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_VersionAction
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:OrderedDict
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filter.py	/^    def __init__(self, **options):$/;"	m	class:Filter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filter.py	/^    def __init__(self, **options):$/;"	m	class:FunctionFilter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:CodeTagFilter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:GobbleFilter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:KeywordCaseFilter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:NameHighlightFilter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:RaiseOnErrorTokenFilter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:TokenMergeFilter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:VisibleWhitespaceFilter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatter.py	/^    def __init__(self, **options):$/;"	m	class:Formatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/bbcode.py	/^    def __init__(self, **options):$/;"	m	class:BBCodeFormatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    def __init__(self, **options):$/;"	m	class:HtmlFormatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def __init__(self, **options):$/;"	m	class:ImageFormatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def __init__(self, font_name, font_size=14):$/;"	m	class:FontManager
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^    def __init__(self, **options):$/;"	m	class:LatexFormatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^    def __init__(self, left, right, lang, **options):$/;"	m	class:LatexEmbeddedLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^    def __init__(self, **options):$/;"	m	class:RawTokenFormatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^    def __init__(self, **options):$/;"	m	class:TestcaseFormatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/rtf.py	/^    def __init__(self, **options):$/;"	m	class:RtfFormatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/svg.py	/^    def __init__(self, **options):$/;"	m	class:SvgFormatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^    def __init__(self, **options):$/;"	m	class:TerminalFormatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal256.py	/^    def __init__(self, **options):$/;"	m	class:Terminal256Formatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal256.py	/^    def __init__(self, fg=None, bg=None, bold=False, underline=False):$/;"	m	class:EscapeSequence
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def __init__(self, **options):$/;"	m	class:Lexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def __init__(self, *args):$/;"	m	class:combined
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def __init__(self, _root_lexer, _language_lexer, _needle=Other, **options):$/;"	m	class:DelegatingLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def __init__(self, start, text):$/;"	m	class:_PseudoMatch
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def __init__(self, state):$/;"	m	class:default
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def __init__(self, text, pos, stack=None, end=None):$/;"	m	class:LexerContext
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def __init__(self, words, prefix='', suffix=''):$/;"	m	class:words
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    def __init__(self, **options):$/;"	m	class:CObjdumpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    def __init__(self, **options):$/;"	m	class:CppObjdumpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    def __init__(self, **options):$/;"	m	class:DObjdumpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    def __init__(self, **options):$/;"	m	class:CFamilyLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:YamlLexerContext
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    def __init__(self, **options):$/;"	m	class:CSharpAspxLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    def __init__(self, **options):$/;"	m	class:CSharpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    def __init__(self, **options):$/;"	m	class:NemerleLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    def __init__(self, **options):$/;"	m	class:VbNetAspxLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    def __init__(self, **options):$/;"	m	class:LiterateAgdaLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    def __init__(self, **options):$/;"	m	class:LiterateCryptolLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    def __init__(self, **options):$/;"	m	class:LiterateHaskellLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    def __init__(self, **options):$/;"	m	class:LiterateIdrisLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    def __init__(self, baselexer, **options):$/;"	m	class:LiterateLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    def __init__(self, **options):$/;"	m	class:Inform7Lexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    def __init__(self, **options):$/;"	m	class:LassoLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    def __init__(self, **options):$/;"	m	class:CommonLispLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    def __init__(self, **options):$/;"	m	class:MozPreprocCssLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    def __init__(self, **options):$/;"	m	class:MozPreprocJavascriptLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    def __init__(self, **options):$/;"	m	class:MozPreprocXulLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    def __init__(self, **options):$/;"	m	class:RstLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrActionScriptLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrCSharpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrCppLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrJavaLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrObjectiveCLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrPerlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrPythonLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrRubyLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:RagelCLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:RagelCppLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:RagelDLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:RagelJavaLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:RagelObjectiveCLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:RagelRubyLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:TreetopLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    def __init__(self, **options):$/;"	m	class:DelphiLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    def __init__(self, **options):$/;"	m	class:Modula2Lexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    def __init__(self, **options):$/;"	m	class:SourcePawnLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    def __init__(self, **options):$/;"	m	class:Perl6Lexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    def __init__(self, **options):$/;"	m	class:PhpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    def __init__(self, **options):$/;"	m	class:PythonConsoleLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def __init__(self):$/;"	m	class:ForLoop
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def __init__(self):$/;"	m	class:RowTokenizer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def __init__(self):$/;"	m	class:Tokenizer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def __init__(self, **options):$/;"	m	class:RobotFrameworkLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def __init__(self, prev_tokenizer=None):$/;"	m	class:_Table
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def __init__(self, string, identifiers):$/;"	m	class:VariableSplitter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def __init__(self, support_assign=True):$/;"	m	class:KeywordCall
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def __init__(self, template_setter, prev_tokenizer=None):$/;"	m	class:SettingTable
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def __init__(self, template_setter=None):$/;"	m	class:Setting
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    def __init__(self, **options):$/;"	m	class:LuaLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^    def __init__(self, **options):$/;"	m	class:RawTokenLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    def __init__(self, x):$/;"	m	class:lookahead
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CheetahHtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CheetahJavascriptLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CheetahXmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:ColdfusionCFCLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:ColdfusionHtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CssDjangoLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CssErbLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CssGenshiLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CssPhpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CssSmartyLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:ErbLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:EvoqueHtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:EvoqueXmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:GenshiLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:HandlebarsHtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:HtmlDjangoLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:HtmlGenshiLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:HtmlPhpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:HtmlSmartyLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:JavascriptDjangoLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:JavascriptErbLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:JavascriptGenshiLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:JavascriptPhpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:JavascriptSmartyLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:JspLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:LassoCssLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:LassoHtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:LassoJavascriptLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:LassoXmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MakoCssLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MakoHtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MakoJavascriptLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MakoXmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MyghtyCssLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MyghtyHtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MyghtyJavascriptLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MyghtyXmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:RhtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:SspLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:TeaTemplateLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:TwigHtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:VelocityHtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:VelocityXmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:XmlDjangoLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:XmlErbLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:XmlPhpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:XmlSmartyLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:YamlJinjaLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    def __init__(self, **options):$/;"	m	class:VimLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/scanner.py	/^    def __init__(self, text, flags=0):$/;"	m	class:Scanner
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^    def __init__(self, *args):$/;"	m	class:_TokenType
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filter.py	/^    def __init__(self, **options):$/;"	m	class:Filter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filter.py	/^    def __init__(self, **options):$/;"	m	class:FunctionFilter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:CodeTagFilter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:GobbleFilter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:KeywordCaseFilter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:NameHighlightFilter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:RaiseOnErrorTokenFilter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:TokenMergeFilter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:VisibleWhitespaceFilter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatter.py	/^    def __init__(self, **options):$/;"	m	class:Formatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/bbcode.py	/^    def __init__(self, **options):$/;"	m	class:BBCodeFormatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    def __init__(self, **options):$/;"	m	class:HtmlFormatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def __init__(self, **options):$/;"	m	class:ImageFormatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def __init__(self, font_name, font_size=14):$/;"	m	class:FontManager
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^    def __init__(self, **options):$/;"	m	class:LatexFormatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^    def __init__(self, left, right, lang, **options):$/;"	m	class:LatexEmbeddedLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^    def __init__(self, **options):$/;"	m	class:RawTokenFormatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^    def __init__(self, **options):$/;"	m	class:TestcaseFormatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/rtf.py	/^    def __init__(self, **options):$/;"	m	class:RtfFormatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/svg.py	/^    def __init__(self, **options):$/;"	m	class:SvgFormatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^    def __init__(self, **options):$/;"	m	class:TerminalFormatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal256.py	/^    def __init__(self, **options):$/;"	m	class:Terminal256Formatter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal256.py	/^    def __init__(self, fg=None, bg=None, bold=False, underline=False):$/;"	m	class:EscapeSequence
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def __init__(self, **options):$/;"	m	class:Lexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def __init__(self, *args):$/;"	m	class:combined
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def __init__(self, _root_lexer, _language_lexer, _needle=Other, **options):$/;"	m	class:DelegatingLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def __init__(self, start, text):$/;"	m	class:_PseudoMatch
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def __init__(self, state):$/;"	m	class:default
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def __init__(self, text, pos, stack=None, end=None):$/;"	m	class:LexerContext
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def __init__(self, words, prefix='', suffix=''):$/;"	m	class:words
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    def __init__(self, **options):$/;"	m	class:CObjdumpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    def __init__(self, **options):$/;"	m	class:CppObjdumpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    def __init__(self, **options):$/;"	m	class:DObjdumpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    def __init__(self, **options):$/;"	m	class:CFamilyLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:YamlLexerContext
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    def __init__(self, **options):$/;"	m	class:CSharpAspxLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    def __init__(self, **options):$/;"	m	class:CSharpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    def __init__(self, **options):$/;"	m	class:NemerleLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    def __init__(self, **options):$/;"	m	class:VbNetAspxLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    def __init__(self, **options):$/;"	m	class:LiterateAgdaLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    def __init__(self, **options):$/;"	m	class:LiterateCryptolLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    def __init__(self, **options):$/;"	m	class:LiterateHaskellLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    def __init__(self, **options):$/;"	m	class:LiterateIdrisLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    def __init__(self, baselexer, **options):$/;"	m	class:LiterateLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    def __init__(self, **options):$/;"	m	class:Inform7Lexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    def __init__(self, **options):$/;"	m	class:LassoLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    def __init__(self, **options):$/;"	m	class:CommonLispLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    def __init__(self, **options):$/;"	m	class:MozPreprocCssLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    def __init__(self, **options):$/;"	m	class:MozPreprocJavascriptLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    def __init__(self, **options):$/;"	m	class:MozPreprocXulLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    def __init__(self, **options):$/;"	m	class:RstLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrActionScriptLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrCSharpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrCppLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrJavaLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrObjectiveCLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrPerlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrPythonLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrRubyLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:RagelCLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:RagelCppLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:RagelDLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:RagelJavaLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:RagelObjectiveCLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:RagelRubyLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:TreetopLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    def __init__(self, **options):$/;"	m	class:DelphiLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    def __init__(self, **options):$/;"	m	class:Modula2Lexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    def __init__(self, **options):$/;"	m	class:SourcePawnLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    def __init__(self, **options):$/;"	m	class:Perl6Lexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    def __init__(self, **options):$/;"	m	class:PhpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    def __init__(self, **options):$/;"	m	class:PythonConsoleLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def __init__(self):$/;"	m	class:ForLoop
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def __init__(self):$/;"	m	class:RowTokenizer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def __init__(self):$/;"	m	class:Tokenizer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def __init__(self, **options):$/;"	m	class:RobotFrameworkLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def __init__(self, prev_tokenizer=None):$/;"	m	class:_Table
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def __init__(self, string, identifiers):$/;"	m	class:VariableSplitter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def __init__(self, support_assign=True):$/;"	m	class:KeywordCall
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def __init__(self, template_setter, prev_tokenizer=None):$/;"	m	class:SettingTable
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def __init__(self, template_setter=None):$/;"	m	class:Setting
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    def __init__(self, **options):$/;"	m	class:LuaLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^    def __init__(self, **options):$/;"	m	class:RawTokenLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    def __init__(self, x):$/;"	m	class:lookahead
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CheetahHtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CheetahJavascriptLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CheetahXmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:ColdfusionCFCLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:ColdfusionHtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CssDjangoLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CssErbLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CssGenshiLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CssPhpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CssSmartyLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:ErbLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:EvoqueHtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:EvoqueXmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:GenshiLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:HandlebarsHtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:HtmlDjangoLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:HtmlGenshiLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:HtmlPhpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:HtmlSmartyLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:JavascriptDjangoLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:JavascriptErbLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:JavascriptGenshiLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:JavascriptPhpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:JavascriptSmartyLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:JspLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:LassoCssLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:LassoHtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:LassoJavascriptLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:LassoXmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MakoCssLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MakoHtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MakoJavascriptLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MakoXmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MyghtyCssLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MyghtyHtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MyghtyJavascriptLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MyghtyXmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:RhtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:SspLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:TeaTemplateLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:TwigHtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:VelocityHtmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:VelocityXmlLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:XmlDjangoLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:XmlErbLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:XmlPhpLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:XmlSmartyLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:YamlJinjaLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    def __init__(self, **options):$/;"	m	class:VimLexer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/scanner.py	/^    def __init__(self, text, flags=0):$/;"	m	class:Scanner
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^    def __init__(self, *args):$/;"	m	class:_TokenType
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def __init__(self, minutes):$/;"	m	class:_FixedOffset
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^    def __init__(self, hours, reprname, stdname, dstname):$/;"	m	class:USTimeZone
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^    def __init__(self, offset, name):$/;"	m	class:FixedOffset
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    def __init__(self, _inf=None, _tzinfos=None):$/;"	m	class:DstTzInfo
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def __init__(self, minutes):$/;"	m	class:_FixedOffset
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^    def __init__(self, hours, reprname, stdname, dstname):$/;"	m	class:USTimeZone
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^    def __init__(self, offset, name):$/;"	m	class:FixedOffset
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    def __init__(self, _inf=None, _tzinfos=None):$/;"	m	class:DstTzInfo
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^    def __init__(self):$/;"	m	class:BaseAdapter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^    def __init__(self, pool_connections=DEFAULT_POOLSIZE,$/;"	m	class:HTTPAdapter
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^    def __init__(self, username, password):$/;"	m	class:HTTPBasicAuth
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^    def __init__(self, username, password):$/;"	m	class:HTTPDigestAuth
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def __init__(self, headers):$/;"	m	class:MockResponse
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def __init__(self, request):$/;"	m	class:MockRequest
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/exceptions.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:RequestException
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def __init__(self):$/;"	m	class:PreparedRequest
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def __init__(self):$/;"	m	class:Response
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def __init__(self, method=None, url=None, headers=None, files=None,$/;"	m	class:Request
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/big5prober.py	/^    def __init__(self):$/;"	m	class:Big5Prober
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^    def __init__(self):$/;"	m	class:Big5DistributionAnalysis
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^    def __init__(self):$/;"	m	class:CharDistributionAnalysis
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^    def __init__(self):$/;"	m	class:EUCJPDistributionAnalysis
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^    def __init__(self):$/;"	m	class:EUCKRDistributionAnalysis
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^    def __init__(self):$/;"	m	class:EUCTWDistributionAnalysis
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^    def __init__(self):$/;"	m	class:GB2312DistributionAnalysis
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^    def __init__(self):$/;"	m	class:SJISDistributionAnalysis
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetgroupprober.py	/^    def __init__(self):$/;"	m	class:CharSetGroupProber
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetprober.py	/^    def __init__(self):$/;"	m	class:CharSetProber
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/codingstatemachine.py	/^    def __init__(self, sm):$/;"	m	class:CodingStateMachine
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/cp949prober.py	/^    def __init__(self):$/;"	m	class:CP949Prober
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escprober.py	/^    def __init__(self):$/;"	m	class:EscCharSetProber
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/eucjpprober.py	/^    def __init__(self):$/;"	m	class:EUCJPProber
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euckrprober.py	/^    def __init__(self):$/;"	m	class:EUCKRProber
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euctwprober.py	/^    def __init__(self):$/;"	m	class:EUCTWProber
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/gb2312prober.py	/^    def __init__(self):$/;"	m	class:GB2312Prober
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^    def __init__(self):$/;"	m	class:HebrewProber
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^    def __init__(self):$/;"	m	class:JapaneseContextAnalysis
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^    def __init__(self):$/;"	m	class:SJISContextAnalysis
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^    def __init__(self):$/;"	m	class:Latin1Prober
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcharsetprober.py	/^    def __init__(self):$/;"	m	class:MultiByteCharSetProber
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcsgroupprober.py	/^    def __init__(self):$/;"	m	class:MBCSGroupProber
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcharsetprober.py	/^    def __init__(self, model, reversed=False, nameProber=None):$/;"	m	class:SingleByteCharSetProber
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcsgroupprober.py	/^    def __init__(self):$/;"	m	class:SBCSGroupProber
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sjisprober.py	/^    def __init__(self):$/;"	m	class:SJISProber
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^    def __init__(self):$/;"	m	class:UniversalDetector
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/utf8prober.py	/^    def __init__(self):$/;"	m	class:UTF8Prober
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def __init__(self, headers=None, **kwargs):$/;"	m	class:HTTPHeaderDict
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def __init__(self, maxsize=10, dispose_func=None):$/;"	m	class:RecentlyUsedContainer
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    def __init__(self, *args, **kw):$/;"	m	class:HTTPConnection
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    def __init__(self, host, port=None, key_file=None, cert_file=None,$/;"	m	class:HTTPSConnection
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def __init__(self, host, port=None):$/;"	m	class:ConnectionPool
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def __init__(self, host, port=None, strict=False,$/;"	m	class:HTTPConnectionPool
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def __init__(self, host, port=None,$/;"	m	class:HTTPSConnectionPool
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/ntlmpool.py	/^    def __init__(self, user, pw, authurl, *args, **kwargs):$/;"	m	class:NTLMConnectionPool
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^    def __init__(self, connection, socket, suppress_ragged_eofs=True):$/;"	m	class:WrappedSocket
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^    def __init__(self, location):$/;"	m	class:LocationParseError
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^    def __init__(self, pool, message):$/;"	m	class:PoolError
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^    def __init__(self, pool, url, message):$/;"	m	class:RequestError
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^    def __init__(self, pool, url, reason=None):$/;"	m	class:MaxRetryError
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^    def __init__(self, pool, url, retries=3):$/;"	m	class:HostChangedError
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/fields.py	/^    def __init__(self, name, data, filename=None, headers=None):$/;"	m	class:RequestField
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:OrderedDict
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    def __init__(self, name):$/;"	m	class:_LazyDescr
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    def __init__(self, name, old, new=None):$/;"	m	class:MovedModule
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    def __init__(self, name, old_mod, new_mod, old_attr=None, new_attr=None):$/;"	m	class:MovedAttribute
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^    def __init__(self, num_pools=10, headers=None, **connection_pool_kw):$/;"	m	class:PoolManager
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^    def __init__(self, proxy_url, num_pools=10, headers=None,$/;"	m	class:ProxyManager
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/request.py	/^    def __init__(self, headers=None):$/;"	m	class:RequestMethods
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def __init__(self):$/;"	m	class:DeflateDecoder
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def __init__(self):$/;"	m	class:GzipDecoder
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def __init__(self, body='', headers=None, status=0, version=0, reason=None,$/;"	m	class:HTTPResponse
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/retry.py	/^    def __init__(self, total=10, connect=None, read=None, redirect=None,$/;"	m	class:Retry
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^        def __init__(self, protocol_version):$/;"	m	class:SSLContext
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/timeout.py	/^    def __init__(self, total=None, connect=_Default, read=_Default):$/;"	m	class:Timeout
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def __init__(self):$/;"	m	class:Session
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/structures.py	/^    def __init__(self, data=None, **kwargs):$/;"	m	class:CaseInsensitiveDict
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/structures.py	/^    def __init__(self, name=None):$/;"	m	class:LookupDict
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^    def __init__(self, encoding=None, object_hook=None, parse_float=None,$/;"	m	class:JSONDecoder
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^    def __init__(self, skipkeys=False, ensure_ascii=True,$/;"	m	class:JSONEncoder
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:OrderedDict
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/scanner.py	/^    def __init__(self, msg, doc, pos, end=None):$/;"	m	class:JSONDecodeError
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^            def __init__(self, *args, **kwargs):$/;"	m	class:TestDump.test_indent_unknown_type_acceptance.AwesomeInt
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^    def __init__(self, *args):$/;"	m	class:DuckPoint
__init__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^    def __init__(self, *args):$/;"	m	class:DuckValue
__init__	plugged/vim-wakatime/plugin/packages/wakatime/projects/base.py	/^    def __init__(self, path, configs=None):$/;"	m	class:BaseProject
__iter__	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    def __iter__(self):$/;"	m	class:OrderedDict	file:
__iter__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    def __iter__(self):$/;"	m	class:lookahead	file:
__iter__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/style.py	/^    def __iter__(cls):$/;"	m	class:StyleMeta	file:
__iter__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    def __iter__(self):$/;"	m	class:lookahead	file:
__iter__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/style.py	/^    def __iter__(cls):$/;"	m	class:StyleMeta	file:
__iter__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^    def __iter__(self):$/;"	m	class:LazyDict	file:
__iter__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^    def __iter__(self):$/;"	m	class:LazyDict	file:
__iter__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def __iter__(self):$/;"	m	class:Response	file:
__iter__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def __iter__(self):$/;"	m	class:RecentlyUsedContainer	file:
__iter__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def __iter__(self):$/;"	m	class:OrderedDict	file:
__iter__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/structures.py	/^    def __iter__(self):$/;"	m	class:CaseInsensitiveDict	file:
__iter__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def __iter__(self):$/;"	m	class:OrderedDict	file:
__len__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/style.py	/^    def __len__(cls):$/;"	m	class:StyleMeta	file:
__len__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/style.py	/^    def __len__(cls):$/;"	m	class:StyleMeta	file:
__len__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^    def __len__(self):$/;"	m	class:LazyDict	file:
__len__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^    def __len__(self):$/;"	m	class:LazyDict	file:
__len__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def __len__(self):$/;"	m	class:RecentlyUsedContainer	file:
__len__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^            def __len__(self):$/;"	m	class:X	file:
__len__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/structures.py	/^    def __len__(self):$/;"	m	class:CaseInsensitiveDict	file:
__license__	plugged/vim-wakatime/plugin/packages/wakatime/__about__.py	/^__license__ = 'BSD'$/;"	v
__license__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^__license__ = 'Apache 2.0'$/;"	v
__license__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^__license__ = 'MIT'$/;"	v
__marker	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    __marker = object()$/;"	v	class:HTTPHeaderDict
__marker	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    __marker = object()$/;"	v	class:OrderedDict
__mul__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^            def __mul__(self, other):$/;"	m	class:TestDump.test_indent_unknown_type_acceptance.AwesomeInt	file:
__ne__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __ne__(self, other):$/;"	m	class:Namespace	file:
__ne__	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    def __ne__(self, other):$/;"	m	class:OrderedDict	file:
__ne__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def __ne__(self, other):$/;"	m	class:HTTPHeaderDict	file:
__ne__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def __ne__(self, other):$/;"	m	class:OrderedDict	file:
__ne__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def __ne__(self, other):$/;"	m	class:OrderedDict	file:
__new__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def __new__(cls, *args):$/;"	m	class:combined	file:
__new__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def __new__(cls, name, bases, d):$/;"	m	class:LexerMeta	file:
__new__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/style.py	/^    def __new__(mcs, name, bases, dct):$/;"	m	class:StyleMeta	file:
__new__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def __new__(cls, *args):$/;"	m	class:combined	file:
__new__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def __new__(cls, name, bases, d):$/;"	m	class:LexerMeta	file:
__new__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/style.py	/^    def __new__(mcs, name, bases, dct):$/;"	m	class:StyleMeta	file:
__new__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^    def __new__(cls, fill_iter):$/;"	m	class:LazyList	file:
__new__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^    def __new__(cls, fill_iter):$/;"	m	class:LazySet	file:
__new__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^    def __new__(cls, fill_iter):$/;"	m	class:LazyList	file:
__new__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^    def __new__(cls, fill_iter):$/;"	m	class:LazySet	file:
__new__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/url.py	/^    def __new__(cls, scheme=None, auth=None, host=None, port=None, path=None,$/;"	m	class:Url	file:
__new__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^        def __new__(cls, *args):$/;"	m	class:Point	file:
__new__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^        def __new__(cls, *args):$/;"	m	class:Value	file:
__next__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    def __next__(self):$/;"	m	class:lookahead	file:
__next__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    def __next__(self):$/;"	m	class:lookahead	file:
__nonzero__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def __nonzero__(self):$/;"	m	class:Response	file:
__reduce__	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    def __reduce__(self):$/;"	m	class:OrderedDict	file:
__reduce__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def __reduce__(self):$/;"	m	class:UTC	file:
__reduce__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def __reduce__(self):$/;"	m	class:_FixedOffset	file:
__reduce__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    def __reduce__(self):$/;"	m	class:DstTzInfo	file:
__reduce__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    def __reduce__(self):$/;"	m	class:StaticTzInfo	file:
__reduce__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def __reduce__(self):$/;"	m	class:UTC	file:
__reduce__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def __reduce__(self):$/;"	m	class:_FixedOffset	file:
__reduce__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    def __reduce__(self):$/;"	m	class:DstTzInfo	file:
__reduce__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    def __reduce__(self):$/;"	m	class:StaticTzInfo	file:
__reduce__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^    def __reduce__(self):$/;"	m	class:PoolError	file:
__reduce__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/exceptions.py	/^    def __reduce__(self):$/;"	m	class:RequestError	file:
__reduce__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def __reduce__(self):$/;"	m	class:OrderedDict	file:
__reduce__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def __reduce__(self):$/;"	m	class:OrderedDict	file:
__reduce__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/scanner.py	/^    def __reduce__(self):$/;"	m	class:JSONDecodeError	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __repr__(self):$/;"	m	class:FileType	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __repr__(self):$/;"	m	class:_AttributeHolder	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    def __repr__(self):$/;"	m	class:OrderedDict	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def __repr__(self):$/;"	m	class:Lexer	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def __repr__(self):$/;"	m	class:LexerContext	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def __repr__(self):$/;"	m	class:_inherit	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/scanner.py	/^    def __repr__(self):$/;"	m	class:Scanner	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^    def __repr__(self):$/;"	m	class:_TokenType	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def __repr__(self):$/;"	m	class:Lexer	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def __repr__(self):$/;"	m	class:LexerContext	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def __repr__(self):$/;"	m	class:_inherit	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/scanner.py	/^    def __repr__(self):$/;"	m	class:Scanner	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^    def __repr__(self):$/;"	m	class:_TokenType	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def __repr__(self):$/;"	m	class:UTC	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def __repr__(self):$/;"	m	class:_FixedOffset	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^    def __repr__(self):$/;"	m	class:USTimeZone	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    def __repr__(self):$/;"	m	class:DstTzInfo	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    def __repr__(self):$/;"	m	class:StaticTzInfo	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def __repr__(self):$/;"	m	class:UTC	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def __repr__(self):$/;"	m	class:_FixedOffset	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^    def __repr__(self):$/;"	m	class:USTimeZone	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    def __repr__(self):$/;"	m	class:DstTzInfo	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    def __repr__(self):$/;"	m	class:StaticTzInfo	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def __repr__(self):$/;"	m	class:PreparedRequest	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def __repr__(self):$/;"	m	class:Request	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def __repr__(self):$/;"	m	class:Response	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def __repr__(self):$/;"	m	class:HTTPHeaderDict	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def __repr__(self, _repr_running={}):$/;"	m	class:OrderedDict	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/retry.py	/^    def __repr__(self):$/;"	m	class:Retry	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/structures.py	/^    def __repr__(self):$/;"	m	class:CaseInsensitiveDict	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/structures.py	/^    def __repr__(self):$/;"	m	class:LookupDict	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def __repr__(self):$/;"	m	class:OrderedDict	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_subclass.py	/^    def __repr__(self):$/;"	m	class:AlternateFloat	file:
__repr__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_subclass.py	/^    def __repr__(self):$/;"	m	class:AlternateInt	file:
__reversed__	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    def __reversed__(self):$/;"	m	class:OrderedDict	file:
__reversed__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def __reversed__(self):$/;"	m	class:OrderedDict	file:
__reversed__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def __reversed__(self):$/;"	m	class:OrderedDict	file:
__setitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    def __setitem__(self, key, value):$/;"	m	class:OrderedDict	file:
__setitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def __setitem__(self, name, value):$/;"	m	class:RequestsCookieJar	file:
__setitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def __setitem__(self, key, val):$/;"	m	class:HTTPHeaderDict	file:
__setitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def __setitem__(self, key, value):$/;"	m	class:RecentlyUsedContainer	file:
__setitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def __setitem__(self, key, value, dict_setitem=dict.__setitem__):$/;"	m	class:OrderedDict	file:
__setitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/structures.py	/^    def __setitem__(self, key, value):$/;"	m	class:CaseInsensitiveDict	file:
__setitem__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def __setitem__(self, key, value):$/;"	m	class:OrderedDict	file:
__setstate__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^    def __setstate__(self, state):$/;"	m	class:HTTPAdapter	file:
__setstate__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def __setstate__(self, state):$/;"	m	class:RequestsCookieJar	file:
__setstate__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def __setstate__(self, state):$/;"	m	class:Response	file:
__setstate__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def __setstate__(self, state):$/;"	m	class:Session	file:
__str__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def __str__(self):$/;"	m	class:ArgumentError	file:
__str__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def __str__(self):$/;"	m	class:UTC	file:
__str__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    def __str__(self):$/;"	m	class:BaseTzInfo	file:
__str__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def __str__(self):$/;"	m	class:UTC	file:
__str__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    def __str__(self):$/;"	m	class:BaseTzInfo	file:
__str__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def __str__(self):$/;"	m	class:ConnectionPool	file:
__str__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/timeout.py	/^    def __str__(self):$/;"	m	class:Timeout	file:
__str__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/url.py	/^    def __str__(self):$/;"	m	class:Url	file:
__str__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_subclass.py	/^    __str__ = __repr__$/;"	v	class:AlternateFloat
__str__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_subclass.py	/^    __str__ = __repr__$/;"	v	class:AlternateInt
__title__	plugged/vim-wakatime/plugin/packages/wakatime/__about__.py	/^__title__ = 'wakatime'$/;"	v
__title__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^__title__ = 'requests'$/;"	v
__update	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    __update = update  # let subclasses override update without breaking __init__$/;"	v	class:OrderedDict
__url__	plugged/vim-wakatime/plugin/packages/wakatime/__about__.py	/^__url__ = 'https:\/\/github.com\/wakatime\/wakatime'$/;"	v
__version__	plugged/vim-wakatime/plugin/packages/wakatime/__about__.py	/^__version__ = '.'.join(__version_info__)$/;"	v
__version__	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^from .__about__ import __version__$/;"	i
__version__	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^__version__ = '1.3.0'  # we use our own version number independant of the$/;"	v
__version__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/__init__.py	/^__version__ = '2.0.1'$/;"	v
__version__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^from pygments import __version__, highlight$/;"	i
__version__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/__init__.py	/^__version__ = '2.0.1'$/;"	v
__version__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^from pygments import __version__, highlight$/;"	i
__version__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^__version__ = OLSON_VERSION$/;"	v
__version__	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^__version__ = OLSON_VERSION$/;"	v
__version__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^__version__ = '2.7.0'$/;"	v
__version__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/__init__.py	/^__version__ = "2.3.0"$/;"	v
__version__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardetect.py	/^from chardet import __version__$/;"	i
__version__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^__version__ = '1.10.4'$/;"	v
__version__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^__version__ = "1.2.0"  # Revision 41c74fef2ded$/;"	v
__version__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ssl_match_hostname/_implementation.py	/^__version__ = '3.4.0.2'$/;"	v
__version__	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^from . import __version__$/;"	i
__version__	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^__version__ = '3.8.0'$/;"	v
__version_info__	plugged/vim-wakatime/plugin/packages/wakatime/__about__.py	/^__version_info__ = ('4', '1', '6')$/;"	v
_add_action	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _add_action(self, action):$/;"	m	class:ArgumentParser
_add_action	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _add_action(self, action):$/;"	m	class:_ActionsContainer
_add_action	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _add_action(self, action):$/;"	m	class:_ArgumentGroup
_add_action	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _add_action(self, action):$/;"	m	class:_MutuallyExclusiveGroup
_add_container_actions	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _add_container_actions(self, container):$/;"	m	class:_ActionsContainer
_add_doc	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^def _add_doc(func, doc):$/;"	f
_add_item	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _add_item(self, func, args):$/;"	m	class:HelpFormatter
_add_to_errors	plugged/syntastic/plugin/syntastic.vim	/^function! s:_add_to_errors(errors, options) abort " {{{2$/;"	f
_apply	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filter.py	/^    def _apply(filter_, stream):$/;"	f	function:apply_filters
_apply	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filter.py	/^    def _apply(filter_, stream):$/;"	f	function:apply_filters
_asdict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^        def _asdict(self):$/;"	m	class:Point
_asdict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^        def _asdict(self):$/;"	m	class:Value
_asdict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^    _asdict = None$/;"	v	class:DeadDict
_asdict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^    _asdict = None$/;"	v	class:DeadDuck
_asdict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^    def _asdict(self):$/;"	m	class:DuckPoint
_asdict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^    def _asdict(self):$/;"	m	class:DuckValue
_automodule	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^class _automodule(types.ModuleType):$/;"	c
_automodule	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^class _automodule(types.ModuleType):$/;"	c
_automodule	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^class _automodule(types.ModuleType):$/;"	c
_automodule	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^class _automodule(types.ModuleType):$/;"	c
_basic_auth_str	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .auth import _basic_auth_str$/;"	i
_basic_auth_str	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^def _basic_auth_str(username, password):$/;"	f
_basic_auth_str	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from .auth import _basic_auth_str$/;"	i
_block_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    _block_re = re.compile(r'(<%%|%%>|<%=|<%#|<%-|<%|-%>|%>|^%[^%].*?$)', re.M)$/;"	v	class:ErbLexer
_block_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    _block_re = re.compile(r'(<%%|%%>|<%=|<%#|<%-|<%|-%>|%>|^%[^%].*?$)', re.M)$/;"	v	class:ErbLexer
_blocking_errnos	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^_blocking_errnos = set([errno.EAGAIN, errno.EWOULDBLOCK])$/;"	v
_break	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    _break = r'(?=[%s]|$)' % _separator$/;"	v	class:JasminLexer
_break	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    _break = r'(?=[%s]|$)' % _separator$/;"	v	class:JasminLexer
_build_color_table	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal256.py	/^    def _build_color_table(self):$/;"	m	class:Terminal256Formatter
_build_color_table	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal256.py	/^    def _build_color_table(self):$/;"	m	class:Terminal256Formatter
_build_module	plugged/unite.vim/autoload/vital/_unite.vim	/^function! s:_build_module(sid) abort$/;"	f
_build_rval_index_tuple	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^_build_rval_index_tuple(PyObject *rval, Py_ssize_t idx)$/;"	f	file:
_build_word_match	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    def _build_word_match(words, boundary_regex_fragment=None, prefix='', suffix=''):$/;"	m	class:Perl6Lexer
_build_word_match	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    def _build_word_match(words, boundary_regex_fragment=None, prefix='', suffix=''):$/;"	m	class:Perl6Lexer
_builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    _builtins = ($/;"	v	class:RacketLexer
_builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    _builtins = ($/;"	v	class:RacketLexer
_byte_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^from pytz.tzfile import build_tzinfo, _byte_string$/;"	i
_byte_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^from pytz.tzfile import _byte_string$/;"	i
_byte_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^def _byte_string(s):$/;"	f
_byte_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^from pytz.tzfile import build_tzinfo, _byte_string$/;"	i
_byte_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^from pytz.tzfile import _byte_string$/;"	i
_byte_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^def _byte_string(s):$/;"	f
_c	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    _c = lambda s: re.compile(s, re.MULTILINE)$/;"	v	class:RexxLexer
_c	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    _c = lambda s: re.compile(s, re.MULTILINE)$/;"	v	class:RexxLexer
_cache_tz	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/unix.py	/^_cache_tz = None$/;"	v
_cache_tz	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/win32.py	/^_cache_tz = None$/;"	v
_cache_tz	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/unix.py	/^_cache_tz = None$/;"	v
_cache_tz	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/win32.py	/^_cache_tz = None$/;"	v
_callable	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^def _callable(obj):$/;"	f
_checkPackage	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPackage(name, ...) abort " {{{2$/;"	f
_checkPhp	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPhp() abort " {{{2$/;"	f
_checkPython	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPython() abort " {{{2$/;"	f
_checkRuby	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_checkRuby() abort " {{{2$/;"	f
_check_conflict	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _check_conflict(self, action):$/;"	m	class:_ActionsContainer
_check_value	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _check_value(self, action, value):$/;"	m	class:ArgumentParser
_closest_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal256.py	/^    def _closest_color(self, r, g, b):$/;"	m	class:Terminal256Formatter
_closest_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal256.py	/^    def _closest_color(self, r, g, b):$/;"	m	class:Terminal256Formatter
_closing_parenthesis	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    _closing_parenthesis = r'[)\\]}]'$/;"	v	class:RacketLexer
_closing_parenthesis	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    _closing_parenthesis = r'[)\\]}]'$/;"	v	class:RacketLexer
_codes	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/status_codes.py	/^_codes = {$/;"	v
_color_index	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal256.py	/^    def _color_index(self, color):$/;"	m	class:Terminal256Formatter
_color_index	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal256.py	/^    def _color_index(self, color):$/;"	m	class:Terminal256Formatter
_comma_dot	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    _comma_dot = r'(?:,\\s*\\n|' + _dot + ')'$/;"	v	class:HamlLexer
_comma_dot	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    _comma_dot = r'(?:,\\s*\\n|' + _dot + ')'$/;"	v	class:HamlLexer
_comment_multiline	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    _comment_multiline = r'(?:\/\\*(?:[^*]|\\*(?!\/))*\\*\/)'$/;"	v	class:Tads3Lexer
_comment_multiline	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    _comment_multiline = r'(?:\/\\*(?:[^*]|\\*(?!\/))*\\*\/)'$/;"	v	class:Tads3Lexer
_comment_single	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    _comment_single = r'(?:\/\/(?:[^\\\\\\n]|\\\\+[\\w\\W])*$)'$/;"	v	class:Tads3Lexer
_comment_single	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    _comment_single = r'(?:\/\/(?:[^\\\\\\n]|\\\\+[\\w\\W])*$)'$/;"	v	class:Tads3Lexer
_compare	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
_compare_error_items_by_columns	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_compare_error_items_by_columns(a, b) abort " {{{2$/;"	f
_compare_error_items_by_lines	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_compare_error_items_by_lines(a, b) abort " {{{2$/;"	f
_concat	plugged/unite.vim/autoload/vital/_unite.vim	/^function! s:_concat(lists) abort$/;"	f
_continues	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _continues(self, value, index):$/;"	m	class:TestCaseTable
_continues	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _continues(self, value, index):$/;"	m	class:UnknownTable
_continues	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _continues(self, value, index):$/;"	m	class:_Table
_continues	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _continues(self, value, index):$/;"	m	class:TestCaseTable
_continues	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _continues(self, value, index):$/;"	m	class:UnknownTable
_continues	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _continues(self, value, index):$/;"	m	class:_Table
_convertPyInt_AsSsize_t	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^_convertPyInt_AsSsize_t(PyObject *o, Py_ssize_t *size_ptr)$/;"	f	file:
_convertPyInt_FromSsize_t	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^_convertPyInt_FromSsize_t(Py_ssize_t *size_ptr)$/;"	f	file:
_copy	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^import copy as _copy$/;"	i
_copy_cookie_jar	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^def _copy_cookie_jar(jar):$/;"	f
_copy_cookie_jar	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^from .cookies import cookiejar_from_dict, get_cookie_header, _copy_cookie_jar$/;"	i
_copy_from	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def _copy_from(self, other):$/;"	m	class:HTTPHeaderDict
_create_drawables	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def _create_drawables(self, tokensource):$/;"	m	class:ImageFormatter
_create_drawables	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def _create_drawables(self, tokensource):$/;"	m	class:ImageFormatter
_create_hash	plugged/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:_create_hash(dir, str) abort$/;"	f
_create_nix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def _create_nix(self):$/;"	m	class:FontManager
_create_nix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def _create_nix(self):$/;"	m	class:FontManager
_create_stylesheet	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    def _create_stylesheet(self):$/;"	m	class:HtmlFormatter
_create_stylesheet	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^    def _create_stylesheet(self):$/;"	m	class:LatexFormatter
_create_stylesheet	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    def _create_stylesheet(self):$/;"	m	class:HtmlFormatter
_create_stylesheet	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^    def _create_stylesheet(self):$/;"	m	class:LatexFormatter
_create_win	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def _create_win(self):$/;"	m	class:FontManager
_create_win	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def _create_win(self):$/;"	m	class:FontManager
_custom_tokenizer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _custom_tokenizer = None$/;"	v	class:Setting
_custom_tokenizer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _custom_tokenizer = None$/;"	v	class:Setting
_dash	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    _dash = Inform6Lexer._dash$/;"	v	class:Inform7Lexer
_dash	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    _dash = u'\\\\-\\u2010-\\u2014'$/;"	v	class:Inform6Lexer
_dash	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    _dash = Inform6Lexer._dash$/;"	v	class:Inform7Lexer
_dash	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    _dash = u'\\\\-\\u2010-\\u2014'$/;"	v	class:Inform6Lexer
_datetime_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^_datetime_cache = {0: _epoch}$/;"	v
_datetime_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^_datetime_cache = {0: _epoch}$/;"	v
_debug	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/constants.py	/^_debug = 0$/;"	v
_decode	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def _decode(self, data, decode_content, flush_decoder):$/;"	m	class:HTTPResponse
_decodeifneeded	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    def _decodeifneeded(self, value):$/;"	m	class:HtmlFormatter
_decodeifneeded	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    def _decodeifneeded(self, value):$/;"	m	class:HtmlFormatter
_dedent	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _dedent(self):$/;"	m	class:HelpFormatter
_default_analyse	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^_default_analyse = staticmethod(lambda x: 0.0)$/;"	v
_default_analyse	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^_default_analyse = staticmethod(lambda x: 0.0)$/;"	v
_default_compare	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_default_decoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^_default_decoder = JSONDecoder(encoding=None, object_hook=None,$/;"	v
_default_encoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^_default_encoder = JSONEncoder($/;"	v
_default_template	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _default_template = None$/;"	v	class:TestCaseTable
_default_template	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _default_template = None$/;"	v	class:TestCaseTable
_delimiters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    _delimiters = r'()[\\]{}",\\'`;\\s'$/;"	v	class:RacketLexer
_delimiters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    _delimiters = r'()[\\]{}",\\'`;\\s'$/;"	v	class:RacketLexer
_deprecated2	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:_deprecated2(fname) abort$/;"	f
_dict_contains	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^_dict_contains = dict.__contains__$/;"	v
_dict_delitem	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^_dict_delitem = dict.__delitem__$/;"	v
_dict_getitem	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^_dict_getitem = dict.__getitem__$/;"	v
_dict_setdefault	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^_dict_setdefault = dict.setdefault$/;"	v
_dict_setitem	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^_dict_setitem = dict.__setitem__$/;"	v
_directives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    _directives = ('(?:package|prep|build|install|clean|check|pre[a-z]*|'$/;"	v	class:RPMSpecLexer
_directives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    _directives = ('(?:package|prep|build|install|clean|check|pre[a-z]*|'$/;"	v	class:RPMSpecLexer
_disabled_by_eclim	plugged/syntastic/plugin/syntastic/registry.vim	/^function! s:_disabled_by_eclim(filetype) abort " {{{2$/;"	f
_disabled_by_ycm	plugged/syntastic/plugin/syntastic/registry.vim	/^function! s:_disabled_by_ycm(filetype) abort " {{{2$/;"	f
_dnsname_match	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ssl_match_hostname/_implementation.py	/^def _dnsname_match(dn, hostname, max_wildcards=1):$/;"	f
_dot	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    _dot = r'(?: \\|\\n(?=.* \\|)|.)'$/;"	v	class:HamlLexer
_dot	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    _dot = r'.'$/;"	v	class:JadeLexer
_dot	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    _dot = r'.'$/;"	v	class:ScamlLexer
_dot	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    _dot = r'(?: \\|\\n(?=.* \\|)|.)'$/;"	v	class:SlimLexer
_dot	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    _dot = r'(?: \\|\\n(?=.* \\|)|.)'$/;"	v	class:HamlLexer
_dot	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    _dot = r'.'$/;"	v	class:JadeLexer
_dot	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    _dot = r'.'$/;"	v	class:ScamlLexer
_dot	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    _dot = r'(?: \\|\\n(?=.* \\|)|.)'$/;"	v	class:SlimLexer
_dquote	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    _dquote = Inform6Lexer._dquote$/;"	v	class:Inform7Lexer
_dquote	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    _dquote = u'"\\u201c\\u201d'$/;"	v	class:Inform6Lexer
_dquote	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    _dquote = Inform6Lexer._dquote$/;"	v	class:Inform7Lexer
_dquote	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    _dquote = u'"\\u201c\\u201d'$/;"	v	class:Inform6Lexer
_draw_line_numbers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def _draw_line_numbers(self):$/;"	m	class:ImageFormatter
_draw_line_numbers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def _draw_line_numbers(self):$/;"	m	class:ImageFormatter
_draw_linenumber	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def _draw_linenumber(self, posno, lineno):$/;"	m	class:ImageFormatter
_draw_linenumber	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def _draw_linenumber(self, posno, lineno):$/;"	m	class:ImageFormatter
_draw_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def _draw_text(self, pos, text, font, **kw):$/;"	m	class:ImageFormatter
_draw_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def _draw_text(self, pos, text, font, **kw):$/;"	m	class:ImageFormatter
_drop	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^    def _drop(self):$/;"	m	class:WrappedSocket
_dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    _dst = ZERO$/;"	v	class:UTC
_dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    _dst = None # DST offset$/;"	v	class:DstTzInfo
_dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    _dst = ZERO$/;"	v	class:UTC
_dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    _dst = None # DST offset$/;"	v	class:DstTzInfo
_encode_files	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def _encode_files(files, data):$/;"	m	class:RequestEncodingMixin
_encode_int	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^    def _encode_int(value):$/;"	f	function:_make_iterencode
_encode_name	plugged/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:_encode_name(cache_dir, filename) abort$/;"	f
_encode_params	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def _encode_params(data):$/;"	m	class:RequestEncodingMixin
_encode_url_methods	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/request.py	/^    _encode_url_methods = set(['DELETE', 'GET', 'HEAD', 'OPTIONS'])$/;"	v	class:RequestMethods
_encoded_const	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^_encoded_const(PyObject *obj)$/;"	f	file:
_encoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^            def _encoder(o, _orig_encoder=_encoder, _encoding=self.encoding):$/;"	f	function:JSONEncoder.iterencode
_encoding_map	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^_encoding_map = [(b'\\xef\\xbb\\xbf', 'utf-8'),$/;"	v
_encoding_map	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^_encoding_map = [(b'\\xef\\xbb\\xbf', 'utf-8'),$/;"	v
_ensure_value	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^def _ensure_value(namespace, name, value):$/;"	f
_epoch	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^_epoch = datetime.utcfromtimestamp(0)$/;"	v
_epoch	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^_epoch = datetime.utcfromtimestamp(0)$/;"	v
_escape	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/rtf.py	/^    def _escape(self, text):$/;"	m	class:RtfFormatter
_escape	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    _escape = (r'(?:\\\\(?:[\\n\\\\<>"\\'^v bnrt]|u[\\da-fA-F]{,4}|x[\\da-fA-F]{,2}|'$/;"	v	class:Tads3Lexer
_escape	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/rtf.py	/^    def _escape(self, text):$/;"	m	class:RtfFormatter
_escape	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    _escape = (r'(?:\\\\(?:[\\n\\\\<>"\\'^v bnrt]|u[\\da-fA-F]{,4}|x[\\da-fA-F]{,2}|'$/;"	v	class:Tads3Lexer
_escape_html_table	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^_escape_html_table = {$/;"	v
_escape_html_table	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^_escape_html_table = {$/;"	v
_escape_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/rtf.py	/^    def _escape_text(self, text):$/;"	m	class:RtfFormatter
_escape_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/rtf.py	/^    def _escape_text(self, text):$/;"	m	class:RtfFormatter
_exact_decimal_prefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    _exact_decimal_prefix = r'(?:#e)?(?:#d)?(?:#e)?'$/;"	v	class:RacketLexer
_exact_decimal_prefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    _exact_decimal_prefix = r'(?:#e)?(?:#d)?(?:#e)?'$/;"	v	class:RacketLexer
_expand	plugged/lightline.vim/autoload/lightline.vim	/^function! s:_expand(a, c, _, e, t, i, j, x) abort$/;"	f
_expand_help	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _expand_help(self, action):$/;"	m	class:HelpFormatter
_explain_skip	plugged/syntastic/plugin/syntastic.vim	/^function! s:_explain_skip(filetypes) abort " {{{2$/;"	f
_exponent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    _exponent = r'(?:[defls][-+]?\\d+)'$/;"	v	class:RacketLexer
_exponent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    _exponent = r'(?:[defls][-+]?\\d+)'$/;"	v	class:RacketLexer
_extract_tokens	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^    def _extract_tokens(self):$/;"	m	class:TokenParser
_file2module	plugged/unite.vim/autoload/vital/_unite.vim	/^function! s:_file2module(file) abort$/;"	f
_fileobject	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^from socket import _fileobject, timeout$/;"	i
_fill	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def _fill(self):$/;"	m	class:_CountryNameDict
_fill	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def _fill(self):$/;"	m	class:_CountryTimezoneDict
_fill	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def _fill(self):$/;"	m	class:_CountryNameDict
_fill	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def _fill(self):$/;"	m	class:_CountryTimezoneDict
_fill_iter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^            _fill_iter = None$/;"	v	class:LazyList.__new__.LazyList
_fill_iter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^            _fill_iter = None$/;"	v	class:LazySet.__new__.LazySet
_fill_iter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^            _fill_iter = None$/;"	v	class:LazyList.__new__.LazyList
_fill_iter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^            _fill_iter = None$/;"	v	class:LazySet.__new__.LazySet
_fill_lock	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^_fill_lock = RLock()$/;"	v
_fill_lock	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^_fill_lock = RLock()$/;"	v
_fill_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _fill_text(self, text, width, indent):$/;"	m	class:HelpFormatter
_fill_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _fill_text(self, text, width, indent):$/;"	m	class:RawDescriptionHelpFormatter
_finalize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _finalize(self):$/;"	m	class:VariableSplitter
_finalize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _finalize(self):$/;"	m	class:VariableSplitter
_find	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def _find(self, name, domain=None, path=None):$/;"	m	class:RequestsCookieJar
_find_binary	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^    def _find_binary(self):$/;"	m	class:Subversion
_find_config	plugged/vim-wakatime/plugin/packages/wakatime/projects/wakatime_project_file.py	/^    def _find_config(self, path):$/;"	m	class:WakaTimeProjectFile
_find_git_config_file	plugged/vim-wakatime/plugin/packages/wakatime/projects/git.py	/^    def _find_git_config_file(self, path):$/;"	m	class:Git
_find_hg_config_dir	plugged/vim-wakatime/plugin/packages/wakatime/projects/mercurial.py	/^    def _find_hg_config_dir(self, path):$/;"	m	class:Mercurial
_find_index	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! s:_find_index(column, messages) abort " {{{2$/;"	f
_find_no_duplicates	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def _find_no_duplicates(self, name, domain=None, path=None):$/;"	m	class:RequestsCookieJar
_find_project	plugged/vim-wakatime/plugin/packages/wakatime/projects/projectmap.py	/^    def _find_project(self, path):$/;"	m	class:ProjectMap
_find_project_base	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^    def _find_project_base(self, path, found=False):$/;"	m	class:Subversion
_find_start_index	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _find_start_index(self, string, start, end):$/;"	m	class:VariableSplitter
_find_start_index	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _find_start_index(self, string, start, end):$/;"	m	class:VariableSplitter
_find_variable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _find_variable(self, string):$/;"	m	class:VariableSplitter
_find_variable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _find_variable(self, string):$/;"	m	class:VariableSplitter
_float	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    _float = r'((\\d*\\.?\\d+)|(\\d+\\.?\\d*))([eE][-+]?\\d+)?'$/;"	v	class:BroLexer
_float	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    _float = r'((\\d*\\.?\\d+)|(\\d+\\.?\\d*))([eE][-+]?\\d+)?'$/;"	v	class:BroLexer
_floatconstants	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^def _floatconstants():$/;"	f
_fn_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^def _fn_matches(fn, glob):$/;"	f
_fn_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^def _fn_matches(fn, glob):$/;"	f
_fn_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^def _fn_matches(fn, glob):$/;"	f
_fn_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^def _fn_matches(fn, glob):$/;"	f
_format_action	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _format_action(self, action):$/;"	m	class:HelpFormatter
_format_action_invocation	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _format_action_invocation(self, action):$/;"	m	class:HelpFormatter
_format_actions_usage	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _format_actions_usage(self, actions, groups):$/;"	m	class:HelpFormatter
_format_args	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _format_args(self, action, default_metavar):$/;"	m	class:HelpFormatter
_format_lines	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    def _format_lines(self, tokensource):$/;"	m	class:HtmlFormatter
_format_lines	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    def _format_lines(self, tokensource):$/;"	m	class:HtmlFormatter
_format_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _format_text(self, text):$/;"	m	class:HelpFormatter
_format_unencoded_with_lineno	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^    def _format_unencoded_with_lineno(self, tokensource, outfile):$/;"	m	class:TerminalFormatter
_format_unencoded_with_lineno	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^    def _format_unencoded_with_lineno(self, tokensource, outfile):$/;"	m	class:TerminalFormatter
_format_usage	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _format_usage(self, usage, actions, groups, prefix):$/;"	m	class:HelpFormatter
_format_variable	plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_format_variable(name) abort " {{{2$/;"	f
_formatter_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^_formatter_cache = {}  # classes by name$/;"	v
_formatter_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^_formatter_cache = {}  # classes by name$/;"	v
_func_code	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    _func_code = "func_code"$/;"	v
_func_defaults	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    _func_defaults = "func_defaults"$/;"	v
_gen_command_rules	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^    def _gen_command_rules(keyword_cmds_re, builtin_cmds_re, context=""):$/;"	m	class:TclLexer
_gen_command_rules	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^    def _gen_command_rules(keyword_cmds_re, builtin_cmds_re, context=""):$/;"	m	class:TclLexer
_get_action_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^def _get_action_name(argument):$/;"	f
_get_args	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _get_args(self):$/;"	m	class:_AttributeHolder
_get_cflags	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_get_cflags(ft, ck, opts) abort " {{{2$/;"	f
_get_char_width	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def _get_char_width(self):$/;"	m	class:ImageFormatter
_get_char_width	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def _get_char_width(self):$/;"	m	class:ImageFormatter
_get_char_x	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def _get_char_x(self, charno):$/;"	m	class:ImageFormatter
_get_char_x	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def _get_char_x(self, charno):$/;"	m	class:ImageFormatter
_get_checker_var	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_get_checker_var(scope, filetype, subchecker, name, default) abort " {{{2$/;"	f
_get_conn	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def _get_conn(self, timeout=None):$/;"	m	class:HTTPConnectionPool
_get_css_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    def _get_css_class(self, ttype):$/;"	m	class:HtmlFormatter
_get_css_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    def _get_css_class(self, ttype):$/;"	m	class:HtmlFormatter
_get_dbus_name	plugged/Nvim-R/R/synctex_evince_backward.py	/^    def _get_dbus_name(self, spawn):$/;"	m	class:EvinceWindowProxy
_get_dbus_name	plugged/Nvim-R/R/synctex_evince_forward.py	/^    def _get_dbus_name(self, spawn):$/;"	m	class:EvinceWindowProxy
_get_decoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^def _get_decoder(mode):$/;"	f
_get_formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _get_formatter(self):$/;"	m	class:ArgumentParser
_get_functions	plugged/unite.vim/autoload/vital/_unite.vim	/^  function! s:_get_functions(sid) abort$/;"	f
_get_handler	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _get_handler(self):$/;"	m	class:_ActionsContainer
_get_help_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _get_help_string(self, action):$/;"	m	class:ArgumentDefaultsHelpFormatter
_get_help_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _get_help_string(self, action):$/;"	m	class:HelpFormatter
_get_ident	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    from dummy_thread import get_ident as _get_ident$/;"	i
_get_ident	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    from thread import get_ident as _get_ident$/;"	i
_get_image_size	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def _get_image_size(self, maxcharno, maxlineno):$/;"	m	class:ImageFormatter
_get_image_size	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def _get_image_size(self, maxcharno, maxlineno):$/;"	m	class:ImageFormatter
_get_include_dirs	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_get_include_dirs(filetype) abort " {{{2$/;"	f
_get_info	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^    def _get_info(self, path):$/;"	m	class:Subversion
_get_kwargs	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _get_kwargs(self):$/;"	m	class:Action
_get_kwargs	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _get_kwargs(self):$/;"	m	class:ArgumentParser
_get_kwargs	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _get_kwargs(self):$/;"	m	class:_AttributeHolder
_get_lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    def _get_lexer(self, lang):$/;"	m	class:PostgresBase
_get_lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    def _get_lexer(self, lang):$/;"	m	class:PostgresBase
_get_line_height	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def _get_line_height(self):$/;"	m	class:ImageFormatter
_get_line_height	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def _get_line_height(self):$/;"	m	class:ImageFormatter
_get_line_y	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def _get_line_y(self, lineno):$/;"	m	class:ImageFormatter
_get_line_y	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def _get_line_y(self, lineno):$/;"	m	class:ImageFormatter
_get_linenumber_pos	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def _get_linenumber_pos(self, lineno):$/;"	m	class:ImageFormatter
_get_linenumber_pos	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def _get_linenumber_pos(self, lineno):$/;"	m	class:ImageFormatter
_get_localzone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/unix.py	/^def _get_localzone(_root='\/'):$/;"	f
_get_localzone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/unix.py	/^def _get_localzone(_root='\/'):$/;"	f
_get_module_path	plugged/unite.vim/autoload/vital/_unite.vim	/^function! s:_get_module_path(name) abort$/;"	f
_get_nargs_pattern	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _get_nargs_pattern(self, action):$/;"	m	class:ArgumentParser
_get_nix_font_path	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def _get_nix_font_path(self, name, style):$/;"	m	class:FontManager
_get_nix_font_path	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def _get_nix_font_path(self, name, style):$/;"	m	class:FontManager
_get_option_tuples	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _get_option_tuples(self, option_string):$/;"	m	class:ArgumentParser
_get_optional_actions	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _get_optional_actions(self):$/;"	m	class:ArgumentParser
_get_optional_kwargs	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _get_optional_kwargs(self, *args, **kwargs):$/;"	m	class:_ActionsContainer
_get_positional_actions	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _get_positional_actions(self):$/;"	m	class:ArgumentParser
_get_positional_kwargs	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _get_positional_kwargs(self, dest, **kwargs):$/;"	m	class:_ActionsContainer
_get_sid_by_script	plugged/unite.vim/autoload/vital/_unite.vim	/^function! s:_get_sid_by_script(path) abort$/;"	f
_get_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/svg.py	/^    def _get_style(self, tokentype):$/;"	m	class:SvgFormatter
_get_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/svg.py	/^    def _get_style(self, tokentype):$/;"	m	class:SvgFormatter
_get_style_font	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def _get_style_font(self, style):$/;"	m	class:ImageFormatter
_get_style_font	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def _get_style_font(self, style):$/;"	m	class:ImageFormatter
_get_subactions	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _get_subactions(self):$/;"	m	class:_SubParsersAction
_get_text_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def _get_text_color(self, style):$/;"	m	class:ImageFormatter
_get_text_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def _get_text_color(self, style):$/;"	m	class:ImageFormatter
_get_text_pos	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def _get_text_pos(self, charno, lineno):$/;"	m	class:ImageFormatter
_get_text_pos	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def _get_text_pos(self, charno, lineno):$/;"	m	class:ImageFormatter
_get_timeout	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def _get_timeout(self, timeout):$/;"	m	class:HTTPConnectionPool
_get_ttype_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^def _get_ttype_class(ttype):$/;"	f
_get_ttype_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^def _get_ttype_class(ttype):$/;"	f
_get_ttype_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^def _get_ttype_name(ttype):$/;"	f
_get_ttype_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^def _get_ttype_name(ttype):$/;"	f
_get_value	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _get_value(self, action, arg_string):$/;"	m	class:ArgumentParser
_get_values	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _get_values(self, action, arg_strings):$/;"	m	class:ArgumentParser
_getauto	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_vim_builtins.py	/^def _getauto():$/;"	f
_getauto	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_vim_builtins.py	/^def _getauto():$/;"	f
_getcommand	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_vim_builtins.py	/^def _getcommand():$/;"	f
_getcommand	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_vim_builtins.py	/^def _getcommand():$/;"	f
_getoption	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_vim_builtins.py	/^def _getoption():$/;"	f
_getoption	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_vim_builtins.py	/^def _getoption():$/;"	f
_gherkin_prefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _gherkin_prefix = re.compile('^(Given|When|Then|And) ', re.IGNORECASE)$/;"	v	class:GherkinTokenizer
_gherkin_prefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _gherkin_prefix = re.compile('^(Given|When|Then|And) ', re.IGNORECASE)$/;"	v	class:GherkinTokenizer
_h	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    _h = r'[A-Za-z0-9][-A-Za-z0-9]*'$/;"	v	class:BroLexer
_h	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    _h = r'[A-Za-z0-9][-A-Za-z0-9]*'$/;"	v	class:BroLexer
_handle_chunk	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def _handle_chunk(self, amt):$/;"	m	class:HTTPResponse
_handle_conflict_error	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _handle_conflict_error(self, action, conflicting_actions):$/;"	m	class:_ActionsContainer
_handle_conflict_resolve	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _handle_conflict_resolve(self, action, conflicting_actions):$/;"	m	class:_ActionsContainer
_handle_runs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^def _handle_runs(char_list):$/;"	f
_handle_runs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^def _handle_runs(char_list):$/;"	f
_handle_sourcecode	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    def _handle_sourcecode(self, match):$/;"	m	class:RstLexer
_handle_sourcecode	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    def _handle_sourcecode(self, match):$/;"	m	class:RstLexer
_has_copy_exe	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:_has_copy_exe() abort$/;"	f
_has_for_json_hook	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^_has_for_json_hook(PyObject *obj)$/;"	f	file:
_has_list_variable_index	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _has_list_variable_index(self):$/;"	m	class:VariableSplitter
_has_list_variable_index	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _has_list_variable_index(self):$/;"	m	class:VariableSplitter
_has_move_exe	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:_has_move_exe() abort$/;"	f
_hex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    _hex = r'[0-9a-fA-F_]'$/;"	v	class:BroLexer
_hex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    _hex = r'[0-9a-fA-F_]'$/;"	v	class:BroLexer
_highlight_lines	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    def _highlight_lines(self, tokensource):$/;"	m	class:HtmlFormatter
_highlight_lines	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    def _highlight_lines(self, tokensource):$/;"	m	class:HtmlFormatter
_hush_pyflakes	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^_hush_pyflakes = (RequestsCookieJar,)$/;"	v
_id	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    _id = r'[A-Za-z]\\w*'$/;"	v	class:AntlrLexer
_id	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    _id = r'[A-Za-z]\\w*'$/;"	v	class:AntlrLexer
_ident_begin	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    _ident_begin = r'(?:[\\\\_a-z]|[^\\x00-\\x7f])'$/;"	v	class:PhpLexer
_ident_begin	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    _ident_begin = r'(?:[\\\\_a-z]|[^\\x00-\\x7f])'$/;"	v	class:TwigLexer
_ident_begin	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    _ident_begin = r'(?:[\\\\_a-z]|[^\\x00-\\x7f])'$/;"	v	class:PhpLexer
_ident_begin	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    _ident_begin = r'(?:[\\\\_a-z]|[^\\x00-\\x7f])'$/;"	v	class:TwigLexer
_ident_char	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    _ident_char = r'[\\\\\\w]|[^\\x00-\\x7f]'$/;"	v	class:PhpLexer
_ident_char	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    _ident_char = r'[\\\\\\w-]|[^\\x00-\\x7f]'$/;"	v	class:TwigLexer
_ident_char	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    _ident_char = r'[\\\\\\w]|[^\\x00-\\x7f]'$/;"	v	class:PhpLexer
_ident_char	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    _ident_char = r'[\\\\\\w-]|[^\\x00-\\x7f]'$/;"	v	class:TwigLexer
_ident_end	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    _ident_end = r'(?:' + _ident_char + ')*'$/;"	v	class:PhpLexer
_ident_end	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    _ident_end = r'(?:' + _ident_char + ')*'$/;"	v	class:TwigLexer
_ident_end	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    _ident_end = r'(?:' + _ident_char + ')*'$/;"	v	class:PhpLexer
_ident_end	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    _ident_end = r'(?:' + _ident_char + ')*'$/;"	v	class:TwigLexer
_ident_inner	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    _ident_inner = _ident_begin + _ident_end$/;"	v	class:PhpLexer
_ident_inner	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    _ident_inner = _ident_begin + _ident_end$/;"	v	class:TwigLexer
_ident_inner	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    _ident_inner = _ident_begin + _ident_end$/;"	v	class:PhpLexer
_ident_inner	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    _ident_inner = _ident_begin + _ident_end$/;"	v	class:TwigLexer
_ignore_file	plugged/syntastic/plugin/syntastic.vim	/^function! s:_ignore_file(filename) abort " {{{2$/;"	f
_import	plugged/unite.vim/autoload/vital/_unite.vim	/^function! s:_import(name) abort$/;"	f
_import_OrderedDict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^def _import_OrderedDict():$/;"	f
_import_c_make_encoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^def _import_c_make_encoder():$/;"	f
_import_c_make_scanner	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/scanner.py	/^def _import_c_make_scanner():$/;"	f
_import_c_scanstring	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^def _import_c_scanstring():$/;"	f
_import_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^def _import_module(name):$/;"	f
_import_settings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _import_settings = ('library', 'resource', 'variables')$/;"	v	class:Setting
_import_settings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _import_settings = ()$/;"	v	class:TestCaseSetting
_import_settings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _import_settings = ('library', 'resource', 'variables')$/;"	v	class:Setting
_import_settings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _import_settings = ()$/;"	v	class:TestCaseSetting
_import_speedups	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^def _import_speedups():$/;"	f
_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _indent(self):$/;"	m	class:HelpFormatter
_indentation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^def _indentation(lexer, match, ctx):$/;"	f
_indentation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^from pygments.lexers.css import CssLexer, _indentation, _starts_block$/;"	i
_indentation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^from pygments.lexers.css import _indentation, _starts_block$/;"	i
_indentation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^def _indentation(lexer, match, ctx):$/;"	f
_indentation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^from pygments.lexers.css import CssLexer, _indentation, _starts_block$/;"	i
_indentation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^from pygments.lexers.css import _indentation, _starts_block$/;"	i
_inexact_normal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    _inexact_normal = r'(?:%s%s?)' % (_inexact_simple, _exponent)$/;"	v	class:RacketLexer
_inexact_normal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    _inexact_normal = r'(?:%s%s?)' % (_inexact_simple, _exponent)$/;"	v	class:RacketLexer
_inexact_normal_no_hashes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    _inexact_normal_no_hashes = r'(?:%s%s?)' % (_inexact_simple_no_hashes,$/;"	v	class:RacketLexer
_inexact_normal_no_hashes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    _inexact_normal_no_hashes = r'(?:%s%s?)' % (_inexact_simple_no_hashes,$/;"	v	class:RacketLexer
_inexact_real	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    _inexact_real = r'(?:[-+]?%s|[-+]%s)' % (_inexact_normal,$/;"	v	class:RacketLexer
_inexact_real	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    _inexact_real = r'(?:[-+]?%s|[-+]%s)' % (_inexact_normal,$/;"	v	class:RacketLexer
_inexact_simple	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    _inexact_simple = (r'(?:%s|(?:\\d+#+(?:\\.#*|\/\\d+#*)?|\\.\\d+#+|'$/;"	v	class:RacketLexer
_inexact_simple	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    _inexact_simple = (r'(?:%s|(?:\\d+#+(?:\\.#*|\/\\d+#*)?|\\.\\d+#+|'$/;"	v	class:RacketLexer
_inexact_simple_no_hashes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    _inexact_simple_no_hashes = r'(?:\\d+(?:\/\\d+|\\.\\d*)?|\\.\\d+)'$/;"	v	class:RacketLexer
_inexact_simple_no_hashes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    _inexact_simple_no_hashes = r'(?:\\d+(?:\/\\d+|\\.\\d*)?|\\.\\d+)'$/;"	v	class:RacketLexer
_inexact_special	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    _inexact_special = r'(?:(?:inf|nan)\\.[0f])'$/;"	v	class:RacketLexer
_inexact_special	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    _inexact_special = r'(?:(?:inf|nan)\\.[0f])'$/;"	v	class:RacketLexer
_inexact_unsigned	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    _inexact_unsigned = r'(?:%s|%s)' % (_inexact_normal, _inexact_special)$/;"	v	class:RacketLexer
_inexact_unsigned	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    _inexact_unsigned = r'(?:%s|%s)' % (_inexact_normal, _inexact_special)$/;"	v	class:RacketLexer
_inherit	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^class _inherit(object):$/;"	c
_inherit	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^class _inherit(object):$/;"	c
_init	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_init() abort " {{{2$/;"	f
_init_decoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def _init_decoder(self):$/;"	m	class:HTTPResponse
_internal_get_pty	plugged/vimproc.vim/autoload/ptytty.c	/^_internal_get_pty(int *master, char **path)$/;"	f	file:
_internal_get_tty	plugged/vimproc.vim/autoload/ptytty.c	/^_internal_get_tty(int *slave, const char *path,$/;"	f	file:
_internal_login_tty	plugged/vimproc.vim/autoload/ptytty.c	/^_internal_login_tty(int fd, const char *path,$/;"	f	file:
_internal_variable_start_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _internal_variable_start_state(self, char, index):$/;"	m	class:VariableSplitter
_internal_variable_start_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _internal_variable_start_state(self, char, index):$/;"	m	class:VariableSplitter
_isAvailableDefault	plugged/syntastic/plugin/syntastic/checker.vim	/^function! s:_isAvailableDefault() dict " {{{2$/;"	f
_isDebugEnabled_dumb	plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_isDebugEnabled_dumb(level) abort " {{{2$/;"	f
_isDebugEnabled_smart	plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_isDebugEnabled_smart(level) abort " {{{2$/;"	f
_is_absolute_path	plugged/unite.vim/autoload/vital/_unite.vim	/^  function! s:_is_absolute_path(path) abort$/;"	f
_is_assign	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _is_assign(self, value):$/;"	m	class:Tokenizer
_is_assign	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _is_assign(self, value):$/;"	m	class:Tokenizer
_is_connection_error	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/retry.py	/^    def _is_connection_error(self, err):$/;"	m	class:Retry
_is_empty	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _is_empty(self, value):$/;"	m	class:_Table
_is_empty	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _is_empty(self, value):$/;"	m	class:_Table
_is_escaped	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _is_escaped(self, string, index):$/;"	m	class:VariableSplitter
_is_escaped	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _is_escaped(self, string, index):$/;"	m	class:VariableSplitter
_is_for_loop	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _is_for_loop(self, value):$/;"	m	class:TestCaseTable
_is_for_loop	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _is_for_loop(self, value):$/;"	m	class:TestCaseTable
_is_list_variable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _is_list_variable(self):$/;"	m	class:VariableSplitter
_is_list_variable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _is_list_variable(self):$/;"	m	class:VariableSplitter
_is_namedtuple	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^_is_namedtuple(PyObject *obj)$/;"	f	file:
_is_read_error	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/retry.py	/^    def _is_read_error(self, err):$/;"	m	class:Retry
_is_same_index	plugged/syntastic/plugin/syntastic/cursor.vim	/^function! s:_is_same_index(line, old_line, column, idx, messages) abort " {{{2$/;"	f
_is_setting	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _is_setting(self, value):$/;"	m	class:TestCaseTable
_is_setting	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _is_setting(self, value):$/;"	m	class:TestCaseTable
_is_template	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _is_template(self, value):$/;"	m	class:KeywordTable
_is_template	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _is_template(self, value):$/;"	m	class:TestCaseTable
_is_template	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _is_template(self, value):$/;"	m	class:KeywordTable
_is_template	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _is_template(self, value):$/;"	m	class:TestCaseTable
_is_template_set	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _is_template_set(self, template):$/;"	m	class:TestCaseTable
_is_template_set	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _is_template_set(self, template):$/;"	m	class:TestCaseTable
_isdst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^    def _isdst(self, dt):$/;"	m	class:LocalTimezone
_isdst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^    def _isdst(self, dt):$/;"	m	class:LocalTimezone
_iter_indented_subactions	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _iter_indented_subactions(self, action):$/;"	m	class:HelpFormatter
_iter_lexerclasses	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^def _iter_lexerclasses(plugins=True):$/;"	f
_iter_lexerclasses	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^def _iter_lexerclasses(plugins=True):$/;"	f
_iterencode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^    def _iterencode(o, _current_indent_level):$/;"	f	function:_make_iterencode
_iterencode_dict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^    def _iterencode_dict(dct, _current_indent_level):$/;"	f	function:_make_iterencode
_iterencode_list	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^    def _iterencode_list(lst, _current_indent_level):$/;"	f	function:_make_iterencode
_iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    _iteritems = "iteritems"$/;"	v
_iterkeys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    _iterkeys = "iterkeys"$/;"	v
_itervalues	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    _itervalues = "itervalues"$/;"	v
_join_parts	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _join_parts(self, part_strings):$/;"	m	class:HelpFormatter
_keyword_settings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _keyword_settings = ('setup', 'precondition', 'teardown', 'postcondition',$/;"	v	class:TestCaseSetting
_keyword_settings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _keyword_settings = ('suitesetup', 'suiteprecondition', 'suiteteardown',$/;"	v	class:Setting
_keyword_settings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _keyword_settings = ('teardown',)$/;"	v	class:KeywordSetting
_keyword_settings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _keyword_settings = ('setup', 'precondition', 'teardown', 'postcondition',$/;"	v	class:TestCaseSetting
_keyword_settings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _keyword_settings = ('suitesetup', 'suiteprecondition', 'suiteteardown',$/;"	v	class:Setting
_keyword_settings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _keyword_settings = ('teardown',)$/;"	v	class:KeywordSetting
_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    _keywords = (r'(?:FROM|MAINTAINER|CMD|EXPOSE|ENV|ADD|ENTRYPOINT|'$/;"	v	class:DockerLexer
_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    _keywords = ($/;"	v	class:RacketLexer
_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    _keywords = (r'(?:FROM|MAINTAINER|CMD|EXPOSE|ENV|ADD|ENTRYPOINT|'$/;"	v	class:DockerLexer
_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    _keywords = ($/;"	v	class:RacketLexer
_lazy	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^            def _lazy(self, *args, **kw):$/;"	f	function:LazyList.__new__.lazy
_lazy	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^            def _lazy(self, *args, **kw):$/;"	f	function:LazySet.__new__.lazy
_lazy	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^            def _lazy(self, *args, **kw):$/;"	f	function:LazyList.__new__.lazy
_lazy	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^            def _lazy(self, *args, **kw):$/;"	f	function:LazySet.__new__.lazy
_lexer_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^_lexer_cache = {}$/;"	v
_lexer_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^_lexer_cache = {}$/;"	v
_line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    _line_re = re.compile('.*?\\n')$/;"	v	class:DylanConsoleLexer
_line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    _line_re = re.compile('.*?\\n')$/;"	v	class:DylanConsoleLexer
_list_variable_index_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _list_variable_index_state(self, char, index):$/;"	m	class:VariableSplitter
_list_variable_index_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _list_variable_index_state(self, char, index):$/;"	m	class:VariableSplitter
_load_formatters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^def _load_formatters(module_name):$/;"	f
_load_formatters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^def _load_formatters(module_name):$/;"	f
_load_lexers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^def _load_lexers(module_name):$/;"	f
_load_lexers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^def _load_lexers(module_name):$/;"	f
_logRedirect	plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_logRedirect(on) abort " {{{2$/;"	f
_log_timestamp	plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_log_timestamp() abort " {{{2$/;"	f
_logos_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    _logos_keywords = re.compile(r'%(?:hook|ctor|init|c\\()')$/;"	v	class:LogosLexer
_logos_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    _logos_keywords = re.compile(r'%(?:hook|ctor|init|c\\()')$/;"	v	class:LogosLexer
_looks_like_xml_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^_looks_like_xml_cache = {}$/;"	v
_looks_like_xml_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^_looks_like_xml_cache = {}$/;"	v
_lookup_ctag	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    def _lookup_ctag(self, token):$/;"	m	class:HtmlFormatter
_lookup_ctag	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    def _lookup_ctag(self, token):$/;"	m	class:HtmlFormatter
_lookup_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatter.py	/^def _lookup_style(style):$/;"	f
_lookup_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatter.py	/^def _lookup_style(style):$/;"	f
_lookup_win	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def _lookup_win(self, key, basename, styles, fail=False):$/;"	m	class:FontManager
_lookup_win	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def _lookup_win(self, key, basename, styles, fail=False):$/;"	m	class:FontManager
_make_attribute_value_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    def _make_attribute_value_state(terminator, host_triple, host_double,$/;"	m	class:Tads3Lexer
_make_attribute_value_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    def _make_attribute_value_state(terminator, host_triple, host_double,$/;"	m	class:Tads3Lexer
_make_iterencode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^def _make_iterencode(markers, _default, _encoder, _indent, _floatstr,$/;"	f
_make_request	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def _make_request(self, conn, method, url, timeout=_Default,$/;"	m	class:HTTPConnectionPool
_make_string_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    def _make_string_state(triple, double, verbatim=None, _escape=_escape):$/;"	m	class:Tads3Lexer
_make_string_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    def _make_string_state(triple, double, verbatim=None, _escape=_escape):$/;"	m	class:Tads3Lexer
_make_styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/bbcode.py	/^    def _make_styles(self):$/;"	m	class:BBCodeFormatter
_make_styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/bbcode.py	/^    def _make_styles(self):$/;"	m	class:BBCodeFormatter
_make_tag_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    def _make_tag_state(triple, double, _escape=_escape):$/;"	m	class:Tads3Lexer
_make_tag_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    def _make_tag_state(triple, double, _escape=_escape):$/;"	m	class:Tads3Lexer
_match_argument	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _match_argument(self, action, arg_strings_pattern):$/;"	m	class:ArgumentParser
_match_arguments_partial	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _match_arguments_partial(self, actions, arg_strings_pattern):$/;"	m	class:ArgumentParser
_match_number_str	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^_match_number_str(PyScannerObject *s, PyObject *pystr, Py_ssize_t start, Py_ssize_t *next_idx_ptr)$/;"	f	file:
_match_number_unicode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^_match_number_unicode(PyScannerObject *s, PyObject *pystr, Py_ssize_t start, Py_ssize_t *next_idx_ptr)$/;"	f	file:
_metavar_formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _metavar_formatter(self, action, default_metavar):$/;"	m	class:HelpFormatter
_meth_func	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    _meth_func = "im_func"$/;"	v
_meth_self	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    _meth_self = "im_self"$/;"	v
_moved_attributes	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^_moved_attributes = [$/;"	v
_mql_builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^from pygments.lexers import _mql_builtins$/;"	i
_mql_builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^from pygments.lexers import _mql_builtins$/;"	i
_multi_escape	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    def _multi_escape(entries):$/;"	m	class:MathematicaLexer
_multi_escape	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    def _multi_escape(entries):$/;"	m	class:HyLexer
_multi_escape	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    def _multi_escape(entries):$/;"	m	class:MathematicaLexer
_multi_escape	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    def _multi_escape(entries):$/;"	m	class:HyLexer
_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    _name = r'(?:[_a-zA-Z]\\w*)'$/;"	v	class:Tads3Lexer
_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    _name = r'[a-zA-Z_]\\w*'$/;"	v	class:Inform6Lexer
_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    _name = r'[^%s]+' % _separator$/;"	v	class:JasminLexer
_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    _name = r"(?:'(?:[^\\\\']|\\\\.)+'|[a-zA-Z_]\\w*)"$/;"	v	class:ModelicaLexer
_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    _name = r'(?:[_a-zA-Z]\\w*)'$/;"	v	class:Tads3Lexer
_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    _name = r'[a-zA-Z_]\\w*'$/;"	v	class:Inform6Lexer
_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    _name = r'[^%s]+' % _separator$/;"	v	class:JasminLexer
_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    _name = r"(?:'(?:[^\\\\']|\\\\.)+'|[a-zA-Z_]\\w*)"$/;"	v	class:ModelicaLexer
_new_conn	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    def _new_conn(self):$/;"	m	class:HTTPConnection
_new_conn	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def _new_conn(self):$/;"	m	class:HTTPConnectionPool
_new_conn	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def _new_conn(self):$/;"	m	class:HTTPSConnectionPool
_new_conn	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/ntlmpool.py	/^    def _new_conn(self):$/;"	m	class:NTLMConnectionPool
_new_pool	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^    def _new_pool(self, scheme, host, port):$/;"	m	class:PoolManager
_newline	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    _newline = Inform6Lexer._newline$/;"	v	class:Inform7Lexer
_newline	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    _newline = u'\\\\n\\u0085\\u2028\\u2029'$/;"	v	class:Inform6Lexer
_newline	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    _newline = Inform6Lexer._newline$/;"	v	class:Inform7Lexer
_newline	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    _newline = u'\\\\n\\u0085\\u2028\\u2029'$/;"	v	class:Inform6Lexer
_no_quote	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    _no_quote = r'(?=\\s|\\\\?>)'$/;"	v	class:Tads3Lexer
_no_quote	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    _no_quote = r'(?=\\s|\\\\?>)'$/;"	v	class:Tads3Lexer
_normalise_filetype	plugged/syntastic/plugin/syntastic/registry.vim	/^function! s:_normalise_filetype(ftalias) abort " {{{2$/;"	f
_notime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^_notime = memorized_timedelta(0)$/;"	v
_notime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^_notime = memorized_timedelta(0)$/;"	v
_null	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^_null = '\\x00'.encode('ascii')  # encoding to ASCII for Python 3$/;"	v
_null2	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^_null2 = _null * 2$/;"	v
_null3	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^_null3 = _null * 3$/;"	v
_objdump_lexer_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^def _objdump_lexer_tokens(asm_lexer):$/;"	f
_objdump_lexer_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^def _objdump_lexer_tokens(asm_lexer):$/;"	f
_on_doc_loaded	plugged/Nvim-R/R/synctex_evince_backward.py	/^    def _on_doc_loaded(self, uri, **keyargs):$/;"	m	class:EvinceWindowProxy
_on_doc_loaded	plugged/Nvim-R/R/synctex_evince_forward.py	/^    def _on_doc_loaded(self, uri, **keyargs):$/;"	m	class:EvinceWindowProxy
_opening_parenthesis	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    _opening_parenthesis = r'[([{]'$/;"	v	class:RacketLexer
_opening_parenthesis	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    _opening_parenthesis = r'[([{]'$/;"	v	class:RacketLexer
_openssl_verify	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^_openssl_verify = {$/;"	v
_openssl_versions	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^_openssl_versions = {$/;"	v
_operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    _operator = (r'(?:&&|\\|\\||\\+\\+|--|\\?\\?|::|[.,@\\[\\]~]|'$/;"	v	class:Tads3Lexer
_operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    _operator = (r'(?:&&|\\|\\||\\+\\+|--|\\?\\?|::|[.,@\\[\\]~]|'$/;"	v	class:Tads3Lexer
_os	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^import os as _os$/;"	i
_os_name	plugged/syntastic/plugin/syntastic.vim	/^function! s:_os_name() abort " {{{2$/;"	f
_other_settings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _other_settings = ('documentation', 'arguments', 'return', 'timeout')$/;"	v	class:KeywordSetting
_other_settings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _other_settings = ('documentation', 'metadata', 'forcetags', 'defaulttags',$/;"	v	class:Setting
_other_settings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _other_settings = ('documentation', 'tags', 'timeout')$/;"	v	class:TestCaseSetting
_other_settings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _other_settings = ('documentation', 'arguments', 'return', 'timeout')$/;"	v	class:KeywordSetting
_other_settings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _other_settings = ('documentation', 'metadata', 'forcetags', 'defaulttags',$/;"	v	class:Setting
_other_settings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _other_settings = ('documentation', 'tags', 'timeout')$/;"	v	class:TestCaseSetting
_p	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^def _p(*args):$/;"	f
_p	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^def _p(*args):$/;"	f
_pad_with_char	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
_paint_line_number_bg	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def _paint_line_number_bg(self, im):$/;"	m	class:ImageFormatter
_paint_line_number_bg	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def _paint_line_number_bg(self, im):$/;"	m	class:ImageFormatter
_parse_array_str	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^_parse_array_str(PyScannerObject *s, PyObject *pystr, Py_ssize_t idx, Py_ssize_t *next_idx_ptr)$/;"	f	file:
_parse_array_unicode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^_parse_array_unicode(PyScannerObject *s, PyObject *pystr, Py_ssize_t idx, Py_ssize_t *next_idx_ptr)$/;"	f	file:
_parse_constant	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^_parse_constant(PyScannerObject *s, char *constant, Py_ssize_t idx, Py_ssize_t *next_idx_ptr)$/;"	f	file:
_parse_filters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^def _parse_filters(f_strs):$/;"	f
_parse_filters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^def _parse_filters(f_strs):$/;"	f
_parse_known_args	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _parse_known_args(self, arg_strings, namespace):$/;"	m	class:ArgumentParser
_parse_list_header	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^from .compat import parse_http_list as _parse_list_header$/;"	i
_parse_object_str	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^_parse_object_str(PyScannerObject *s, PyObject *pystr, Py_ssize_t idx, Py_ssize_t *next_idx_ptr)$/;"	f	file:
_parse_object_unicode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^_parse_object_unicode(PyScannerObject *s, PyObject *pystr, Py_ssize_t idx, Py_ssize_t *next_idx_ptr)$/;"	f	file:
_parse_optional	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _parse_optional(self, arg_string):$/;"	m	class:ArgumentParser
_parse_options	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^def _parse_options(o_strs):$/;"	f
_parse_options	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^def _parse_options(o_strs):$/;"	f
_path2project_directory_git	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_others	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_svn	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_pattern_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^_pattern_cache = {}$/;"	v
_pattern_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^_pattern_cache = {}$/;"	v
_pattern_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^_pattern_cache = {}$/;"	v
_pattern_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^_pattern_cache = {}$/;"	v
_pipe_splitter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _pipe_splitter = re.compile('((?:^| +)\\|(?: +|$))')$/;"	v	class:RowSplitter
_pipe_splitter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _pipe_splitter = re.compile('((?:^| +)\\|(?: +|$))')$/;"	v	class:RowSplitter
_pop_action_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _pop_action_class(self, kwargs, default=None):$/;"	m	class:_ActionsContainer
_prepare_conn	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    def _prepare_conn(self, conn):$/;"	m	class:HTTPConnection
_prepare_conn	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def _prepare_conn(self, conn):$/;"	m	class:HTTPSConnectionPool
_prepare_proxy	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def _prepare_proxy(self, conn):$/;"	m	class:HTTPConnectionPool
_prepare_proxy	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def _prepare_proxy(self, conn):$/;"	m	class:HTTPSConnectionPool
_print_help	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^def _print_help(what, name):$/;"	f
_print_help	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^def _print_help(what, name):$/;"	f
_print_list	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^def _print_list(what):$/;"	f
_print_list	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^def _print_list(what):$/;"	f
_print_message	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _print_message(self, message, file=None):$/;"	m	class:ArgumentParser
_process_attribute	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^    def _process_attribute(self, token, content):$/;"	m	class:HtmlDjangoParser
_process_file_name	plugged/vim-wakatime/plugin/packages/wakatime/languages/data.py	/^    def _process_file_name(self, file_name):$/;"	m	class:JsonParser
_process_file_name	plugged/vim-wakatime/plugin/packages/wakatime/languages/unknown.py	/^    def _process_file_name(self, file_name):$/;"	m	class:UnknownParser
_process_function	plugged/vim-wakatime/plugin/packages/wakatime/languages/php.py	/^    def _process_function(self, token, content):$/;"	m	class:PhpParser
_process_import	plugged/vim-wakatime/plugin/packages/wakatime/languages/python.py	/^    def _process_import(self, token, content):$/;"	m	class:PythonParser
_process_keyword	plugged/vim-wakatime/plugin/packages/wakatime/languages/php.py	/^    def _process_keyword(self, token, content):$/;"	m	class:PhpParser
_process_literal_string	plugged/vim-wakatime/plugin/packages/wakatime/languages/data.py	/^    def _process_literal_string(self, token, content):$/;"	m	class:JsonParser
_process_literal_string	plugged/vim-wakatime/plugin/packages/wakatime/languages/php.py	/^    def _process_literal_string(self, token, content):$/;"	m	class:PhpParser
_process_literal_string	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^    def _process_literal_string(self, token, content):$/;"	m	class:LassoJavascriptParser
_process_name	plugged/vim-wakatime/plugin/packages/wakatime/languages/php.py	/^    def _process_name(self, token, content):$/;"	m	class:PhpParser
_process_name	plugged/vim-wakatime/plugin/packages/wakatime/languages/python.py	/^    def _process_name(self, token, content):$/;"	m	class:PythonParser
_process_name	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^    def _process_name(self, token, content):$/;"	m	class:LassoJavascriptParser
_process_namespace	plugged/vim-wakatime/plugin/packages/wakatime/languages/dotnet.py	/^    def _process_namespace(self, token, content):$/;"	m	class:CSharpParser
_process_namespace	plugged/vim-wakatime/plugin/packages/wakatime/languages/jvm.py	/^    def _process_namespace(self, token, content):$/;"	m	class:JavaParser
_process_namespace	plugged/vim-wakatime/plugin/packages/wakatime/languages/python.py	/^    def _process_namespace(self, token, content):$/;"	m	class:PythonParser
_process_new_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def _process_new_state(cls, new_state, unprocessed, processed):$/;"	m	class:RegexLexerMeta
_process_new_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def _process_new_state(cls, new_state, unprocessed, processed):$/;"	m	class:RegexLexerMeta
_process_operator	plugged/vim-wakatime/plugin/packages/wakatime/languages/python.py	/^    def _process_operator(self, token, content):$/;"	m	class:PythonParser
_process_other	plugged/vim-wakatime/plugin/packages/wakatime/languages/c_cpp.py	/^    def _process_other(self, token, content):$/;"	m	class:CppParser
_process_other	plugged/vim-wakatime/plugin/packages/wakatime/languages/dotnet.py	/^    def _process_other(self, token, content):$/;"	m	class:CSharpParser
_process_other	plugged/vim-wakatime/plugin/packages/wakatime/languages/jvm.py	/^    def _process_other(self, token, content):$/;"	m	class:JavaParser
_process_other	plugged/vim-wakatime/plugin/packages/wakatime/languages/php.py	/^    def _process_other(self, token, content):$/;"	m	class:PhpParser
_process_other	plugged/vim-wakatime/plugin/packages/wakatime/languages/python.py	/^    def _process_other(self, token, content):$/;"	m	class:PythonParser
_process_preproc	plugged/vim-wakatime/plugin/packages/wakatime/languages/c_cpp.py	/^    def _process_preproc(self, token, content):$/;"	m	class:CppParser
_process_punctuation	plugged/vim-wakatime/plugin/packages/wakatime/languages/data.py	/^    def _process_punctuation(self, token, content):$/;"	m	class:JsonParser
_process_punctuation	plugged/vim-wakatime/plugin/packages/wakatime/languages/php.py	/^    def _process_punctuation(self, token, content):$/;"	m	class:PhpParser
_process_punctuation	plugged/vim-wakatime/plugin/packages/wakatime/languages/python.py	/^    def _process_punctuation(self, token, content):$/;"	m	class:PythonParser
_process_regex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def _process_regex(cls, regex, rflags, state):$/;"	m	class:ProfilingRegexLexerMeta
_process_regex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def _process_regex(cls, regex, rflags, state):$/;"	m	class:RegexLexerMeta
_process_regex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def _process_regex(cls, regex, rflags, state):$/;"	m	class:ProfilingRegexLexerMeta
_process_regex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def _process_regex(cls, regex, rflags, state):$/;"	m	class:RegexLexerMeta
_process_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def _process_state(cls, unprocessed, processed, state):$/;"	m	class:RegexLexerMeta
_process_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def _process_state(cls, unprocessed, processed, state):$/;"	m	class:RegexLexerMeta
_process_string	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^    def _process_string(self, token, content):$/;"	m	class:HtmlDjangoParser
_process_tag	plugged/vim-wakatime/plugin/packages/wakatime/languages/data.py	/^    def _process_tag(self, token, content):$/;"	m	class:JsonParser
_process_tag	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^    def _process_tag(self, token, content):$/;"	m	class:HtmlDjangoParser
_process_text	plugged/vim-wakatime/plugin/packages/wakatime/languages/php.py	/^    def _process_text(self, token, content):$/;"	m	class:PhpParser
_process_text	plugged/vim-wakatime/plugin/packages/wakatime/languages/python.py	/^    def _process_text(self, token, content):$/;"	m	class:PythonParser
_process_token	plugged/vim-wakatime/plugin/packages/wakatime/languages/c_cpp.py	/^    def _process_token(self, token, content):$/;"	m	class:CppParser
_process_token	plugged/vim-wakatime/plugin/packages/wakatime/languages/data.py	/^    def _process_token(self, token, content):$/;"	m	class:JsonParser
_process_token	plugged/vim-wakatime/plugin/packages/wakatime/languages/dotnet.py	/^    def _process_token(self, token, content):$/;"	m	class:CSharpParser
_process_token	plugged/vim-wakatime/plugin/packages/wakatime/languages/jvm.py	/^    def _process_token(self, token, content):$/;"	m	class:JavaParser
_process_token	plugged/vim-wakatime/plugin/packages/wakatime/languages/php.py	/^    def _process_token(self, token, content):$/;"	m	class:PhpParser
_process_token	plugged/vim-wakatime/plugin/packages/wakatime/languages/python.py	/^    def _process_token(self, token, content):$/;"	m	class:PythonParser
_process_token	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^    def _process_token(self, token, content):$/;"	m	class:HtmlDjangoParser
_process_token	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^    def _process_token(self, token, content):$/;"	m	class:LassoJavascriptParser
_process_token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def _process_token(cls, token):$/;"	m	class:RegexLexerMeta
_process_token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def _process_token(cls, token):$/;"	m	class:RegexLexerMeta
_process_word	plugged/vim-wakatime/plugin/packages/wakatime/languages/python.py	/^    def _process_word(self, token, content):$/;"	m	class:PythonParser
_prof_data	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    _prof_data = []$/;"	v	class:ProfilingRegexLexer
_prof_data	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    _prof_data = []$/;"	v	class:ProfilingRegexLexer
_prof_sort_index	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    _prof_sort_index = 4  # defaults to time per call$/;"	v	class:ProfilingRegexLexer
_prof_sort_index	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    _prof_sort_index = 4  # defaults to time per call$/;"	v	class:ProfilingRegexLexer
_project_base	plugged/vim-wakatime/plugin/packages/wakatime/projects/git.py	/^    def _project_base(self):$/;"	m	class:Git
_prompt_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    _prompt_re = re.compile('\\?| ')$/;"	v	class:DylanConsoleLexer
_prompt_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    _prompt_re = re.compile('(iex|\\.{3})(\\(\\d+\\))?> ')$/;"	v	class:ElixirConsoleLexer
_prompt_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    _prompt_re = re.compile(r'\\d+>(?=\\s|\\Z)')$/;"	v	class:ErlangShellLexer
_prompt_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    _prompt_re = re.compile('irb\\([a-zA-Z_]\\w*\\):\\d{3}:\\d+[>*"\\'] '$/;"	v	class:RubyConsoleLexer
_prompt_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    _prompt_re = re.compile('\\?| ')$/;"	v	class:DylanConsoleLexer
_prompt_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    _prompt_re = re.compile('(iex|\\.{3})(\\(\\d+\\))?> ')$/;"	v	class:ElixirConsoleLexer
_prompt_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    _prompt_re = re.compile(r'\\d+>(?=\\s|\\Z)')$/;"	v	class:ErlangShellLexer
_prompt_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    _prompt_re = re.compile('irb\\([a-zA-Z_]\\w*\\):\\d{3}:\\d+[>*"\\'] '$/;"	v	class:RubyConsoleLexer
_put_conn	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def _put_conn(self, conn):$/;"	m	class:HTTPConnectionPool
_python	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    _python = r'py(?:t(?:h(?:o(?:n)?)?)?)?'$/;"	v	class:VimLexer
_python	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    _python = r'py(?:t(?:h(?:o(?:n)?)?)?)?'$/;"	v	class:VimLexer
_quote	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! s:_quote() abort$/;"	f
_raise_timeout	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def _raise_timeout(self, err, url, timeout_value):$/;"	m	class:HTTPConnectionPool
_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^import re as _re$/;"	i
_read_args_from_files	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _read_args_from_files(self, arg_strings):$/;"	m	class:ArgumentParser
_redir	plugged/unite.vim/autoload/vital/_unite.vim	/^function! s:_redir(cmd) abort$/;"	f
_registerHandler	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_registerHandler(regex, function, args) abort " {{{2$/;"	f
_registry_get	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _registry_get(self, registry_name, value, default=None):$/;"	m	class:_ActionsContainer
_remove_action	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _remove_action(self, action):$/;"	m	class:_ActionsContainer
_remove_action	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _remove_action(self, action):$/;"	m	class:_ArgumentGroup
_remove_action	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _remove_action(self, action):$/;"	m	class:_MutuallyExclusiveGroup
_remove_shadowed_items	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_remove_shadowed_items(errors) abort " {{{2$/;"	f
_render_part	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/fields.py	/^    def _render_part(self, name, value):$/;"	m	class:RequestField
_render_parts	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/fields.py	/^    def _render_parts(self, header_parts):$/;"	m	class:RequestField
_replace	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
_replace_special	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^def _replace_special(ttype, value, regex, specialttype,$/;"	f
_replace_special	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^def _replace_special(ttype, value, regex, specialttype,$/;"	f
_resolve	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    def _resolve(self):$/;"	m	class:MovedAttribute
_resolve	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    def _resolve(self):$/;"	m	class:MovedModule
_resolve_filetypes	plugged/syntastic/plugin/syntastic.vim	/^function! s:_resolve_filetypes(filetypes) abort " {{{2$/;"	f
_resolve_name	plugged/vim-wakatime/plugin/packages/wakatime/compat.py	/^    def _resolve_name(name, package, level):$/;"	f
_result	plugged/vimproc.vim/autoload/proc.c	/^static vp_stack_t _result = VP_STACK_NULL;$/;"	v	file:
_result	plugged/vimproc.vim/autoload/proc_w32.c	/^static vp_stack_t _result = VP_STACK_NULL;$/;"	v	file:
_reuse	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^    def _reuse(self):$/;"	m	class:WrappedSocket
_rmrf	plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_rmrf(what) abort " {{{2$/;"	f
_roundtrip_datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def _roundtrip_datetime(self, dt):$/;"	m	class:PicklingTest
_roundtrip_datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def _roundtrip_datetime(self, dt):$/;"	m	class:PicklingTest
_roundtrip_tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def _roundtrip_tzinfo(self, tz):$/;"	m	class:PicklingTest
_roundtrip_tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def _roundtrip_tzinfo(self, tz):$/;"	m	class:PicklingTest
_runtime_files	plugged/unite.vim/autoload/vital/_unite.vim	/^  function! s:_runtime_files(path) abort$/;"	f
_rx_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^def _rx_indent(level):$/;"	f
_rx_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^def _rx_indent(level):$/;"	f
_save_dependency	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^    def _save_dependency(self, dep, truncate=False, separator=None,$/;"	m	class:TokenParser
_scan_once	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/scanner.py	/^    def _scan_once(string, idx):$/;"	f	function:py_make_scanner
_scanning_list_variable_index	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _scanning_list_variable_index(self):$/;"	m	class:VariableSplitter
_scanning_list_variable_index	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _scanning_list_variable_index(self):$/;"	m	class:VariableSplitter
_scilab_builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^from pygments.lexers import _scilab_builtins$/;"	i
_scilab_builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^from pygments.lexers import _scilab_builtins$/;"	i
_search_headers	plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_search_headers() abort " {{{2$/;"	f
_send_until_done	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^    def _send_until_done(self, data):$/;"	m	class:WrappedSocket
_set_proxy_headers	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^    def _set_proxy_headers(self, url, headers=None):$/;"	m	class:ProxyManager
_set_screen_column	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_set_screen_column(item) abort " {{{2$/;"	f
_set_socket_options	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/connection.py	/^def _set_socket_options(sock, options):$/;"	f
_setting_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _setting_class = KeywordSetting$/;"	v	class:KeywordTable
_setting_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _setting_class = TestCaseSetting$/;"	v	class:TestCaseTable
_setting_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _setting_class = KeywordSetting$/;"	v	class:KeywordTable
_setting_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _setting_class = TestCaseSetting$/;"	v	class:TestCaseTable
_setup_styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal256.py	/^    def _setup_styles(self):$/;"	m	class:Terminal256Formatter
_setup_styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal256.py	/^    def _setup_styles(self):$/;"	m	class:Terminal256Formatter
_shortened	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^def _shortened(word):$/;"	f
_shortened	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^def _shortened(word):$/;"	f
_shortened_many	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^def _shortened_many(*words):$/;"	f
_shortened_many	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^def _shortened_many(*words):$/;"	f
_skip_file	plugged/syntastic/plugin/syntastic.vim	/^function! s:_skip_file() abort " {{{2$/;"	f
_space_splitter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _space_splitter = re.compile('( {2,})')$/;"	v	class:RowSplitter
_space_splitter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _space_splitter = re.compile('( {2,})')$/;"	v	class:RowSplitter
_speedups	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^        from . import _speedups$/;"	i
_split	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _split(self, string):$/;"	m	class:VariableSplitter
_split	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _split(self, string):$/;"	m	class:VariableSplitter
_split_by_wcswidth	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
_split_by_wcswidth_once	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
_split_from_pipes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _split_from_pipes(self, row):$/;"	m	class:RowSplitter
_split_from_pipes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _split_from_pipes(self, row):$/;"	m	class:RowSplitter
_split_from_spaces	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _split_from_spaces(self, row):$/;"	m	class:RowSplitter
_split_from_spaces	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _split_from_spaces(self, row):$/;"	m	class:RowSplitter
_split_lines	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _split_lines(self, text, width):$/;"	m	class:HelpFormatter
_split_lines	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def _split_lines(self, text, width):$/;"	m	class:RawTextHelpFormatter
_squote	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    _squote = u"'\\u2018\\u2019"$/;"	v	class:Inform6Lexer
_squote	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    _squote = u"'\\u2018\\u2019"$/;"	v	class:Inform6Lexer
_stan_builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^from pygments.lexers import _stan_builtins$/;"	i
_stan_builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^from pygments.lexers import _stan_builtins$/;"	i
_start	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    _start = r'\\A|(?<=[%s])' % _newline$/;"	v	class:Inform7Lexer
_start	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    _start = r'\\A|(?<=[%s])' % _newline$/;"	v	class:Inform7Lexer
_start_index_is_ok	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _start_index_is_ok(self, string, index):$/;"	m	class:VariableSplitter
_start_index_is_ok	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _start_index_is_ok(self, string, index):$/;"	m	class:VariableSplitter
_start_table	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _start_table(self, header):$/;"	m	class:RowTokenizer
_start_table	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _start_table(self, header):$/;"	m	class:RowTokenizer
_starts_block	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^def _starts_block(token, state):$/;"	f
_starts_block	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^from pygments.lexers.css import CssLexer, _indentation, _starts_block$/;"	i
_starts_block	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^from pygments.lexers.css import _indentation, _starts_block$/;"	i
_starts_block	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^def _starts_block(token, state):$/;"	f
_starts_block	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^from pygments.lexers.css import CssLexer, _indentation, _starts_block$/;"	i
_starts_block	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^from pygments.lexers.css import _indentation, _starts_block$/;"	i
_std_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^def _std_string(s):$/;"	f
_std_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^def _std_string(s):$/;"	f
_steal_accumulate	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^_steal_accumulate(JSON_Accu *accu, PyObject *stolen)$/;"	f	file:
_stringify_key	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^    def _stringify_key(key):$/;"	f	function:_make_iterencode
_surrogatepair	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/rtf.py	/^from pygments.util import get_int_opt, _surrogatepair$/;"	i
_surrogatepair	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^def _surrogatepair(c):$/;"	f
_surrogatepair	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/rtf.py	/^from pygments.util import get_int_opt, _surrogatepair$/;"	i
_surrogatepair	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^def _surrogatepair(c):$/;"	f
_symbol	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    _symbol = r'(?u)(?:\\|[^|]*\\||\\\\[\\w\\W]|[^|\\\\%s]+)+' % _delimiters$/;"	v	class:RacketLexer
_symbol	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    _symbol = r'(?u)(?:\\|[^|]*\\||\\\\[\\w\\W]|[^|\\\\%s]+)+' % _delimiters$/;"	v	class:RacketLexer
_syncview_handler	plugged/Nvim-R/R/synctex_evince_forward.py	/^    def _syncview_handler(self, window_list):$/;"	m	class:EvinceWindowProxy
_sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^import sys as _sys$/;"	i
_test	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^def _test():$/;"	f
_test	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^def _test():$/;"	f
_test_all	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def _test_all(self, utc_dt, wanted):$/;"	m	class:USEasternDSTStartTestCase
_test_all	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def _test_all(self, utc_dt, wanted):$/;"	m	class:USEasternDSTStartTestCase
_test_dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def _test_dst(self, utc_dt, wanted):$/;"	m	class:USEasternDSTStartTestCase
_test_dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def _test_dst(self, utc_dt, wanted):$/;"	m	class:USEasternDSTStartTestCase
_test_encode_basestring_ascii	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_encode_basestring_ascii.py	/^    def _test_encode_basestring_ascii(self, encode_basestring_ascii):$/;"	m	class:TestEncodeBaseStringAscii
_test_scanstring	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_scanstring.py	/^    def _test_scanstring(self, scanstring):$/;"	m	class:TestScanString
_test_template	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _test_template = None$/;"	v	class:TestCaseTable
_test_template	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _test_template = None$/;"	v	class:TestCaseTable
_test_tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def _test_tzname(self, utc_dt, wanted):$/;"	m	class:USEasternDSTStartTestCase
_test_tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def _test_tzname(self, utc_dt, wanted):$/;"	m	class:USEasternDSTStartTestCase
_test_utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def _test_utcoffset(self, utc_dt, wanted):$/;"	m	class:USEasternDSTStartTestCase
_test_utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def _test_utcoffset(self, utc_dt, wanted):$/;"	m	class:USEasternDSTStartTestCase
_textwrap	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^import textwrap as _textwrap$/;"	i
_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^import time as _time$/;"	i
_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^import time as _time$/;"	i
_timedelta_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^_timedelta_cache = {}$/;"	v
_timedelta_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^_timedelta_cache = {}$/;"	v
_to_seconds	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^def _to_seconds(td):$/;"	f
_to_seconds	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^def _to_seconds(td):$/;"	f
_toggle_speedups	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^def _toggle_speedups(enabled):$/;"	f
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:ForLoop
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:KeywordCall
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:Setting
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:SettingTable
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:TestCaseSetting
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:TestCaseTable
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:Tokenizer
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:Variable
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:_Table
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index, commented, separator, heading):$/;"	m	class:RowTokenizer
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _tokenize(self, var, string, orig_token):$/;"	m	class:VariableTokenizer
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:ForLoop
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:KeywordCall
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:Setting
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:SettingTable
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:TestCaseSetting
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:TestCaseTable
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:Tokenizer
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:Variable
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:_Table
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index, commented, separator, heading):$/;"	m	class:RowTokenizer
_tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _tokenize(self, var, string, orig_token):$/;"	m	class:VariableTokenizer
_tokenizer_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _tokenizer_class = Comment$/;"	v	class:UnknownTable
_tokenizer_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _tokenizer_class = KeywordCall$/;"	v	class:KeywordTable
_tokenizer_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _tokenizer_class = None$/;"	v	class:_Table
_tokenizer_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _tokenizer_class = Setting$/;"	v	class:SettingTable
_tokenizer_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _tokenizer_class = Variable$/;"	v	class:VariableTable
_tokenizer_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _tokenizer_class(self):$/;"	m	class:TestCaseTable
_tokenizer_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _tokenizer_class = Comment$/;"	v	class:UnknownTable
_tokenizer_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _tokenizer_class = KeywordCall$/;"	v	class:KeywordTable
_tokenizer_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _tokenizer_class = None$/;"	v	class:_Table
_tokenizer_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _tokenizer_class = Setting$/;"	v	class:SettingTable
_tokenizer_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _tokenizer_class = Variable$/;"	v	class:VariableTable
_tokenizer_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _tokenizer_class(self):$/;"	m	class:TestCaseTable
_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _tokens = (ARGUMENT,)$/;"	v	class:TemplatedKeywordCall
_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _tokens = (COMMENT,)$/;"	v	class:Comment
_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _tokens = (IMPORT, ARGUMENT)$/;"	v	class:ImportSetting
_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _tokens = (KEYWORD, ARGUMENT)$/;"	v	class:KeywordCall
_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _tokens = (SETTING, ARGUMENT)$/;"	v	class:Setting
_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _tokens = (SYNTAX, ARGUMENT)$/;"	v	class:Variable
_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    _tokens = None$/;"	v	class:Tokenizer
_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _tokens = (ARGUMENT,)$/;"	v	class:TemplatedKeywordCall
_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _tokens = (COMMENT,)$/;"	v	class:Comment
_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _tokens = (IMPORT, ARGUMENT)$/;"	v	class:ImportSetting
_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _tokens = (KEYWORD, ARGUMENT)$/;"	v	class:KeywordCall
_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _tokens = (SETTING, ARGUMENT)$/;"	v	class:Setting
_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _tokens = (SYNTAX, ARGUMENT)$/;"	v	class:Variable
_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    _tokens = None$/;"	v	class:Tokenizer
_transition_info	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    _transition_info = None # [(utcoffset, dstoffset, tzname)] corresponding$/;"	v	class:DstTzInfo
_transition_info	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    _transition_info = None # [(utcoffset, dstoffset, tzname)] corresponding$/;"	v	class:DstTzInfo
_translate	plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_translate(key, val) abort " {{{2$/;"	f
_translateElement	plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_translateElement(key, term) abort " {{{2$/;"	f
_translateFilter	plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_translateFilter(filters) abort " {{{2$/;"	f
_ttinfo_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^_ttinfo_cache = {}$/;"	v
_ttinfo_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^_ttinfo_cache = {}$/;"	v
_ttype_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^_ttype_cache = {}$/;"	v
_ttype_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^_ttype_cache = {}$/;"	v
_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^    _types = (':table', ':array', ':string', ':bin', ':import', ':intvector',$/;"	v	class:ResourceLexer
_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^    _types = (':table', ':array', ':string', ':bin', ':import', ':intvector',$/;"	v	class:ResourceLexer
_tz_from_env	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/unix.py	/^def _tz_from_env(tzenv):$/;"	f
_tz_from_env	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/unix.py	/^def _tz_from_env(tzenv):$/;"	f
_tzinfo_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^_tzinfo_cache = {}$/;"	v
_tzinfo_cache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^_tzinfo_cache = {}$/;"	v
_tzinfos	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    _tzinfos = None$/;"	v	class:DstTzInfo
_tzinfos	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    _tzinfos = None$/;"	v	class:DstTzInfo
_tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    _tzname = zone$/;"	v	class:UTC
_tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    _tzname = None$/;"	v	class:BaseTzInfo
_tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    _tzname = zone$/;"	v	class:UTC
_tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    _tzname = None$/;"	v	class:BaseTzInfo
_unify_path	plugged/unite.vim/autoload/vital/_unite.vim	/^  function! s:_unify_path(path) abort$/;"	f
_uniq	plugged/unite.vim/autoload/vital/_unite.vim	/^  function! s:_uniq(list) abort$/;"	f
_unmunge_zone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^def _unmunge_zone(zone):$/;"	f
_unmunge_zone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^def _unmunge_zone(zone):$/;"	f
_unqualified_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    _unqualified_name = r'(?:[^%s.;\\[\/]+)' % _separator$/;"	v	class:JasminLexer
_unqualified_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    _unqualified_name = r'(?:[^%s.;\\[\/]+)' % _separator$/;"	v	class:JasminLexer
_update_chunk_length	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def _update_chunk_length(self):$/;"	m	class:HTTPResponse
_utc_transition_times	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    _utc_transition_times = None # Sorted list of DST transition times in UTC$/;"	v	class:DstTzInfo
_utc_transition_times	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    _utc_transition_times = None # Sorted list of DST transition times in UTC$/;"	v	class:DstTzInfo
_utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    _utcoffset = ZERO$/;"	v	class:UTC
_utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    _utcoffset = None$/;"	v	class:BaseTzInfo
_utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    _utcoffset = ZERO$/;"	v	class:UTC
_utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    _utcoffset = None$/;"	v	class:BaseTzInfo
_validate_conn	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def _validate_conn(self, conn):$/;"	m	class:HTTPConnectionPool
_validate_conn	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def _validate_conn(self, conn):$/;"	m	class:HTTPSConnectionPool
_validate_timeout	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/timeout.py	/^    def _validate_timeout(cls, value, name):$/;"	m	class:Timeout
_var	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    _var = r'(\\w+|"(?:\\\\"|[^"])*")'$/;"	v	class:MscgenLexer
_var	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    _var = r'(\\w+|"(?:\\\\"|[^"])*")'$/;"	v	class:MscgenLexer
_variable_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _variable_state(self, char, index):$/;"	m	class:VariableSplitter
_variable_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _variable_state(self, char, index):$/;"	m	class:VariableSplitter
_ver	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^_ver = sys.version_info$/;"	v
_verify_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^def _verify_callback(cnx, x509, err_no, err_depth, return_code):$/;"	f
_vital_depends	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	plugged/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_files	plugged/unite.vim/autoload/vital/_unite.vim	/^function! s:_vital_files(pattern) abort$/;"	f
_vital_loaded	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	plugged/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_waiting_list_variable_index_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def _waiting_list_variable_index_state(self, char, index):$/;"	m	class:VariableSplitter
_waiting_list_variable_index_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def _waiting_list_variable_index_state(self, char, index):$/;"	m	class:VariableSplitter
_wcwidth	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    _whitespace = r' \\n\\t\\r'$/;"	v	class:JasminLexer
_whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    _whitespace = r' \\n\\t\\r'$/;"	v	class:JasminLexer
_winreg	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^        _winreg = None$/;"	v
_winreg	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^        import winreg as _winreg$/;"	i
_winreg	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    import _winreg$/;"	i
_winreg	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^        _winreg = None$/;"	v
_winreg	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^        import winreg as _winreg$/;"	i
_winreg	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    import _winreg$/;"	i
_wrap_div	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    def _wrap_div(self, inner):$/;"	m	class:HtmlFormatter
_wrap_div	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    def _wrap_div(self, inner):$/;"	m	class:HtmlFormatter
_wrap_full	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    def _wrap_full(self, inner, outfile):$/;"	m	class:HtmlFormatter
_wrap_full	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    def _wrap_full(self, inner, outfile):$/;"	m	class:HtmlFormatter
_wrap_inlinelinenos	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    def _wrap_inlinelinenos(self, inner):$/;"	m	class:HtmlFormatter
_wrap_inlinelinenos	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    def _wrap_inlinelinenos(self, inner):$/;"	m	class:HtmlFormatter
_wrap_lineanchors	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    def _wrap_lineanchors(self, inner):$/;"	m	class:HtmlFormatter
_wrap_lineanchors	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    def _wrap_lineanchors(self, inner):$/;"	m	class:HtmlFormatter
_wrap_linespans	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    def _wrap_linespans(self, inner):$/;"	m	class:HtmlFormatter
_wrap_linespans	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    def _wrap_linespans(self, inner):$/;"	m	class:HtmlFormatter
_wrap_pre	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    def _wrap_pre(self, inner):$/;"	m	class:HtmlFormatter
_wrap_pre	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    def _wrap_pre(self, inner):$/;"	m	class:HtmlFormatter
_wrap_tablelinenos	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    def _wrap_tablelinenos(self, inner):$/;"	m	class:HtmlFormatter
_wrap_tablelinenos	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    def _wrap_tablelinenos(self, inner):$/;"	m	class:HtmlFormatter
_write_lineno	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^    def _write_lineno(self, outfile):$/;"	m	class:TerminalFormatter
_write_lineno	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^    def _write_lineno(self, outfile):$/;"	m	class:TerminalFormatter
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/[*].*?[*]\/)+'$/;"	v	class:CFamilyLexer
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/\\*.*?\\*\/)+'$/;"	v	class:AsymptoteLexer
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/[*].*?[*]\/)+'$/;"	v	class:SystemVerilogLexer
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/[*].*?[*]\/)+'$/;"	v	class:VerilogLexer
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    _ws = r'(?:\\\\|\\s|%s|%s)' % (_comment_single, _comment_multiline)$/;"	v	class:Tads3Lexer
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/[*].*?[*]\/)*'$/;"	v	class:ObjectiveJLexer
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    _ws = r'(?:[%s]+)' % _whitespace$/;"	v	class:JasminLexer
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/[*].*?[*]\/)+'$/;"	v	class:CeylonLexer
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/[*][\\w\\W]*?[*]\/)+'$/;"	v	class:PawnLexer
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/\\*.*?\\*\/)+'$/;"	v	class:SourcePawnLexer
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/[*].*?[*]\/)+'$/;"	v	class:CFamilyLexer
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/\\*.*?\\*\/)+'$/;"	v	class:AsymptoteLexer
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/[*].*?[*]\/)+'$/;"	v	class:SystemVerilogLexer
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/[*].*?[*]\/)+'$/;"	v	class:VerilogLexer
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    _ws = r'(?:\\\\|\\s|%s|%s)' % (_comment_single, _comment_multiline)$/;"	v	class:Tads3Lexer
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/[*].*?[*]\/)*'$/;"	v	class:ObjectiveJLexer
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    _ws = r'(?:[%s]+)' % _whitespace$/;"	v	class:JasminLexer
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/[*].*?[*]\/)+'$/;"	v	class:CeylonLexer
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/[*][\\w\\W]*?[*]\/)+'$/;"	v	class:PawnLexer
_ws	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/\\*.*?\\*\/)+'$/;"	v	class:SourcePawnLexer
_ws1	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    _ws1 = r'\\s*(?:\/[*].*?[*]\/\\s*)*'$/;"	v	class:CFamilyLexer
_ws1	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    _ws1 = r'\\s*(?:\/[*].*?[*]\/\\s*)*'$/;"	v	class:PawnLexer
_ws1	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    _ws1 = r'\\s*(?:\/[*].*?[*]\/\\s*)*'$/;"	v	class:SourcePawnLexer
_ws1	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    _ws1 = r'\\s*(?:\/[*].*?[*]\/\\s*)*'$/;"	v	class:CFamilyLexer
_ws1	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    _ws1 = r'\\s*(?:\/[*].*?[*]\/\\s*)*'$/;"	v	class:PawnLexer
_ws1	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    _ws1 = r'\\s*(?:\/[*].*?[*]\/\\s*)*'$/;"	v	class:SourcePawnLexer
_ws_pp	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    _ws_pp = r'(?:\\\\\\n|[^\\S\\n]|%s|%s)' % (_comment_single, _comment_multiline)$/;"	v	class:Tads3Lexer
_ws_pp	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    _ws_pp = r'(?:\\\\\\n|[^\\S\\n]|%s|%s)' % (_comment_single, _comment_multiline)$/;"	v	class:Tads3Lexer
a	plugged/Nvim-R/R/synctex_evince_backward.py	/^a = EvinceWindowProxy('file:\/\/' + path_output, True)$/;"	v
a	plugged/Nvim-R/R/synctex_evince_forward.py	/^a = EvinceWindowProxy('file:\/\/' + path_output, True)$/;"	v
aM	plugged/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
absolute_import	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/__init__.py	/^from __future__ import absolute_import$/;"	i
absolute_import	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardetect.py	/^from __future__ import absolute_import, print_function, unicode_literals$/;"	i
absolute_import	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/__init__.py	/^from __future__ import absolute_import$/;"	i
absolute_import	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^from __future__ import absolute_import$/;"	i
absolute_import	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^from __future__ import absolute_import$/;"	i
absolute_import	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^from __future__ import absolute_import$/;"	i
absolute_import	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^from __future__ import absolute_import$/;"	i
absolute_import	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decode.py	/^from __future__ import absolute_import$/;"	i
absolute_import	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^from __future__ import absolute_import$/;"	i
acls	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    acls = ($/;"	v	class:SquidConfLexer
acls	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    acls = ($/;"	v	class:SquidConfLexer
actions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    actions = ($/;"	v	class:SquidConfLexer
actions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    actions = ($/;"	v	class:SquidConfLexer
actions_log	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    actions_log = ("status", "enable", "disable", "clear")$/;"	v	class:SquidConfLexer
actions_log	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    actions_log = ("status", "enable", "disable", "clear")$/;"	v	class:SquidConfLexer
actions_stats	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    actions_stats = ($/;"	v	class:SquidConfLexer
actions_stats	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    actions_stats = ($/;"	v	class:SquidConfLexer
activateAll	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll()$/;"	f
activateBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm)$/;"	f
activateDirNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(node)$/;"	f
activateFileNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node)$/;"	f
add	autoload/plug.vim	/^function! s:add(repo, ...)$/;"	f
add	plugged/ingo-library/autoload/ingo/collections.vim	/^function! s:add( list, expr, keepempty )$/;"	f
add	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def add(self, key, val):$/;"	m	class:HTTPHeaderDict
add_argument	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def add_argument(self, *args, **kwargs):$/;"	m	class:_ActionsContainer
add_argument	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def add_argument(self, action):$/;"	m	class:HelpFormatter
add_argument_group	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def add_argument_group(self, *args, **kwargs):$/;"	m	class:_ActionsContainer
add_arguments	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def add_arguments(self, actions):$/;"	m	class:HelpFormatter
add_dict_to_cookiejar	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def add_dict_to_cookiejar(cj, cookie_dict):$/;"	f
add_filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def add_filter(self, filter_, **options):$/;"	m	class:Lexer
add_filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def add_filter(self, filter_, **options):$/;"	m	class:Lexer
add_header	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def add_header(self, key, val):$/;"	m	class:MockRequest
add_headers	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^    def add_headers(self, request, **kwargs):$/;"	m	class:HTTPAdapter
add_history	plugged/unite.vim/autoload/unite/kinds/command.vim	/^function! s:add_history(type, command) "{{{$/;"	f
add_metaclass	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    make_analysator, text_type, add_metaclass, iteritems, Future, guess_decode$/;"	i
add_metaclass	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/style.py	/^from pygments.util import add_metaclass$/;"	i
add_metaclass	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^def add_metaclass(metaclass):$/;"	f
add_metaclass	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    make_analysator, text_type, add_metaclass, iteritems, Future, guess_decode$/;"	i
add_metaclass	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/style.py	/^from pygments.util import add_metaclass$/;"	i
add_metaclass	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^def add_metaclass(metaclass):$/;"	f
add_methods	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_move	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^def add_move(move):$/;"	f
add_mutually_exclusive_group	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def add_mutually_exclusive_group(self, **kwargs):$/;"	m	class:_ActionsContainer
add_parser	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def add_parser(self, name, **kwargs):$/;"	m	class:_SubParsersAction
add_register	plugged/unite.vim/autoload/unite/sources/history_yank.vim	/^function! s:add_register(name) "{{{$/;"	f
add_stderr_logger	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^def add_stderr_logger(level=logging.DEBUG):$/;"	f
add_subparsers	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def add_subparsers(self, **kwargs):$/;"	m	class:ArgumentParser
add_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def add_text(self, text):$/;"	m	class:HelpFormatter
add_unredirected_header	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def add_unredirected_header(self, name, value):$/;"	m	class:MockRequest
add_usage	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def add_usage(self, usage, actions, groups, prefix=None):$/;"	m	class:HelpFormatter
additional_tests	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^def additional_tests(suite=None):$/;"	f
address_in_network	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def address_in_network(ip, net):$/;"	f
adjust_scroll	plugged/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:adjust_scroll(best_winline) "{{{$/;"	f
advance_iterator	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    advance_iterator = next$/;"	v
advance_iterator	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    def advance_iterator(it):$/;"	f
af	plugged/vim-go/ftplugin/go.vim	/^    onoremap <buffer> af :<c-u>call go#textobj#Function('a')<cr>$/;"	m
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    after = NoumeaDSTEndTestCase.after$/;"	v	class:NoumeaNoMoreDSTTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    after = {$/;"	v	class:LondonHistoryEndTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    after = {$/;"	v	class:LondonHistoryStartTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    after = {$/;"	v	class:NoumeaDSTEndTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    after = {$/;"	v	class:NoumeaHistoryStartTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    after = {$/;"	v	class:SamoaInternationalDateLineChange
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    after = {$/;"	v	class:TahitiTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    after = {$/;"	v	class:USEasternDSTEndTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    after = {$/;"	v	class:USEasternDSTStartTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    after = {$/;"	v	class:USEasternEPTEndTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    after = {$/;"	v	class:USEasternEPTStartTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    after = {$/;"	v	class:VilniusCESTStartTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    after = {$/;"	v	class:VilniusWMTEndTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    after = {$/;"	v	class:WarsawWMTEndTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    after = NoumeaDSTEndTestCase.after$/;"	v	class:NoumeaNoMoreDSTTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    after = {$/;"	v	class:LondonHistoryEndTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    after = {$/;"	v	class:LondonHistoryStartTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    after = {$/;"	v	class:NoumeaDSTEndTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    after = {$/;"	v	class:NoumeaHistoryStartTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    after = {$/;"	v	class:SamoaInternationalDateLineChange
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    after = {$/;"	v	class:TahitiTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    after = {$/;"	v	class:USEasternDSTEndTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    after = {$/;"	v	class:USEasternDSTStartTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    after = {$/;"	v	class:USEasternEPTEndTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    after = {$/;"	v	class:USEasternEPTStartTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    after = {$/;"	v	class:VilniusCESTStartTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    after = {$/;"	v	class:VilniusWMTEndTestCase
after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    after = {$/;"	v	class:WarsawWMTEndTestCase
aj_inter_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    aj_inter_type = set(('parents:', 'warning:', 'error:', 'soft:', 'precedence:'))$/;"	v	class:AspectJLexer
aj_inter_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    aj_inter_type = set(('parents:', 'warning:', 'error:', 'soft:', 'precedence:'))$/;"	v	class:AspectJLexer
aj_inter_type_annotation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    aj_inter_type_annotation = set(('@type', '@method', '@constructor', '@field'))$/;"	v	class:AspectJLexer
aj_inter_type_annotation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    aj_inter_type_annotation = set(('@type', '@method', '@constructor', '@field'))$/;"	v	class:AspectJLexer
aj_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    aj_keywords = set(($/;"	v	class:AspectJLexer
aj_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    aj_keywords = set(($/;"	v	class:AspectJLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    alias_filenames = []$/;"	v	class:Lexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    alias_filenames = ['*.incl', '*.inc', '*.las']$/;"	v	class:LassoLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.css', '*.tpl']$/;"	v	class:CssSmartyLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.css']$/;"	v	class:CssDjangoLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.css']$/;"	v	class:CssErbLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.css']$/;"	v	class:CssGenshiLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.css']$/;"	v	class:CssPhpLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.css']$/;"	v	class:LassoCssLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.html', '*.fhtml']$/;"	v	class:VelocityHtmlLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.html', '*.htm', '*.xhtml', '*.lasso', '*.lasso[89]',$/;"	v	class:LassoHtmlLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.html', '*.htm', '*.xhtml', '*.tpl']$/;"	v	class:HtmlSmartyLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.html', '*.htm', '*.xhtml']$/;"	v	class:HtmlDjangoLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.html', '*.htm', '*.xhtml']$/;"	v	class:HtmlGenshiLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.html', '*.htm', '*.xhtml']$/;"	v	class:RhtmlLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.js', '*.tpl']$/;"	v	class:JavascriptSmartyLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.js']$/;"	v	class:JavascriptDjangoLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.js']$/;"	v	class:JavascriptErbLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.js']$/;"	v	class:JavascriptGenshiLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.js']$/;"	v	class:JavascriptPhpLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.js']$/;"	v	class:LassoJavascriptLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.php', '*.html', '*.htm', '*.xhtml',$/;"	v	class:HtmlPhpLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml', '*.lasso', '*.lasso[89]',$/;"	v	class:LassoXmlLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml', '*.php', '*.php[345]']$/;"	v	class:XmlPhpLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml', '*.tpl']$/;"	v	class:XmlSmartyLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml', '*.vm']$/;"	v	class:VelocityXmlLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml']$/;"	v	class:GenshiLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml']$/;"	v	class:XmlDjangoLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml']$/;"	v	class:XmlErbLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    alias_filenames = []$/;"	v	class:Lexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    alias_filenames = ['*.incl', '*.inc', '*.las']$/;"	v	class:LassoLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.css', '*.tpl']$/;"	v	class:CssSmartyLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.css']$/;"	v	class:CssDjangoLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.css']$/;"	v	class:CssErbLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.css']$/;"	v	class:CssGenshiLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.css']$/;"	v	class:CssPhpLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.css']$/;"	v	class:LassoCssLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.html', '*.fhtml']$/;"	v	class:VelocityHtmlLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.html', '*.htm', '*.xhtml', '*.lasso', '*.lasso[89]',$/;"	v	class:LassoHtmlLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.html', '*.htm', '*.xhtml', '*.tpl']$/;"	v	class:HtmlSmartyLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.html', '*.htm', '*.xhtml']$/;"	v	class:HtmlDjangoLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.html', '*.htm', '*.xhtml']$/;"	v	class:HtmlGenshiLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.html', '*.htm', '*.xhtml']$/;"	v	class:RhtmlLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.js', '*.tpl']$/;"	v	class:JavascriptSmartyLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.js']$/;"	v	class:JavascriptDjangoLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.js']$/;"	v	class:JavascriptErbLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.js']$/;"	v	class:JavascriptGenshiLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.js']$/;"	v	class:JavascriptPhpLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.js']$/;"	v	class:LassoJavascriptLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.php', '*.html', '*.htm', '*.xhtml',$/;"	v	class:HtmlPhpLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml', '*.lasso', '*.lasso[89]',$/;"	v	class:LassoXmlLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml', '*.php', '*.php[345]']$/;"	v	class:XmlPhpLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml', '*.tpl']$/;"	v	class:XmlSmartyLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml', '*.vm']$/;"	v	class:VelocityXmlLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml']$/;"	v	class:GenshiLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml']$/;"	v	class:XmlDjangoLexer
alias_filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml']$/;"	v	class:XmlErbLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatter.py	/^    aliases = []$/;"	v	class:Formatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/bbcode.py	/^    aliases = ['bbcode', 'bb']$/;"	v	class:BBCodeFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    aliases = ['html']$/;"	v	class:HtmlFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    aliases = ['bmp', 'bitmap']$/;"	v	class:BmpImageFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    aliases = ['gif']$/;"	v	class:GifImageFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    aliases = ['img', 'IMG', 'png']$/;"	v	class:ImageFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    aliases = ['jpg', 'jpeg']$/;"	v	class:JpgImageFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^    aliases = ['latex', 'tex']$/;"	v	class:LatexFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^    aliases = ['raw', 'tokens']$/;"	v	class:RawTokenFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^    aliases = ['testcase']$/;"	v	class:TestcaseFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^    aliases = ['text', 'null']$/;"	v	class:NullFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/rtf.py	/^    aliases = ['rtf']$/;"	v	class:RtfFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/svg.py	/^    aliases = ['svg']$/;"	v	class:SvgFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^    aliases = ['terminal', 'console']$/;"	v	class:TerminalFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal256.py	/^    aliases = ['terminal256', 'console256', '256']$/;"	v	class:Terminal256Formatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    aliases = []$/;"	v	class:Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    aliases = ['as', 'actionscript']$/;"	v	class:ActionScriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    aliases = ['as3', 'actionscript3']$/;"	v	class:ActionScript3Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    aliases = ['mxml']$/;"	v	class:MxmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    aliases = ['gap']$/;"	v	class:GAPLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    aliases = ['mathematica', 'mma', 'nb']$/;"	v	class:MathematicaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    aliases = ['mupad']$/;"	v	class:MuPADLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^    aliases = ['at', 'ambienttalk', 'ambienttalk\/2']$/;"	v	class:AmbientTalkLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/apl.py	/^    aliases = ['apl']$/;"	v	class:APLLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    aliases = ['c-objdump']$/;"	v	class:CObjdumpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    aliases = ['ca65']$/;"	v	class:Ca65Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    aliases = ['cpp-objdump', 'c++-objdumb', 'cxx-objdump']$/;"	v	class:CppObjdumpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    aliases = ['d-objdump']$/;"	v	class:DObjdumpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    aliases = ['gas', 'asm']$/;"	v	class:GasLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    aliases = ['llvm']$/;"	v	class:LlvmLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    aliases = ['nasm']$/;"	v	class:NasmLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    aliases = ['objdump']$/;"	v	class:ObjdumpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    aliases = ['objdump-nasm']$/;"	v	class:NasmObjdumpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^    aliases = ['ahk', 'autohotkey']$/;"	v	class:AutohotkeyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^    aliases = ['autoit']$/;"	v	class:AutoItLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    aliases = ['blitzbasic', 'b3d', 'bplus']$/;"	v	class:BlitzBasicLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    aliases = ['blitzmax', 'bmax']$/;"	v	class:BlitzMaxLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    aliases = ['cbmbas']$/;"	v	class:CbmBasicV2Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    aliases = ['monkey']$/;"	v	class:MonkeyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    aliases = ['qbasic', 'basic']$/;"	v	class:QBasicLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    aliases = ['abap']$/;"	v	class:ABAPLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    aliases = ['cobol']$/;"	v	class:CobolLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    aliases = ['cobolfree']$/;"	v	class:CobolFreeformatLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    aliases = ['gooddata-cl']$/;"	v	class:GoodDataCLLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    aliases = ['maql']$/;"	v	class:MaqlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    aliases = ['openedge', 'abl', 'progress']$/;"	v	class:OpenEdgeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    aliases = ['c']$/;"	v	class:CLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    aliases = ['cpp', 'c++']$/;"	v	class:CppLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    aliases = ['clay']$/;"	v	class:ClayLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    aliases = ['cuda', 'cu']$/;"	v	class:CudaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    aliases = ['ec']$/;"	v	class:ECLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    aliases = ['mql', 'mq4', 'mq5', 'mql4', 'mql5']$/;"	v	class:MqlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    aliases = ['nesc']$/;"	v	class:NesCLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    aliases = ['pike']$/;"	v	class:PikeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    aliases = ['swig']$/;"	v	class:SwigLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    aliases = ['vala', 'vapi']$/;"	v	class:ValaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/chapel.py	/^    aliases = ['chapel', 'chpl']$/;"	v	class:ChapelLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    aliases = ['apacheconf', 'aconf', 'apache']$/;"	v	class:ApacheConfLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    aliases = ['cfengine3', 'cf3']$/;"	v	class:Cfengine3Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    aliases = ['docker', 'dockerfile']$/;"	v	class:DockerLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    aliases = ['ini', 'cfg', 'dosini']$/;"	v	class:IniLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    aliases = ['kconfig', 'menuconfig', 'linux-config', 'kernel-config']$/;"	v	class:KconfigLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    aliases = ['lighty', 'lighttpd']$/;"	v	class:LighttpdConfLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    aliases = ['nginx']$/;"	v	class:NginxConfLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    aliases = ['properties', 'jproperties']$/;"	v	class:PropertiesLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    aliases = ['registry']$/;"	v	class:RegeditLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    aliases = ['squidconf', 'squid.conf', 'squid']$/;"	v	class:SquidConfLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^    aliases = ["pypylog", "pypy"]$/;"	v	class:PyPyLogLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^    aliases = ['vctreestatus']$/;"	v	class:VCTreeStatusLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    aliases = ['css']$/;"	v	class:CssLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    aliases = ['sass']$/;"	v	class:SassLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    aliases = ['scss']$/;"	v	class:ScssLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    aliases = ['croc']$/;"	v	class:CrocLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    aliases = ['d']$/;"	v	class:DLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    aliases = ['minid']$/;"	v	class:MiniDLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dalvik.py	/^    aliases = ['smali']$/;"	v	class:SmaliLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    aliases = ['json']$/;"	v	class:JsonLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    aliases = ['jsonld', 'json-ld']$/;"	v	class:JsonLdLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    aliases = ['yaml']$/;"	v	class:YamlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^    aliases = ['diff', 'udiff']$/;"	v	class:DiffLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^    aliases = ['dpatch']$/;"	v	class:DarcsPatchLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    aliases = ['aspx-cs']$/;"	v	class:CSharpAspxLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    aliases = ['aspx-vb']$/;"	v	class:VbNetAspxLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    aliases = ['boo']$/;"	v	class:BooLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    aliases = ['csharp', 'c#']$/;"	v	class:CSharpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    aliases = ['fsharp']$/;"	v	class:FSharpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    aliases = ['nemerle']$/;"	v	class:NemerleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    aliases = ['vb.net', 'vbnet']$/;"	v	class:VbNetLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    aliases = ['alloy']$/;"	v	class:AlloyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    aliases = ['bro']$/;"	v	class:BroLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    aliases = ['mscgen', 'msc']$/;"	v	class:MscgenLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    aliases = ['pan']$/;"	v	class:PanLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    aliases = ['protobuf', 'proto']$/;"	v	class:ProtoBufLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    aliases = ['puppet']$/;"	v	class:PuppetLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    aliases = ['rsl']$/;"	v	class:RslLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    aliases = ['vgl']$/;"	v	class:VGLLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    aliases = ['dylan']$/;"	v	class:DylanLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    aliases = ['dylan-console', 'dylan-repl']$/;"	v	class:DylanConsoleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    aliases = ['dylan-lid', 'lid']$/;"	v	class:DylanLidLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^    aliases = ['ecl']$/;"	v	class:ECLLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/eiffel.py	/^    aliases = ['eiffel']$/;"	v	class:EiffelLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    aliases = ['elixir', 'ex', 'exs']$/;"	v	class:ElixirLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    aliases = ['erl']$/;"	v	class:ErlangShellLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    aliases = ['erlang']$/;"	v	class:ErlangLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    aliases = ['iex']$/;"	v	class:ElixirConsoleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    aliases = ['befunge']$/;"	v	class:BefungeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    aliases = ['brainfuck', 'bf']$/;"	v	class:BrainfuckLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    aliases = ['redcode']$/;"	v	class:RedcodeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^    aliases = ['factor']$/;"	v	class:FactorLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    aliases = ['fan']$/;"	v	class:FantomLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    aliases = ['felix', 'flx']$/;"	v	class:FelixLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^    aliases = ['fortran']$/;"	v	class:FortranLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/foxpro.py	/^    aliases = ['foxpro', 'vfp', 'clipper', 'xbase']$/;"	v	class:FoxProLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^    aliases = ['go']$/;"	v	class:GoLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^    aliases = ['cypher']$/;"	v	class:CypherLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    aliases = ['asy', 'asymptote']$/;"	v	class:AsymptoteLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    aliases = ['glsl']$/;"	v	class:GLShaderLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    aliases = ['gnuplot']$/;"	v	class:GnuplotLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    aliases = ['postscript', 'postscr']$/;"	v	class:PostScriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    aliases = ['pov']$/;"	v	class:PovrayLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    aliases = ['agda']$/;"	v	class:AgdaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    aliases = ['cryptol', 'cry']$/;"	v	class:CryptolLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    aliases = ['haskell', 'hs']$/;"	v	class:HaskellLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    aliases = ['idris', 'idr']$/;"	v	class:IdrisLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    aliases = ['koka']$/;"	v	class:KokaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    aliases = ['lagda', 'literate-agda']$/;"	v	class:LiterateAgdaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    aliases = ['lcry', 'literate-cryptol', 'lcryptol']$/;"	v	class:LiterateCryptolLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    aliases = ['lhs', 'literate-haskell', 'lhaskell']$/;"	v	class:LiterateHaskellLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    aliases = ['lidr', 'literate-idris', 'lidris']$/;"	v	class:LiterateIdrisLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    aliases = ['haxeml', 'hxml']$/;"	v	class:HxmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    aliases = ['hx', 'haxe', 'hxsl']$/;"	v	class:HaxeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    aliases = ['systemverilog', 'sv']$/;"	v	class:SystemVerilogLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    aliases = ['verilog', 'v']$/;"	v	class:VerilogLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    aliases = ['vhdl']$/;"	v	class:VhdlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    aliases = ['dtd']$/;"	v	class:DtdLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    aliases = ['haml']$/;"	v	class:HamlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    aliases = ['html']$/;"	v	class:HtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    aliases = ['jade']$/;"	v	class:JadeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    aliases = ['scaml']$/;"	v	class:ScamlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    aliases = ['xml']$/;"	v	class:XmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    aliases = ['xslt']$/;"	v	class:XsltLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/idl.py	/^    aliases = ['idl']$/;"	v	class:IDLLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^    aliases = ['igor', 'igorpro']$/;"	v	class:IgorLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^    aliases = ['limbo']$/;"	v	class:LimboLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    aliases = ['control', 'debcontrol']$/;"	v	class:DebianControlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    aliases = ['nsis', 'nsi', 'nsh']$/;"	v	class:NSISLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    aliases = ['sourceslist', 'sources.list', 'debsources']$/;"	v	class:SourcesListLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    aliases = ['spec']$/;"	v	class:RPMSpecLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    aliases = ['i6t']$/;"	v	class:Inform6TemplateLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    aliases = ['inform6', 'i6']$/;"	v	class:Inform6Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    aliases = ['inform7', 'i7']$/;"	v	class:Inform7Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    aliases = ['tads3']$/;"	v	class:Tads3Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/iolang.py	/^    aliases = ['io']$/;"	v	class:IoLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    aliases = ['coffee-script', 'coffeescript', 'coffee']$/;"	v	class:CoffeeScriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    aliases = ['dart']$/;"	v	class:DartLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    aliases = ['js', 'javascript']$/;"	v	class:JavascriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    aliases = ['kal']$/;"	v	class:KalLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    aliases = ['lasso', 'lassoscript']$/;"	v	class:LassoLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    aliases = ['live-script', 'livescript']$/;"	v	class:LiveScriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    aliases = ['mask']$/;"	v	class:MaskLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    aliases = ['objective-j', 'objectivej', 'obj-j', 'objj']$/;"	v	class:ObjectiveJLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    aliases = ['ts']$/;"	v	class:TypeScriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^    aliases = ['jlcon']$/;"	v	class:JuliaConsoleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^    aliases = ['julia', 'jl']$/;"	v	class:JuliaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    aliases = ['aspectj']$/;"	v	class:AspectJLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    aliases = ['ceylon']$/;"	v	class:CeylonLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    aliases = ['clojure', 'clj']$/;"	v	class:ClojureLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    aliases = ['clojurescript', 'cljs']$/;"	v	class:ClojureScriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    aliases = ['golo']$/;"	v	class:GoloLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    aliases = ['gosu']$/;"	v	class:GosuLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    aliases = ['groovy']$/;"	v	class:GroovyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    aliases = ['gst']$/;"	v	class:GosuTemplateLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    aliases = ['ioke', 'ik']$/;"	v	class:IokeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    aliases = ['jasmin', 'jasminxt']$/;"	v	class:JasminLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    aliases = ['java']$/;"	v	class:JavaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    aliases = ['kotlin']$/;"	v	class:KotlinLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    aliases = ['pig']$/;"	v	class:PigLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    aliases = ['scala']$/;"	v	class:ScalaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    aliases = ['xtend']$/;"	v	class:XtendLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    aliases = ['common-lisp', 'cl', 'lisp', 'elisp', 'emacs', 'emacs-lisp']$/;"	v	class:CommonLispLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    aliases = ['hylang']$/;"	v	class:HyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    aliases = ['newlisp']$/;"	v	class:NewLispLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    aliases = ['racket', 'rkt']$/;"	v	class:RacketLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    aliases = ['scheme', 'scm']$/;"	v	class:SchemeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    aliases = ['basemake']$/;"	v	class:BaseMakefileLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    aliases = ['cmake']$/;"	v	class:CMakeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    aliases = ['make', 'makefile', 'mf', 'bsdmake']$/;"	v	class:MakefileLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    aliases = ['bbcode']$/;"	v	class:BBCodeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    aliases = ['css+mozpreproc']$/;"	v	class:MozPreprocCssLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    aliases = ['groff', 'nroff', 'man']$/;"	v	class:GroffLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    aliases = ['javascript+mozpreproc']$/;"	v	class:MozPreprocJavascriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    aliases = ['rst', 'rest', 'restructuredtext']$/;"	v	class:RstLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    aliases = ['tex', 'latex']$/;"	v	class:TexLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    aliases = ['trac-wiki', 'moin']$/;"	v	class:MoinWikiLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    aliases = ['xul+mozpreproc']$/;"	v	class:MozPreprocXulLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    aliases = [name]$/;"	v	class:MozPreprocHashLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    aliases = [name]$/;"	v	class:MozPreprocPercentLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    aliases = ['matlab']$/;"	v	class:MatlabLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    aliases = ['matlabsession']$/;"	v	class:MatlabSessionLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    aliases = ['octave']$/;"	v	class:OctaveLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    aliases = ['scilab']$/;"	v	class:ScilabLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    aliases = ['ocaml']$/;"	v	class:OcamlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    aliases = ['opa']$/;"	v	class:OpaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    aliases = ['sml']$/;"	v	class:SMLLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    aliases = ['bugs', 'winbugs', 'openbugs']$/;"	v	class:BugsLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    aliases = ['jags']$/;"	v	class:JagsLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    aliases = ['modelica']$/;"	v	class:ModelicaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    aliases = ['stan']$/;"	v	class:StanLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    aliases = ['nimrod', 'nim']$/;"	v	class:NimrodLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nit.py	/^    aliases = ['nit']$/;"	v	class:NitLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^    aliases = ['nixos', 'nix']$/;"	v	class:NixLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    aliases = ['logos']$/;"	v	class:LogosLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    aliases = ['objective-c', 'objectivec', 'obj-c', 'objc']$/;"	v	class:ObjectiveCLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    aliases = ['objective-c++', 'objectivec++', 'obj-c++', 'objc++']$/;"	v	class:ObjectiveCppLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    aliases = ['swift']$/;"	v	class:SwiftLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ooc.py	/^    aliases = ['ooc']$/;"	v	class:OocLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    aliases = ['antlr']$/;"	v	class:AntlrLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    aliases = ['antlr-as', 'antlr-actionscript']$/;"	v	class:AntlrActionScriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    aliases = ['antlr-cpp']$/;"	v	class:AntlrCppLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    aliases = ['antlr-csharp', 'antlr-c#']$/;"	v	class:AntlrCSharpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    aliases = ['antlr-java']$/;"	v	class:AntlrJavaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    aliases = ['antlr-objc']$/;"	v	class:AntlrObjectiveCLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    aliases = ['antlr-perl']$/;"	v	class:AntlrPerlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    aliases = ['antlr-python']$/;"	v	class:AntlrPythonLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    aliases = ['antlr-ruby', 'antlr-rb']$/;"	v	class:AntlrRubyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    aliases = ['ebnf']$/;"	v	class:EbnfLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    aliases = ['ragel']$/;"	v	class:RagelLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    aliases = ['ragel-c']$/;"	v	class:RagelCLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    aliases = ['ragel-cpp']$/;"	v	class:RagelCppLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    aliases = ['ragel-d']$/;"	v	class:RagelDLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    aliases = ['ragel-em']$/;"	v	class:RagelEmbeddedLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    aliases = ['ragel-java']$/;"	v	class:RagelJavaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    aliases = ['ragel-objc']$/;"	v	class:RagelObjectiveCLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    aliases = ['ragel-ruby', 'ragel-rb']$/;"	v	class:RagelRubyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    aliases = ['treetop']$/;"	v	class:TreetopLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    aliases = ['ada', 'ada95', 'ada2005']$/;"	v	class:AdaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    aliases = ['delphi', 'pas', 'pascal', 'objectpascal']$/;"	v	class:DelphiLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    aliases = ['modula2', 'm2']$/;"	v	class:Modula2Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    aliases = ['pawn']$/;"	v	class:PawnLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    aliases = ['sp']$/;"	v	class:SourcePawnLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    aliases = ['perl', 'pl']$/;"	v	class:PerlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    aliases = ['perl6', 'pl6']$/;"	v	class:Perl6Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    aliases = ['php', 'php3', 'php4', 'php5']$/;"	v	class:PhpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    aliases = ['zephir']$/;"	v	class:ZephirLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    aliases = ['logtalk']$/;"	v	class:LogtalkLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    aliases = ['prolog']$/;"	v	class:PrologLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    aliases = ['cython', 'pyx', 'pyrex']$/;"	v	class:CythonLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    aliases = ['dg']$/;"	v	class:DgLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    aliases = ['numpy']$/;"	v	class:NumPyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    aliases = ['py3tb']$/;"	v	class:Python3TracebackLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    aliases = ['pycon']$/;"	v	class:PythonConsoleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    aliases = ['pytb']$/;"	v	class:PythonTracebackLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    aliases = ['python', 'py', 'sage']$/;"	v	class:PythonLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    aliases = ['python3', 'py3']$/;"	v	class:Python3Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    aliases = ['rconsole', 'rout']$/;"	v	class:RConsoleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    aliases = ['rd']$/;"	v	class:RdLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    aliases = ['splus', 's', 'r']$/;"	v	class:SLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^    aliases = ['sparql']$/;"	v	class:SparqlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    aliases = ['rebol']$/;"	v	class:RebolLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    aliases = ['red', 'red\/system']$/;"	v	class:RedLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^    aliases = ['resource', 'resourcebundle']$/;"	v	class:ResourceLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    aliases = ['robotframework']$/;"	v	class:RobotFrameworkLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    aliases = ['fancy', 'fy']$/;"	v	class:FancyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    aliases = ['rb', 'ruby', 'duby']$/;"	v	class:RubyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    aliases = ['rbcon', 'irb']$/;"	v	class:RubyConsoleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^    aliases = ['rust']$/;"	v	class:RustLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    aliases = ["moon", "moonscript"]$/;"	v	class:MoonScriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    aliases = ['applescript']$/;"	v	class:AppleScriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    aliases = ['chai', 'chaiscript']$/;"	v	class:ChaiscriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    aliases = ['hybris', 'hy']$/;"	v	class:HybrisLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    aliases = ['lsl']$/;"	v	class:LSLLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    aliases = ['lua']$/;"	v	class:LuaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    aliases = ['moocode', 'moo']$/;"	v	class:MOOCodeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    aliases = ['rexx', 'arexx']$/;"	v	class:RexxLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    aliases = ['bash', 'sh', 'ksh', 'shell']$/;"	v	class:BashLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    aliases = ['bat', 'batch', 'dosbatch', 'winbatch']$/;"	v	class:BatchLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    aliases = ['console']$/;"	v	class:BashSessionLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    aliases = ['powershell', 'posh', 'ps1', 'psm1']$/;"	v	class:PowerShellLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    aliases = ['shell-session']$/;"	v	class:ShellSessionLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    aliases = ['tcsh', 'csh']$/;"	v	class:TcshLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^    aliases = ['newspeak', ]$/;"	v	class:NewspeakLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^    aliases = ['smalltalk', 'squeak', 'st']$/;"	v	class:SmalltalkLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/snobol.py	/^    aliases = ["snobol"]$/;"	v	class:SnobolLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^    aliases = ['raw']$/;"	v	class:RawTokenLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^    aliases = ['text']$/;"	v	class:TextLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    aliases = ['mysql']$/;"	v	class:MySqlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    aliases = ['plpgsql']$/;"	v	class:PlPgsqlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    aliases = ['postgresql', 'postgres']$/;"	v	class:PostgresLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    aliases = ['psql', 'postgresql-console', 'postgres-console']$/;"	v	class:PostgresConsoleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    aliases = ['rql']$/;"	v	class:RqlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    aliases = ['sql']$/;"	v	class:SqlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    aliases = ['sqlite3']$/;"	v	class:SqliteConsoleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    aliases = []    # not public$/;"	v	class:PsqlRegexLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^    aliases = ['tcl']$/;"	v	class:TclLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ["html+handlebars"]$/;"	v	class:HandlebarsHtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ["html+twig"]$/;"	v	class:TwigHtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['cf']$/;"	v	class:ColdfusionMarkupLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['cfc']$/;"	v	class:ColdfusionCFCLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['cfm']$/;"	v	class:ColdfusionHtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['cfs']$/;"	v	class:ColdfusionLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['cheetah', 'spitfire']$/;"	v	class:CheetahLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['css+django', 'css+jinja']$/;"	v	class:CssDjangoLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['css+erb', 'css+ruby']$/;"	v	class:CssErbLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['css+genshitext', 'css+genshi']$/;"	v	class:CssGenshiLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['css+lasso']$/;"	v	class:LassoCssLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['css+mako']$/;"	v	class:MakoCssLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['css+myghty']$/;"	v	class:MyghtyCssLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['css+php']$/;"	v	class:CssPhpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['css+smarty']$/;"	v	class:CssSmartyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['django', 'jinja']$/;"	v	class:DjangoLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['erb']$/;"	v	class:ErbLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['evoque']$/;"	v	class:EvoqueLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['genshi', 'kid', 'xml+genshi', 'xml+kid']$/;"	v	class:GenshiLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['genshitext']$/;"	v	class:GenshiTextLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['handlebars']$/;"	v	class:HandlebarsLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['html+cheetah', 'html+spitfire', 'htmlcheetah']$/;"	v	class:CheetahHtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['html+django', 'html+jinja', 'htmldjango']$/;"	v	class:HtmlDjangoLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['html+evoque']$/;"	v	class:EvoqueHtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['html+genshi', 'html+kid']$/;"	v	class:HtmlGenshiLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['html+lasso']$/;"	v	class:LassoHtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['html+mako']$/;"	v	class:MakoHtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['html+myghty']$/;"	v	class:MyghtyHtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['html+php']$/;"	v	class:HtmlPhpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['html+smarty']$/;"	v	class:HtmlSmartyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['html+velocity']$/;"	v	class:VelocityHtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['js+cheetah', 'javascript+cheetah',$/;"	v	class:CheetahJavascriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['js+django', 'javascript+django',$/;"	v	class:JavascriptDjangoLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['js+erb', 'javascript+erb', 'js+ruby', 'javascript+ruby']$/;"	v	class:JavascriptErbLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['js+genshitext', 'js+genshi', 'javascript+genshitext',$/;"	v	class:JavascriptGenshiLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['js+lasso', 'javascript+lasso']$/;"	v	class:LassoJavascriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['js+mako', 'javascript+mako']$/;"	v	class:MakoJavascriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['js+myghty', 'javascript+myghty']$/;"	v	class:MyghtyJavascriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['js+php', 'javascript+php']$/;"	v	class:JavascriptPhpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['js+smarty', 'javascript+smarty']$/;"	v	class:JavascriptSmartyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['jsp']$/;"	v	class:JspLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['liquid']$/;"	v	class:LiquidLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['mako']$/;"	v	class:MakoLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['mason']$/;"	v	class:MasonLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['myghty']$/;"	v	class:MyghtyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['rhtml', 'html+erb', 'html+ruby']$/;"	v	class:RhtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['smarty']$/;"	v	class:SmartyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['ssp']$/;"	v	class:SspLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['tea']$/;"	v	class:TeaTemplateLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['twig']$/;"	v	class:TwigLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['velocity']$/;"	v	class:VelocityLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['xml+cheetah', 'xml+spitfire']$/;"	v	class:CheetahXmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['xml+django', 'xml+jinja']$/;"	v	class:XmlDjangoLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['xml+erb', 'xml+ruby']$/;"	v	class:XmlErbLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['xml+evoque']$/;"	v	class:EvoqueXmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['xml+lasso']$/;"	v	class:LassoXmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['xml+mako']$/;"	v	class:MakoXmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['xml+myghty']$/;"	v	class:MyghtyXmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['xml+php']$/;"	v	class:XmlPhpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['xml+smarty']$/;"	v	class:XmlSmartyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['xml+velocity']$/;"	v	class:VelocityXmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    aliases = ['yaml+jinja', 'salt', 'sls']$/;"	v	class:YamlJinjaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/testing.py	/^    aliases = ['cucumber', 'gherkin']$/;"	v	class:GherkinLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    aliases = ['awk', 'gawk', 'mawk', 'nawk']$/;"	v	class:AwkLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    aliases = ['vim']$/;"	v	class:VimLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    aliases = ['http']$/;"	v	class:HttpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    aliases = ['irc']$/;"	v	class:IrcLogsLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    aliases = ['pot', 'po']$/;"	v	class:GettextLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    aliases = ['todotxt']$/;"	v	class:TodotxtLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    aliases = ['coq']$/;"	v	class:CoqLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    aliases = ['isabelle']$/;"	v	class:IsabelleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    aliases = ['lean']$/;"	v	class:LeanLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^    aliases = ['urbiscript']$/;"	v	class:UrbiscriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    aliases = ['cirru']$/;"	v	class:CirruLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    aliases = ['duel', 'jbst', 'jsonml+bst']$/;"	v	class:DuelLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    aliases = ['qml']$/;"	v	class:QmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    aliases = ['slim']$/;"	v	class:SlimLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    aliases = ['xquery', 'xqy', 'xq', 'xql', 'xqm']$/;"	v	class:XQueryLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatter.py	/^    aliases = []$/;"	v	class:Formatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/bbcode.py	/^    aliases = ['bbcode', 'bb']$/;"	v	class:BBCodeFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    aliases = ['html']$/;"	v	class:HtmlFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    aliases = ['bmp', 'bitmap']$/;"	v	class:BmpImageFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    aliases = ['gif']$/;"	v	class:GifImageFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    aliases = ['img', 'IMG', 'png']$/;"	v	class:ImageFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    aliases = ['jpg', 'jpeg']$/;"	v	class:JpgImageFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^    aliases = ['latex', 'tex']$/;"	v	class:LatexFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^    aliases = ['raw', 'tokens']$/;"	v	class:RawTokenFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^    aliases = ['testcase']$/;"	v	class:TestcaseFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^    aliases = ['text', 'null']$/;"	v	class:NullFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/rtf.py	/^    aliases = ['rtf']$/;"	v	class:RtfFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/svg.py	/^    aliases = ['svg']$/;"	v	class:SvgFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^    aliases = ['terminal', 'console']$/;"	v	class:TerminalFormatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal256.py	/^    aliases = ['terminal256', 'console256', '256']$/;"	v	class:Terminal256Formatter
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    aliases = []$/;"	v	class:Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    aliases = ['as', 'actionscript']$/;"	v	class:ActionScriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    aliases = ['as3', 'actionscript3']$/;"	v	class:ActionScript3Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    aliases = ['mxml']$/;"	v	class:MxmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    aliases = ['gap']$/;"	v	class:GAPLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    aliases = ['mathematica', 'mma', 'nb']$/;"	v	class:MathematicaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    aliases = ['mupad']$/;"	v	class:MuPADLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^    aliases = ['at', 'ambienttalk', 'ambienttalk\/2']$/;"	v	class:AmbientTalkLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/apl.py	/^    aliases = ['apl']$/;"	v	class:APLLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    aliases = ['c-objdump']$/;"	v	class:CObjdumpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    aliases = ['ca65']$/;"	v	class:Ca65Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    aliases = ['cpp-objdump', 'c++-objdumb', 'cxx-objdump']$/;"	v	class:CppObjdumpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    aliases = ['d-objdump']$/;"	v	class:DObjdumpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    aliases = ['gas', 'asm']$/;"	v	class:GasLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    aliases = ['llvm']$/;"	v	class:LlvmLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    aliases = ['nasm']$/;"	v	class:NasmLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    aliases = ['objdump']$/;"	v	class:ObjdumpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    aliases = ['objdump-nasm']$/;"	v	class:NasmObjdumpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^    aliases = ['ahk', 'autohotkey']$/;"	v	class:AutohotkeyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^    aliases = ['autoit']$/;"	v	class:AutoItLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    aliases = ['blitzbasic', 'b3d', 'bplus']$/;"	v	class:BlitzBasicLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    aliases = ['blitzmax', 'bmax']$/;"	v	class:BlitzMaxLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    aliases = ['cbmbas']$/;"	v	class:CbmBasicV2Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    aliases = ['monkey']$/;"	v	class:MonkeyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    aliases = ['qbasic', 'basic']$/;"	v	class:QBasicLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    aliases = ['abap']$/;"	v	class:ABAPLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    aliases = ['cobol']$/;"	v	class:CobolLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    aliases = ['cobolfree']$/;"	v	class:CobolFreeformatLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    aliases = ['gooddata-cl']$/;"	v	class:GoodDataCLLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    aliases = ['maql']$/;"	v	class:MaqlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    aliases = ['openedge', 'abl', 'progress']$/;"	v	class:OpenEdgeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    aliases = ['c']$/;"	v	class:CLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    aliases = ['cpp', 'c++']$/;"	v	class:CppLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    aliases = ['clay']$/;"	v	class:ClayLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    aliases = ['cuda', 'cu']$/;"	v	class:CudaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    aliases = ['ec']$/;"	v	class:ECLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    aliases = ['mql', 'mq4', 'mq5', 'mql4', 'mql5']$/;"	v	class:MqlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    aliases = ['nesc']$/;"	v	class:NesCLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    aliases = ['pike']$/;"	v	class:PikeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    aliases = ['swig']$/;"	v	class:SwigLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    aliases = ['vala', 'vapi']$/;"	v	class:ValaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/chapel.py	/^    aliases = ['chapel', 'chpl']$/;"	v	class:ChapelLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    aliases = ['apacheconf', 'aconf', 'apache']$/;"	v	class:ApacheConfLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    aliases = ['cfengine3', 'cf3']$/;"	v	class:Cfengine3Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    aliases = ['docker', 'dockerfile']$/;"	v	class:DockerLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    aliases = ['ini', 'cfg', 'dosini']$/;"	v	class:IniLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    aliases = ['kconfig', 'menuconfig', 'linux-config', 'kernel-config']$/;"	v	class:KconfigLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    aliases = ['lighty', 'lighttpd']$/;"	v	class:LighttpdConfLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    aliases = ['nginx']$/;"	v	class:NginxConfLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    aliases = ['properties', 'jproperties']$/;"	v	class:PropertiesLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    aliases = ['registry']$/;"	v	class:RegeditLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    aliases = ['squidconf', 'squid.conf', 'squid']$/;"	v	class:SquidConfLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^    aliases = ["pypylog", "pypy"]$/;"	v	class:PyPyLogLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^    aliases = ['vctreestatus']$/;"	v	class:VCTreeStatusLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    aliases = ['css']$/;"	v	class:CssLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    aliases = ['sass']$/;"	v	class:SassLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    aliases = ['scss']$/;"	v	class:ScssLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    aliases = ['croc']$/;"	v	class:CrocLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    aliases = ['d']$/;"	v	class:DLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    aliases = ['minid']$/;"	v	class:MiniDLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dalvik.py	/^    aliases = ['smali']$/;"	v	class:SmaliLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    aliases = ['json']$/;"	v	class:JsonLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    aliases = ['jsonld', 'json-ld']$/;"	v	class:JsonLdLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    aliases = ['yaml']$/;"	v	class:YamlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^    aliases = ['diff', 'udiff']$/;"	v	class:DiffLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^    aliases = ['dpatch']$/;"	v	class:DarcsPatchLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    aliases = ['aspx-cs']$/;"	v	class:CSharpAspxLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    aliases = ['aspx-vb']$/;"	v	class:VbNetAspxLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    aliases = ['boo']$/;"	v	class:BooLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    aliases = ['csharp', 'c#']$/;"	v	class:CSharpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    aliases = ['fsharp']$/;"	v	class:FSharpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    aliases = ['nemerle']$/;"	v	class:NemerleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    aliases = ['vb.net', 'vbnet']$/;"	v	class:VbNetLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    aliases = ['alloy']$/;"	v	class:AlloyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    aliases = ['bro']$/;"	v	class:BroLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    aliases = ['mscgen', 'msc']$/;"	v	class:MscgenLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    aliases = ['pan']$/;"	v	class:PanLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    aliases = ['protobuf', 'proto']$/;"	v	class:ProtoBufLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    aliases = ['puppet']$/;"	v	class:PuppetLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    aliases = ['rsl']$/;"	v	class:RslLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    aliases = ['vgl']$/;"	v	class:VGLLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    aliases = ['dylan']$/;"	v	class:DylanLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    aliases = ['dylan-console', 'dylan-repl']$/;"	v	class:DylanConsoleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    aliases = ['dylan-lid', 'lid']$/;"	v	class:DylanLidLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^    aliases = ['ecl']$/;"	v	class:ECLLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/eiffel.py	/^    aliases = ['eiffel']$/;"	v	class:EiffelLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    aliases = ['elixir', 'ex', 'exs']$/;"	v	class:ElixirLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    aliases = ['erl']$/;"	v	class:ErlangShellLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    aliases = ['erlang']$/;"	v	class:ErlangLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    aliases = ['iex']$/;"	v	class:ElixirConsoleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    aliases = ['befunge']$/;"	v	class:BefungeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    aliases = ['brainfuck', 'bf']$/;"	v	class:BrainfuckLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    aliases = ['redcode']$/;"	v	class:RedcodeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^    aliases = ['factor']$/;"	v	class:FactorLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    aliases = ['fan']$/;"	v	class:FantomLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    aliases = ['felix', 'flx']$/;"	v	class:FelixLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^    aliases = ['fortran']$/;"	v	class:FortranLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/foxpro.py	/^    aliases = ['foxpro', 'vfp', 'clipper', 'xbase']$/;"	v	class:FoxProLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^    aliases = ['go']$/;"	v	class:GoLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^    aliases = ['cypher']$/;"	v	class:CypherLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    aliases = ['asy', 'asymptote']$/;"	v	class:AsymptoteLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    aliases = ['glsl']$/;"	v	class:GLShaderLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    aliases = ['gnuplot']$/;"	v	class:GnuplotLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    aliases = ['postscript', 'postscr']$/;"	v	class:PostScriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    aliases = ['pov']$/;"	v	class:PovrayLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    aliases = ['agda']$/;"	v	class:AgdaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    aliases = ['cryptol', 'cry']$/;"	v	class:CryptolLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    aliases = ['haskell', 'hs']$/;"	v	class:HaskellLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    aliases = ['idris', 'idr']$/;"	v	class:IdrisLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    aliases = ['koka']$/;"	v	class:KokaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    aliases = ['lagda', 'literate-agda']$/;"	v	class:LiterateAgdaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    aliases = ['lcry', 'literate-cryptol', 'lcryptol']$/;"	v	class:LiterateCryptolLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    aliases = ['lhs', 'literate-haskell', 'lhaskell']$/;"	v	class:LiterateHaskellLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    aliases = ['lidr', 'literate-idris', 'lidris']$/;"	v	class:LiterateIdrisLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    aliases = ['haxeml', 'hxml']$/;"	v	class:HxmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    aliases = ['hx', 'haxe', 'hxsl']$/;"	v	class:HaxeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    aliases = ['systemverilog', 'sv']$/;"	v	class:SystemVerilogLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    aliases = ['verilog', 'v']$/;"	v	class:VerilogLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    aliases = ['vhdl']$/;"	v	class:VhdlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    aliases = ['dtd']$/;"	v	class:DtdLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    aliases = ['haml']$/;"	v	class:HamlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    aliases = ['html']$/;"	v	class:HtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    aliases = ['jade']$/;"	v	class:JadeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    aliases = ['scaml']$/;"	v	class:ScamlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    aliases = ['xml']$/;"	v	class:XmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    aliases = ['xslt']$/;"	v	class:XsltLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/idl.py	/^    aliases = ['idl']$/;"	v	class:IDLLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^    aliases = ['igor', 'igorpro']$/;"	v	class:IgorLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^    aliases = ['limbo']$/;"	v	class:LimboLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    aliases = ['control', 'debcontrol']$/;"	v	class:DebianControlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    aliases = ['nsis', 'nsi', 'nsh']$/;"	v	class:NSISLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    aliases = ['sourceslist', 'sources.list', 'debsources']$/;"	v	class:SourcesListLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    aliases = ['spec']$/;"	v	class:RPMSpecLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    aliases = ['i6t']$/;"	v	class:Inform6TemplateLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    aliases = ['inform6', 'i6']$/;"	v	class:Inform6Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    aliases = ['inform7', 'i7']$/;"	v	class:Inform7Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    aliases = ['tads3']$/;"	v	class:Tads3Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/iolang.py	/^    aliases = ['io']$/;"	v	class:IoLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    aliases = ['coffee-script', 'coffeescript', 'coffee']$/;"	v	class:CoffeeScriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    aliases = ['dart']$/;"	v	class:DartLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    aliases = ['js', 'javascript']$/;"	v	class:JavascriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    aliases = ['kal']$/;"	v	class:KalLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    aliases = ['lasso', 'lassoscript']$/;"	v	class:LassoLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    aliases = ['live-script', 'livescript']$/;"	v	class:LiveScriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    aliases = ['mask']$/;"	v	class:MaskLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    aliases = ['objective-j', 'objectivej', 'obj-j', 'objj']$/;"	v	class:ObjectiveJLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    aliases = ['ts']$/;"	v	class:TypeScriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^    aliases = ['jlcon']$/;"	v	class:JuliaConsoleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^    aliases = ['julia', 'jl']$/;"	v	class:JuliaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    aliases = ['aspectj']$/;"	v	class:AspectJLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    aliases = ['ceylon']$/;"	v	class:CeylonLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    aliases = ['clojure', 'clj']$/;"	v	class:ClojureLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    aliases = ['clojurescript', 'cljs']$/;"	v	class:ClojureScriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    aliases = ['golo']$/;"	v	class:GoloLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    aliases = ['gosu']$/;"	v	class:GosuLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    aliases = ['groovy']$/;"	v	class:GroovyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    aliases = ['gst']$/;"	v	class:GosuTemplateLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    aliases = ['ioke', 'ik']$/;"	v	class:IokeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    aliases = ['jasmin', 'jasminxt']$/;"	v	class:JasminLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    aliases = ['java']$/;"	v	class:JavaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    aliases = ['kotlin']$/;"	v	class:KotlinLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    aliases = ['pig']$/;"	v	class:PigLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    aliases = ['scala']$/;"	v	class:ScalaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    aliases = ['xtend']$/;"	v	class:XtendLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    aliases = ['common-lisp', 'cl', 'lisp', 'elisp', 'emacs', 'emacs-lisp']$/;"	v	class:CommonLispLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    aliases = ['hylang']$/;"	v	class:HyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    aliases = ['newlisp']$/;"	v	class:NewLispLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    aliases = ['racket', 'rkt']$/;"	v	class:RacketLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    aliases = ['scheme', 'scm']$/;"	v	class:SchemeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    aliases = ['basemake']$/;"	v	class:BaseMakefileLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    aliases = ['cmake']$/;"	v	class:CMakeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    aliases = ['make', 'makefile', 'mf', 'bsdmake']$/;"	v	class:MakefileLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    aliases = ['bbcode']$/;"	v	class:BBCodeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    aliases = ['css+mozpreproc']$/;"	v	class:MozPreprocCssLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    aliases = ['groff', 'nroff', 'man']$/;"	v	class:GroffLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    aliases = ['javascript+mozpreproc']$/;"	v	class:MozPreprocJavascriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    aliases = ['rst', 'rest', 'restructuredtext']$/;"	v	class:RstLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    aliases = ['tex', 'latex']$/;"	v	class:TexLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    aliases = ['trac-wiki', 'moin']$/;"	v	class:MoinWikiLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    aliases = ['xul+mozpreproc']$/;"	v	class:MozPreprocXulLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    aliases = [name]$/;"	v	class:MozPreprocHashLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    aliases = [name]$/;"	v	class:MozPreprocPercentLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    aliases = ['matlab']$/;"	v	class:MatlabLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    aliases = ['matlabsession']$/;"	v	class:MatlabSessionLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    aliases = ['octave']$/;"	v	class:OctaveLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    aliases = ['scilab']$/;"	v	class:ScilabLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    aliases = ['ocaml']$/;"	v	class:OcamlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    aliases = ['opa']$/;"	v	class:OpaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    aliases = ['sml']$/;"	v	class:SMLLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    aliases = ['bugs', 'winbugs', 'openbugs']$/;"	v	class:BugsLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    aliases = ['jags']$/;"	v	class:JagsLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    aliases = ['modelica']$/;"	v	class:ModelicaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    aliases = ['stan']$/;"	v	class:StanLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    aliases = ['nimrod', 'nim']$/;"	v	class:NimrodLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nit.py	/^    aliases = ['nit']$/;"	v	class:NitLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^    aliases = ['nixos', 'nix']$/;"	v	class:NixLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    aliases = ['logos']$/;"	v	class:LogosLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    aliases = ['objective-c', 'objectivec', 'obj-c', 'objc']$/;"	v	class:ObjectiveCLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    aliases = ['objective-c++', 'objectivec++', 'obj-c++', 'objc++']$/;"	v	class:ObjectiveCppLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    aliases = ['swift']$/;"	v	class:SwiftLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ooc.py	/^    aliases = ['ooc']$/;"	v	class:OocLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    aliases = ['antlr']$/;"	v	class:AntlrLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    aliases = ['antlr-as', 'antlr-actionscript']$/;"	v	class:AntlrActionScriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    aliases = ['antlr-cpp']$/;"	v	class:AntlrCppLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    aliases = ['antlr-csharp', 'antlr-c#']$/;"	v	class:AntlrCSharpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    aliases = ['antlr-java']$/;"	v	class:AntlrJavaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    aliases = ['antlr-objc']$/;"	v	class:AntlrObjectiveCLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    aliases = ['antlr-perl']$/;"	v	class:AntlrPerlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    aliases = ['antlr-python']$/;"	v	class:AntlrPythonLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    aliases = ['antlr-ruby', 'antlr-rb']$/;"	v	class:AntlrRubyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    aliases = ['ebnf']$/;"	v	class:EbnfLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    aliases = ['ragel']$/;"	v	class:RagelLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    aliases = ['ragel-c']$/;"	v	class:RagelCLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    aliases = ['ragel-cpp']$/;"	v	class:RagelCppLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    aliases = ['ragel-d']$/;"	v	class:RagelDLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    aliases = ['ragel-em']$/;"	v	class:RagelEmbeddedLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    aliases = ['ragel-java']$/;"	v	class:RagelJavaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    aliases = ['ragel-objc']$/;"	v	class:RagelObjectiveCLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    aliases = ['ragel-ruby', 'ragel-rb']$/;"	v	class:RagelRubyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    aliases = ['treetop']$/;"	v	class:TreetopLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    aliases = ['ada', 'ada95', 'ada2005']$/;"	v	class:AdaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    aliases = ['delphi', 'pas', 'pascal', 'objectpascal']$/;"	v	class:DelphiLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    aliases = ['modula2', 'm2']$/;"	v	class:Modula2Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    aliases = ['pawn']$/;"	v	class:PawnLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    aliases = ['sp']$/;"	v	class:SourcePawnLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    aliases = ['perl', 'pl']$/;"	v	class:PerlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    aliases = ['perl6', 'pl6']$/;"	v	class:Perl6Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    aliases = ['php', 'php3', 'php4', 'php5']$/;"	v	class:PhpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    aliases = ['zephir']$/;"	v	class:ZephirLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    aliases = ['logtalk']$/;"	v	class:LogtalkLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    aliases = ['prolog']$/;"	v	class:PrologLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    aliases = ['cython', 'pyx', 'pyrex']$/;"	v	class:CythonLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    aliases = ['dg']$/;"	v	class:DgLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    aliases = ['numpy']$/;"	v	class:NumPyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    aliases = ['py3tb']$/;"	v	class:Python3TracebackLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    aliases = ['pycon']$/;"	v	class:PythonConsoleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    aliases = ['pytb']$/;"	v	class:PythonTracebackLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    aliases = ['python', 'py', 'sage']$/;"	v	class:PythonLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    aliases = ['python3', 'py3']$/;"	v	class:Python3Lexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    aliases = ['rconsole', 'rout']$/;"	v	class:RConsoleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    aliases = ['rd']$/;"	v	class:RdLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    aliases = ['splus', 's', 'r']$/;"	v	class:SLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^    aliases = ['sparql']$/;"	v	class:SparqlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    aliases = ['rebol']$/;"	v	class:RebolLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    aliases = ['red', 'red\/system']$/;"	v	class:RedLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^    aliases = ['resource', 'resourcebundle']$/;"	v	class:ResourceLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    aliases = ['robotframework']$/;"	v	class:RobotFrameworkLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    aliases = ['fancy', 'fy']$/;"	v	class:FancyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    aliases = ['rb', 'ruby', 'duby']$/;"	v	class:RubyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    aliases = ['rbcon', 'irb']$/;"	v	class:RubyConsoleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^    aliases = ['rust']$/;"	v	class:RustLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    aliases = ["moon", "moonscript"]$/;"	v	class:MoonScriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    aliases = ['applescript']$/;"	v	class:AppleScriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    aliases = ['chai', 'chaiscript']$/;"	v	class:ChaiscriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    aliases = ['hybris', 'hy']$/;"	v	class:HybrisLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    aliases = ['lsl']$/;"	v	class:LSLLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    aliases = ['lua']$/;"	v	class:LuaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    aliases = ['moocode', 'moo']$/;"	v	class:MOOCodeLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    aliases = ['rexx', 'arexx']$/;"	v	class:RexxLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    aliases = ['bash', 'sh', 'ksh', 'shell']$/;"	v	class:BashLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    aliases = ['bat', 'batch', 'dosbatch', 'winbatch']$/;"	v	class:BatchLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    aliases = ['console']$/;"	v	class:BashSessionLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    aliases = ['powershell', 'posh', 'ps1', 'psm1']$/;"	v	class:PowerShellLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    aliases = ['shell-session']$/;"	v	class:ShellSessionLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    aliases = ['tcsh', 'csh']$/;"	v	class:TcshLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^    aliases = ['newspeak', ]$/;"	v	class:NewspeakLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^    aliases = ['smalltalk', 'squeak', 'st']$/;"	v	class:SmalltalkLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/snobol.py	/^    aliases = ["snobol"]$/;"	v	class:SnobolLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^    aliases = ['raw']$/;"	v	class:RawTokenLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^    aliases = ['text']$/;"	v	class:TextLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    aliases = ['mysql']$/;"	v	class:MySqlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    aliases = ['plpgsql']$/;"	v	class:PlPgsqlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    aliases = ['postgresql', 'postgres']$/;"	v	class:PostgresLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    aliases = ['psql', 'postgresql-console', 'postgres-console']$/;"	v	class:PostgresConsoleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    aliases = ['rql']$/;"	v	class:RqlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    aliases = ['sql']$/;"	v	class:SqlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    aliases = ['sqlite3']$/;"	v	class:SqliteConsoleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    aliases = []    # not public$/;"	v	class:PsqlRegexLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^    aliases = ['tcl']$/;"	v	class:TclLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ["html+handlebars"]$/;"	v	class:HandlebarsHtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ["html+twig"]$/;"	v	class:TwigHtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['cf']$/;"	v	class:ColdfusionMarkupLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['cfc']$/;"	v	class:ColdfusionCFCLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['cfm']$/;"	v	class:ColdfusionHtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['cfs']$/;"	v	class:ColdfusionLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['cheetah', 'spitfire']$/;"	v	class:CheetahLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['css+django', 'css+jinja']$/;"	v	class:CssDjangoLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['css+erb', 'css+ruby']$/;"	v	class:CssErbLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['css+genshitext', 'css+genshi']$/;"	v	class:CssGenshiLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['css+lasso']$/;"	v	class:LassoCssLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['css+mako']$/;"	v	class:MakoCssLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['css+myghty']$/;"	v	class:MyghtyCssLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['css+php']$/;"	v	class:CssPhpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['css+smarty']$/;"	v	class:CssSmartyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['django', 'jinja']$/;"	v	class:DjangoLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['erb']$/;"	v	class:ErbLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['evoque']$/;"	v	class:EvoqueLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['genshi', 'kid', 'xml+genshi', 'xml+kid']$/;"	v	class:GenshiLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['genshitext']$/;"	v	class:GenshiTextLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['handlebars']$/;"	v	class:HandlebarsLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['html+cheetah', 'html+spitfire', 'htmlcheetah']$/;"	v	class:CheetahHtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['html+django', 'html+jinja', 'htmldjango']$/;"	v	class:HtmlDjangoLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['html+evoque']$/;"	v	class:EvoqueHtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['html+genshi', 'html+kid']$/;"	v	class:HtmlGenshiLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['html+lasso']$/;"	v	class:LassoHtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['html+mako']$/;"	v	class:MakoHtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['html+myghty']$/;"	v	class:MyghtyHtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['html+php']$/;"	v	class:HtmlPhpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['html+smarty']$/;"	v	class:HtmlSmartyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['html+velocity']$/;"	v	class:VelocityHtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['js+cheetah', 'javascript+cheetah',$/;"	v	class:CheetahJavascriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['js+django', 'javascript+django',$/;"	v	class:JavascriptDjangoLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['js+erb', 'javascript+erb', 'js+ruby', 'javascript+ruby']$/;"	v	class:JavascriptErbLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['js+genshitext', 'js+genshi', 'javascript+genshitext',$/;"	v	class:JavascriptGenshiLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['js+lasso', 'javascript+lasso']$/;"	v	class:LassoJavascriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['js+mako', 'javascript+mako']$/;"	v	class:MakoJavascriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['js+myghty', 'javascript+myghty']$/;"	v	class:MyghtyJavascriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['js+php', 'javascript+php']$/;"	v	class:JavascriptPhpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['js+smarty', 'javascript+smarty']$/;"	v	class:JavascriptSmartyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['jsp']$/;"	v	class:JspLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['liquid']$/;"	v	class:LiquidLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['mako']$/;"	v	class:MakoLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['mason']$/;"	v	class:MasonLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['myghty']$/;"	v	class:MyghtyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['rhtml', 'html+erb', 'html+ruby']$/;"	v	class:RhtmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['smarty']$/;"	v	class:SmartyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['ssp']$/;"	v	class:SspLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['tea']$/;"	v	class:TeaTemplateLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['twig']$/;"	v	class:TwigLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['velocity']$/;"	v	class:VelocityLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['xml+cheetah', 'xml+spitfire']$/;"	v	class:CheetahXmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['xml+django', 'xml+jinja']$/;"	v	class:XmlDjangoLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['xml+erb', 'xml+ruby']$/;"	v	class:XmlErbLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['xml+evoque']$/;"	v	class:EvoqueXmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['xml+lasso']$/;"	v	class:LassoXmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['xml+mako']$/;"	v	class:MakoXmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['xml+myghty']$/;"	v	class:MyghtyXmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['xml+php']$/;"	v	class:XmlPhpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['xml+smarty']$/;"	v	class:XmlSmartyLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['xml+velocity']$/;"	v	class:VelocityXmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    aliases = ['yaml+jinja', 'salt', 'sls']$/;"	v	class:YamlJinjaLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/testing.py	/^    aliases = ['cucumber', 'gherkin']$/;"	v	class:GherkinLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    aliases = ['awk', 'gawk', 'mawk', 'nawk']$/;"	v	class:AwkLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    aliases = ['vim']$/;"	v	class:VimLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    aliases = ['http']$/;"	v	class:HttpLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    aliases = ['irc']$/;"	v	class:IrcLogsLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    aliases = ['pot', 'po']$/;"	v	class:GettextLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    aliases = ['todotxt']$/;"	v	class:TodotxtLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    aliases = ['coq']$/;"	v	class:CoqLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    aliases = ['isabelle']$/;"	v	class:IsabelleLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    aliases = ['lean']$/;"	v	class:LeanLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^    aliases = ['urbiscript']$/;"	v	class:UrbiscriptLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    aliases = ['cirru']$/;"	v	class:CirruLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    aliases = ['duel', 'jbst', 'jsonml+bst']$/;"	v	class:DuelLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    aliases = ['qml']$/;"	v	class:QmlLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    aliases = ['slim']$/;"	v	class:SlimLexer
aliases	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    aliases = ['xquery', 'xqy', 'xq', 'xql', 'xqm']$/;"	v	class:XQueryLexer
all	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
all	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def all(seq):$/;"	f
all_exit	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:all_exit() "{{{$/;"	f
all_interfaces	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^    all_interfaces = set()$/;"	v
all_interfaces	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^    all_interfaces = set()$/;"	v
all_primitives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^    all_primitives = set()$/;"	v
all_primitives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^    all_primitives = set()$/;"	v
all_protocols	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^    all_protocols  = set()$/;"	v
all_protocols	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^    all_protocols  = set()$/;"	v
all_tests_suite	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^def all_tests_suite():$/;"	f
all_timezones	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^['Africa\/Abidjan',$/;"	v
all_timezones	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^all_timezones = LazyList($/;"	v
all_timezones	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^['Africa\/Abidjan',$/;"	v
all_timezones	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^all_timezones = LazyList($/;"	v
all_timezones_set	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^all_timezones_set = LazySet(all_timezones)$/;"	v
all_timezones_set	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^all_timezones_set = LazySet(all_timezones)$/;"	v
allexcept	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^def allexcept(*args):$/;"	f
allexcept	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^def allexcept(*args):$/;"	f
allow_or_ignore_nan	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    int allow_or_ignore_nan;$/;"	m	struct:_PyEncoderObject	file:
alnum	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    alnum = '\\w'$/;"	v	class:ElixirLexer
alnum	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    alnum = '\\w'$/;"	v	class:ElixirLexer
alphanumid_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    alphanumid_re = r"[a-zA-Z][\\w']*"$/;"	v	class:SMLLexer
alphanumid_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    alphanumid_re = r"[a-zA-Z][\\w']*"$/;"	v	class:SMLLexer
alphanumid_reserved	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    alphanumid_reserved = set(($/;"	v	class:SMLLexer
alphanumid_reserved	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    alphanumid_reserved = set(($/;"	v	class:SMLLexer
am	plugged/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def analyse_text(text):$/;"	m	class:Lexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    def analyse_text(text):$/;"	m	class:ActionScript3Lexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    def analyse_text(self, text):$/;"	m	class:Ca65Lexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    def analyse_text(text):$/;"	m	class:GasLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    def analyse_text(self, text):$/;"	m	class:CbmBasicV2Lexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    def analyse_text(text):$/;"	m	class:QBasicLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    def analyse_text(text):$/;"	m	class:CLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    def analyse_text(text):$/;"	m	class:CppLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    def analyse_text(text):$/;"	m	class:SwigLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    def analyse_text(text):$/;"	m	class:IniLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    def analyse_text(text):$/;"	m	class:RegeditLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dalvik.py	/^    def analyse_text(text):$/;"	m	class:SmaliLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^    def analyse_text(text):$/;"	m	class:DiffLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    def analyse_text(text):$/;"	m	class:CSharpAspxLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    def analyse_text(text):$/;"	m	class:VbNetAspxLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    def analyse_text(text):$/;"	m	class:VbNetLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    def analyse_text(text):$/;"	m	class:RslLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    def analyse_text(text):$/;"	m	class:HaxeLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    def analyse_text(text):$/;"	m	class:DtdLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    def analyse_text(text):$/;"	m	class:HtmlLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    def analyse_text(text):$/;"	m	class:XmlLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    def analyse_text(text):$/;"	m	class:XsltLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^    def analyse_text(text):$/;"	m	class:LimboLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    def analyse_text(text):$/;"	m	class:SourcesListLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    def analyse_text(text):$/;"	m	class:LassoLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    def analyse_text(text):$/;"	m	class:ObjectiveJLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^    def analyse_text(text):$/;"	m	class:JuliaLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    def analyse_text(text):$/;"	m	class:GroovyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    def analyse_text(text):$/;"	m	class:JasminLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    def analyse_text(text):$/;"	m	class:HyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    def analyse_text(text):$/;"	m	class:CMakeLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    def analyse_text(text):$/;"	m	class:MakefileLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    def analyse_text(text):$/;"	m	class:GroffLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    def analyse_text(text):$/;"	m	class:RstLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    def analyse_text(text):$/;"	m	class:TexLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    def analyse_text(text):$/;"	m	class:MatlabLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    def analyse_text(text):$/;"	m	class:BugsLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    def analyse_text(text):$/;"	m	class:JagsLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    def analyse_text(text):$/;"	m	class:StanLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^    def analyse_text(text):$/;"	m	class:NixLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^        def analyse_text(text):$/;"	m	class:objective.GeneratedObjectiveCVariant
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    def analyse_text(text):$/;"	m	class:LogosLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrActionScriptLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrCSharpLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrCppLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrJavaLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrObjectiveCLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrPerlLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrPythonLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrRubyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelCLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelCppLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelDLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelEmbeddedLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelJavaLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelObjectiveCLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelRubyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    def analyse_text(text):$/;"	m	class:Perl6Lexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    def analyse_text(text):$/;"	m	class:PerlLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    def analyse_text(text):$/;"	m	class:PhpLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    def analyse_text(text):$/;"	m	class:LogtalkLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    def analyse_text(text):$/;"	m	class:PrologLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    def analyse_text(text):$/;"	m	class:NumPyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    def analyse_text(text):$/;"	m	class:Python3Lexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    def analyse_text(text):$/;"	m	class:PythonLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    def analyse_text(text):$/;"	m	class:SLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    def analyse_text(text):$/;"	m	class:RebolLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^    def analyse_text(text):$/;"	m	class:ResourceLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    def analyse_text(text):$/;"	m	class:RubyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    def analyse_text(text):$/;"	m	class:RexxLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    def analyse_text(text):$/;"	m	class:BashLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^    def analyse_text(text):$/;"	m	class:TclLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:CssDjangoLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:CssErbLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:CssGenshiLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:CssPhpLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:CssSmartyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:DjangoLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:ErbLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:GenshiLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:HtmlDjangoLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:HtmlGenshiLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:HtmlPhpLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:HtmlSmartyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:JavascriptDjangoLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:JavascriptErbLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:JavascriptGenshiLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:JavascriptPhpLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:JavascriptSmartyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:JspLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:LassoCssLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:LassoHtmlLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:LassoJavascriptLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:LassoXmlLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:MasonLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:RhtmlLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:SmartyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:SspLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:TeaTemplateLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:VelocityLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:VelocityXmlLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:XmlDjangoLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:XmlErbLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:XmlPhpLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:XmlSmartyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    def analyse_text(text):$/;"	m	class:HttpLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    def analyse_text(text):$/;"	m	class:CoqLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def analyse_text(text):$/;"	m	class:Lexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    def analyse_text(text):$/;"	m	class:ActionScript3Lexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    def analyse_text(self, text):$/;"	m	class:Ca65Lexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    def analyse_text(text):$/;"	m	class:GasLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    def analyse_text(self, text):$/;"	m	class:CbmBasicV2Lexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    def analyse_text(text):$/;"	m	class:QBasicLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    def analyse_text(text):$/;"	m	class:CLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    def analyse_text(text):$/;"	m	class:CppLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    def analyse_text(text):$/;"	m	class:SwigLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    def analyse_text(text):$/;"	m	class:IniLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    def analyse_text(text):$/;"	m	class:RegeditLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dalvik.py	/^    def analyse_text(text):$/;"	m	class:SmaliLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^    def analyse_text(text):$/;"	m	class:DiffLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    def analyse_text(text):$/;"	m	class:CSharpAspxLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    def analyse_text(text):$/;"	m	class:VbNetAspxLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    def analyse_text(text):$/;"	m	class:VbNetLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    def analyse_text(text):$/;"	m	class:RslLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    def analyse_text(text):$/;"	m	class:HaxeLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    def analyse_text(text):$/;"	m	class:DtdLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    def analyse_text(text):$/;"	m	class:HtmlLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    def analyse_text(text):$/;"	m	class:XmlLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    def analyse_text(text):$/;"	m	class:XsltLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^    def analyse_text(text):$/;"	m	class:LimboLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    def analyse_text(text):$/;"	m	class:SourcesListLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    def analyse_text(text):$/;"	m	class:LassoLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    def analyse_text(text):$/;"	m	class:ObjectiveJLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^    def analyse_text(text):$/;"	m	class:JuliaLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    def analyse_text(text):$/;"	m	class:GroovyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    def analyse_text(text):$/;"	m	class:JasminLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    def analyse_text(text):$/;"	m	class:HyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    def analyse_text(text):$/;"	m	class:CMakeLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    def analyse_text(text):$/;"	m	class:MakefileLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    def analyse_text(text):$/;"	m	class:GroffLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    def analyse_text(text):$/;"	m	class:RstLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    def analyse_text(text):$/;"	m	class:TexLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    def analyse_text(text):$/;"	m	class:MatlabLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    def analyse_text(text):$/;"	m	class:BugsLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    def analyse_text(text):$/;"	m	class:JagsLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    def analyse_text(text):$/;"	m	class:StanLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^    def analyse_text(text):$/;"	m	class:NixLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^        def analyse_text(text):$/;"	m	class:objective.GeneratedObjectiveCVariant
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    def analyse_text(text):$/;"	m	class:LogosLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrActionScriptLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrCSharpLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrCppLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrJavaLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrObjectiveCLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrPerlLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrPythonLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrRubyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelCLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelCppLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelDLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelEmbeddedLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelJavaLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelObjectiveCLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelRubyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    def analyse_text(text):$/;"	m	class:Perl6Lexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    def analyse_text(text):$/;"	m	class:PerlLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    def analyse_text(text):$/;"	m	class:PhpLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    def analyse_text(text):$/;"	m	class:LogtalkLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    def analyse_text(text):$/;"	m	class:PrologLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    def analyse_text(text):$/;"	m	class:NumPyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    def analyse_text(text):$/;"	m	class:Python3Lexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    def analyse_text(text):$/;"	m	class:PythonLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    def analyse_text(text):$/;"	m	class:SLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    def analyse_text(text):$/;"	m	class:RebolLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^    def analyse_text(text):$/;"	m	class:ResourceLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    def analyse_text(text):$/;"	m	class:RubyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    def analyse_text(text):$/;"	m	class:RexxLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    def analyse_text(text):$/;"	m	class:BashLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^    def analyse_text(text):$/;"	m	class:TclLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:CssDjangoLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:CssErbLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:CssGenshiLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:CssPhpLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:CssSmartyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:DjangoLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:ErbLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:GenshiLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:HtmlDjangoLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:HtmlGenshiLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:HtmlPhpLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:HtmlSmartyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:JavascriptDjangoLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:JavascriptErbLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:JavascriptGenshiLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:JavascriptPhpLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:JavascriptSmartyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:JspLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:LassoCssLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:LassoHtmlLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:LassoJavascriptLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:LassoXmlLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:MasonLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:RhtmlLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:SmartyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:SspLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:TeaTemplateLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:VelocityLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:VelocityXmlLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:XmlDjangoLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:XmlErbLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:XmlPhpLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:XmlSmartyLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    def analyse_text(text):$/;"	m	class:HttpLexer
analyse_text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    def analyse_text(text):$/;"	m	class:CoqLexer
and	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:and(xs) abort$/;"	f
ansiformat	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/console.py	/^def ansiformat(attr, text):$/;"	f
ansiformat	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^from pygments.console import ansiformat$/;"	i
ansiformat	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/console.py	/^def ansiformat(attr, text):$/;"	f
ansiformat	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^from pygments.console import ansiformat$/;"	i
any	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
aposattrcontentchar	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    aposattrcontentchar = r'[A-Za-z]|\\s|\\d|[!"#$%()*+,\\-.\/:;=?@\\[\\\\\\]^_`|~]'$/;"	v	class:XQueryLexer
aposattrcontentchar	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    aposattrcontentchar = r'[A-Za-z]|\\s|\\d|[!"#$%()*+,\\-.\/:;=?@\\[\\\\\\]^_`|~]'$/;"	v	class:XQueryLexer
apparent_encoding	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def apparent_encoding(self):$/;"	m	class:Response
append	plugged/unite.vim/plugin/unite/buffer.vim	/^function! s:append(path) "{{{$/;"	f
append	plugged/unite.vim/plugin/unite/window.vim	/^function! s:append() "{{{$/;"	f
append	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^    def append(self, dep, truncate=False, separator=None, truncate_to=None,$/;"	m	class:TokenParser
append	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^                      append=True)$/;"	v
apply_commands	plugged/smartpairs.vim/spec/support/vim.rb	/^    def apply_commands(commands)$/;"	f	class:Support.Vim
apply_filters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filter.py	/^def apply_filters(stream, filters, lexer=None):$/;"	f
apply_filters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^from pygments.filter import apply_filters, Filter$/;"	i
apply_filters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filter.py	/^def apply_filters(stream, filters, lexer=None):$/;"	f
apply_filters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^from pygments.filter import apply_filters, Filter$/;"	i
apps_dir_from_src	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^apps_dir_from_src(SrcFile) ->$/;"	f
argparse	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^from .packages import argparse$/;"	i
argparse	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardetect.py	/^import argparse$/;"	i
argv	plugged/syntastic/syntax_checkers/python/codec.py	/^from sys import argv, exit$/;"	i
argv	plugged/syntastic/syntax_checkers/python/compile.py	/^from sys import argv, exit$/;"	i
as_text_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^def as_text_type(s):$/;"	f
ascii	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    ascii = ('NUL', 'SOH', '[SE]TX', 'EOT', 'ENQ', 'ACK',$/;"	v	class:CryptolLexer
ascii	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    ascii = ('NUL', 'SOH', '[SE]TX', 'EOT', 'ENQ', 'ACK',$/;"	v	class:HaskellLexer
ascii	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    ascii = ('NUL', 'SOH', '[SE]TX', 'EOT', 'ENQ', 'ACK',$/;"	v	class:IdrisLexer
ascii	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    ascii = ('NUL', 'SOH', '[SE]TX', 'EOT', 'ENQ', 'ACK',$/;"	v	class:CryptolLexer
ascii	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    ascii = ('NUL', 'SOH', '[SE]TX', 'EOT', 'ENQ', 'ACK',$/;"	v	class:HaskellLexer
ascii	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    ascii = ('NUL', 'SOH', '[SE]TX', 'EOT', 'ENQ', 'ACK',$/;"	v	class:IdrisLexer
ascii	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def ascii(s):$/;"	f
ascii	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def ascii(s):$/;"	f
ascii_char_size	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^ascii_char_size(JSON_UNICHR c)$/;"	f	file:
ascii_escape_char	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^ascii_escape_char(JSON_UNICHR c, char *output, Py_ssize_t chars)$/;"	f	file:
ascii_escape_str	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^ascii_escape_str(PyObject *pystr)$/;"	f	file:
ascii_escape_unicode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^ascii_escape_unicode(PyObject *pystr)$/;"	f	file:
assertIs	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decode.py	/^        def assertIs(self, a, b):$/;"	m	class:TestDecode
assertRoundTrip	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^    def assertRoundTrip(self, obj, other, for_json=True):$/;"	m	class:TestForJson
assertScan	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_scanstring.py	/^        def assertScan(given, expect, test_utf8=True):$/;"	f	function:TestScanString.test_surrogates
assert_correct_indenting	plugged/vim-ruby/spec/spec_helper.rb	/^  def assert_correct_indenting(string)$/;"	f
assert_file_contents	plugged/smartpairs.vim/spec/support/vim.rb	/^    def assert_file_contents(string)$/;"	f	class:Support.Vim
assert_fingerprint	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    assert_fingerprint = None$/;"	v	class:VerifiedHTTPSConnection
assert_fingerprint	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^def assert_fingerprint(cert, fingerprint):$/;"	f
assign_name	autoload/plug.vim	/^function! s:assign_name()$/;"	f
assoc	autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
atom_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    atom_re = r"(?:[a-z]\\w*|'[^\\n']*[^\\\\]')"$/;"	v	class:ErlangLexer
atom_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    atom_re = r"(?:[a-z]\\w*|'[^\\n']*[^\\\\]')"$/;"	v	class:ErlangLexer
auto	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_vim_builtins.py	/^auto = _getauto()$/;"	v
auto	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^        from pygments.lexers._vim_builtins import command, option, auto$/;"	i
auto	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_vim_builtins.py	/^auto = _getauto()$/;"	v
auto	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^        from pygments.lexers._vim_builtins import command, option, auto$/;"	i
b	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/filepost.py	/^from .packages.six import b$/;"	i
b	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    def b(s):$/;"	f
b	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    def b(s):$/;"	f	function:iteritems
b	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/request.py	/^from ..packages.six import b$/;"	i
b	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    def b(s):$/;"	f
b	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^from .compat import fromhex, b, u, text_type, binary_type, PY3, unichr$/;"	i
b	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^from simplejson.compat import StringIO, long_type, b, binary_type, PY3$/;"	i
b	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_encode_basestring_ascii.py	/^from simplejson.compat import b$/;"	i
b	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_errors.py	/^from simplejson.compat import u, b$/;"	i
b	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_scanstring.py	/^from simplejson.compat import b, PY3$/;"	i
b	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^from simplejson.compat import unichr, text_type, b, u, BytesIO$/;"	i
b64encode	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^from base64 import b64encode$/;"	i
b64encode	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/request.py	/^from base64 import b64encode$/;"	i
b:IsInRCode	plugged/Nvim-R/ftplugin/r_nvimr.vim	/^let b:IsInRCode = function("DefaultIsInRCode")$/;"	v
b:IsInRCode	plugged/Nvim-R/ftplugin/rdoc.vim	/^let b:IsInRCode = function("RdocIsInRCode")$/;"	v
b:IsInRCode	plugged/Nvim-R/ftplugin/rhelp_nvimr.vim	/^let b:IsInRCode = function("RhelpIsInRCode")$/;"	v
b:IsInRCode	plugged/Nvim-R/ftplugin/rmd_nvimr.vim	/^let b:IsInRCode = function("RmdIsInRCode")$/;"	v
b:IsInRCode	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^let b:IsInRCode = function("RnwIsInRCode")$/;"	v
b:IsInRCode	plugged/Nvim-R/ftplugin/rrst_nvimr.vim	/^let b:IsInRCode = function("RrstIsInRCode")$/;"	v
b:NextRChunk	plugged/Nvim-R/ftplugin/rmd_nvimr.vim	/^let b:NextRChunk = function("RmdNextChunk")$/;"	v
b:NextRChunk	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^let b:NextRChunk = function("RnwNextChunk")$/;"	v
b:NextRChunk	plugged/Nvim-R/ftplugin/rrst_nvimr.vim	/^let b:NextRChunk = function("RrstNextChunk")$/;"	v
b:PreviousRChunk	plugged/Nvim-R/ftplugin/rmd_nvimr.vim	/^let b:PreviousRChunk = function("RmdPreviousChunk")$/;"	v
b:PreviousRChunk	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^let b:PreviousRChunk = function("RnwPreviousChunk")$/;"	v
b:PreviousRChunk	plugged/Nvim-R/ftplugin/rrst_nvimr.vim	/^let b:PreviousRChunk = function("RrstPreviousChunk")$/;"	v
b:SendChunkToR	plugged/Nvim-R/ftplugin/rmd_nvimr.vim	/^let b:SendChunkToR = function("SendRmdChunkToR")$/;"	v
b:SendChunkToR	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^let b:SendChunkToR = function("RnwSendChunkToR")$/;"	v
b:SendChunkToR	plugged/Nvim-R/ftplugin/rrst_nvimr.vim	/^let b:SendChunkToR = function("SendRrstChunkToR")$/;"	v
b:browsefilter	plugged/vim-haml/ftplugin/haml.vim	/^  let b:browsefilter="Haml Files (*.haml)\\t*.haml\\nSass Files (*.sass)\\t*.sass\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-jade/ftplugin/jade.vim	/^  let b:browsefilter="Jade Files (*.jade)\\t*.jade\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-ruby/ftplugin/eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-ruby/ftplugin/ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:current_syntax	plugged/Nvim-R/syntax/rdoc.vim	/^let b:current_syntax = "rdoc"$/;"	v
b:current_syntax	plugged/Nvim-R/syntax/rout.vim	/^let   b:current_syntax = "rout"$/;"	v
b:current_syntax	plugged/calendar.vim/syntax/calendar.vim	/^let b:current_syntax = 'calendar'$/;"	v
b:current_syntax	plugged/css.vim/syntax/css.vim	/^let b:current_syntax = "css"$/;"	v
b:current_syntax	plugged/scss-syntax.vim/syntax/scss.vim	/^let b:current_syntax = "scss"$/;"	v
b:current_syntax	plugged/unite.vim/syntax/unite.vim	/^let b:current_syntax = 'unite'$/;"	v
b:current_syntax	plugged/unite.vim/syntax/unite_exrename.vim	/^let b:current_syntax = 'unite_exrename'$/;"	v
b:current_syntax	plugged/vim-coffee-script/syntax/coffee.vim	/^  let b:current_syntax = 'coffee'$/;"	v
b:current_syntax	plugged/vim-go/syntax/go.vim	/^let b:current_syntax = "go"$/;"	v
b:current_syntax	plugged/vim-go/syntax/godoc.vim	/^let b:current_syntax = "godoc"$/;"	v
b:current_syntax	plugged/vim-go/syntax/gohtmltmpl.vim	/^let b:current_syntax = "gohtmltmpl"$/;"	v
b:current_syntax	plugged/vim-go/syntax/gotexttmpl.vim	/^let b:current_syntax = "gotexttmpl"$/;"	v
b:current_syntax	plugged/vim-go/syntax/vimgo.vim	/^let b:current_syntax = "vimgo"$/;"	v
b:current_syntax	plugged/vim-haml/syntax/haml.vim	/^let b:current_syntax = "haml"$/;"	v
b:current_syntax	plugged/vim-haml/syntax/sass.vim	/^let b:current_syntax = "sass"$/;"	v
b:current_syntax	plugged/vim-haml/syntax/scss.vim	/^let b:current_syntax = "scss"$/;"	v
b:current_syntax	plugged/vim-jade/syntax/jade.vim	/^let b:current_syntax = "jade"$/;"	v
b:current_syntax	plugged/vim-javascript/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	plugged/vim-less/after/syntax/html.vim	/^   let b:current_syntax = s:pre_less_cur_syn$/;"	v
b:current_syntax	plugged/vim-less/syntax/less.vim	/^let b:current_syntax = "less"$/;"	v
b:current_syntax	plugged/vim-ruby/syntax/eruby.vim	/^let b:current_syntax = 'eruby'$/;"	v
b:current_syntax	plugged/vim-ruby/syntax/ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:current_syntax	plugged/vim-swift/syntax/swift.vim	/^  let b:current_syntax = 'swift'$/;"	v
b:did_ftplugin	plugged/Nvim-R/ftplugin/rbrowser.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-coffee-script/ftplugin/coffee.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-go/ftplugin/go.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-haml/ftplugin/haml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-haml/ftplugin/sass.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-less/ftplugin/less.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-ruby/ftplugin/eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-ruby/ftplugin/ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	plugged/vim-coffee-script/indent/coffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-go/indent/go.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-haml/indent/haml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-haml/indent/sass.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-jade/indent/jade.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-javascript/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-ruby/indent/eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-ruby/indent/ruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-swift/indent/swift.vim	/^let b:did_indent = 1$/;"	v
b:did_rdoc_ftplugin	plugged/Nvim-R/ftplugin/rdoc.vim	/^let b:did_rdoc_ftplugin = 1$/;"	v
b:eruby_nest_level	plugged/vim-ruby/syntax/eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_nest_level	plugged/vim-ruby/syntax/eruby.vim	/^  let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+\\%(\\ze+\\w\\+\\)\\=$')$/;"	v
b:eruby_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	plugged/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	plugged/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	plugged/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	plugged/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	plugged/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	plugged/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+\\%(\\ze+\\w\\+\\)\\=$')$/;"	v
b:eruby_subtype	plugged/vim-ruby/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-ruby/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype_indentexpr	plugged/vim-ruby/indent/eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:html_indent_usestate	plugged/vim-ruby/indent/eruby.vim	/^let b:html_indent_usestate = 0$/;"	v
b:javascript_fold	plugged/vim-javascript/syntax/javascript.vim	/^let b:javascript_fold='true'$/;"	v
b:match_ignorecase	plugged/vim-ruby/ftplugin/ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_skip	plugged/vim-ruby/ftplugin/ruby.vim	/^  let b:match_skip =$/;"	v
b:match_words	plugged/vim-haml/ftplugin/haml.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-jade/ftplugin/jade.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-ruby/ftplugin/eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-ruby/ftplugin/ruby.vim	/^  let b:match_words =$/;"	v
b:objbrtitle	plugged/Nvim-R/R/common_buffer.vim	/^        let b:objbrtitle = "Object_Browser" . s:tnr$/;"	v
b:objbrtitle	plugged/Nvim-R/R/common_buffer.vim	/^        let b:objbrtitle = "Object_Browser"$/;"	v
b:pdf_opened	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^let b:pdf_opened = 0$/;"	v
b:rplugin_extern_ob	plugged/Nvim-R/R/common_buffer.vim	/^let b:rplugin_extern_ob = 0$/;"	v
b:rplugin_new_libs	plugged/Nvim-R/R/common_buffer.vim	/^    let b:rplugin_new_libs = 0$/;"	v
b:ruby_no_expensive	plugged/vim-haml/syntax/haml.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	plugged/vim-ruby/syntax/ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:ruby_version	plugged/vim-ruby/ftplugin/ruby.vim	/^    let b:ruby_version = get(readfile(s:version_file, '', 1), '')$/;"	v
b:undo_ftplugin	plugged/Nvim-R/ftplugin/r_nvimr.vim	/^    let b:undo_ftplugin .= " | unlet! b:IsInRCode"$/;"	v
b:undo_ftplugin	plugged/Nvim-R/ftplugin/r_nvimr.vim	/^    let b:undo_ftplugin = "unlet! b:IsInRCode"$/;"	v
b:undo_ftplugin	plugged/Nvim-R/ftplugin/rhelp_nvimr.vim	/^    let b:undo_ftplugin .= " | unlet! b:IsInRCode"$/;"	v
b:undo_ftplugin	plugged/Nvim-R/ftplugin/rhelp_nvimr.vim	/^    let b:undo_ftplugin = "unlet! b:IsInRCode"$/;"	v
b:undo_ftplugin	plugged/Nvim-R/ftplugin/rmd_nvimr.vim	/^    let b:undo_ftplugin .= " | unlet! b:IsInRCode b:PreviousRChunk b:NextRChunk b:SendChunkToR"$/;"	v
b:undo_ftplugin	plugged/Nvim-R/ftplugin/rmd_nvimr.vim	/^    let b:undo_ftplugin = "unlet! b:IsInRCode b:PreviousRChunk b:NextRChunk b:SendChunkToR"$/;"	v
b:undo_ftplugin	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^    let b:undo_ftplugin .= " | unlet! b:IsInRCode b:PreviousRChunk b:NextRChunk b:SendChunkToR"$/;"	v
b:undo_ftplugin	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^    let b:undo_ftplugin = "unlet! b:IsInRCode b:PreviousRChunk b:NextRChunk b:SendChunkToR"$/;"	v
b:undo_ftplugin	plugged/Nvim-R/ftplugin/rrst_nvimr.vim	/^    let b:undo_ftplugin .= " | unlet! b:IsInRCode b:PreviousRChunk b:NextRChunk b:SendChunkToR"$/;"	v
b:undo_ftplugin	plugged/Nvim-R/ftplugin/rrst_nvimr.vim	/^    let b:undo_ftplugin = "unlet! b:IsInRCode b:PreviousRChunk b:NextRChunk b:SendChunkToR"$/;"	v
b:undo_ftplugin	plugged/vim-go/ftplugin/go.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	plugged/vim-haml/ftplugin/haml.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	plugged/vim-haml/ftplugin/sass.vim	/^let b:undo_ftplugin = "setl com< cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	plugged/vim-jade/ftplugin/jade.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	plugged/vim-less/ftplugin/less.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	plugged/vim-ruby/ftplugin/eruby.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	plugged/vim-ruby/ftplugin/ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-ruby/ftplugin/ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-ruby/ftplugin/ruby.vim	/^let b:undo_ftplugin = "setl fo< inc< inex< sua< def< com< cms< path< tags< kp<"$/;"	v
b:undo_indent	plugged/vim-swift/indent/swift.vim	/^let b:undo_indent = "setl cin<"$/;"	v
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/style.py	/^    background_color = '#ffffff'$/;"	v	class:Style
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/bw.py	/^    background_color = "#ffffff"$/;"	v	class:BlackWhiteStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/default.py	/^    background_color = "#f8f8f8"$/;"	v	class:DefaultStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/emacs.py	/^    background_color = "#f8f8f8"$/;"	v	class:EmacsStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/friendly.py	/^    background_color = "#f0f0f0"$/;"	v	class:FriendlyStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/fruity.py	/^    background_color = '#111111'$/;"	v	class:FruityStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/manni.py	/^    background_color = '#f0f3f3'$/;"	v	class:ManniStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/monokai.py	/^    background_color = "#272822"$/;"	v	class:MonokaiStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/native.py	/^    background_color = '#202020'$/;"	v	class:NativeStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^    background_color = BACKGROUND$/;"	v	class:ParaisoDarkStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^    background_color = BACKGROUND$/;"	v	class:ParaisoLightStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/perldoc.py	/^    background_color = '#eeeedd'$/;"	v	class:PerldocStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/rrt.py	/^    background_color = '#000000'$/;"	v	class:RrtStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/tango.py	/^    background_color = "#f8f8f8"$/;"	v	class:TangoStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vim.py	/^    background_color = "#000000"$/;"	v	class:VimStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vs.py	/^    background_color = "#ffffff"$/;"	v	class:VisualStudioStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/style.py	/^    background_color = '#ffffff'$/;"	v	class:Style
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/bw.py	/^    background_color = "#ffffff"$/;"	v	class:BlackWhiteStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/default.py	/^    background_color = "#f8f8f8"$/;"	v	class:DefaultStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/emacs.py	/^    background_color = "#f8f8f8"$/;"	v	class:EmacsStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/friendly.py	/^    background_color = "#f0f0f0"$/;"	v	class:FriendlyStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/fruity.py	/^    background_color = '#111111'$/;"	v	class:FruityStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/manni.py	/^    background_color = '#f0f3f3'$/;"	v	class:ManniStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/monokai.py	/^    background_color = "#272822"$/;"	v	class:MonokaiStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/native.py	/^    background_color = '#202020'$/;"	v	class:NativeStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^    background_color = BACKGROUND$/;"	v	class:ParaisoDarkStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^    background_color = BACKGROUND$/;"	v	class:ParaisoLightStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/perldoc.py	/^    background_color = '#eeeedd'$/;"	v	class:PerldocStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/rrt.py	/^    background_color = '#000000'$/;"	v	class:RrtStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/tango.py	/^    background_color = "#f8f8f8"$/;"	v	class:TangoStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vim.py	/^    background_color = "#000000"$/;"	v	class:VimStyle
background_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vs.py	/^    background_color = "#ffffff"$/;"	v	class:VisualStudioStyle
balance_matchpairs	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:balance_matchpairs(char) "{{{$/;"	f
bang	plugged/vimproc.vim/plugin/vimproc.vim	/^function! s:bang(cmdline) "{{{$/;"	f
bar	autoload/plug.vim	/^function! s:bar()$/;"	f
bar	plugged/vim-ruby/spec/indent/continuations_spec.rb	/^      def bar($/;"	f
base	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^    base = os.path.join(os.path.dirname(__file__), 'zoneinfo')$/;"	v
base	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^    base = os.path.join(os.path.dirname(__file__), 'zoneinfo')$/;"	v
base64	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^import base64$/;"	i
base_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    base_re = r'(?:[2-9]|[12][0-9]|3[0-6])'$/;"	v	class:ErlangLexer
base_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    base_re = r'(?:[2-9]|[12][0-9]|3[0-6])'$/;"	v	class:ErlangLexer
base_str	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/compat.py	/^    base_str = (bytes, str)$/;"	v
base_str	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/compat.py	/^    base_str = (str, unicode)$/;"	v
basename	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^from os.path import basename$/;"	i
basename	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^from os.path import basename$/;"	i
basename	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^from os.path import basename$/;"	i
basename	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^from os.path import basename$/;"	i
basestring	plugged/vim-wakatime/plugin/packages/wakatime/compat.py	/^    basestring = (str, bytes)$/;"	v
basestring	plugged/vim-wakatime/plugin/packages/wakatime/compat.py	/^    basestring = basestring$/;"	v
basestring	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    basestring = str$/;"	v
basestring	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .compat import urlparse, basestring$/;"	i
basestring	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    basestring = (str, bytes)$/;"	v
basestring	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    basestring = basestring$/;"	v
basestring	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^from .packages.six import string_types as basestring, binary_type, PY3$/;"	i
bb_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    bb_name = r'[a-z]\\w*'$/;"	v	class:BlitzBasicLexer
bb_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    bb_name = r'[a-z]\\w*'$/;"	v	class:BlitzBasicLexer
bb_sktypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    bb_sktypes = r'@{1,2}|[#$%]'$/;"	v	class:BlitzBasicLexer
bb_sktypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    bb_sktypes = r'@{1,2}|[#$%]'$/;"	v	class:BlitzBasicLexer
bb_var	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^             (bb_name, bb_sktypes, bb_name)$/;"	v	class:BlitzBasicLexer
bb_var	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^             (bb_name, bb_sktypes, bb_name)$/;"	v	class:BlitzBasicLexer
beep	plugged/vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    before = NoumeaDSTEndTestCase.after$/;"	v	class:NoumeaNoMoreDSTTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    before = {$/;"	v	class:LondonHistoryEndTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    before = {$/;"	v	class:LondonHistoryStartTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    before = {$/;"	v	class:NoumeaDSTEndTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    before = {$/;"	v	class:NoumeaHistoryStartTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    before = {$/;"	v	class:SamoaInternationalDateLineChange
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    before = {$/;"	v	class:TahitiTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    before = {$/;"	v	class:USEasternDSTEndTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    before = {$/;"	v	class:USEasternDSTStartTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    before = {$/;"	v	class:USEasternEPTEndTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    before = {$/;"	v	class:USEasternEPTStartTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    before = {$/;"	v	class:VilniusCESTStartTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    before = {$/;"	v	class:VilniusWMTEndTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    before = {$/;"	v	class:WarsawWMTEndTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    before = NoumeaDSTEndTestCase.after$/;"	v	class:NoumeaNoMoreDSTTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    before = {$/;"	v	class:LondonHistoryEndTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    before = {$/;"	v	class:LondonHistoryStartTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    before = {$/;"	v	class:NoumeaDSTEndTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    before = {$/;"	v	class:NoumeaHistoryStartTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    before = {$/;"	v	class:SamoaInternationalDateLineChange
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    before = {$/;"	v	class:TahitiTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    before = {$/;"	v	class:USEasternDSTEndTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    before = {$/;"	v	class:USEasternDSTStartTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    before = {$/;"	v	class:USEasternEPTEndTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    before = {$/;"	v	class:USEasternEPTStartTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    before = {$/;"	v	class:VilniusCESTStartTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    before = {$/;"	v	class:VilniusWMTEndTestCase
before	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    before = {$/;"	v	class:WarsawWMTEndTestCase
best_winline	plugged/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:best_winline() "{{{$/;"	f
beyond	plugged/vim-wakatime/plugin/packages/wakatime/compat.py	/^                raise ValueError("attempted relative import beyond top-level "$/;"	i
binary_location	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^    binary_location = None$/;"	v	class:Subversion
binary_search	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
binary_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    binary_type = bytes$/;"	v
binary_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    binary_type = str$/;"	v
binary_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^from .packages.six import string_types as basestring, binary_type, PY3$/;"	i
binary_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    binary_type = bytes$/;"	v
binary_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    binary_type = str$/;"	v
binary_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^from .compat import fromhex, b, u, text_type, binary_type, PY3, unichr$/;"	i
binary_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^from .compat import u, unichr, binary_type, string_types, integer_types, PY3$/;"	i
binary_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^from simplejson.compat import StringIO, long_type, b, binary_type, PY3$/;"	i
binn	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    binn = r'[01]+b'$/;"	v	class:NasmLexer
binn	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    binn = r'[01]+b'$/;"	v	class:NasmLexer
binop	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    binop = (r'(?:%=|&=|\\|=|\\^=|\\+=|\\-=|\\*=|\/=|<<=|>\\s*>\\s*=|>\\s*>\\s*>\\s*=|==|'$/;"	v	class:HaxeLexer
binop	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    binop = (r'(?:%=|&=|\\|=|\\^=|\\+=|\\-=|\\*=|\/=|<<=|>\\s*>\\s*=|>\\s*>\\s*>\\s*=|==|'$/;"	v	class:HaxeLexer
bird_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    bird_re = re.compile(r'(>[ \\t]*)(.*\\n)')$/;"	v	class:LiterateLexer
bird_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    bird_re = re.compile(r'(>[ \\t]*)(.*\\n)')$/;"	v	class:LiterateLexer
bisect	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^from bisect import bisect$/;"	i
bisect	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^from bisect import bisect$/;"	i
bisect_right	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^from bisect import bisect_right$/;"	i
bisect_right	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^from bisect import bisect_right$/;"	i
black	plugged/calendar.vim/autoload/calendar/color.vim	/^function! s:black(x) abort$/;"	f
black	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:black(x) abort$/;"	f
blob_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^    def blob_callback(lexer, match, ctx):$/;"	m	class:UrbiscriptLexer
blob_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^    def blob_callback(lexer, match, ctx):$/;"	m	class:UrbiscriptLexer
bmax_func	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    bmax_func = bmax_var + r'?((?:[ \\t]|\\.\\.\\n)*)([(])'$/;"	v	class:BlitzMaxLexer
bmax_func	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    bmax_func = bmax_var + r'?((?:[ \\t]|\\.\\.\\n)*)([(])'$/;"	v	class:BlitzMaxLexer
bmax_lktypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    bmax_lktypes = r'\\b(Int|Byte|Short|Float|Double|Long)\\b'$/;"	v	class:BlitzMaxLexer
bmax_lktypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    bmax_lktypes = r'\\b(Int|Byte|Short|Float|Double|Long)\\b'$/;"	v	class:BlitzMaxLexer
bmax_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    bmax_name = r'[a-z_]\\w*'$/;"	v	class:BlitzMaxLexer
bmax_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    bmax_name = r'[a-z_]\\w*'$/;"	v	class:BlitzMaxLexer
bmax_sktypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    bmax_sktypes = r'@{1,2}|[!#$%]'$/;"	v	class:BlitzMaxLexer
bmax_sktypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    bmax_sktypes = r'@{1,2}|[!#$%]'$/;"	v	class:BlitzMaxLexer
bmax_var	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    bmax_var = (r'(%s)(?:(?:([ \\t]*)(%s)|([ \\t]*:[ \\t]*\\b(?:Shl|Shr|Sar|Mod)\\b)'$/;"	v	class:BlitzMaxLexer
bmax_var	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    bmax_var = (r'(%s)(?:(?:([ \\t]*)(%s)|([ \\t]*:[ \\t]*\\b(?:Shl|Shr|Sar|Mod)\\b)'$/;"	v	class:BlitzMaxLexer
bmax_vopwords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    bmax_vopwords = r'\\b(Shl|Shr|Sar|Mod)\\b'$/;"	v	class:BlitzMaxLexer
bmax_vopwords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    bmax_vopwords = r'\\b(Shl|Shr|Sar|Mod)\\b'$/;"	v	class:BlitzMaxLexer
boundary	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    boundary = '(?![\\w\/])'$/;"	v	class:KokaLexer
boundary	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    boundary = '(?![\\w\/])'$/;"	v	class:KokaLexer
brackets_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    def brackets_callback(token_class):$/;"	m	class:Perl6Lexer
brackets_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    def brackets_callback(token_class):$/;"	m	class:Perl6Lexer
branch	plugged/vim-wakatime/plugin/packages/wakatime/projects/base.py	/^    def branch(self):$/;"	m	class:BaseProject
branch	plugged/vim-wakatime/plugin/packages/wakatime/projects/git.py	/^    def branch(self):$/;"	m	class:Git
branch	plugged/vim-wakatime/plugin/packages/wakatime/projects/mercurial.py	/^    def branch(self):$/;"	m	class:Mercurial
branch	plugged/vim-wakatime/plugin/packages/wakatime/projects/projectmap.py	/^    def branch(self):$/;"	m	class:ProjectMap
branch	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^    def branch(self):$/;"	m	class:Subversion
branch	plugged/vim-wakatime/plugin/packages/wakatime/projects/wakatime_project_file.py	/^    def branch(self):$/;"	m	class:WakaTimeProjectFile
break	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
buf	plugged/vimproc.vim/autoload/vimstack.c	/^    char *buf;   \/* stack bufffer *\/$/;"	m	struct:vp_stack_t	file:
bufGetContents	plugged/vim-instant-markdown/after/ftplugin/markdown/instant-markdown.vim	/^function! s:bufGetContents(bufnr)$/;"	f
buffer	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer_bookmark_action.func	plugged/unite.vim/plugin/unite/bookmark.vim	/^function! s:buffer_bookmark_action.func(candidate) "{{{$/;"	f
buffer_commit	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_getline	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getvar	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_name	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_path	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_repo	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_sha1	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	plugged/vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_up	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_up(...) dict abort$/;"	f
buflisted	plugged/unite.vim/autoload/unite/util.vim	/^function! s:buflisted(bufnr) "{{{$/;"	f
build_digest_header	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^    def build_digest_header(self, method, url):$/;"	m	class:HTTPDigestAuth
build_path	plugged/vim-ruby/ftplugin/ruby.vim	/^function! s:build_path(path)$/;"	f
build_response	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^    def build_response(self, req, resp):$/;"	m	class:HTTPAdapter
build_tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^from pytz.tzfile import build_tzinfo, _byte_string$/;"	i
build_tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^def build_tzinfo(zone, fp):$/;"	f
build_tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^from pytz.tzfile import build_tzinfo, _byte_string$/;"	i
build_tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^def build_tzinfo(zone, fp):$/;"	f
builtin	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^    builtin = words(('if:', 'then:', 'else:', 'when:', 'whenever:', 'discovered:',$/;"	v	class:AmbientTalkLexer
builtin	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    builtin = [$/;"	v	class:KokaLexer
builtin	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^    builtin = words(('if:', 'then:', 'else:', 'when:', 'whenever:', 'discovered:',$/;"	v	class:AmbientTalkLexer
builtin	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    builtin = [$/;"	v	class:KokaLexer
builtin_arrays	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^    builtin_arrays = words(($/;"	v	class:FactorLexer
builtin_arrays	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^    builtin_arrays = words(($/;"	v	class:FactorLexer
builtin_assocs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^    builtin_assocs = words(($/;"	v	class:FactorLexer
builtin_assocs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^    builtin_assocs = words(($/;"	v	class:FactorLexer
builtin_cmds_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^    builtin_cmds_re = words(($/;"	v	class:TclLexer
builtin_cmds_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^    builtin_cmds_re = words(($/;"	v	class:TclLexer
builtin_combinators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^    builtin_combinators = words(($/;"	v	class:FactorLexer
builtin_combinators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^    builtin_combinators = words(($/;"	v	class:FactorLexer
builtin_consts	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    builtin_consts = ($/;"	v	class:OctaveLexer
builtin_consts	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    builtin_consts = ($/;"	v	class:OctaveLexer
builtin_continuations	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^    builtin_continuations = words(($/;"	v	class:FactorLexer
builtin_continuations	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^    builtin_continuations = words(($/;"	v	class:FactorLexer
builtin_io	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^    builtin_io = words(($/;"	v	class:FactorLexer
builtin_io	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^    builtin_io = words(($/;"	v	class:FactorLexer
builtin_kernel	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^    builtin_kernel = words(($/;"	v	class:FactorLexer
builtin_kernel	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^    builtin_kernel = words(($/;"	v	class:FactorLexer
builtin_kw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    builtin_kw = ($/;"	v	class:OctaveLexer
builtin_kw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    builtin_kw = ($/;"	v	class:OctaveLexer
builtin_math	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^    builtin_math = words(($/;"	v	class:FactorLexer
builtin_math	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^    builtin_math = words(($/;"	v	class:FactorLexer
builtin_namespaces	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^    builtin_namespaces = words(($/;"	v	class:FactorLexer
builtin_namespaces	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^    builtin_namespaces = words(($/;"	v	class:FactorLexer
builtin_sequences	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^    builtin_sequences = words(($/;"	v	class:FactorLexer
builtin_sequences	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^    builtin_sequences = words(($/;"	v	class:FactorLexer
builtin_str	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    builtin_str = str$/;"	v
builtin_strings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^    builtin_strings = words(($/;"	v	class:FactorLexer
builtin_strings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^    builtin_strings = words(($/;"	v	class:FactorLexer
builtin_vectors	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^    builtin_vectors = words(($/;"	v	class:FactorLexer
builtin_vectors	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^    builtin_vectors = words(($/;"	v	class:FactorLexer
builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    builtins = set(($/;"	v	class:DylanLexer
builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    builtins = (  # See erlang(3) man page$/;"	v	class:ErlangLexer
builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^    builtins = [$/;"	v	class:JuliaLexer
builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    builtins = ($/;"	v	class:ClojureLexer
builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    builtins = ($/;"	v	class:NewLispLexer
builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    builtins = ($/;"	v	class:SchemeLexer
builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    builtins = hy_builtins + hy_core$/;"	v	class:HyLexer
builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^    builtins = ['import', 'abort', 'baseNameOf', 'dirOf', 'isNull', 'builtins',$/;"	v	class:NixLexer
builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    builtins = set(($/;"	v	class:DylanLexer
builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    builtins = (  # See erlang(3) man page$/;"	v	class:ErlangLexer
builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^    builtins = [$/;"	v	class:JuliaLexer
builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    builtins = ($/;"	v	class:ClojureLexer
builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    builtins = ($/;"	v	class:NewLispLexer
builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    builtins = ($/;"	v	class:SchemeLexer
builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    builtins = hy_builtins + hy_core$/;"	v	class:HyLexer
builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^    builtins = ['import', 'abort', 'baseNameOf', 'dirOf', 'isNull', 'builtins',$/;"	v	class:NixLexer
builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    import builtins$/;"	i
builtins_base	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    builtins_base = ($/;"	v	class:SLexer
builtins_base	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    builtins_base = ($/;"	v	class:SLexer
bus	plugged/Nvim-R/R/synctex_evince_backward.py	/^    bus = None$/;"	v	class:EvinceWindowProxy
bus	plugged/Nvim-R/R/synctex_evince_forward.py	/^    bus = None$/;"	v	class:EvinceWindowProxy
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^def bygroups(*args):$/;"	f
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^from pygments.lexer import RegexLexer, bygroups, using, this, words, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, DelegatingLexer$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^from pygments.lexer import RegexLexer, include, bygroups, combined$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^from pygments.lexer import RegexLexer, bygroups, default, words, include$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^from pygments.lexer import RegexLexer, include, words, bygroups$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    this, inherit, default, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/chapel.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^from pygments.lexer import RegexLexer, default, words, bygroups, include, using$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    default, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dalvik.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    include, bygroups, inherit$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    using, this, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^from pygments.lexer import RegexLexer, bygroups, words, include, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, do_insertions, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^from pygments.lexer import RegexLexer, include, bygroups, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    include, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^from pygments.lexer import RegexLexer, bygroups, default, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    this, default, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    combined$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    this, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    default, include$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^from pygments.lexer import RegexLexer, bygroups, include, using, this, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    default, using$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^from pygments.lexer import RegexLexer, include, bygroups, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    this, default, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, combined, do_insertions$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    this, combined, default, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    do_insertions, using$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    using, this, do_insertions, default, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, words, do_insertions$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    inherit, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ooc.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    include, bygroups, using$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    using, this, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    using, this, default, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^from pygments.lexer import RegexLexer, bygroups$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    default, words, combined, do_insertions$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^from pygments.lexer import RegexLexer, bygroups, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^from pygments.lexer import RegexLexer, bygroups$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    bygroups, default, LexerContext, do_insertions, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, include$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^from pygments.lexer import RegexLexer, include, bygroups, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/snobol.py	/^from pygments.lexer import RegexLexer, bygroups$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    include, using, this, default, combined$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/testing.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^from pygments.lexer import RegexLexer, include, default, bygroups, using, this$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^from pygments.lexer import RegexLexer, bygroups$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    default, using$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^def bygroups(*args):$/;"	f
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^from pygments.lexer import RegexLexer, bygroups, using, this, words, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, DelegatingLexer$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^from pygments.lexer import RegexLexer, include, bygroups, combined$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^from pygments.lexer import RegexLexer, bygroups, default, words, include$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^from pygments.lexer import RegexLexer, include, words, bygroups$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    this, inherit, default, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/chapel.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^from pygments.lexer import RegexLexer, default, words, bygroups, include, using$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    default, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dalvik.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    include, bygroups, inherit$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    using, this, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^from pygments.lexer import RegexLexer, bygroups, words, include, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, do_insertions, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^from pygments.lexer import RegexLexer, include, bygroups, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    include, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^from pygments.lexer import RegexLexer, bygroups, default, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    this, default, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    combined$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    this, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    default, include$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^from pygments.lexer import RegexLexer, bygroups, include, using, this, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    default, using$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^from pygments.lexer import RegexLexer, include, bygroups, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    this, default, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, combined, do_insertions$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    this, combined, default, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    do_insertions, using$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    using, this, do_insertions, default, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, words, do_insertions$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    inherit, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ooc.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    include, bygroups, using$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    using, this, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    using, this, default, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^from pygments.lexer import RegexLexer, bygroups$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    default, words, combined, do_insertions$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^from pygments.lexer import RegexLexer, bygroups, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^from pygments.lexer import RegexLexer, bygroups$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    bygroups, default, LexerContext, do_insertions, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, include$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^from pygments.lexer import RegexLexer, include, bygroups, default$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/snobol.py	/^from pygments.lexer import RegexLexer, bygroups$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, words$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    include, using, this, default, combined$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/testing.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^from pygments.lexer import RegexLexer, include, default, bygroups, using, this$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^from pygments.lexer import RegexLexer, bygroups$/;"	i
bygroups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    default, using$/;"	i
byte	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^from .mbcsgroupprober import MBCSGroupProber  # multi-byte character sets$/;"	i
byte	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^from .sbcsgroupprober import SBCSGroupProber  # single-byte character sets$/;"	i
bytes	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    bytes = bytes$/;"	v
bytes	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    bytes = str$/;"	v
bytes	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^from .compat import (quote, urlparse, bytes, str, OrderedDict, unquote, is_py2,$/;"	i
bz2	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^            import bz2$/;"	i
bz2	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^            import bz2$/;"	i
bz2	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^            import bz2$/;"	i
bz2	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^            import bz2$/;"	i
c	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^            c = u'\\\\' + c$/;"	v
c	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^        c = chr(code)$/;"	v
c	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^            c = u'\\\\' + c$/;"	v
c	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^        c = chr(code)$/;"	v
c99_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    c99_types = ['_Bool', '_Complex', 'int8_t', 'int16_t', 'int32_t', 'int64_t',$/;"	v	class:CFamilyLexer
c99_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    c99_types = ['_Bool', '_Complex', 'int8_t', 'int16_t', 'int32_t', 'int64_t',$/;"	v	class:CFamilyLexer
cS	plugged/vim-surround/plugin/surround.vim	/^  nmap cS  <Plug>CSurround$/;"	m
cStringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^    import StringIO, cStringIO$/;"	i
cStringIO	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^    import StringIO, cStringIO$/;"	i
c_make_scanner	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/scanner.py	/^c_make_scanner = _import_c_make_scanner()$/;"	v
c_scanstring	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^c_scanstring = _import_c_scanstring()$/;"	v
c_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_mql_builtins.py	/^c_types = ($/;"	v
c_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_mql_builtins.py	/^c_types = ($/;"	v
ca_certs	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    ca_certs = None$/;"	v	class:VerifiedHTTPSConnection
cache_directory	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:cache_directory() abort$/;"	f
caching_from_neocomplcache_dict	plugged/unite.vim/autoload/unite/sources/command.vim	/^function! s:caching_from_neocomplcache_dict() "{{{$/;"	f
caching_from_neocomplcache_dict	plugged/unite.vim/autoload/unite/sources/function.vim	/^function! s:caching_from_neocomplcache_dict() "{{{$/;"	f
calcsize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^from struct import unpack, calcsize$/;"	i
calcsize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^from struct import unpack, calcsize$/;"	i
calendar	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:calendar() abort$/;"	f
calendar#argument#buffername	plugged/calendar.vim/autoload/calendar/argument.vim	/^function! calendar#argument#buffername(name) abort$/;"	f
calendar#argument#complete	plugged/calendar.vim/autoload/calendar/argument.vim	/^function! calendar#argument#complete(arglead, cmdline, cursorpos) abort$/;"	f
calendar#argument#day	plugged/calendar.vim/autoload/calendar/argument.vim	/^function! calendar#argument#day(day, default) abort$/;"	f
calendar#argument#parse	plugged/calendar.vim/autoload/calendar/argument.vim	/^function! calendar#argument#parse(args) abort$/;"	f
calendar#argument#split	plugged/calendar.vim/autoload/calendar/argument.vim	/^function! calendar#argument#split(args) abort$/;"	f
calendar#async#call	plugged/calendar.vim/autoload/calendar/async.vim	/^function! calendar#async#call() abort$/;"	f
calendar#async#new	plugged/calendar.vim/autoload/calendar/async.vim	/^function! calendar#async#new(command, ...) abort$/;"	f
calendar#async#restore_updatetime	plugged/calendar.vim/autoload/calendar/async.vim	/^function! calendar#async#restore_updatetime() abort$/;"	f
calendar#async#set_updatetime	plugged/calendar.vim/autoload/calendar/async.vim	/^function! calendar#async#set_updatetime() abort$/;"	f
calendar#autocmd#new	plugged/calendar.vim/autoload/calendar/autocmd.vim	/^function! calendar#autocmd#new() abort$/;"	f
calendar#cache#clear	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! calendar#cache#clear() abort$/;"	f
calendar#cache#new	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! calendar#cache#new(...) abort$/;"	f
calendar#cache#string	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! calendar#cache#string(v, ...) abort$/;"	f
calendar#cipher#cipher	plugged/calendar.vim/autoload/calendar/cipher.vim	/^function! calendar#cipher#cipher(val, num) abort$/;"	f
calendar#cipher#decipher	plugged/calendar.vim/autoload/calendar/cipher.vim	/^function! calendar#cipher#decipher(val, num) abort$/;"	f
calendar#color#bg_color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#bg_color(syntax_name) abort$/;"	f
calendar#color#colors	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#colors() abort$/;"	f
calendar#color#comment_bg_color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#comment_bg_color() abort$/;"	f
calendar#color#comment_fg_color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#comment_fg_color() abort$/;"	f
calendar#color#convert	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#convert(rgb) abort$/;"	f
calendar#color#fg_color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#fg_color(syntax_name) abort$/;"	f
calendar#color#gen_color	plugged/calendar.vim/autoload/calendar/color.vim	/^  function! calendar#color#gen_color(fg, bg, weightfg, weightbg) abort$/;"	f
calendar#color#gui_color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#gui_color() abort$/;"	f
calendar#color#is_dark	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#is_dark() abort$/;"	f
calendar#color#new_syntax	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#new_syntax(id, fg, bg) abort$/;"	f
calendar#color#normal_bg_color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#normal_bg_color() abort$/;"	f
calendar#color#normal_fg_color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#normal_fg_color() abort$/;"	f
calendar#color#nr_rgb	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#nr_rgb(nr) abort$/;"	f
calendar#color#refresh_syntax	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#refresh_syntax() abort$/;"	f
calendar#color#select_rgb	plugged/calendar.vim/autoload/calendar/color.vim	/^  function! calendar#color#select_rgb(color, rgb) abort$/;"	f
calendar#color#select_rgb	plugged/calendar.vim/autoload/calendar/color.vim	/^  function! calendar#color#select_rgb(color, rgb, weight) abort$/;"	f
calendar#color#syntax	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#syntax(name, fg, bg, attr) abort$/;"	f
calendar#color#to_256color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#to_256color(nr, fg) abort$/;"	f
calendar#color#whiten	plugged/calendar.vim/autoload/calendar/color.vim	/^function! calendar#color#whiten(rgb) abort$/;"	f
calendar#constructor#day#new	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! calendar#constructor#day#new(instance) abort$/;"	f
calendar#constructor#day_hybrid#new	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^function! calendar#constructor#day_hybrid#new(y, m, d) abort$/;"	f
calendar#constructor#month#new	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! calendar#constructor#month#new(day_constructor) abort$/;"	f
calendar#constructor#view#new	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! calendar#constructor#view#new(instance) abort$/;"	f
calendar#constructor#view_clock#new	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! calendar#constructor#view_clock#new(instance) abort$/;"	f
calendar#constructor#view_days#new	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! calendar#constructor#view_days#new(instance) abort$/;"	f
calendar#constructor#view_months#new	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! calendar#constructor#view_months#new(instance) abort$/;"	f
calendar#constructor#view_textbox#new	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! calendar#constructor#view_textbox#new(instance) abort$/;"	f
calendar#constructor#view_ymd#new	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^function! calendar#constructor#view_ymd#new(instance) abort$/;"	f
calendar#constructor#year#new	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! calendar#constructor#year#new(day_constructor) abort$/;"	f
calendar#controller#new	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! calendar#controller#new() abort$/;"	f
calendar#countcache#new	plugged/calendar.vim/autoload/calendar/countcache.vim	/^function! calendar#countcache#new(name) abort$/;"	f
calendar#countcache#save	plugged/calendar.vim/autoload/calendar/countcache.vim	/^function! calendar#countcache#save() abort$/;"	f
calendar#day#austria#new	plugged/calendar.vim/autoload/calendar/day/austria.vim	/^function! calendar#day#austria#new(y, m, d) abort$/;"	f
calendar#day#austria#new_mjd	plugged/calendar.vim/autoload/calendar/day/austria.vim	/^function! calendar#day#austria#new_mjd(mjd) abort$/;"	f
calendar#day#austria#today	plugged/calendar.vim/autoload/calendar/day/austria.vim	/^function! calendar#day#austria#today() abort$/;"	f
calendar#day#austriastyria#new	plugged/calendar.vim/autoload/calendar/day/austriastyria.vim	/^function! calendar#day#austriastyria#new(y, m, d) abort$/;"	f
calendar#day#austriastyria#new_mjd	plugged/calendar.vim/autoload/calendar/day/austriastyria.vim	/^function! calendar#day#austriastyria#new_mjd(mjd) abort$/;"	f
calendar#day#austriastyria#today	plugged/calendar.vim/autoload/calendar/day/austriastyria.vim	/^function! calendar#day#austriastyria#today() abort$/;"	f
calendar#day#british#new	plugged/calendar.vim/autoload/calendar/day/british.vim	/^function! calendar#day#british#new(y, m, d) abort$/;"	f
calendar#day#british#new_mjd	plugged/calendar.vim/autoload/calendar/day/british.vim	/^function! calendar#day#british#new_mjd(mjd) abort$/;"	f
calendar#day#british#today	plugged/calendar.vim/autoload/calendar/day/british.vim	/^function! calendar#day#british#today() abort$/;"	f
calendar#day#bulgaria#new	plugged/calendar.vim/autoload/calendar/day/bulgaria.vim	/^function! calendar#day#bulgaria#new(y, m, d) abort$/;"	f
calendar#day#bulgaria#new_mjd	plugged/calendar.vim/autoload/calendar/day/bulgaria.vim	/^function! calendar#day#bulgaria#new_mjd(mjd) abort$/;"	f
calendar#day#bulgaria#today	plugged/calendar.vim/autoload/calendar/day/bulgaria.vim	/^function! calendar#day#bulgaria#today() abort$/;"	f
calendar#day#canada#new	plugged/calendar.vim/autoload/calendar/day/canada.vim	/^function! calendar#day#canada#new(y, m, d) abort$/;"	f
calendar#day#canada#new_mjd	plugged/calendar.vim/autoload/calendar/day/canada.vim	/^function! calendar#day#canada#new_mjd(mjd) abort$/;"	f
calendar#day#canada#today	plugged/calendar.vim/autoload/calendar/day/canada.vim	/^function! calendar#day#canada#today() abort$/;"	f
calendar#day#default#new	plugged/calendar.vim/autoload/calendar/day/default.vim	/^function! calendar#day#default#new(y, m, d) abort$/;"	f
calendar#day#default#new_mjd	plugged/calendar.vim/autoload/calendar/day/default.vim	/^function! calendar#day#default#new_mjd(mjd) abort$/;"	f
calendar#day#default#today	plugged/calendar.vim/autoload/calendar/day/default.vim	/^function! calendar#day#default#today() abort$/;"	f
calendar#day#estonia#new	plugged/calendar.vim/autoload/calendar/day/estonia.vim	/^function! calendar#day#estonia#new(y, m, d) abort$/;"	f
calendar#day#estonia#new_mjd	plugged/calendar.vim/autoload/calendar/day/estonia.vim	/^function! calendar#day#estonia#new_mjd(mjd) abort$/;"	f
calendar#day#estonia#today	plugged/calendar.vim/autoload/calendar/day/estonia.vim	/^function! calendar#day#estonia#today() abort$/;"	f
calendar#day#france#new	plugged/calendar.vim/autoload/calendar/day/france.vim	/^function! calendar#day#france#new(y, m, d) abort$/;"	f
calendar#day#france#new_mjd	plugged/calendar.vim/autoload/calendar/day/france.vim	/^function! calendar#day#france#new_mjd(mjd) abort$/;"	f
calendar#day#france#today	plugged/calendar.vim/autoload/calendar/day/france.vim	/^function! calendar#day#france#today() abort$/;"	f
calendar#day#germany#new	plugged/calendar.vim/autoload/calendar/day/germany.vim	/^function! calendar#day#germany#new(y, m, d) abort$/;"	f
calendar#day#germany#new_mjd	plugged/calendar.vim/autoload/calendar/day/germany.vim	/^function! calendar#day#germany#new_mjd(mjd) abort$/;"	f
calendar#day#germany#today	plugged/calendar.vim/autoload/calendar/day/germany.vim	/^function! calendar#day#germany#today() abort$/;"	f
calendar#day#germanyprussia#new	plugged/calendar.vim/autoload/calendar/day/germanyprussia.vim	/^function! calendar#day#germanyprussia#new(y, m, d) abort$/;"	f
calendar#day#germanyprussia#new_mjd	plugged/calendar.vim/autoload/calendar/day/germanyprussia.vim	/^function! calendar#day#germanyprussia#new_mjd(mjd) abort$/;"	f
calendar#day#germanyprussia#today	plugged/calendar.vim/autoload/calendar/day/germanyprussia.vim	/^function! calendar#day#germanyprussia#today() abort$/;"	f
calendar#day#greece#new	plugged/calendar.vim/autoload/calendar/day/greece.vim	/^function! calendar#day#greece#new(y, m, d) abort$/;"	f
calendar#day#greece#new_mjd	plugged/calendar.vim/autoload/calendar/day/greece.vim	/^function! calendar#day#greece#new_mjd(mjd) abort$/;"	f
calendar#day#greece#today	plugged/calendar.vim/autoload/calendar/day/greece.vim	/^function! calendar#day#greece#today() abort$/;"	f
calendar#day#gregorian#new	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^function! calendar#day#gregorian#new(y, m, d) abort$/;"	f
calendar#day#gregorian#new_mjd	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^function! calendar#day#gregorian#new_mjd(mjd) abort$/;"	f
calendar#day#gregorian#today	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^function! calendar#day#gregorian#today() abort$/;"	f
calendar#day#holland#new	plugged/calendar.vim/autoload/calendar/day/holland.vim	/^function! calendar#day#holland#new(y, m, d) abort$/;"	f
calendar#day#holland#new_mjd	plugged/calendar.vim/autoload/calendar/day/holland.vim	/^function! calendar#day#holland#new_mjd(mjd) abort$/;"	f
calendar#day#holland#today	plugged/calendar.vim/autoload/calendar/day/holland.vim	/^function! calendar#day#holland#today() abort$/;"	f
calendar#day#hungary#new	plugged/calendar.vim/autoload/calendar/day/hungary.vim	/^function! calendar#day#hungary#new(y, m, d) abort$/;"	f
calendar#day#hungary#new_mjd	plugged/calendar.vim/autoload/calendar/day/hungary.vim	/^function! calendar#day#hungary#new_mjd(mjd) abort$/;"	f
calendar#day#hungary#today	plugged/calendar.vim/autoload/calendar/day/hungary.vim	/^function! calendar#day#hungary#today() abort$/;"	f
calendar#day#italy#new	plugged/calendar.vim/autoload/calendar/day/italy.vim	/^function! calendar#day#italy#new(y, m, d) abort$/;"	f
calendar#day#italy#new_mjd	plugged/calendar.vim/autoload/calendar/day/italy.vim	/^function! calendar#day#italy#new_mjd(mjd) abort$/;"	f
calendar#day#italy#today	plugged/calendar.vim/autoload/calendar/day/italy.vim	/^function! calendar#day#italy#today() abort$/;"	f
calendar#day#japan#new	plugged/calendar.vim/autoload/calendar/day/japan.vim	/^function! calendar#day#japan#new(y, m, d) abort$/;"	f
calendar#day#japan#new_mjd	plugged/calendar.vim/autoload/calendar/day/japan.vim	/^function! calendar#day#japan#new_mjd(mjd) abort$/;"	f
calendar#day#japan#today	plugged/calendar.vim/autoload/calendar/day/japan.vim	/^function! calendar#day#japan#today() abort$/;"	f
calendar#day#join_date	plugged/calendar.vim/autoload/calendar/day.vim	/^function! calendar#day#join_date(ymd) abort$/;"	f
calendar#day#julian#new	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^function! calendar#day#julian#new(y, m, d) abort$/;"	f
calendar#day#julian#new_mjd	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^function! calendar#day#julian#new_mjd(mjd) abort$/;"	f
calendar#day#julian#today	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^function! calendar#day#julian#today() abort$/;"	f
calendar#day#new	plugged/calendar.vim/autoload/calendar/day.vim	/^function! calendar#day#new(y, m, d) abort$/;"	f
calendar#day#new_mjd	plugged/calendar.vim/autoload/calendar/day.vim	/^function! calendar#day#new_mjd(mjd) abort$/;"	f
calendar#day#poland#new	plugged/calendar.vim/autoload/calendar/day/poland.vim	/^function! calendar#day#poland#new(y, m, d) abort$/;"	f
calendar#day#poland#new_mjd	plugged/calendar.vim/autoload/calendar/day/poland.vim	/^function! calendar#day#poland#new_mjd(mjd) abort$/;"	f
calendar#day#poland#today	plugged/calendar.vim/autoload/calendar/day/poland.vim	/^function! calendar#day#poland#today() abort$/;"	f
calendar#day#portugal#new	plugged/calendar.vim/autoload/calendar/day/portugal.vim	/^function! calendar#day#portugal#new(y, m, d) abort$/;"	f
calendar#day#portugal#new_mjd	plugged/calendar.vim/autoload/calendar/day/portugal.vim	/^function! calendar#day#portugal#new_mjd(mjd) abort$/;"	f
calendar#day#portugal#today	plugged/calendar.vim/autoload/calendar/day/portugal.vim	/^function! calendar#day#portugal#today() abort$/;"	f
calendar#day#russia#new	plugged/calendar.vim/autoload/calendar/day/russia.vim	/^function! calendar#day#russia#new(y, m, d) abort$/;"	f
calendar#day#russia#new_mjd	plugged/calendar.vim/autoload/calendar/day/russia.vim	/^function! calendar#day#russia#new_mjd(mjd) abort$/;"	f
calendar#day#russia#today	plugged/calendar.vim/autoload/calendar/day/russia.vim	/^function! calendar#day#russia#today() abort$/;"	f
calendar#day#spain#new	plugged/calendar.vim/autoload/calendar/day/spain.vim	/^function! calendar#day#spain#new(y, m, d) abort$/;"	f
calendar#day#spain#new_mjd	plugged/calendar.vim/autoload/calendar/day/spain.vim	/^function! calendar#day#spain#new_mjd(mjd) abort$/;"	f
calendar#day#spain#today	plugged/calendar.vim/autoload/calendar/day/spain.vim	/^function! calendar#day#spain#today() abort$/;"	f
calendar#day#today	plugged/calendar.vim/autoload/calendar/day.vim	/^function! calendar#day#today() abort$/;"	f
calendar#day#today_mjd	plugged/calendar.vim/autoload/calendar/day.vim	/^function! calendar#day#today_mjd() abort$/;"	f
calendar#day#turkey#new	plugged/calendar.vim/autoload/calendar/day/turkey.vim	/^function! calendar#day#turkey#new(y, m, d) abort$/;"	f
calendar#day#turkey#new_mjd	plugged/calendar.vim/autoload/calendar/day/turkey.vim	/^function! calendar#day#turkey#new_mjd(mjd) abort$/;"	f
calendar#day#turkey#today	plugged/calendar.vim/autoload/calendar/day/turkey.vim	/^function! calendar#day#turkey#today() abort$/;"	f
calendar#day#us#new	plugged/calendar.vim/autoload/calendar/day/us.vim	/^function! calendar#day#us#new(y, m, d) abort$/;"	f
calendar#day#us#new_mjd	plugged/calendar.vim/autoload/calendar/day/us.vim	/^function! calendar#day#us#new_mjd(mjd) abort$/;"	f
calendar#day#us#today	plugged/calendar.vim/autoload/calendar/day/us.vim	/^function! calendar#day#us#today() abort$/;"	f
calendar#echo#echo	plugged/calendar.vim/autoload/calendar/echo.vim	/^function! calendar#echo#echo(msg) abort$/;"	f
calendar#echo#error	plugged/calendar.vim/autoload/calendar/echo.vim	/^function! calendar#echo#error(msg) abort$/;"	f
calendar#echo#error_message	plugged/calendar.vim/autoload/calendar/echo.vim	/^function! calendar#echo#error_message(name) abort$/;"	f
calendar#echo#error_raw	plugged/calendar.vim/autoload/calendar/echo.vim	/^function! calendar#echo#error_raw(msg) abort$/;"	f
calendar#echo#message	plugged/calendar.vim/autoload/calendar/echo.vim	/^function! calendar#echo#message(msg) abort$/;"	f
calendar#echo#message_raw	plugged/calendar.vim/autoload/calendar/echo.vim	/^function! calendar#echo#message_raw(msg) abort$/;"	f
calendar#echo#normal_message	plugged/calendar.vim/autoload/calendar/echo.vim	/^function! calendar#echo#normal_message(name) abort$/;"	f
calendar#event#google#new	plugged/calendar.vim/autoload/calendar/event/google.vim	/^function! calendar#event#google#new() abort$/;"	f
calendar#event#local#new	plugged/calendar.vim/autoload/calendar/event/local.vim	/^function! calendar#event#local#new() abort$/;"	f
calendar#event#new	plugged/calendar.vim/autoload/calendar/event.vim	/^function! calendar#event#new() abort$/;"	f
calendar#google#calendar#delete	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#delete(calendarId, eventId, year, month) abort$/;"	f
calendar#google#calendar#delete_response	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#delete_response(id, response) abort$/;"	f
calendar#google#calendar#downloadEvents	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#downloadEvents(year, month, ...) abort$/;"	f
calendar#google#calendar#getCalendarList	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#getCalendarList() abort$/;"	f
calendar#google#calendar#getCalendarList_response	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#getCalendarList_response(id, response) abort$/;"	f
calendar#google#calendar#getEventSummary	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#getEventSummary(year, month) abort$/;"	f
calendar#google#calendar#getEvents	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#getEvents(year, month, ...) abort$/;"	f
calendar#google#calendar#getEventsInitial	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#getEventsInitial(year, month) abort$/;"	f
calendar#google#calendar#getHolidays	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#getHolidays(year, month) abort$/;"	f
calendar#google#calendar#getMyCalendarList	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#getMyCalendarList() abort$/;"	f
calendar#google#calendar#get_url	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#get_url(type) abort$/;"	f
calendar#google#calendar#initialDownload	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#initialDownload(year, month, index) abort$/;"	f
calendar#google#calendar#insert	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#insert(calendarId, title, start, end, year, month, ...) abort$/;"	f
calendar#google#calendar#insert_response	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#insert_response(id, response) abort$/;"	f
calendar#google#calendar#response	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#response(id, response) abort$/;"	f
calendar#google#calendar#sorter	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#sorter(x, y) abort$/;"	f
calendar#google#calendar#update	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#update(calendarId, eventId, title, year, month, ...) abort$/;"	f
calendar#google#calendar#update_response	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! calendar#google#calendar#update_response(id, response) abort$/;"	f
calendar#google#client#access_token	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#access_token() abort$/;"	f
calendar#google#client#access_token_async	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#access_token_async() abort$/;"	f
calendar#google#client#access_token_response	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#access_token_response(response, content) abort$/;"	f
calendar#google#client#delete	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#delete(url, ...) abort$/;"	f
calendar#google#client#delete_async	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#delete_async(id, cb, url, ...) abort$/;"	f
calendar#google#client#get	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#get(url, ...) abort$/;"	f
calendar#google#client#get_async	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#get_async(id, cb, url, ...) abort$/;"	f
calendar#google#client#get_async_use_api_key	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#get_async_use_api_key(id, cb, url, ...) abort$/;"	f
calendar#google#client#patch_async	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#patch_async(id, cb, url, ...) abort$/;"	f
calendar#google#client#post	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#post(url, ...) abort$/;"	f
calendar#google#client#post_async	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#post_async(id, cb, url, ...) abort$/;"	f
calendar#google#client#post_async_use_api_key	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#post_async_use_api_key(id, cb, url, ...) abort$/;"	f
calendar#google#client#put	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#put(url, ...) abort$/;"	f
calendar#google#client#put_async	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#put_async(id, cb, url, ...) abort$/;"	f
calendar#google#client#refresh_token	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! calendar#google#client#refresh_token() abort$/;"	f
calendar#google#task#clear_completed	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#clear_completed(id) abort$/;"	f
calendar#google#task#clear_completed_response	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#clear_completed_response(id, response) abort$/;"	f
calendar#google#task#complete	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#complete(id, taskid) abort$/;"	f
calendar#google#task#complete_response	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#complete_response(id, response) abort$/;"	f
calendar#google#task#delete	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#delete(id, taskid) abort$/;"	f
calendar#google#task#delete_response	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#delete_response(id, response) abort$/;"	f
calendar#google#task#downloadTasks	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#downloadTasks(...) abort$/;"	f
calendar#google#task#getTaskList	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#getTaskList() abort$/;"	f
calendar#google#task#getTaskList_response	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#getTaskList_response(id, response) abort$/;"	f
calendar#google#task#getTasks	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#getTasks() abort$/;"	f
calendar#google#task#get_url	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#get_url(type) abort$/;"	f
calendar#google#task#insert	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#insert(id, previous, title, ...) abort$/;"	f
calendar#google#task#insert_response	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#insert_response(id, response) abort$/;"	f
calendar#google#task#move	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#move(id, taskid, previous) abort$/;"	f
calendar#google#task#move_response	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#move_response(id, response) abort$/;"	f
calendar#google#task#response	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#response(id, response) abort$/;"	f
calendar#google#task#uncomplete	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#uncomplete(id, taskid) abort$/;"	f
calendar#google#task#uncomplete_response	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#uncomplete_response(id, response) abort$/;"	f
calendar#google#task#update	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#update(id, taskid, title, ...) abort$/;"	f
calendar#google#task#update_response	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! calendar#google#task#update_response(id, response) abort$/;"	f
calendar#google#url_shortener#new	plugged/calendar.vim/autoload/calendar/google/url_shortener.vim	/^function! calendar#google#url_shortener#new() abort$/;"	f
calendar#mapping#new	plugged/calendar.vim/autoload/calendar/mapping.vim	/^function! calendar#mapping#new() abort$/;"	f
calendar#mark#new	plugged/calendar.vim/autoload/calendar/mark.vim	/^function! calendar#mark#new() abort$/;"	f
calendar#message#default#get	plugged/calendar.vim/autoload/calendar/message/default.vim	/^function! calendar#message#default#get() abort$/;"	f
calendar#message#en#get	plugged/calendar.vim/autoload/calendar/message/en.vim	/^function! calendar#message#en#get() abort$/;"	f
calendar#message#get	plugged/calendar.vim/autoload/calendar/message.vim	/^function! calendar#message#get(type) abort$/;"	f
calendar#message#ja#get	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^function! calendar#message#ja#get() abort$/;"	f
calendar#mjd#new	plugged/calendar.vim/autoload/calendar/mjd.vim	/^function! calendar#mjd#new(mjd) abort$/;"	f
calendar#model#new	plugged/calendar.vim/autoload/calendar/model.vim	/^function! calendar#model#new() abort$/;"	f
calendar#new	plugged/calendar.vim/autoload/calendar.vim	/^function! calendar#new(args) abort$/;"	f
calendar#pixel#get	plugged/calendar.vim/autoload/calendar/pixel.vim	/^function! calendar#pixel#get(chr) abort$/;"	f
calendar#pixel#len	plugged/calendar.vim/autoload/calendar/pixel.vim	/^function! calendar#pixel#len(chr) abort$/;"	f
calendar#pixel#whitelen	plugged/calendar.vim/autoload/calendar/pixel.vim	/^function! calendar#pixel#whitelen(chr, ...) abort$/;"	f
calendar#revive	plugged/calendar.vim/autoload/calendar.vim	/^function! calendar#revive() abort$/;"	f
calendar#save	plugged/calendar.vim/autoload/calendar.vim	/^function! calendar#save() abort$/;"	f
calendar#setlocal#filetype	plugged/calendar.vim/autoload/calendar/setlocal.vim	/^function! calendar#setlocal#filetype() abort$/;"	f
calendar#setlocal#filetype_force	plugged/calendar.vim/autoload/calendar/setlocal.vim	/^function! calendar#setlocal#filetype_force() abort$/;"	f
calendar#setlocal#modifiable	plugged/calendar.vim/autoload/calendar/setlocal.vim	/^function! calendar#setlocal#modifiable() abort$/;"	f
calendar#setlocal#new	plugged/calendar.vim/autoload/calendar/setlocal.vim	/^function! calendar#setlocal#new() abort$/;"	f
calendar#setlocal#nomodifiable	plugged/calendar.vim/autoload/calendar/setlocal.vim	/^function! calendar#setlocal#nomodifiable() abort$/;"	f
calendar#setting#frame	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! calendar#setting#frame() abort$/;"	f
calendar#setting#get	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! calendar#setting#get(name) abort$/;"	f
calendar#setting#get_default	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! calendar#setting#get_default(name) abort$/;"	f
calendar#string#strdisplaywidth	plugged/calendar.vim/autoload/calendar/string.vim	/^  fu! calendar#string#strdisplaywidth(s) abort$/;"	f
calendar#string#strwidthpart	plugged/calendar.vim/autoload/calendar/string.vim	/^fu! calendar#string#strwidthpart(s, w) abort$/;"	f
calendar#string#strwidthpart_reverse	plugged/calendar.vim/autoload/calendar/string.vim	/^fu! calendar#string#strwidthpart_reverse(s, w) abort$/;"	f
calendar#string#truncate	plugged/calendar.vim/autoload/calendar/string.vim	/^fu! calendar#string#truncate(s, w) abort$/;"	f
calendar#string#truncate_reverse	plugged/calendar.vim/autoload/calendar/string.vim	/^fu! calendar#string#truncate_reverse(s, w) abort$/;"	f
calendar#task#google#new	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! calendar#task#google#new() abort$/;"	f
calendar#task#local#new	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! calendar#task#local#new() abort$/;"	f
calendar#task#new	plugged/calendar.vim/autoload/calendar/task.vim	/^function! calendar#task#new() abort$/;"	f
calendar#text#new	plugged/calendar.vim/autoload/calendar/text.vim	/^fu! calendar#text#new(s, x, y, syn) abort$/;"	f
calendar#time#datetime	plugged/calendar.vim/autoload/calendar/time.vim	/^function! calendar#time#datetime(str) abort$/;"	f
calendar#time#hour12	plugged/calendar.vim/autoload/calendar/time.vim	/^function! calendar#time#hour12(h) abort$/;"	f
calendar#time#new	plugged/calendar.vim/autoload/calendar/time.vim	/^function! calendar#time#new(h, m, s) abort$/;"	f
calendar#time#now	plugged/calendar.vim/autoload/calendar/time.vim	/^  function! calendar#time#now() abort$/;"	f
calendar#time#parse	plugged/calendar.vim/autoload/calendar/time.vim	/^function! calendar#time#parse(str) abort$/;"	f
calendar#time#time_zone	plugged/calendar.vim/autoload/calendar/time.vim	/^function! calendar#time#time_zone() abort$/;"	f
calendar#timestamp#update	plugged/calendar.vim/autoload/calendar/timestamp.vim	/^function! calendar#timestamp#update(name, sec) abort$/;"	f
calendar#util#author	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#author() abort$/;"	f
calendar#util#getcmdline	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#getcmdline() abort$/;"	f
calendar#util#id	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#id() abort$/;"	f
calendar#util#issue	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#issue() abort$/;"	f
calendar#util#license	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#license() abort$/;"	f
calendar#util#name	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#name() abort$/;"	f
calendar#util#repository	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#repository() abort$/;"	f
calendar#util#rmdir	plugged/calendar.vim/autoload/calendar/util.vim	/^  function! calendar#util#rmdir(path, ...) abort$/;"	f
calendar#util#system	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#system(cmd) abort$/;"	f
calendar#util#update_keys	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#update_keys() abort$/;"	f
calendar#util#version	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#version() abort$/;"	f
calendar#util#winheight	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#winheight() abort$/;"	f
calendar#util#winwidth	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#winwidth() abort$/;"	f
calendar#util#yank	plugged/calendar.vim/autoload/calendar/util.vim	/^function! calendar#util#yank(text) abort$/;"	f
calendar#view#agenda#new	plugged/calendar.vim/autoload/calendar/view/agenda.vim	/^function! calendar#view#agenda#new(source) abort$/;"	f
calendar#view#calendar#new	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! calendar#view#calendar#new(source) abort$/;"	f
calendar#view#clock#new	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! calendar#view#clock#new(source) abort$/;"	f
calendar#view#clock_date#new	plugged/calendar.vim/autoload/calendar/view/clock_date.vim	/^function! calendar#view#clock_date#new(source) abort$/;"	f
calendar#view#clock_date_monthday#new	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday.vim	/^function! calendar#view#clock_date_monthday#new(source) abort$/;"	f
calendar#view#clock_date_monthday_time#new	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday_time.vim	/^function! calendar#view#clock_date_monthday_time#new(source) abort$/;"	f
calendar#view#clock_date_time#new	plugged/calendar.vim/autoload/calendar/view/clock_date_time.vim	/^function! calendar#view#clock_date_time#new(source) abort$/;"	f
calendar#view#clock_time#new	plugged/calendar.vim/autoload/calendar/view/clock_time.vim	/^function! calendar#view#clock_time#new(source) abort$/;"	f
calendar#view#clock_time_hourmin#new	plugged/calendar.vim/autoload/calendar/view/clock_time_hourmin.vim	/^function! calendar#view#clock_time_hourmin#new(source) abort$/;"	f
calendar#view#day#new	plugged/calendar.vim/autoload/calendar/view/day.vim	/^function! calendar#view#day#new(source) abort$/;"	f
calendar#view#day_1#new	plugged/calendar.vim/autoload/calendar/view/day_1.vim	/^function! calendar#view#day_1#new(source) abort$/;"	f
calendar#view#day_2#new	plugged/calendar.vim/autoload/calendar/view/day_2.vim	/^function! calendar#view#day_2#new(source) abort$/;"	f
calendar#view#day_3#new	plugged/calendar.vim/autoload/calendar/view/day_3.vim	/^function! calendar#view#day_3#new(source) abort$/;"	f
calendar#view#day_4#new	plugged/calendar.vim/autoload/calendar/view/day_4.vim	/^function! calendar#view#day_4#new(source) abort$/;"	f
calendar#view#day_5#new	plugged/calendar.vim/autoload/calendar/view/day_5.vim	/^function! calendar#view#day_5#new(source) abort$/;"	f
calendar#view#day_6#new	plugged/calendar.vim/autoload/calendar/view/day_6.vim	/^function! calendar#view#day_6#new(source) abort$/;"	f
calendar#view#day_7#new	plugged/calendar.vim/autoload/calendar/view/day_7.vim	/^function! calendar#view#day_7#new(source) abort$/;"	f
calendar#view#event#agenda_group_sorter	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! calendar#view#event#agenda_group_sorter(x, y) abort$/;"	f
calendar#view#event#agenda_sorter	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! calendar#view#event#agenda_sorter(x, y) abort$/;"	f
calendar#view#event#new	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! calendar#view#event#new(source) abort$/;"	f
calendar#view#event#sorter	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! calendar#view#event#sorter(x, y) abort$/;"	f
calendar#view#help#new	plugged/calendar.vim/autoload/calendar/view/help.vim	/^function! calendar#view#help#new(source) abort$/;"	f
calendar#view#month#new	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! calendar#view#month#new(source) abort$/;"	f
calendar#view#month#sorter	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! calendar#view#month#sorter(l, r) abort$/;"	f
calendar#view#month_1x1#new	plugged/calendar.vim/autoload/calendar/view/month_1x1.vim	/^function! calendar#view#month_1x1#new(source) abort$/;"	f
calendar#view#month_1x3#new	plugged/calendar.vim/autoload/calendar/view/month_1x3.vim	/^function! calendar#view#month_1x3#new(source) abort$/;"	f
calendar#view#month_2x6#new	plugged/calendar.vim/autoload/calendar/view/month_2x6.vim	/^function! calendar#view#month_2x6#new(source) abort$/;"	f
calendar#view#month_3x1#new	plugged/calendar.vim/autoload/calendar/view/month_3x1.vim	/^function! calendar#view#month_3x1#new(source) abort$/;"	f
calendar#view#month_3x3#new	plugged/calendar.vim/autoload/calendar/view/month_3x3.vim	/^function! calendar#view#month_3x3#new(source) abort$/;"	f
calendar#view#month_3x4#new	plugged/calendar.vim/autoload/calendar/view/month_3x4.vim	/^function! calendar#view#month_3x4#new(source) abort$/;"	f
calendar#view#month_4x1#new	plugged/calendar.vim/autoload/calendar/view/month_4x1.vim	/^function! calendar#view#month_4x1#new(source) abort$/;"	f
calendar#view#month_4x2#new	plugged/calendar.vim/autoload/calendar/view/month_4x2.vim	/^function! calendar#view#month_4x2#new(source) abort$/;"	f
calendar#view#month_4x3#new	plugged/calendar.vim/autoload/calendar/view/month_4x3.vim	/^function! calendar#view#month_4x3#new(source) abort$/;"	f
calendar#view#month_5x1#new	plugged/calendar.vim/autoload/calendar/view/month_5x1.vim	/^function! calendar#view#month_5x1#new(source) abort$/;"	f
calendar#view#month_6x2#new	plugged/calendar.vim/autoload/calendar/view/month_6x2.vim	/^function! calendar#view#month_6x2#new(source) abort$/;"	f
calendar#view#new	plugged/calendar.vim/autoload/calendar/view.vim	/^function! calendar#view#new() abort$/;"	f
calendar#view#task#new	plugged/calendar.vim/autoload/calendar/view/task.vim	/^function! calendar#view#task#new(source) abort$/;"	f
calendar#view#week#new	plugged/calendar.vim/autoload/calendar/view/week.vim	/^function! calendar#view#week#new(source) abort$/;"	f
calendar#view#weekday#new	plugged/calendar.vim/autoload/calendar/view/weekday.vim	/^function! calendar#view#weekday#new(source) abort$/;"	f
calendar#view#year#new	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! calendar#view#year#new(source) abort$/;"	f
calendar#view#ymd#new	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^function! calendar#view#ymd#new(source) abort$/;"	f
calendar#view#ymd_daymonthyear#new	plugged/calendar.vim/autoload/calendar/view/ymd_daymonthyear.vim	/^function! calendar#view#ymd_daymonthyear#new(source) abort$/;"	f
calendar#view#ymd_monthdayyear#new	plugged/calendar.vim/autoload/calendar/view/ymd_monthdayyear.vim	/^function! calendar#view#ymd_monthdayyear#new(source) abort$/;"	f
calendar#view#ymd_monthyear#new	plugged/calendar.vim/autoload/calendar/view/ymd_monthyear.vim	/^function! calendar#view#ymd_monthyear#new(source) abort$/;"	f
calendar#view#ymd_year#new	plugged/calendar.vim/autoload/calendar/view/ymd_year.vim	/^function! calendar#view#ymd_year#new(source) abort$/;"	f
calendar#view#ymd_yearmonth#new	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonth.vim	/^function! calendar#view#ymd_yearmonth#new(source) abort$/;"	f
calendar#view#ymd_yearmonthday#new	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonthday.vim	/^function! calendar#view#ymd_yearmonthday#new(source) abort$/;"	f
calendar#webapi#callback	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#callback(id, cb) abort$/;"	f
calendar#webapi#decode	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#decode(json) abort$/;"	f
calendar#webapi#delete	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#delete(url, ...) abort$/;"	f
calendar#webapi#delete_async	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#delete_async(id, cb, url, ...) abort$/;"	f
calendar#webapi#echo_error	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#echo_error(response) abort$/;"	f
calendar#webapi#encode	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#encode(val) abort$/;"	f
calendar#webapi#encodeURI	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#encodeURI(items) abort$/;"	f
calendar#webapi#false	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#false() abort$/;"	f
calendar#webapi#get	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#get(url, ...) abort$/;"	f
calendar#webapi#get_async	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#get_async(id, cb, url, ...) abort$/;"	f
calendar#webapi#null	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#null() abort$/;"	f
calendar#webapi#open_url	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#open_url(url) abort$/;"	f
calendar#webapi#patch	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#patch(url, ...) abort$/;"	f
calendar#webapi#patch_async	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#patch_async(id, cb, url, ...) abort$/;"	f
calendar#webapi#post	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#post(url, ...) abort$/;"	f
calendar#webapi#post_async	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#post_async(id, cb, url, ...) abort$/;"	f
calendar#webapi#post_nojson	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#post_nojson(url, ...) abort$/;"	f
calendar#webapi#post_nojson_async	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#post_nojson_async(id, cb, url, ...) abort$/;"	f
calendar#webapi#put	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#put(url, ...) abort$/;"	f
calendar#webapi#put_async	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#put_async(id, cb, url, ...) abort$/;"	f
calendar#webapi#true	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! calendar#webapi#true() abort$/;"	f
calendar#week#first_day_index	plugged/calendar.vim/autoload/calendar/week.vim	/^function! calendar#week#first_day_index() abort$/;"	f
calendar#week#is_first_day	plugged/calendar.vim/autoload/calendar/week.vim	/^function! calendar#week#is_first_day(day) abort$/;"	f
calendar#week#is_last_day	plugged/calendar.vim/autoload/calendar/week.vim	/^function! calendar#week#is_last_day(day) abort$/;"	f
calendar#week#last_day_index	plugged/calendar.vim/autoload/calendar/week.vim	/^function! calendar#week#last_day_index() abort$/;"	f
calendar#week#new	plugged/calendar.vim/autoload/calendar/week.vim	/^function! calendar#week#new(week, default) abort$/;"	f
calendar#week#week_count	plugged/calendar.vim/autoload/calendar/week.vim	/^function! calendar#week#week_count(month) abort$/;"	f
calendar#week#week_number	plugged/calendar.vim/autoload/calendar/week.vim	/^function! calendar#week#week_number(day) abort$/;"	f
calendar#week#week_number_year	plugged/calendar.vim/autoload/calendar/week.vim	/^function! calendar#week#week_number_year(day) abort$/;"	f
call_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    def call_indent(level):$/;"	m	class:KconfigLexer
call_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    def call_indent(level):$/;"	m	class:KconfigLexer
call_unite_buffer_dir	plugged/unite.vim/plugin/unite.vim	/^function! s:call_unite_buffer_dir(args) "{{{$/;"	f
call_unite_current_dir	plugged/unite.vim/plugin/unite.vim	/^function! s:call_unite_current_dir(args) "{{{$/;"	f
call_unite_cursor_word	plugged/unite.vim/plugin/unite.vim	/^function! s:call_unite_cursor_word(args) "{{{$/;"	f
call_unite_empty	plugged/unite.vim/plugin/unite.vim	/^function! s:call_unite_empty(args) "{{{$/;"	f
call_unite_input	plugged/unite.vim/plugin/unite.vim	/^function! s:call_unite_input(args) "{{{$/;"	f
call_unite_input_directory	plugged/unite.vim/plugin/unite.vim	/^function! s:call_unite_input_directory(args) "{{{$/;"	f
call_unite_project_dir	plugged/unite.vim/plugin/unite.vim	/^function! s:call_unite_project_dir(args) "{{{$/;"	f
call_unite_resume	plugged/unite.vim/plugin/unite.vim	/^function! s:call_unite_resume(args) "{{{$/;"	f
callable	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    callable = callable$/;"	v
callable	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    def callable(obj):$/;"	f
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^        def callback(lexer, match, ctx=None):$/;"	f	function:using
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def callback(lexer, match, ctx=None):$/;"	f	function:bygroups
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    def callback(lexer, match, ctx):$/;"	f	function:_starts_block
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	function:YamlLexer.parse_block_scalar_empty_line
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	function:YamlLexer.parse_block_scalar_indent
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	function:YamlLexer.parse_plain_scalar_indent
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	function:YamlLexer.reset_indent
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	function:YamlLexer.save_indent
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	function:YamlLexer.set_block_scalar_indent
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	function:YamlLexer.set_indent
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	function:YamlLexer.something
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^        def callback(lexer, match, context):$/;"	f	function:Perl6Lexer.brackets_callback
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^        def callback(lexer, match, ctx=None):$/;"	f	function:using
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def callback(lexer, match, ctx=None):$/;"	f	function:bygroups
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    def callback(lexer, match, ctx):$/;"	f	function:_starts_block
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	function:YamlLexer.parse_block_scalar_empty_line
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	function:YamlLexer.parse_block_scalar_indent
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	function:YamlLexer.parse_plain_scalar_indent
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	function:YamlLexer.reset_indent
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	function:YamlLexer.save_indent
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	function:YamlLexer.set_block_scalar_indent
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	function:YamlLexer.set_indent
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	function:YamlLexer.something
callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^        def callback(lexer, match, context):$/;"	f	function:Perl6Lexer.brackets_callback
can_diffoff	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
capture	plugged/unite.vim/autoload/vital/_unite/Vim/Message.vim	/^function! s:capture(command) abort$/;"	f
cat	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^        cat = unicodedata.category(c)$/;"	v
cat	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^        cat = unicodedata.category(c)$/;"	v
cat_dic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^        cat_dic = categories_bmp if code < 0x10000 else categories_nonbmp$/;"	v
cat_dic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^        cat_dic = categories_bmp if code < 0x10000 else categories_nonbmp$/;"	v
categories_bmp	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^    categories_bmp = {'xid_start': [], 'xid_continue': []}$/;"	v
categories_bmp	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^    categories_bmp = {'xid_start': [], 'xid_continue': []}$/;"	v
categories_nonbmp	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^    categories_nonbmp = {'xid_start': [], 'xid_continue': []}$/;"	v
categories_nonbmp	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^    categories_nonbmp = {'xid_start': [], 'xid_continue': []}$/;"	v
cats	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^        cats = sorted(categories_bmp)$/;"	v
cats	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^cats = ['Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu', 'Mc', 'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf', 'Pi', 'Po', 'Ps', 'Sc', 'Sk', 'Sm', 'So', 'Zl', 'Zp', 'Zs']$/;"	v
cats	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^        cats = sorted(categories_bmp)$/;"	v
cats	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^cats = ['Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu', 'Mc', 'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf', 'Pi', 'Po', 'Ps', 'Sc', 'Sk', 'Sm', 'So', 'Zl', 'Zp', 'Zs']$/;"	v
cdable_action_file.func	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! s:cdable_action_file.func(candidate)$/;"	f
cdable_action_rec.func	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec.func(candidate)$/;"	f
cdable_action_rec_async.func	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_async.func(candidate)$/;"	f
cdable_action_rec_parent.func	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_parent.func(candidate)$/;"	f
cdable_action_rec_parent_async.func	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_parent_async.func(candidate)$/;"	f
cdable_action_rec_project.func	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_project.func(candidate)$/;"	f
cdable_action_rec_project_async.func	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_project_async.func(candidate)$/;"	f
cert_reqs	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    cert_reqs = None$/;"	v	class:VerifiedHTTPSConnection
cert_verify	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^    def cert_verify(self, conn, url, verify, cert):$/;"	m	class:HTTPAdapter
certs	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^from . import certs$/;"	i
cgi	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^import cgi$/;"	i
chCwd	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node)$/;"	f
chRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node)$/;"	f
changesurround	plugged/vim-surround/plugin/surround.vim	/^function! s:changesurround(...) " {{{1$/;"	f
char	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    char = r'[\\w$.@-]'$/;"	v	class:GasLexer
char	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    char = r'[\\w$.@-]'$/;"	v	class:GasLexer
char_range	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
character	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^from .mbcsgroupprober import MBCSGroupProber  # multi-byte character sets$/;"	i
character	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^from .sbcsgroupprober import SBCSGroupProber  # single-byte character sets$/;"	i
chardet	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^                    import chardet$/;"	i
chardet	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^                    import chardet$/;"	i
chardet	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^from .packages import chardet$/;"	i
charref	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    charref = r'(?:&#[0-9]+;|&#x[0-9a-fA-F]+;)'$/;"	v	class:XQueryLexer
charref	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    charref = r'(?:&#[0-9]+;|&#x[0-9a-fA-F]+;)'$/;"	v	class:XQueryLexer
check	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/scanner.py	/^    def check(self, pattern):$/;"	m	class:Scanner
check	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/scanner.py	/^    def check(self, pattern):$/;"	m	class:Scanner
check	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_indent.py	/^        def check(indent, expected):$/;"	f	function:TestIndent.test_indent0
check_copy_func	plugged/unite.vim/autoload/unite/kinds/file.vim	/^function! s:check_copy_func(filename) "{{{$/;"	f
check_delete_func	plugged/unite.vim/autoload/unite/kinds/file.vim	/^function! s:check_delete_func(filename) "{{{$/;"	f
check_is_directory	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:check_is_directory(directory)$/;"	f
check_keys_reuse	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decode.py	/^    def check_keys_reuse(self, source, loads):$/;"	m	class:TestDecode
check_lines	plugged/unite.vim/autoload/unite/exrename.vim	/^function! s:check_lines() "{{{$/;"	f
check_old_cache	plugged/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:check_old_cache(cache_dir, filename) abort$/;"	f
check_over_write	plugged/unite.vim/autoload/unite/kinds/file.vim	/^function! s:check_over_write(dest_dir, filename, overwrite_method, is_reset_method) "{{{$/;"	f
check_redraw	plugged/unite.vim/autoload/unite/handlers.vim	/^function! s:check_redraw() "{{{$/;"	f
chomp	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
choose_action	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:choose_action() "{{{$/;"	f
choose_boundary	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/filepost.py	/^def choose_boundary():$/;"	f
chop	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
cipher	plugged/calendar.vim/autoload/calendar/cipher.vim	/^function! s:cipher(str, num) abort$/;"	f
class2style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/svg.py	/^class2style = {}$/;"	v
class2style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/svg.py	/^class2style = {}$/;"	v
class_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    class_types = (type, types.ClassType)$/;"	v
class_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    class_types = type,$/;"	v
clean	autoload/plug.vim	/^function! s:clean(force)$/;"	f
cleanUp	plugged/vim-instant-markdown/after/ftplugin/markdown/instant-markdown.vim	/^fu! s:cleanUp()$/;"	f
clear	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:clear(list) abort$/;"	f
clear	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    def clear(self):$/;"	m	class:OrderedDict
clear	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def clear(self):$/;"	m	class:RecentlyUsedContainer
clear	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def clear(self):$/;"	m	class:OrderedDict
clear	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^    def clear(self):$/;"	m	class:PoolManager
clear	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def clear(self):$/;"	m	class:OrderedDict
clearCache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def clearCache(self):$/;"	m	class:BasicTest
clearCache	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def clearCache(self):$/;"	m	class:BasicTest
clear_complete	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:clear_complete() "{{{$/;"	f
clear_highlight	plugged/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:clear_highlight() "{{{$/;"	f
clear_marks	plugged/unite.vim/autoload/unite/action.vim	/^function! s:clear_marks(candidates) "{{{$/;"	f
clear_previewed_buffer_list	plugged/unite.vim/autoload/unite/view.vim	/^function! s:clear_previewed_buffer_list() "{{{$/;"	f
client	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! s:client() abort$/;"	f
clock_12hour	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:clock_12hour() abort$/;"	f
clone	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/timeout.py	/^    def clone(self):$/;"	m	class:Timeout
close	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^    def close(self):$/;"	m	class:BaseAdapter
close	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^    def close(self):$/;"	m	class:HTTPAdapter
close	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def close(self):$/;"	m	class:Response
close	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^    def close(self):$/;"	m	class:UniversalDetector
close	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def close():$/;"	m	class:ConnectionPool
close	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def close(self):$/;"	m	class:HTTPConnectionPool
close	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^    def close(self):$/;"	m	class:WrappedSocket
close	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def close(self):$/;"	m	class:HTTPResponse
close	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def close(self):$/;"	m	class:Session
close	plugged/vimproc.vim/autoload/proc_w32.c	/^#define close /;"	d	file:
close	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:close() dict "{{{$/;"	f
closeChildren	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node)$/;"	f
closeCurrentDir	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node)$/;"	f
closeTreeWindow	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow()$/;"	f
close_all	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:close_all(self) "{{{$/;"	f
close_allfd	plugged/vimproc.vim/autoload/proc.c	/^close_allfd(int fds[3][2])$/;"	f	file:
closed	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def closed(self):$/;"	m	class:HTTPResponse
closed_fdopen	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:closed_fdopen(f_close, f_read, f_write) "{{{$/;"	f
closematch	plugged/vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
closers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    closers = u'\\'")]}>\\u2019\\u201d\\xbb!?'$/;"	v	class:RstLexer
closers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    closers = u'\\'")]}>\\u2019\\u201d\\xbb!?'$/;"	v	class:RstLexer
closing_brace_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    def closing_brace_callback(lexer, match, context):$/;"	m	class:Perl6Lexer
closing_brace_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    def closing_brace_callback(lexer, match, context):$/;"	m	class:Perl6Lexer
cluster	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^func! s:cluster()$/;"	f
cmd	plugged/smartpairs.vim/plugin/smartpairs.vim	/^            let cmd .= 'a'$/;"	v
cmd	plugged/smartpairs.vim/plugin/smartpairs.vim	/^        let cmd = 'nnoremap <silent> ' . type . mod . g:smartpairs_key . '  :<C-U>call <SID>SmartPairs("' . type . '", "' . mod .'")<CR>'$/;"	v
cmd.close	plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^function! s:cmd.close() "{{{$/;"	f
cmd.open	plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^function! s:cmd.open() "{{{$/;"	f
cmd.system	plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^function! s:cmd.system(cmd) "{{{$/;"	f
cnt	plugged/vimproc.vim/tools/benchmark.vim	/^let cnt = 25$/;"	v
codecs	plugged/syntastic/syntax_checkers/python/codec.py	/^import codecs$/;"	i
codecs	plugged/vim-wakatime/plugin/packages/wakatime/compat.py	/^import codecs$/;"	i
codecs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatter.py	/^import codecs$/;"	i
codecs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatter.py	/^import codecs$/;"	i
codecs	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^import codecs$/;"	i
codecs	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/filepost.py	/^import codecs$/;"	i
codecs	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^import codecs$/;"	i
codecs	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    import codecs$/;"	i
codecs	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^import codecs$/;"	i
codes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/console.py	/^codes = {}$/;"	v
codes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/console.py	/^codes = {}$/;"	v
codes	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^from .status_codes import codes$/;"	i
codes	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^from .status_codes import codes$/;"	i
codes	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^from .status_codes import codes$/;"	i
codes	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from .status_codes import codes$/;"	i
codes	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/status_codes.py	/^codes = LookupDict(name='status_codes')$/;"	v
coffee#CoffeeSetUpErrorFormat	plugged/vim-coffee-script/autoload/coffee.vim	/^function! coffee#CoffeeSetUpErrorFormat()$/;"	f
coffee#CoffeeSetUpVariables	plugged/vim-coffee-script/autoload/coffee.vim	/^function! coffee#CoffeeSetUpVariables()$/;"	f
collections	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^import collections$/;"	i
collections	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^import collections$/;"	i
collections	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/structures.py	/^import collections$/;"	i
collections	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^import collections$/;"	i
collections	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^    import collections$/;"	i
color_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal256.py	/^    def color_string(self):$/;"	m	class:EscapeSequence
color_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal256.py	/^    def color_string(self):$/;"	m	class:EscapeSequence
colorama	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^            import colorama.initialise$/;"	i
colorama	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^            import colorama.initialise$/;"	i
colorformat	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/style.py	/^        def colorformat(text):$/;"	f	function:StyleMeta.__new__
colorformat	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/style.py	/^        def colorformat(text):$/;"	f	function:StyleMeta.__new__
colorize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/console.py	/^def colorize(color_key, text):$/;"	f
colorize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^from pygments.console import colorize$/;"	i
colorize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/console.py	/^def colorize(color_key, text):$/;"	f
colorize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^from pygments.console import colorize$/;"	i
colors	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_mql_builtins.py	/^colors = ($/;"	v
colors	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_mql_builtins.py	/^colors = ($/;"	v
colors_name	colors/apprentice.vim	/^let colors_name = 'apprentice'$/;"	v
combinations	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
combine	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^def combine(*args):$/;"	f
combine	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^def combine(*args):$/;"	f
combined	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^class combined(tuple):$/;"	c
combined	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^from pygments.lexer import RegexLexer, include, bygroups, combined$/;"	i
combined	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    combined$/;"	i
combined	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, combined, do_insertions$/;"	i
combined	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    this, combined, default, words$/;"	i
combined	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    default, words, combined, do_insertions$/;"	i
combined	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    words$/;"	i
combined	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    include, using, this, default, combined$/;"	i
combined	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^class combined(tuple):$/;"	c
combined	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^from pygments.lexer import RegexLexer, include, bygroups, combined$/;"	i
combined	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    combined$/;"	i
combined	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, combined, do_insertions$/;"	i
combined	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    this, combined, default, words$/;"	i
combined	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    default, words, combined, do_insertions$/;"	i
combined	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    words$/;"	i
combined	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    include, using, this, default, combined$/;"	i
comma	plugged/delimitMate/Makefile	/^comma    := ,$/;"	m
command	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
command	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_vim_builtins.py	/^command = _getcommand()$/;"	v
command	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^        from pygments.lexers._vim_builtins import command, option, auto$/;"	i
command	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_vim_builtins.py	/^command = _getcommand()$/;"	v
command	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^        from pygments.lexers._vim_builtins import command, option, auto$/;"	i
command_kw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    command_kw = ("close", "load", "who", "whos")$/;"	v	class:OctaveLexer
command_kw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    command_kw = ("close", "load", "who", "whos")$/;"	v	class:OctaveLexer
commands	plugged/delimitMate/test/expand_cr.vim	/^  let commands = []$/;"	v
commands	plugged/delimitMate/test/expand_cr.vim	/^let commands = []$/;"	v
commands_kw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_scilab_builtins.py	/^commands_kw = ($/;"	v
commands_kw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_scilab_builtins.py	/^commands_kw = ($/;"	v
commenthelp	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    commenthelp = ($/;"	v	class:PowerShellLexer
commenthelp	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    commenthelp = ($/;"	v	class:PowerShellLexer
common_head	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
common_sass_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^common_sass_tokens = {$/;"	v
common_sass_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^common_sass_tokens = {$/;"	v
common_timezones	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^['Africa\/Abidjan',$/;"	v
common_timezones	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^common_timezones = LazyList($/;"	v
common_timezones	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^['Africa\/Abidjan',$/;"	v
common_timezones	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^common_timezones = LazyList($/;"	v
common_timezones_set	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^common_timezones_set = LazySet(common_timezones)$/;"	v
common_timezones_set	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^common_timezones_set = LazySet(common_timezones)$/;"	v
commonprefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/regexopt.py	/^from os.path import commonprefix$/;"	i
commonprefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/regexopt.py	/^from os.path import commonprefix$/;"	i
compare	plugged/calendar.vim/autoload/calendar/view/help.vim	/^function! s:compare(a, b) abort$/;"	f
compare	plugged/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare	plugged/unite.vim/autoload/unite/kinds/window.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare	plugged/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare	plugged/unite.vim/autoload/unite/sources/resume.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare	plugged/unite.vim/autoload/unite/sources/window.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare_git_uri	autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
compare_word	plugged/unite.vim/autoload/unite/sources/action.vim	/^function! s:compare_word(i1, i2)$/;"	f
complete	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:complete() "{{{$/;"	f
complete_bookmark_filename	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:complete_bookmark_filename(arglead, cmdline, cursorpos) "{{{$/;"	f
complete_one_date_regex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    complete_one_date_regex = r'(x )(' + date_regex + r')'$/;"	v	class:TodotxtLexer
complete_one_date_regex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    complete_one_date_regex = r'(x )(' + date_regex + r')'$/;"	v	class:TodotxtLexer
complete_two_date_regex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    complete_two_date_regex = (complete_one_date_regex + r'( )(' +$/;"	v	class:TodotxtLexer
complete_two_date_regex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    complete_two_date_regex = (complete_one_date_regex + r'( )(' +$/;"	v	class:TodotxtLexer
complex_name_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    complex_name_re = r'(?:%s|%s|%s)' % (name_re, modname_re, ops_re)$/;"	v	class:ElixirLexer
complex_name_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    complex_name_re = r'(?:%s|%s|%s)' % (name_re, modname_re, ops_re)$/;"	v	class:ElixirLexer
complexjson	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^from .compat import json as complexjson$/;"	i
concat	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:concat(list) abort$/;"	f
configparser	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^    import ConfigParser as configparser$/;"	i
configparser	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^    import configparser$/;"	i
configured_tree	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:configured_tree(git_dir) abort$/;"	f
conj	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
connect	plugged/vim-wakatime/plugin/packages/wakatime/offlinequeue.py	/^    def connect(self):$/;"	m	class:Queue
connect	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    def connect(self):$/;"	m	class:HTTPConnection
connect	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    def connect(self):$/;"	m	class:HTTPSConnection
connect	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    def connect(self):$/;"	m	class:VerifiedHTTPSConnection
connect	plugged/vim-wakatime/plugin/packages/wakatime/session_cache.py	/^    def connect(self):$/;"	m	class:SessionCache
connect_timeout	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/timeout.py	/^    def connect_timeout(self):$/;"	m	class:Timeout
connection	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^from .util import connection$/;"	i
connection	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^from .. import connection$/;"	i
connection_from_host	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^    def connection_from_host(self, host, port=None, scheme='http'):$/;"	m	class:PoolManager
connection_from_host	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^    def connection_from_host(self, host, port=None, scheme='http'):$/;"	m	class:ProxyManager
connection_from_url	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^def connection_from_url(url, **kw):$/;"	f
connection_from_url	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^    def connection_from_url(self, url):$/;"	m	class:PoolManager
cons	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
constants	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_mql_builtins.py	/^constants = ($/;"	v
constants	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_mql_builtins.py	/^constants = ($/;"	v
constants	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetgroupprober.py	/^from . import constants$/;"	i
constants	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetprober.py	/^from . import constants$/;"	i
constants	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escprober.py	/^from . import constants$/;"	i
constants	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/eucjpprober.py	/^from . import constants$/;"	i
constants	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcharsetprober.py	/^from . import constants$/;"	i
constants	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcharsetprober.py	/^from . import constants$/;"	i
constants	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sjisprober.py	/^from . import constants$/;"	i
constants	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^from . import constants$/;"	i
constants	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/utf8prober.py	/^from . import constants$/;"	i
constituent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    constituent = nonmacro + '|[#.:]'$/;"	v	class:CommonLispLexer
constituent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    constituent = nonmacro + '|[#.:]'$/;"	v	class:CommonLispLexer
constraint	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^from pyasn1.type import univ, constraint$/;"	i
constructor.new	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:constructor.new(y, m, d) dict abort$/;"	f
constructor.new	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^function! s:constructor.new(y, m, d) dict abort$/;"	f
constructor.new	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:constructor.new(y, m) dict abort$/;"	f
constructor.new	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:constructor.new(source) dict abort$/;"	f
constructor.new	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! s:constructor.new(source) dict abort$/;"	f
constructor.new	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:constructor.new(source) dict abort$/;"	f
constructor.new	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:constructor.new(source) dict abort$/;"	f
constructor.new	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:constructor.new(source) dict abort$/;"	f
constructor.new	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^function! s:constructor.new(source) dict abort$/;"	f
constructor.new	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:constructor.new(y) dict abort$/;"	f
constructor.new_mjd	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:constructor.new_mjd(mjd) dict abort$/;"	f
constructor.new_mjd	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^function! s:constructor.new_mjd(mjd) dict abort$/;"	f
constructor.today	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^function! s:constructor.today() dict abort$/;"	f
consume_optional	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^        def consume_optional(start_index):$/;"	f	function:ArgumentParser._parse_known_args
consume_positionals	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^        def consume_positionals(start_index):$/;"	f	function:ArgumentParser._parse_known_args
contains_multibyte	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
content	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/_mapping.py	/^        content = fp.read()$/;"	v
content	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^            content = open(headerFilePath).read()$/;"	v
content	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_mapping.py	/^        content = fp.read()$/;"	v
content	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_scilab_builtins.py	/^        content = f.read()$/;"	v
content	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^        content = fp.read()$/;"	v
content	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/_mapping.py	/^        content = fp.read()$/;"	v
content	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^            content = open(headerFilePath).read()$/;"	v
content	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_mapping.py	/^        content = fp.read()$/;"	v
content	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_scilab_builtins.py	/^        content = f.read()$/;"	v
content	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^        content = fp.read()$/;"	v
content	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def content(self):$/;"	m	class:Response
content_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    def content_callback(self, match):$/;"	m	class:HttpLexer
content_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    def content_callback(self, match):$/;"	m	class:HttpLexer
contents	plugged/vim-wakatime/plugin/wakatime.vim	/^                let contents = ['[settings]'] + readfile(expand("$HOME\/.wakatime.conf"), '')$/;"	v
context_regex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    context_regex = r'@\\S+'$/;"	v	class:TodotxtLexer
context_regex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    context_regex = r'@\\S+'$/;"	v	class:TodotxtLexer
continuous_header_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    def continuous_header_callback(self, match):$/;"	m	class:HttpLexer
continuous_header_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    def continuous_header_callback(self, match):$/;"	m	class:HttpLexer
convert	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:convert(rgb) abort$/;"	f
convert_arg_line_to_args	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def convert_arg_line_to_args(self, arg_line):$/;"	m	class:ArgumentParser
convert_args	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:convert_args(args) "{{{$/;"	f
convert_path	plugged/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:convert_path(path) "{{{$/;"	f
convert_to_abbr	plugged/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^function! s:convert_to_abbr(path)$/;"	f
converter.filter	plugged/unite.vim/autoload/unite/filters/converter_default.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	plugged/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^function! s:converter.filter(candidates, context)$/;"	f
converter.filter	plugged/unite.vim/autoload/unite/filters/converter_full_path.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	plugged/unite.vim/autoload/unite/filters/converter_nothing.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	plugged/unite.vim/autoload/unite/filters/converter_relative_abbr.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	plugged/unite.vim/autoload/unite/filters/converter_relative_word.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	plugged/unite.vim/autoload/unite/filters/converter_smart_path.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	plugged/unite.vim/autoload/unite/filters/converter_tail.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	plugged/unite.vim/autoload/unite/filters/converter_tail_abbr.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
cookiejar_from_dict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^def cookiejar_from_dict(cookie_dict, cookiejar=None, overwrite=True):$/;"	f
cookiejar_from_dict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^from .cookies import cookiejar_from_dict, get_cookie_header, _copy_cookie_jar$/;"	i
cookiejar_from_dict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^from .cookies import RequestsCookieJar, cookiejar_from_dict$/;"	i
cookielib	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from http import cookiejar as cookielib$/;"	i
cookielib	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    import cookielib$/;"	i
cookielib	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^from .compat import cookielib, urlparse, urlunparse, Morsel$/;"	i
cookielib	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from .compat import cookielib, OrderedDict, urljoin, urlparse$/;"	i
copy	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^function! s:copy(src, dest) abort "{{{$/;"	f
copy	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    def copy(self):$/;"	m	class:OrderedDict
copy	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^import copy$/;"	i
copy	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^import copy$/;"	i
copy	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def copy(self):$/;"	m	class:RequestsCookieJar
copy	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^import copy$/;"	i
copy	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def copy(self):$/;"	m	class:PreparedRequest
copy	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def copy(self):$/;"	m	class:HTTPHeaderDict
copy	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def copy(self):$/;"	m	class:OrderedDict
copy	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/structures.py	/^    def copy(self):$/;"	m	class:CaseInsensitiveDict
copy	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def copy(self):$/;"	m	class:OrderedDict
copy_exe	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:copy_exe() abort$/;"	f
copy_exe	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:copy_exe(src, dest) abort$/;"	f
copy_vim	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^function! s:copy_vim(src, dest) abort "{{{$/;"	f
country_names	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^country_names = _CountryNameDict()$/;"	v
country_names	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^country_names = _CountryNameDict()$/;"	v
country_timezones	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^country_timezones = _CountryTimezoneDict()$/;"	v
country_timezones	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^country_timezones = _CountryTimezoneDict()$/;"	v
create_candidate	plugged/unite.vim/autoload/unite/sources/script.vim	/^function! s:create_candidate(val) "{{{$/;"	f
create_connection	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/connection.py	/^def create_connection(address, timeout=socket._GLOBAL_DEFAULT_TIMEOUT,$/;"	f
create_cookie	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^def create_cookie(name, value, **kwargs):$/;"	f
create_default_context	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^create_default_context = None$/;"	v
create_urllib3_context	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^def create_urllib3_context(ssl_version=None, cert_reqs=None,$/;"	f
cs	plugged/vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
ctags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    ctags = None$/;"	v
ctags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    import ctags$/;"	i
ctags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    ctags = None$/;"	v
ctags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    import ctags$/;"	i
ctermid	plugged/vimproc.vim/autoload/proc.c	/^# define ctermid(/;"	d	file:
current_attr	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^    current_attr = None$/;"	v	class:HtmlDjangoParser
current_attr_value	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^    current_attr_value = None$/;"	v	class:HtmlDjangoParser
current_compiler	plugged/vim-coffee-script/compiler/cake.vim	/^let current_compiler = 'cake'$/;"	v
current_compiler	plugged/vim-coffee-script/compiler/coffee.vim	/^let current_compiler = 'coffee'$/;"	v
current_compiler	plugged/vim-go/compiler/go.vim	/^let current_compiler = "go"$/;"	v
current_compiler	plugged/vim-haml/compiler/haml.vim	/^let current_compiler = "haml"$/;"	v
current_compiler	plugged/vim-haml/compiler/sass.vim	/^let current_compiler = "sass"$/;"	v
current_compiler	plugged/vim-ruby/compiler/eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	plugged/vim-ruby/compiler/rake.vim	/^let current_compiler = "rake"$/;"	v
current_compiler	plugged/vim-ruby/compiler/rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	plugged/vim-ruby/compiler/ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	plugged/vim-ruby/compiler/rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
current_tag	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^    def current_tag(self):$/;"	m	class:HtmlDjangoParser
current_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/timeout.py	/^def current_time():$/;"	f
cursor_down	plugged/unite.vim/autoload/unite/handlers.vim	/^function! s:cursor_down() "{{{$/;"	f
cursor_idx	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:cursor_idx() "{{{$/;"	f
cursor_up	plugged/unite.vim/autoload/unite/handlers.vim	/^function! s:cursor_up() "{{{$/;"	f
custom_alternate_buffer	plugged/unite.vim/autoload/unite/exrename.vim	/^function! s:custom_alternate_buffer() "{{{$/;"	f
custom_base	plugged/unite.vim/autoload/unite/custom.vim	/^function! s:custom_base(key, kind, name, value) "{{{$/;"	f
cyclic_view	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:cyclic_view() abort$/;"	f
daemon	plugged/Nvim-R/R/synctex_evince_backward.py	/^    daemon = None$/;"	v	class:EvinceWindowProxy
daemon	plugged/Nvim-R/R/synctex_evince_forward.py	/^    daemon = None$/;"	v	class:EvinceWindowProxy
dark_colors	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/console.py	/^dark_colors  = ["black", "darkred", "darkgreen", "brown", "darkblue",$/;"	v
dark_colors	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/console.py	/^dark_colors  = ["black", "darkred", "darkgreen", "brown", "darkblue",$/;"	v
data	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^    data = None$/;"	v	class:LazyDict
data	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^    data = None$/;"	v	class:LazyDict
data	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def data(self):$/;"	m	class:HTTPResponse
date_endian	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:date_endian() abort$/;"	f
date_full_month_name	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:date_full_month_name() abort$/;"	f
date_month_name	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:date_month_name() abort$/;"	f
date_regex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    date_regex = r'\\d{4,}-\\d{2}-\\d{2}'$/;"	v	class:TodotxtLexer
date_regex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    date_regex = r'\\d{4,}-\\d{2}-\\d{2}'$/;"	v	class:TodotxtLexer
date_separator	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:date_separator() abort$/;"	f
datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^import sys, datetime, os.path, gettext$/;"	i
datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^from datetime import tzinfo, timedelta, datetime$/;"	i
datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^from datetime import datetime, time, timedelta, tzinfo$/;"	i
datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^from datetime import datetime, timedelta$/;"	i
datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^from datetime import datetime, timedelta, tzinfo$/;"	i
datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^import sys, datetime, os.path, gettext$/;"	i
datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^from datetime import tzinfo, timedelta, datetime$/;"	i
datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^from datetime import datetime, time, timedelta, tzinfo$/;"	i
datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^from datetime import datetime, timedelta$/;"	i
datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^from datetime import datetime, timedelta, tzinfo$/;"	i
datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^import datetime$/;"	i
datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^import datetime$/;"	i
datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from datetime import datetime$/;"	i
datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/tests.py	/^from datetime import datetime$/;"	i
datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/tests.py	/^from datetime import datetime$/;"	i
db_file	plugged/vim-wakatime/plugin/packages/wakatime/offlinequeue.py	/^    db_file = os.path.join(os.path.expanduser('~'), '.wakatime.db')$/;"	v	class:Queue
dbus	plugged/Nvim-R/R/synctex_evince_backward.py	/^import dbus, subprocess, time$/;"	i
dbus	plugged/Nvim-R/R/synctex_evince_backward.py	/^import dbus.mainloop.glib, sys, os, signal$/;"	i
dbus	plugged/Nvim-R/R/synctex_evince_forward.py	/^import dbus$/;"	i
dbus	plugged/Nvim-R/R/synctex_evince_forward.py	/^import dbus.mainloop.glib, sys, os$/;"	i
debug	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:debug() abort$/;"	f
debug	plugged/vimproc.vim/autoload/proc.c	/^const int debug = 0;$/;"	v
debug	plugged/vimproc.vim/autoload/proc_w32.c	/^const int debug = 0;$/;"	v
dec	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^    from . import decoder as dec$/;"	i
decimal	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^import decimal$/;"	i
decimal	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decimal.py	/^import decimal$/;"	i
decimal	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decode.py	/^import decimal$/;"	i
decimal_suffixes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    decimal_suffixes = '([tTsSiIlLvV]|ll|LL|([iIuU])(8|16|32|64))?'$/;"	v	class:FelixLexer
decimal_suffixes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    decimal_suffixes = '([tTsSiIlLvV]|ll|LL|([iIuU])(8|16|32|64))?'$/;"	v	class:FelixLexer
declarations	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    declarations = ('DATA', 'LET')$/;"	v	class:QBasicLexer
declarations	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    declarations = ($/;"	v	class:ClojureLexer
declarations	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    declarations = ($/;"	v	class:HyLexer
declarations	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    declarations = ('DATA', 'LET')$/;"	v	class:QBasicLexer
declarations	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    declarations = ($/;"	v	class:ClojureLexer
declarations	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    declarations = ($/;"	v	class:HyLexer
declkw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    declkw = r'(?:res|d)[bwdqt]|times'$/;"	v	class:NasmLexer
declkw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    declkw = r'(?:res|d)[bwdqt]|times'$/;"	v	class:NasmLexer
decn	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    decn = r'[0-9]+'$/;"	v	class:NasmLexer
decn	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    decn = r'[0-9]+'$/;"	v	class:NasmLexer
decode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^    def decode(self, s, _w=WHITESPACE.match, _PY3=PY3):$/;"	m	class:JSONDecoder
decodeURI	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! s:decodeURI(str) abort$/;"	f
decoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^    import simplejson.decoder$/;"	i
decoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_scanstring.py	/^import simplejson.decoder$/;"	i
decompress	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def decompress(self, data):$/;"	m	class:DeflateDecoder
decompress	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def decompress(self, data):$/;"	m	class:GzipDecoder
dedent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^from textwrap import dedent$/;"	i
dedent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^from textwrap import dedent$/;"	i
def_ruby	plugged/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^function! s:def_ruby()$/;"	f
default	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^    def default(self, obj):$/;"	m	class:CustomEncoder
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^class default:$/;"	c
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^from pygments.lexer import RegexLexer, bygroups, using, this, words, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^from pygments.lexer import RegexLexer, bygroups, default, words, include$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    this, inherit, default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^from pygments.lexer import RegexLexer, default, words, bygroups, include, using$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    using, this, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^from pygments.lexer import RegexLexer, bygroups, words, include, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, do_insertions, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    include, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^from pygments.lexer import RegexLexer, bygroups, default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    this, default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    combined$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    this, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    default, include$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    default, using$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^from pygments.lexer import RegexLexer, include, bygroups, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    this, default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    this, combined, default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    using, this, do_insertions, default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^from pygments.lexer import RegexLexer, include, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    inherit, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    using, this, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    using, this, default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    default, words, combined, do_insertions$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^from pygments.lexer import RegexLexer, bygroups, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    bygroups, default, LexerContext, do_insertions, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^from pygments.lexer import RegexLexer, include, bygroups, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    include, using, this, default, combined$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^from pygments.lexer import RegexLexer, include, default, bygroups, using, this$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^from pygments.lexer import RegexLexer, default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    default, using$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^class default:$/;"	c
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^from pygments.lexer import RegexLexer, bygroups, using, this, words, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^from pygments.lexer import RegexLexer, bygroups, default, words, include$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    this, inherit, default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^from pygments.lexer import RegexLexer, default, words, bygroups, include, using$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    using, this, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^from pygments.lexer import RegexLexer, bygroups, words, include, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, do_insertions, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    include, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^from pygments.lexer import RegexLexer, bygroups, default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    this, default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    combined$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    this, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    default, include$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    default, using$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^from pygments.lexer import RegexLexer, include, bygroups, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    this, default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    this, combined, default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    using, this, do_insertions, default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^from pygments.lexer import RegexLexer, include, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    inherit, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    using, this, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    using, this, default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    default, words, combined, do_insertions$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^from pygments.lexer import RegexLexer, bygroups, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    bygroups, default, LexerContext, do_insertions, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^from pygments.lexer import RegexLexer, include, bygroups, default$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    include, using, this, default, combined$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^from pygments.lexer import RegexLexer, include, default, bygroups, using, this$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^from pygments.lexer import RegexLexer, default, words$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    default, using$/;"	i
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^    def default(self, o):$/;"	m	class:JSONEncoder
default	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_recursion.py	/^    def default(self, o):$/;"	m	class:RecursiveJSONEncoder
default_headers	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from .utils import to_key_val_list, default_headers, to_native_string$/;"	i
default_headers	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def default_headers():$/;"	f
default_hooks	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/hooks.py	/^def default_hooks():$/;"	f
default_hooks	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^from .hooks import default_hooks$/;"	i
default_hooks	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from .hooks import default_hooks, dispatch_hook$/;"	i
default_image_format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    default_image_format = 'bmp'$/;"	v	class:BmpImageFormatter
default_image_format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    default_image_format = 'gif'$/;"	v	class:GifImageFormatter
default_image_format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    default_image_format = 'jpeg'$/;"	v	class:JpgImageFormatter
default_image_format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    default_image_format = 'png'$/;"	v	class:ImageFormatter
default_image_format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    default_image_format = 'bmp'$/;"	v	class:BmpImageFormatter
default_image_format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    default_image_format = 'gif'$/;"	v	class:GifImageFormatter
default_image_format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    default_image_format = 'jpeg'$/;"	v	class:JpgImageFormatter
default_image_format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    default_image_format = 'png'$/;"	v	class:ImageFormatter
default_iterable	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_check_circular.py	/^def default_iterable(obj):$/;"	f
default_port	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    default_port = port_by_scheme['http']$/;"	v	class:HTTPConnection
default_port	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    default_port = port_by_scheme['https']$/;"	v	class:HTTPSConnection
default_socket_options	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    default_socket_options = [(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)]$/;"	v	class:HTTPConnection
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/autumn.py	/^    default_style = ""$/;"	v	class:AutumnStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/borland.py	/^    default_style = ''$/;"	v	class:BorlandStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/bw.py	/^    default_style = ""$/;"	v	class:BlackWhiteStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/colorful.py	/^    default_style = ""$/;"	v	class:ColorfulStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/default.py	/^    default_style = ""$/;"	v	class:DefaultStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/emacs.py	/^    default_style = ""$/;"	v	class:EmacsStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/friendly.py	/^    default_style = ""$/;"	v	class:FriendlyStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/igor.py	/^    default_style = ""$/;"	v	class:IgorStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/murphy.py	/^    default_style = ""$/;"	v	class:MurphyStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^    default_style = ''$/;"	v	class:ParaisoDarkStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^    default_style = ''$/;"	v	class:ParaisoLightStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/pastie.py	/^    default_style = ''$/;"	v	class:PastieStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/perldoc.py	/^    default_style = ''$/;"	v	class:PerldocStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/tango.py	/^    default_style = ""$/;"	v	class:TangoStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/trac.py	/^    default_style = ''$/;"	v	class:TracStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vim.py	/^    default_style = "#cccccc"$/;"	v	class:VimStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vs.py	/^    default_style = ""$/;"	v	class:VisualStudioStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/xcode.py	/^    default_style = ''$/;"	v	class:XcodeStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/autumn.py	/^    default_style = ""$/;"	v	class:AutumnStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/borland.py	/^    default_style = ''$/;"	v	class:BorlandStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/bw.py	/^    default_style = ""$/;"	v	class:BlackWhiteStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/colorful.py	/^    default_style = ""$/;"	v	class:ColorfulStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/default.py	/^    default_style = ""$/;"	v	class:DefaultStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/emacs.py	/^    default_style = ""$/;"	v	class:EmacsStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/friendly.py	/^    default_style = ""$/;"	v	class:FriendlyStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/igor.py	/^    default_style = ""$/;"	v	class:IgorStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/murphy.py	/^    default_style = ""$/;"	v	class:MurphyStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^    default_style = ''$/;"	v	class:ParaisoDarkStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^    default_style = ''$/;"	v	class:ParaisoLightStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/pastie.py	/^    default_style = ''$/;"	v	class:PastieStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/perldoc.py	/^    default_style = ''$/;"	v	class:PerldocStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/tango.py	/^    default_style = ""$/;"	v	class:TangoStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/trac.py	/^    default_style = ''$/;"	v	class:TracStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vim.py	/^    default_style = "#cccccc"$/;"	v	class:VimStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vs.py	/^    default_style = ""$/;"	v	class:VisualStudioStyle
default_style	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/xcode.py	/^    default_style = ''$/;"	v	class:XcodeStyle
default_user_agent	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def default_user_agent(name="python-requests"):$/;"	f
defaultfn	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *defaultfn;$/;"	m	struct:_PyEncoderObject	file:
define_commands	autoload/plug.vim	/^function! s:define_commands()$/;"	f
define_commands	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands() abort$/;"	f
define_signals	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:define_signals()$/;"	f
defn	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^        if '(import ' in text or '(defn ' in text:$/;"	i
defn	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^        if '(import ' in text or '(defn ' in text:$/;"	i
delete	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:delete(delete_command, candidate) "{{{$/;"	f
delete	plugged/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:delete(cache_dir, filename) abort$/;"	f
delete	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^from .api import request, get, head, post, patch, put, delete, options$/;"	i
delete	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/api.py	/^def delete(url, **kwargs):$/;"	f
delete	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def delete(self, url, **kwargs):$/;"	m	class:Session
delete	plugged/vim-wakatime/plugin/packages/wakatime/session_cache.py	/^    def delete(self):$/;"	m	class:SessionCache
deleteBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bm)$/;"	f
delete_backward_path	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:delete_backward_path() "{{{$/;"	f
deletefile	plugged/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:deletefile(cache_dir, filename) abort$/;"	f
delimitMate	plugged/delimitMate/plugin/delimitMate.vim	/^augroup delimitMate$/;"	a
delimitMate#BS	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#BS() " {{{$/;"	f
delimitMate#ExpandReturn	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ExpandReturn() "{{{$/;"	f
delimitMate#ExpandSpace	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ExpandSpace() "{{{$/;"	f
delimitMate#Get	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#Get(...) "{{{$/;"	f
delimitMate#IsEmptyPair	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsEmptyPair(str) "{{{$/;"	f
delimitMate#JumpAny	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpAny(...) " {{{$/;"	f
delimitMate#JumpMany	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpMany() " {{{$/;"	f
delimitMate#JumpOut	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpOut(char) "{{{$/;"	f
delimitMate#ParenDelim	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ParenDelim(right) " {{{$/;"	f
delimitMate#QuoteDelim	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#QuoteDelim(char) "{{{$/;"	f
delimitMate#Set	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#Set(...) "{{{$/;"	f
delimitMate#ShouldJump	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ShouldJump(...) "{{{$/;"	f
delimitMate#SkipDelim	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#SkipDelim(char) "{{{$/;"	f
delimitMate#Test	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#Test() "{{{$/;"	f
delimitMate#WithinEmptyPair	plugged/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#WithinEmptyPair() "{{{$/;"	f
delimitMate_version	plugged/delimitMate/plugin/delimitMate.vim	/^let delimitMate_version = "2.8"$/;"	v
delimiter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    delimiter = r'()<>\\[\\]{}\/%\\s'$/;"	v	class:PostScriptLexer
delimiter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    delimiter = r'()<>\\[\\]{}\/%\\s'$/;"	v	class:PostScriptLexer
delimiter_end	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    delimiter_end = r'(?=[%s])' % delimiter$/;"	v	class:PostScriptLexer
delimiter_end	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    delimiter_end = r'(?=[%s])' % delimiter$/;"	v	class:PostScriptLexer
dependencies	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^    dependencies = []$/;"	v	class:TokenParser
der_decoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^from pyasn1.codec.der import decoder as der_decoder$/;"	i
deregister_hook	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def deregister_hook(self, event, hook):$/;"	m	class:RequestHooksMixin
description_of	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardetect.py	/^def description_of(lines, name='stdin'):$/;"	f
detain_winsock	plugged/vimproc.vim/autoload/proc_w32.c	/^detain_winsock()$/;"	f	file:
detect	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/__init__.py	/^def detect(aBuf):$/;"	f
dict_from_cookiejar	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def dict_from_cookiejar(cj):$/;"	f
dict_to_sequence	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def dict_to_sequence(d):$/;"	f
did_css_syn_inits	plugged/css.vim/syntax/css.vim	/^    let did_css_syn_inits = 1$/;"	v
did_javascript_syn_inits	plugged/vim-javascript/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
diff	autoload/plug.vim	/^function! s:diff()$/;"	f
diff_modifier	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
diff_restore	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
diff_window_count	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
diffidx	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
diffoff	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff() abort$/;"	f
diffoff_all	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
diffthis	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis() abort$/;"	f
directives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    directives = (r'BITS|USE16|USE32|SECTION|SEGMENT|ABSOLUTE|EXTERN|GLOBAL|'$/;"	v	class:NasmLexer
directives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    directives = ('lib', 'link', 'flag', 'include', 'hide', 'freeze', 'access',$/;"	v	class:IdrisLexer
directives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    directives = (r'BITS|USE16|USE32|SECTION|SEGMENT|ABSOLUTE|EXTERN|GLOBAL|'$/;"	v	class:NasmLexer
directives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    directives = ('lib', 'link', 'flag', 'include', 'hide', 'freeze', 'access',$/;"	v	class:IdrisLexer
dirname	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:dirname(path)$/;"	f
dirpath	autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
disable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    TerminalFormatter  # pylint:disable-msg=E0611$/;"	i
disable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    TerminalFormatter  # pylint:disable-msg=E0611$/;"	i
disable_max_candidates	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:disable_max_candidates() "{{{$/;"	f
disable_warnings	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^def disable_warnings(category=exceptions.HTTPWarning):$/;"	f
discard	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def discard(self, key):$/;"	m	class:HTTPHeaderDict
dispatch_hook	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/hooks.py	/^def dispatch_hook(key, hooks, hook_data, **kwargs):$/;"	f
dispatch_hook	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from .hooks import default_hooks, dispatch_hook$/;"	i
displayHelp	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp()$/;"	f
div	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:div(x, y) abort$/;"	f
div	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:div(x, y) abort$/;"	f
div	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:div(x, y) abort$/;"	f
div	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^function! s:div(x, y) abort$/;"	f
div	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^function! s:div(x, y) abort$/;"	f
div	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:div(x, y) abort$/;"	f
division	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^from __future__ import division$/;"	i
division	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^from __future__ import division$/;"	i
do	autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
do_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    def do_indent(level):$/;"	m	class:KconfigLexer
do_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    def do_indent(level):$/;"	m	class:KconfigLexer
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^def do_insertions(insertions, tokens):$/;"	f
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, do_insertions, default$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    include, default$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    default, include$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, combined, do_insertions$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    do_insertions, using$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    using, this, do_insertions, default, words$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, words, do_insertions$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    default, words, combined, do_insertions$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^from pygments.lexer import Lexer, RegexLexer, include, words, do_insertions$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    bygroups, default, LexerContext, do_insertions, words$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, include$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, words$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^def do_insertions(insertions, tokens):$/;"	f
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, do_insertions, default$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    include, default$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    default, include$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, combined, do_insertions$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    do_insertions, using$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    using, this, do_insertions, default, words$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, words, do_insertions$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    default, words, combined, do_insertions$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^from pygments.lexer import Lexer, RegexLexer, include, words, do_insertions$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    bygroups, default, LexerContext, do_insertions, words$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, include$/;"	i
do_insertions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, words$/;"	i
do_new_candidate_action	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:do_new_candidate_action() "{{{$/;"	f
do_rename	plugged/unite.vim/autoload/unite/exrename.vim	/^function! s:do_rename() "{{{$/;"	f
do_tests	plugged/emmet-vim/unittest.vim	/^function! s:do_tests(...)$/;"	f
docstring_headline	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    guess_decode, guess_decode_from_terminal, terminal_encoding$/;"	i
docstring_headline	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/_mapping.py	/^    from pygments.util import docstring_headline$/;"	i
docstring_headline	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^def docstring_headline(obj):$/;"	f
docstring_headline	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    guess_decode, guess_decode_from_terminal, terminal_encoding$/;"	i
docstring_headline	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/_mapping.py	/^    from pygments.util import docstring_headline$/;"	i
docstring_headline	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^def docstring_headline(obj):$/;"	f
doctest	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    import doctest, os, sys$/;"	i
doctest	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^import unittest, doctest$/;"	i
doctest	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    import doctest, os, sys$/;"	i
doctest	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^import unittest, doctest$/;"	i
doctest	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^import doctest$/;"	i
doctype_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^def doctype_matches(text, regex):$/;"	f
doctype_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^def doctype_matches(text, regex):$/;"	f
document_filters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^    def document_filters(self):$/;"	m	class:PygmentsDoc
document_filters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^    def document_filters(self):$/;"	m	class:PygmentsDoc
document_formatters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^    def document_formatters(self):$/;"	m	class:PygmentsDoc
document_formatters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^    def document_formatters(self):$/;"	m	class:PygmentsDoc
document_lexers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^    def document_lexers(self):$/;"	m	class:PygmentsDoc
document_lexers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^    def document_lexers(self):$/;"	m	class:PygmentsDoc
dollar_add	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! s:dollar_add(base,no) abort$/;"	f
dosurround	plugged/vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
dotted_netmask	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def dotted_netmask(mask):$/;"	f
dprint	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
ds	plugged/vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def dst(self, dt):$/;"	m	class:UTC
dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def dst(self, dt):$/;"	m	class:_FixedOffset
dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^    def dst(self, dt):$/;"	m	class:FixedOffset
dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^    def dst(self, dt):$/;"	m	class:LocalTimezone
dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^    def dst(self, dt):$/;"	m	class:USTimeZone
dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    def dst(self, dt, is_dst=None):$/;"	m	class:DstTzInfo
dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    def dst(self, dt, is_dst=None):$/;"	m	class:StaticTzInfo
dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def dst(self, dt):$/;"	m	class:UTC
dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def dst(self, dt):$/;"	m	class:_FixedOffset
dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^    def dst(self, dt):$/;"	m	class:FixedOffset
dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^    def dst(self, dt):$/;"	m	class:LocalTimezone
dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^    def dst(self, dt):$/;"	m	class:USTimeZone
dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    def dst(self, dt, is_dst=None):$/;"	m	class:DstTzInfo
dst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    def dst(self, dt, is_dst=None):$/;"	m	class:StaticTzInfo
dstring	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
dump	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^def dump(obj, fp, skipkeys=False, ensure_ascii=True, check_circular=True,$/;"	f
dumps	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^def dumps(obj, skipkeys=False, ensure_ascii=True, check_circular=True,$/;"	f
dumps	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decimal.py	/^    def dumps(self, obj, **kw):$/;"	m	class:TestDecimal
duplicates_removed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_scilab_builtins.py	/^    from pygments.util import format_lines, duplicates_removed$/;"	i
duplicates_removed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^def duplicates_removed(it, already_seen=()):$/;"	f
duplicates_removed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_scilab_builtins.py	/^    from pygments.util import format_lines, duplicates_removed$/;"	i
duplicates_removed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^def duplicates_removed(it, already_seen=()):$/;"	f
eDetecting	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/constants.py	/^eDetecting = 0$/;"	v
eDetecting	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^from .constants import eNotMe, eDetecting$/;"	i
eError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/constants.py	/^eError = 1$/;"	v
eError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escsm.py	/^from .constants import eStart, eError, eItsMe$/;"	i
eError	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^from .constants import eStart, eError, eItsMe$/;"	i
eEscAscii	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^eEscAscii = 1$/;"	v
eFoundIt	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/constants.py	/^eFoundIt = 1$/;"	v
eHighbyte	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^eHighbyte = 2$/;"	v
eItsMe	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/constants.py	/^eItsMe = 2$/;"	v
eItsMe	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escsm.py	/^from .constants import eStart, eError, eItsMe$/;"	i
eItsMe	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^from .constants import eStart, eError, eItsMe$/;"	i
eNotMe	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/constants.py	/^eNotMe = 2$/;"	v
eNotMe	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^from .constants import eNotMe, eDetecting$/;"	i
eNotMe	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^from .constants import eNotMe$/;"	i
ePureAscii	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^ePureAscii = 0$/;"	v
eStart	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/codingstatemachine.py	/^from .constants import eStart$/;"	i
eStart	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/constants.py	/^eStart = 0$/;"	v
eStart	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escsm.py	/^from .constants import eStart, eError, eItsMe$/;"	i
eStart	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcssm.py	/^from .constants import eStart, eError, eItsMe$/;"	i
echo	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echo(msg)$/;"	f
echoWarning	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echoWarning(msg)$/;"	f
echomsg	plugged/unite.vim/autoload/vital/_unite/Vim/Message.vim	/^function! s:echomsg(hl, msg) abort$/;"	f
elementcontentchar	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    elementcontentchar = r'[A-Za-z]|\\s|\\d|[!"#$%()*+,\\-.\/:;=?@\\[\\\\\\]^_\\'`|~]'$/;"	v	class:XQueryLexer
elementcontentchar	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    elementcontentchar = r'[A-Za-z]|\\s|\\d|[!"#$%()*+,\\-.\/:;=?@\\[\\\\\\]^_\\'`|~]'$/;"	v	class:XQueryLexer
elfun	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    elfun = ("sin", "sind", "sinh", "asin", "asind", "asinh", "cos", "cosd", "cosh",$/;"	v	class:MatlabLexer
elfun	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    elfun = ("sin", "sind", "sinh", "asin", "asind", "asinh", "cos", "cosd", "cosh",$/;"	v	class:MatlabLexer
elmat	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    elmat = ("zeros", "ones", "eye", "repmat", "rand", "randn", "linspace", "logspace",$/;"	v	class:MatlabLexer
elmat	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    elmat = ("zeros", "ones", "eye", "repmat", "rand", "randn", "linspace", "logspace",$/;"	v	class:MatlabLexer
email	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/fields.py	/^import email.utils$/;"	i
embedded_perl6_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    def embedded_perl6_callback(lexer, match, context):$/;"	m	class:Perl6Lexer
embedded_perl6_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    def embedded_perl6_callback(lexer, match, context):$/;"	m	class:Perl6Lexer
emit	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^        def emit(self, record):$/;"	m	class:NullHandler
emit	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^        def emit(self, record):$/;"	m	class:NullHandler
emmet#anchorizeURL	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#anchorizeURL(flag) abort$/;"	f
emmet#balanceTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#balanceTag(flag) range abort$/;"	f
emmet#codePretty	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#codePretty() range abort$/;"	f
emmet#completeTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#completeTag(findstart, base) abort$/;"	f
emmet#encodeImage	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#encodeImage() abort$/;"	f
emmet#expandAbbr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandAbbr(mode, abbr) range abort$/;"	f
emmet#expandAbbrIntelligent	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandAbbrIntelligent(feedkey) abort$/;"	f
emmet#expandCursorExpr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandCursorExpr(expand, mode) abort$/;"	f
emmet#expandDollarExpr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandDollarExpr(expand) abort$/;"	f
emmet#expandWord	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandWord(abbr, type, orig) abort$/;"	f
emmet#getBaseType	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getBaseType(type) abort$/;"	f
emmet#getDollarExprs	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getDollarExprs(expand) abort$/;"	f
emmet#getDollarValueByKey	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getDollarValueByKey(key) abort$/;"	f
emmet#getExpandos	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getExpandos(type, key) abort$/;"	f
emmet#getFileType	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getFileType(...) abort$/;"	f
emmet#getFilters	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getFilters(type) abort$/;"	f
emmet#getIndentation	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getIndentation(...) abort$/;"	f
emmet#getResource	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getResource(type, name, default) abort$/;"	f
emmet#getSettings	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getSettings() abort$/;"	f
emmet#getSnippets	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getSnippets(type) abort$/;"	f
emmet#imageSize	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#imageSize() abort$/;"	f
emmet#isExpandable	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#isExpandable() abort$/;"	f
emmet#isExtends	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#isExtends(type, extend) abort$/;"	f
emmet#lang#css#balanceTag	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#balanceTag(flag) range abort$/;"	f
emmet#lang#css#encodeImage	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#encodeImage() abort$/;"	f
emmet#lang#css#findTokens	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#findTokens(str) abort$/;"	f
emmet#lang#css#imageSize	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#imageSize() abort$/;"	f
emmet#lang#css#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrev(flag) abort$/;"	f
emmet#lang#css#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#css#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#css#parseTag	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseTag(tag) abort$/;"	f
emmet#lang#css#removeTag	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#removeTag() abort$/;"	f
emmet#lang#css#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#splitJoinTag() abort$/;"	f
emmet#lang#css#toString	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#css#toggleComment	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toggleComment() abort$/;"	f
emmet#lang#exists	plugged/emmet-vim/autoload/emmet/lang.vim	/^function! emmet#lang#exists(type) abort$/;"	f
emmet#lang#haml#balanceTag	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#balanceTag(flag) range abort$/;"	f
emmet#lang#haml#encodeImage	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#encodeImage() abort$/;"	f
emmet#lang#haml#findTokens	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#findTokens(str) abort$/;"	f
emmet#lang#haml#imageSize	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#imageSize() abort$/;"	f
emmet#lang#haml#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrev(flag) abort$/;"	f
emmet#lang#haml#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#haml#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#haml#parseTag	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseTag(tag) abort$/;"	f
emmet#lang#haml#removeTag	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#removeTag() abort$/;"	f
emmet#lang#haml#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#splitJoinTag() abort$/;"	f
emmet#lang#haml#toString	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#haml#toggleComment	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toggleComment() abort$/;"	f
emmet#lang#html#balanceTag	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#balanceTag(flag) range abort$/;"	f
emmet#lang#html#encodeImage	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#encodeImage() abort$/;"	f
emmet#lang#html#findTokens	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#findTokens(str) abort$/;"	f
emmet#lang#html#imageSize	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#imageSize() abort$/;"	f
emmet#lang#html#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrev(flag) abort$/;"	f
emmet#lang#html#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#html#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#html#parseTag	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseTag(tag) abort$/;"	f
emmet#lang#html#removeTag	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#removeTag() abort$/;"	f
emmet#lang#html#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#splitJoinTag() abort$/;"	f
emmet#lang#html#toString	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#html#toggleComment	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toggleComment() abort$/;"	f
emmet#lang#jade#balanceTag	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#balanceTag(flag) range abort$/;"	f
emmet#lang#jade#encodeImage	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#encodeImage() abort$/;"	f
emmet#lang#jade#findTokens	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#findTokens(str) abort$/;"	f
emmet#lang#jade#imageSize	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#imageSize() abort$/;"	f
emmet#lang#jade#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#moveNextPrev(flag) abort$/;"	f
emmet#lang#jade#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#jade#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#jade#parseTag	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#parseTag(tag) abort$/;"	f
emmet#lang#jade#removeTag	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#removeTag() abort$/;"	f
emmet#lang#jade#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#splitJoinTag() abort$/;"	f
emmet#lang#jade#toString	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#jade#toggleComment	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#toggleComment() abort$/;"	f
emmet#lang#less#balanceTag	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#balanceTag(flag) range abort$/;"	f
emmet#lang#less#encodeImage	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#encodeImage() abort$/;"	f
emmet#lang#less#findTokens	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#findTokens(str) abort$/;"	f
emmet#lang#less#imageSize	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#imageSize() abort$/;"	f
emmet#lang#less#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrev(flag) abort$/;"	f
emmet#lang#less#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#less#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#less#parseTag	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseTag(tag) abort$/;"	f
emmet#lang#less#removeTag	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#removeTag() abort$/;"	f
emmet#lang#less#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#splitJoinTag() abort$/;"	f
emmet#lang#less#toString	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#less#toggleComment	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toggleComment() abort$/;"	f
emmet#lang#sass#balanceTag	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#balanceTag(flag) range abort$/;"	f
emmet#lang#sass#encodeImage	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#encodeImage() abort$/;"	f
emmet#lang#sass#findTokens	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#findTokens(str) abort$/;"	f
emmet#lang#sass#imageSize	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#imageSize() abort$/;"	f
emmet#lang#sass#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrev(flag) abort$/;"	f
emmet#lang#sass#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#sass#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#sass#parseTag	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseTag(tag) abort$/;"	f
emmet#lang#sass#removeTag	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#removeTag() abort$/;"	f
emmet#lang#sass#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#splitJoinTag() abort$/;"	f
emmet#lang#sass#toString	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#sass#toggleComment	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toggleComment() abort$/;"	f
emmet#lang#scss#balanceTag	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#balanceTag(flag) range abort$/;"	f
emmet#lang#scss#encodeImage	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#encodeImage() abort$/;"	f
emmet#lang#scss#findTokens	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#findTokens(str) abort$/;"	f
emmet#lang#scss#imageSize	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#imageSize() abort$/;"	f
emmet#lang#scss#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrev(flag) abort$/;"	f
emmet#lang#scss#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#scss#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#scss#parseTag	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseTag(tag) abort$/;"	f
emmet#lang#scss#removeTag	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#removeTag() abort$/;"	f
emmet#lang#scss#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#splitJoinTag() abort$/;"	f
emmet#lang#scss#toString	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#scss#toggleComment	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toggleComment() abort$/;"	f
emmet#lang#slim#balanceTag	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#balanceTag(flag) range abort$/;"	f
emmet#lang#slim#encodeImage	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#encodeImage() abort$/;"	f
emmet#lang#slim#findTokens	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#findTokens(str) abort$/;"	f
emmet#lang#slim#imageSize	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#imageSize() abort$/;"	f
emmet#lang#slim#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrev(flag) abort$/;"	f
emmet#lang#slim#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#slim#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#slim#parseTag	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseTag(tag) abort$/;"	f
emmet#lang#slim#removeTag	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#removeTag() abort$/;"	f
emmet#lang#slim#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#splitJoinTag() abort$/;"	f
emmet#lang#slim#toString	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#slim#toggleComment	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toggleComment() abort$/;"	f
emmet#lorem#en#expand	plugged/emmet-vim/autoload/emmet/lorem/en.vim	/^function! emmet#lorem#en#expand(command) abort$/;"	f
emmet#lorem#ja#expand	plugged/emmet-vim/autoload/emmet/lorem/ja.vim	/^function! emmet#lorem#ja#expand(command) abort$/;"	f
emmet#mergeConfig	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeConfig(lhs, rhs) abort$/;"	f
emmet#mergeLines	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeLines() range abort$/;"	f
emmet#moveNextPrev	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#moveNextPrev(flag) abort$/;"	f
emmet#moveNextPrevItem	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#moveNextPrevItem(flag) abort$/;"	f
emmet#newNode	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#newNode() abort$/;"	f
emmet#parseIntoTree	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#parseIntoTree(abbr, type) abort$/;"	f
emmet#reExpandDollarExpr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#reExpandDollarExpr(expand, times) abort$/;"	f
emmet#removeTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#removeTag() abort$/;"	f
emmet#splitFilterArg	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#splitFilterArg(filters) abort$/;"	f
emmet#splitJoinTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#splitJoinTag() abort$/;"	f
emmet#toString	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#toString(...) abort$/;"	f
emmet#toggleComment	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#toggleComment() abort$/;"	f
emmet#unescapeDollarExpr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#unescapeDollarExpr(expand) abort$/;"	f
emmet#updateTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#updateTag() abort$/;"	f
emmet#useFilter	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#useFilter(filters, filter) abort$/;"	f
emmet#util#cache	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#cache(name, ...) abort$/;"	f
emmet#util#closePopup	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#closePopup() abort$/;"	f
emmet#util#cursorInRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#cursorInRegion(region) abort$/;"	f
emmet#util#deleteContent	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#deleteContent(region) abort$/;"	f
emmet#util#getContent	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getContent(region) abort$/;"	f
emmet#util#getContentFromURL	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getContentFromURL(url) abort$/;"	f
emmet#util#getImageSize	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getImageSize(fn) abort$/;"	f
emmet#util#getTextFromHTML	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getTextFromHTML(buf) abort$/;"	f
emmet#util#getVisualBlock	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getVisualBlock() abort$/;"	f
emmet#util#getcurpos	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getcurpos() abort$/;"	f
emmet#util#imageSizeWithImageMagick	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#imageSizeWithImageMagick(fn) abort$/;"	f
emmet#util#isImageMagickInstalled	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#isImageMagickInstalled() abort$/;"	f
emmet#util#pointInRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#pointInRegion(point, region) abort$/;"	f
emmet#util#rand	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#rand() abort$/;"	f
emmet#util#regionInRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#regionInRegion(outer, inner) abort$/;"	f
emmet#util#regionIsValid	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#regionIsValid(region) abort$/;"	f
emmet#util#searchRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#searchRegion(start, end) abort$/;"	f
emmet#util#selectRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#selectRegion(region) abort$/;"	f
emmet#util#setContent	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#setContent(region, content) abort$/;"	f
emmet#util#srand	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#srand(seed) abort$/;"	f
emmet#util#unique	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#unique(arr) abort$/;"	f
emmet_unittest_complete	plugged/emmet-vim/unittest.vim	/^function! s:emmet_unittest_complete(arglead, cmdline, cmdpos)$/;"	f
empty	plugged/delimitMate/Makefile	/^empty    :=$/;"	m
enc	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^    from . import encoder as enc$/;"	i
encode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^    def encode(self, o):$/;"	m	class:JSONEncoder
encode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^    def encode(self, o):$/;"	m	class:JSONEncoderForHTML
encode_basestring	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^def encode_basestring(s, _PY3=PY3, _q=u('"')):$/;"	f
encode_basestring_ascii	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^encode_basestring_ascii = ($/;"	v
encode_multipart_formdata	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^from .packages.urllib3.filepost import encode_multipart_formdata$/;"	i
encode_multipart_formdata	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^from .filepost import encode_multipart_formdata$/;"	i
encode_multipart_formdata	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/filepost.py	/^def encode_multipart_formdata(fields, boundary=None):$/;"	f
encode_multipart_formdata	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/request.py	/^from .filepost import encode_multipart_formdata$/;"	i
encoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *encoder;$/;"	m	struct:_PyEncoderObject	file:
encoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^    import simplejson.encoder$/;"	i
encoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decimal.py	/^        import simplejson.encoder$/;"	i
encoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_encode_basestring_ascii.py	/^import simplejson.encoder$/;"	i
encoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_speedups.py	/^from simplejson import encoder, scanner$/;"	i
encoder_call	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_call(PyObject *self, PyObject *args, PyObject *kwds)$/;"	f	file:
encoder_clear	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_clear(PyObject *self)$/;"	f	file:
encoder_dealloc	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_dealloc(PyObject *self)$/;"	f	file:
encoder_dict_iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_dict_iteritems(PyEncoderObject *s, PyObject *dct)$/;"	f	file:
encoder_encode_float	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_encode_float(PyEncoderObject *s, PyObject *obj)$/;"	f	file:
encoder_encode_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_encode_string(PyEncoderObject *s, PyObject *obj)$/;"	f	file:
encoder_init	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_init(PyObject *self, PyObject *args, PyObject *kwds)$/;"	f	file:
encoder_listencode_dict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_listencode_dict(PyEncoderObject *s, JSON_Accu *rval, PyObject *dct, Py_ssize_t indent_level)$/;"	f	file:
encoder_listencode_list	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_listencode_list(PyEncoderObject *s, JSON_Accu *rval, PyObject *seq, Py_ssize_t indent_level)$/;"	f	file:
encoder_listencode_obj	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_listencode_obj(PyEncoderObject *s, JSON_Accu *rval, PyObject *obj, Py_ssize_t indent_level)$/;"	f	file:
encoder_members	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^static PyMemberDef encoder_members[] = {$/;"	v	file:
encoder_new	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_new(PyTypeObject *type, PyObject *args, PyObject *kwds)$/;"	f	file:
encoder_stringify_key	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_stringify_key(PyEncoderObject *s, PyObject *key)$/;"	f	file:
encoder_traverse	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_traverse(PyObject *self, visitproc visit, void *arg)$/;"	f	file:
encoding	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *encoding;$/;"	m	struct:_PyEncoderObject	file:
encoding	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *encoding;$/;"	m	struct:_PyScannerObject	file:
end	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def end(self, arg=None):$/;"	m	class:_PseudoMatch
end	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def end(self, arg=None):$/;"	m	class:_PseudoMatch
end_id_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    def end_id_callback(self, match):$/;"	m	class:SMLLexer
end_id_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    def end_id_callback(self, match):$/;"	m	class:SMLLexer
end_row	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def end_row(self):$/;"	m	class:SettingTable
end_row	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def end_row(self):$/;"	m	class:_Table
end_row	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def end_row(self):$/;"	m	class:SettingTable
end_row	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def end_row(self):$/;"	m	class:_Table
end_section	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def end_section(self):$/;"	m	class:HelpFormatter
end_string_suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    end_string_suffix = (r'((?=$)|(?=[-\/:.,; \\n\\x00%s%s]))'$/;"	v	class:RstLexer
end_string_suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    end_string_suffix = (r'((?=$)|(?=[-\/:.,; \\n\\x00%s%s]))'$/;"	v	class:RstLexer
entityref	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    entityref = r'(?:&(?:lt|gt|amp|quot|apos|nbsp);)'$/;"	v	class:XQueryLexer
entityref	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    entityref = r'(?:&(?:lt|gt|amp|quot|apos|nbsp);)'$/;"	v	class:XQueryLexer
eos	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/scanner.py	/^    def eos(self):$/;"	m	class:Scanner
eos	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/scanner.py	/^    eos = property(eos, eos.__doc__)$/;"	v	class:Scanner
eos	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/scanner.py	/^    def eos(self):$/;"	m	class:Scanner
eos	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/scanner.py	/^    eos = property(eos, eos.__doc__)$/;"	v	class:Scanner
err	autoload/plug.vim	/^function! s:err(msg)$/;"	f
errmsg	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/scanner.py	/^def errmsg(msg, doc, pos, end=None):$/;"	f
errno	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^import errno$/;"	i
errno	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^import errno$/;"	i
error	plugged/unite.vim/autoload/vital/_unite/Vim/Message.vim	/^function! s:error(msg) abort$/;"	f
error	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def error(self, message):$/;"	m	class:ArgumentParser
esc	autoload/plug.vim	/^function! s:esc(path)$/;"	f
esc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/console.py	/^esc = "\\x1b["$/;"	v
esc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/console.py	/^esc = "\\x1b["$/;"	v
escape	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! s:escape(str) abort$/;"	f
escape	plugged/emmet-vim/unittest.vim	/^function! s:escape(str)$/;"	f
escape	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal256.py	/^    def escape(self, attrs):$/;"	m	class:EscapeSequence
escape	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/regexopt.py	/^from re import escape$/;"	i
escape	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal256.py	/^    def escape(self, attrs):$/;"	m	class:EscapeSequence
escape	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/regexopt.py	/^from re import escape$/;"	i
escape_char_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    escape_char_re = r'(\\\\[abdefnrstv])'$/;"	v	class:ElixirLexer
escape_char_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    escape_char_re = r'(\\\\[abdefnrstv])'$/;"	v	class:ElixirLexer
escape_file_searching	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_html	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^def escape_html(text, table=_escape_html_table):$/;"	f
escape_html	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/svg.py	/^def escape_html(text):$/;"	f
escape_html	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^def escape_html(text, table=_escape_html_table):$/;"	f
escape_html	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/svg.py	/^def escape_html(text):$/;"	f
escape_pattern	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
escape_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    escape_re = r'(?:\\\\(?:[bdefnrstv\\'"\\\\\/]|[0-7][0-7]?[0-7]?|\\^[a-zA-Z]))'$/;"	v	class:ErlangLexer
escape_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    escape_re = r'(?:\\^\\([0-9a-f]{1,4}\\)*)'$/;"	v	class:RebolLexer
escape_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    escape_re = r'(?:\\^\\([0-9a-f]{1,4}\\)*)'$/;"	v	class:RedLexer
escape_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    escape_re = r'(?:\\\\(?:[bdefnrstv\\'"\\\\\/]|[0-7][0-7]?[0-7]?|\\^[a-zA-Z]))'$/;"	v	class:ErlangLexer
escape_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    escape_re = r'(?:\\^\\([0-9a-f]{1,4}\\)*)'$/;"	v	class:RebolLexer
escape_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    escape_re = r'(?:\\^\\([0-9a-f]{1,4}\\)*)'$/;"	v	class:RedLexer
escape_tex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^def escape_tex(text, commandprefix):$/;"	f
escape_tex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^def escape_tex(text, commandprefix):$/;"	f
escrtp	autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
etc	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^from .escprober import EscCharSetProber  # ISO-2122, etc.$/;"	i
eval_cmdline	plugged/unite.vim/autoload/unite/helper.vim	/^function! s:eval_cmdline(cmdline) abort "{{{$/;"	f
evaluate	plugged/delimitMate/test/expand_cr.vim	/^let evaluate = 0$/;"	v
evaluate	plugged/delimitMate/test/expand_space.vim	/^let evaluate = 0$/;"	v
event_start_time	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:event_start_time() abort$/;"	f
event_start_time_minwidth	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:event_start_time_minwidth() abort$/;"	f
events	plugged/vimproc.vim/autoload/fakepoll.h	/^    short events;                   \/* events of interest on fd *\/$/;"	m	struct:pollfd
examples_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/testing.py	/^    examples_keywords        = u'^(\\\\s*)(예|例子|例|サンプル|امثلة|דוגמאות|Сценарији|Примери|Приклади|Мисоллар|Значения|Örnekler|Voorbeelden|Variantai|Tapaukset|Scenarios|Scenariji|Scenarijai|Příklady|Példák|Príklady|Przykłady|Primjeri|Primeri|Piemēri|Pavyzdžiai|Paraugs|Juhtumid|Exemplos|Exemples|Exemplele|Exempel|Examples|Esempi|Enghreifftiau|Ekzemploj|Eksempler|Ejemplos|EXAMPLZ|Dữ liệu|Contoh|Cobber|Beispiele)(:)(.*)$'$/;"	v	class:GherkinLexer
examples_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/testing.py	/^    examples_keywords        = u'^(\\\\s*)(예|例子|例|サンプル|امثلة|דוגמאות|Сценарији|Примери|Приклади|Мисоллар|Значения|Örnekler|Voorbeelden|Variantai|Tapaukset|Scenarios|Scenariji|Scenarijai|Příklady|Példák|Príklady|Przykłady|Primjeri|Primeri|Piemēri|Pavyzdžiai|Paraugs|Juhtumid|Exemplos|Exemples|Exemplele|Exempel|Examples|Esempi|Enghreifftiau|Ekzemploj|Eksempler|Ejemplos|EXAMPLZ|Dữ liệu|Contoh|Cobber|Beispiele)(:)(.*)$'$/;"	v	class:GherkinLexer
exceptions	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^from . import exceptions$/;"	i
exec_	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    def exec_(code, globs=None, locs=None):$/;"	f
exec_	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    exec_ = getattr(builtins, "exec")$/;"	v
execute	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! s:execute(command) abort$/;"	f
execute	plugged/vim-wakatime/plugin/packages/wakatime/__init__.py	/^from .main import execute$/;"	i
execute	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^def execute(argv=None):$/;"	f
execute_command	plugged/unite.vim/autoload/unite/kinds/command.vim	/^function! s:execute_command(command) "{{{$/;"	f
execute_command	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:execute_command(command, candidate) "{{{$/;"	f
execution_confs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    execution_confs = set(('<<<', '>>>'))$/;"	v	class:CudaLexer
execution_confs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    execution_confs = set(('<<<', '>>>'))$/;"	v	class:CudaLexer
exists	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:exists(name, ...) "{{{$/;"	f
exists	plugged/unite.vim/autoload/vital/_unite.vim	/^function! s:exists(name) abort$/;"	f
exit	plugged/syntastic/syntax_checkers/python/codec.py	/^from sys import argv, exit$/;"	i
exit	plugged/syntastic/syntax_checkers/python/compile.py	/^from sys import argv, exit$/;"	i
exit	plugged/unite.vim/autoload/unite/exrename.vim	/^function! s:exit() "{{{$/;"	f
exit	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:exit() "{{{$/;"	f
exit	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def exit(self, status=0, message=None):$/;"	m	class:ArgumentParser
exp_part	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    exp_part = r'[eE](\\+|-)?\\d+'$/;"	v	class:JsonLexer
exp_part	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    exp_part = r'[eE](\\+|-)?\\d+'$/;"	v	class:JsonLexer
expand	plugged/lightline.vim/autoload/lightline.vim	/^function! s:expand(x) abort$/;"	f
expand_modules	plugged/unite.vim/autoload/vital/_unite.vim	/^function! s:expand_modules(entry, all) abort$/;"	f
expect	plugged/delimitMate/test/expand_cr.vim	/^    let expect = 0$/;"	v
expect	plugged/delimitMate/test/expand_cr.vim	/^    let expect = 1$/;"	v
expect	plugged/delimitMate/test/expand_cr.vim	/^let expect = 0$/;"	v
expect	plugged/delimitMate/test/expand_space.vim	/^    let expect = 0$/;"	v
expect	plugged/delimitMate/test/expand_space.vim	/^    let expect = 1$/;"	v
expect	plugged/delimitMate/test/expand_space.vim	/^let expect = 0$/;"	v
expected	plugged/delimitMate/test/expand_cr.vim	/^    let expected = []$/;"	v
expected	plugged/delimitMate/test/expand_space.vim	/^    let expected = []$/;"	v
extend	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^func! s:extend()$/;"	f
extend	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def extend(self, *args, **kwargs):$/;"	m	class:HTTPHeaderDict
extend_actions	plugged/unite.vim/autoload/unite/action.vim	/^function! s:extend_actions(self_func, action_table1, action_table2, ...) "{{{$/;"	f
external	plugged/unite.vim/autoload/unite/kinds/file.vim	/^function! s:external(command, dest_dir, src_files) "{{{$/;"	f
external_cd	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:external_cd(candidate) "{{{$/;"	f
extract_completion	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_scilab_builtins.py	/^    def extract_completion(var_type):$/;"	f
extract_completion	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_scilab_builtins.py	/^    def extract_completion(var_type):$/;"	f
extract_cookies_to_jar	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .cookies import extract_cookies_to_jar$/;"	i
extract_cookies_to_jar	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^from .cookies import extract_cookies_to_jar$/;"	i
extract_cookies_to_jar	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^def extract_cookies_to_jar(jar, request, response):$/;"	f
extract_from_urllib3	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^def extract_from_urllib3():$/;"	f
extract_name	autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
extractafter	plugged/vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
extractbefore	plugged/vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
fallback_opts	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^fallback_opts() ->$/;"	f
fast_encode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    int fast_encode;$/;"	m	struct:_PyEncoderObject	file:
fd	plugged/vimproc.vim/autoload/fakepoll.h	/^    int fd;                         \/* file desc to poll *\/$/;"	m	struct:pollfd
fd_set_nonblock	plugged/vimproc.vim/autoload/proc.c	/^fd_set_nonblock(int fd)$/;"	f	file:
fdopen	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:fdopen(fd, f_close, f_read, f_write) "{{{$/;"	f
fdopen_pgroup	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:fdopen_pgroup(proc, fd, f_close, f_read, f_write) "{{{$/;"	f
fdopen_pipes	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:fdopen_pipes(fd, f_close, f_read, f_write) "{{{$/;"	f
fdopen_pty	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:fdopen_pty(fd_stdin, fd_stdout, f_close, f_read, f_write) "{{{$/;"	f
feature_element_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/testing.py	/^    feature_element_keywords = u'^(\\\\s*)(시나리오 개요|시나리오|배경|背景|場景大綱|場景|场景大纲|场景|劇本大綱|劇本|テンプレ|シナリオテンプレート|シナリオテンプレ|シナリオアウトライン|シナリオ|سيناريو مخطط|سيناريو|الخلفية|תרחיש|תבנית תרחיש|רקע|Тарих|Сценарій|Сценарио|Сценарий структураси|Сценарий|Структура сценарію|Структура сценарија|Структура сценария|Скица|Рамка на сценарий|Пример|Предыстория|Предистория|Позадина|Передумова|Основа|Концепт|Контекст|Założenia|Wharrimean is|Tình huống|The thing of it is|Tausta|Taust|Tapausaihio|Tapaus|Szenariogrundriss|Szenario|Szablon scenariusza|Stsenaarium|Struktura scenarija|Skica|Skenario konsep|Skenario|Situācija|Senaryo taslağı|Senaryo|Scénář|Scénario|Schema dello scenario|Scenārijs pēc parauga|Scenārijs|Scenár|Scenaro|Scenariusz|Scenariul de şablon|Scenariul de sablon|Scenariu|Scenario Outline|Scenario Amlinellol|Scenario|Scenarijus|Scenarijaus šablonas|Scenarij|Scenarie|Rerefons|Raamstsenaarium|Primer|Pozadí|Pozadina|Pozadie|Plan du scénario|Plan du Scénario|Osnova scénáře|Osnova|Náčrt Scénáře|Náčrt Scenáru|Mate|MISHUN SRSLY|MISHUN|Kịch bản|Konturo de la scenaro|Kontext|Konteksts|Kontekstas|Kontekst|Koncept|Khung tình huống|Khung kịch bản|Háttér|Grundlage|Geçmiş|Forgatókönyv vázlat|Forgatókönyv|Fono|Esquema do Cenário|Esquema do Cenario|Esquema del escenario|Esquema de l\\'escenari|Escenario|Escenari|Dis is what went down|Dasar|Contexto|Contexte|Contesto|Condiţii|Conditii|Cenário|Cenario|Cefndir|Bối cảnh|Blokes|Bakgrunn|Bakgrund|Baggrund|Background|B4|Antecedents|Antecedentes|All y\\'all|Achtergrond|Abstrakt Scenario|Abstract Scenario)(:)(.*)$'$/;"	v	class:GherkinLexer
feature_element_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/testing.py	/^    feature_element_keywords = u'^(\\\\s*)(시나리오 개요|시나리오|배경|背景|場景大綱|場景|场景大纲|场景|劇本大綱|劇本|テンプレ|シナリオテンプレート|シナリオテンプレ|シナリオアウトライン|シナリオ|سيناريو مخطط|سيناريو|الخلفية|תרחיש|תבנית תרחיש|רקע|Тарих|Сценарій|Сценарио|Сценарий структураси|Сценарий|Структура сценарію|Структура сценарија|Структура сценария|Скица|Рамка на сценарий|Пример|Предыстория|Предистория|Позадина|Передумова|Основа|Концепт|Контекст|Założenia|Wharrimean is|Tình huống|The thing of it is|Tausta|Taust|Tapausaihio|Tapaus|Szenariogrundriss|Szenario|Szablon scenariusza|Stsenaarium|Struktura scenarija|Skica|Skenario konsep|Skenario|Situācija|Senaryo taslağı|Senaryo|Scénář|Scénario|Schema dello scenario|Scenārijs pēc parauga|Scenārijs|Scenár|Scenaro|Scenariusz|Scenariul de şablon|Scenariul de sablon|Scenariu|Scenario Outline|Scenario Amlinellol|Scenario|Scenarijus|Scenarijaus šablonas|Scenarij|Scenarie|Rerefons|Raamstsenaarium|Primer|Pozadí|Pozadina|Pozadie|Plan du scénario|Plan du Scénario|Osnova scénáře|Osnova|Náčrt Scénáře|Náčrt Scenáru|Mate|MISHUN SRSLY|MISHUN|Kịch bản|Konturo de la scenaro|Kontext|Konteksts|Kontekstas|Kontekst|Koncept|Khung tình huống|Khung kịch bản|Háttér|Grundlage|Geçmiş|Forgatókönyv vázlat|Forgatókönyv|Fono|Esquema do Cenário|Esquema do Cenario|Esquema del escenario|Esquema de l\\'escenari|Escenario|Escenari|Dis is what went down|Dasar|Contexto|Contexte|Contesto|Condiţii|Conditii|Cenário|Cenario|Cefndir|Bối cảnh|Blokes|Bakgrunn|Bakgrund|Baggrund|Background|B4|Antecedents|Antecedentes|All y\\'all|Achtergrond|Abstrakt Scenario|Abstract Scenario)(:)(.*)$'$/;"	v	class:GherkinLexer
feature_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/testing.py	/^    feature_keywords         = u'^(기능|機能|功能|フィーチャ|خاصية|תכונה|Функціонал|Функционалност|Функционал|Фича|Особина|Могућност|Özellik|Właściwość|Tính năng|Trajto|Savybė|Požiadavka|Požadavek|Osobina|Ominaisuus|Omadus|OH HAI|Mogućnost|Mogucnost|Jellemző|Fīča|Funzionalità|Funktionalität|Funkcionalnost|Funkcionalitāte|Funcționalitate|Functionaliteit|Functionalitate|Funcionalitat|Funcionalidade|Fonctionnalité|Fitur|Feature|Egenskap|Egenskab|Crikey|Característica|Arwedd)(:)(.*)$'$/;"	v	class:GherkinLexer
feature_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/testing.py	/^    feature_keywords         = u'^(기능|機能|功能|フィーチャ|خاصية|תכונה|Функціонал|Функционалност|Функционал|Фича|Особина|Могућност|Özellik|Właściwość|Tính năng|Trajto|Savybė|Požiadavka|Požadavek|Osobina|Ominaisuus|Omadus|OH HAI|Mogućnost|Mogucnost|Jellemző|Fīča|Funzionalità|Funktionalität|Funkcionalnost|Funkcionalitāte|Funcționalitate|Functionaliteit|Functionalitate|Funcionalitat|Funcionalidade|Fonctionnalité|Fitur|Feature|Egenskap|Egenskab|Crikey|Característica|Arwedd)(:)(.*)$'$/;"	v	class:GherkinLexer
feed	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^    def feed(self, aBuf, aCharLen):$/;"	m	class:CharDistributionAnalysis
feed	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetgroupprober.py	/^    def feed(self, aBuf):$/;"	m	class:CharSetGroupProber
feed	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetprober.py	/^    def feed(self, aBuf):$/;"	m	class:CharSetProber
feed	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escprober.py	/^    def feed(self, aBuf):$/;"	m	class:EscCharSetProber
feed	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/eucjpprober.py	/^    def feed(self, aBuf):$/;"	m	class:EUCJPProber
feed	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^    def feed(self, aBuf):$/;"	m	class:HebrewProber
feed	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^    def feed(self, aBuf, aLen):$/;"	m	class:JapaneseContextAnalysis
feed	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^    def feed(self, aBuf):$/;"	m	class:Latin1Prober
feed	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcharsetprober.py	/^    def feed(self, aBuf):$/;"	m	class:MultiByteCharSetProber
feed	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcharsetprober.py	/^    def feed(self, aBuf):$/;"	m	class:SingleByteCharSetProber
feed	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sjisprober.py	/^    def feed(self, aBuf):$/;"	m	class:SJISProber
feed	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^    def feed(self, aBuf):$/;"	m	class:UniversalDetector
feed	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/utf8prober.py	/^    def feed(self, aBuf):$/;"	m	class:UTF8Prober
file_bookmark_action.func	plugged/unite.vim/plugin/unite/bookmark.vim	/^function! s:file_bookmark_action.func(candidate) "{{{$/;"	f
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatter.py	/^    filenames = []$/;"	v	class:Formatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/bbcode.py	/^    filenames = []$/;"	v	class:BBCodeFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    filenames = ['*.html', '*.htm']$/;"	v	class:HtmlFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    filenames = ['*.bmp']$/;"	v	class:BmpImageFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    filenames = ['*.gif']$/;"	v	class:GifImageFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    filenames = ['*.jpg']$/;"	v	class:JpgImageFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    filenames = ['*.png']$/;"	v	class:ImageFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^    filenames = ['*.tex']$/;"	v	class:LatexFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^    filenames = ['*.raw']$/;"	v	class:RawTokenFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^    filenames = ['*.txt']$/;"	v	class:NullFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/rtf.py	/^    filenames = ['*.rtf']$/;"	v	class:RtfFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/svg.py	/^    filenames = ['*.svg']$/;"	v	class:SvgFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^    filenames = []$/;"	v	class:TerminalFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal256.py	/^    filenames = []$/;"	v	class:Terminal256Formatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    filenames = []$/;"	v	class:Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    filenames = ['*.as']$/;"	v	class:ActionScript3Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    filenames = ['*.as']$/;"	v	class:ActionScriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    filenames = ['*.mxml']$/;"	v	class:MxmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    filenames = ['*.g', '*.gd', '*.gi', '*.gap']$/;"	v	class:GAPLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    filenames = ['*.mu']$/;"	v	class:MuPADLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    filenames = ['*.nb', '*.cdf', '*.nbp', '*.ma']$/;"	v	class:MathematicaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^    filenames = ['*.at']$/;"	v	class:AmbientTalkLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/apl.py	/^    filenames = ['*.apl']$/;"	v	class:APLLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    filenames = ['*.asm', '*.ASM']$/;"	v	class:NasmLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    filenames = ['*.c-objdump']$/;"	v	class:CObjdumpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    filenames = ['*.cpp-objdump', '*.c++-objdump', '*.cxx-objdump']$/;"	v	class:CppObjdumpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    filenames = ['*.d-objdump']$/;"	v	class:DObjdumpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    filenames = ['*.ll']$/;"	v	class:LlvmLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    filenames = ['*.objdump']$/;"	v	class:ObjdumpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    filenames = ['*.objdump-intel']$/;"	v	class:NasmObjdumpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    filenames = ['*.s', '*.S']$/;"	v	class:GasLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    filenames = ['*.s']$/;"	v	class:Ca65Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^    filenames = ['*.ahk', '*.ahkl']$/;"	v	class:AutohotkeyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^    filenames = ['*.au3']$/;"	v	class:AutoItLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    filenames = ['*.BAS', '*.bas']$/;"	v	class:QBasicLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    filenames = ['*.bas']$/;"	v	class:CbmBasicV2Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    filenames = ['*.bb', '*.decls']$/;"	v	class:BlitzBasicLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    filenames = ['*.bmx']$/;"	v	class:BlitzMaxLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    filenames = ['*.monkey']$/;"	v	class:MonkeyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    filenames = ['*.abap']$/;"	v	class:ABAPLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    filenames = ['*.cbl', '*.CBL']$/;"	v	class:CobolFreeformatLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    filenames = ['*.cob', '*.COB', '*.cpy', '*.CPY']$/;"	v	class:CobolLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    filenames = ['*.gdc']$/;"	v	class:GoodDataCLLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    filenames = ['*.maql']$/;"	v	class:MaqlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    filenames = ['*.p', '*.cls']$/;"	v	class:OpenEdgeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    filenames = ['*.c', '*.h', '*.idc']$/;"	v	class:CLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    filenames = ['*.cpp', '*.hpp', '*.c++', '*.h++',$/;"	v	class:CppLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    filenames = ['*.clay']$/;"	v	class:ClayLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    filenames = ['*.cu', '*.cuh']$/;"	v	class:CudaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    filenames = ['*.ec', '*.eh']$/;"	v	class:ECLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    filenames = ['*.mq4', '*.mq5', '*.mqh']$/;"	v	class:MqlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    filenames = ['*.nc']$/;"	v	class:NesCLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    filenames = ['*.pike', '*.pmod']$/;"	v	class:PikeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    filenames = ['*.swg', '*.i']$/;"	v	class:SwigLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    filenames = ['*.vala', '*.vapi']$/;"	v	class:ValaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/chapel.py	/^    filenames = ['*.chpl']$/;"	v	class:ChapelLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    filenames = ['*.cf']$/;"	v	class:Cfengine3Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    filenames = ['*.ini', '*.cfg']$/;"	v	class:IniLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    filenames = ['*.properties']$/;"	v	class:PropertiesLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    filenames = ['*.reg']$/;"	v	class:RegeditLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    filenames = ['.htaccess', 'apache.conf', 'apache2.conf']$/;"	v	class:ApacheConfLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    filenames = ['Dockerfile', '*.docker']$/;"	v	class:DockerLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    filenames = ['Kconfig', '*Config.in*', 'external.in*',$/;"	v	class:KconfigLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    filenames = ['squid.conf']$/;"	v	class:SquidConfLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    filenames = []$/;"	v	class:LighttpdConfLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    filenames = []$/;"	v	class:NginxConfLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^    filenames = ["*.pypylog"]$/;"	v	class:PyPyLogLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^    filenames = []$/;"	v	class:VCTreeStatusLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    filenames = ['*.css']$/;"	v	class:CssLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    filenames = ['*.sass']$/;"	v	class:SassLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    filenames = ['*.scss']$/;"	v	class:ScssLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    filenames = ['*.croc']$/;"	v	class:CrocLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    filenames = ['*.d', '*.di']$/;"	v	class:DLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    filenames = []  # don't lex .md as MiniD, reserve for Markdown$/;"	v	class:MiniDLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dalvik.py	/^    filenames = ['*.smali']$/;"	v	class:SmaliLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    filenames = ['*.json']$/;"	v	class:JsonLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    filenames = ['*.jsonld']$/;"	v	class:JsonLdLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    filenames = ['*.yaml', '*.yml']$/;"	v	class:YamlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^    filenames = ['*.diff', '*.patch']$/;"	v	class:DiffLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^    filenames = ['*.dpatch', '*.darcspatch']$/;"	v	class:DarcsPatchLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    filenames = ['*.aspx', '*.asax', '*.ascx', '*.ashx', '*.asmx', '*.axd']$/;"	v	class:CSharpAspxLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    filenames = ['*.aspx', '*.asax', '*.ascx', '*.ashx', '*.asmx', '*.axd']$/;"	v	class:VbNetAspxLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    filenames = ['*.boo']$/;"	v	class:BooLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    filenames = ['*.cs']$/;"	v	class:CSharpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    filenames = ['*.fs', '*.fsi']$/;"	v	class:FSharpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    filenames = ['*.n']$/;"	v	class:NemerleLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    filenames = ['*.vb', '*.bas']$/;"	v	class:VbNetLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    filenames = []$/;"	v	class:GenericAspxLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    filenames = ['*.als']$/;"	v	class:AlloyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    filenames = ['*.bro']$/;"	v	class:BroLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    filenames = ['*.msc']$/;"	v	class:MscgenLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    filenames = ['*.pan']$/;"	v	class:PanLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    filenames = ['*.pp']$/;"	v	class:PuppetLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    filenames = ['*.proto']$/;"	v	class:ProtoBufLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    filenames = ['*.rpf']$/;"	v	class:VGLLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    filenames = ['*.rsl']$/;"	v	class:RslLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    filenames = ['*.dylan', '*.dyl', '*.intr']$/;"	v	class:DylanLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    filenames = ['*.dylan-console']$/;"	v	class:DylanConsoleLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    filenames = ['*.lid', '*.hdp']$/;"	v	class:DylanLidLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^    filenames = ['*.ecl']$/;"	v	class:ECLLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/eiffel.py	/^    filenames = ['*.e']$/;"	v	class:EiffelLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    filenames = ['*.erl', '*.hrl', '*.es', '*.escript']$/;"	v	class:ErlangLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    filenames = ['*.erl-sh']$/;"	v	class:ErlangShellLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    filenames = ['*.ex', '*.exs']$/;"	v	class:ElixirLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    filenames = ['*.befunge']$/;"	v	class:BefungeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    filenames = ['*.bf', '*.b']$/;"	v	class:BrainfuckLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    filenames = ['*.cw']$/;"	v	class:RedcodeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^    filenames = ['*.factor']$/;"	v	class:FactorLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    filenames = ['*.fan']$/;"	v	class:FantomLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    filenames = ['*.flx', '*.flxh']$/;"	v	class:FelixLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^    filenames = ['*.f', '*.f90', '*.F', '*.F90']$/;"	v	class:FortranLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/foxpro.py	/^    filenames = ['*.PRG', '*.prg']$/;"	v	class:FoxProLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^    filenames = ['*.go']$/;"	v	class:GoLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^    filenames = ['*.cyp', '*.cypher']$/;"	v	class:CypherLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    filenames = ['*.asy']$/;"	v	class:AsymptoteLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    filenames = ['*.plot', '*.plt']$/;"	v	class:GnuplotLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    filenames = ['*.pov', '*.inc']$/;"	v	class:PovrayLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    filenames = ['*.ps', '*.eps']$/;"	v	class:PostScriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    filenames = ['*.vert', '*.frag', '*.geo']$/;"	v	class:GLShaderLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    filenames = ['*.agda']$/;"	v	class:AgdaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    filenames = ['*.cry']$/;"	v	class:CryptolLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    filenames = ['*.hs']$/;"	v	class:HaskellLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    filenames = ['*.idr']$/;"	v	class:IdrisLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    filenames = ['*.kk', '*.kki']$/;"	v	class:KokaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    filenames = ['*.lagda']$/;"	v	class:LiterateAgdaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    filenames = ['*.lcry']$/;"	v	class:LiterateCryptolLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    filenames = ['*.lhs']$/;"	v	class:LiterateHaskellLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    filenames = ['*.lidr']$/;"	v	class:LiterateIdrisLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    filenames = ['*.hx', '*.hxsl']$/;"	v	class:HaxeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    filenames = ['*.hxml']$/;"	v	class:HxmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    filenames = ['*.sv', '*.svh']$/;"	v	class:SystemVerilogLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    filenames = ['*.v']$/;"	v	class:VerilogLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    filenames = ['*.vhdl', '*.vhd']$/;"	v	class:VhdlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    filenames = ['*.dtd']$/;"	v	class:DtdLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    filenames = ['*.haml']$/;"	v	class:HamlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    filenames = ['*.html', '*.htm', '*.xhtml', '*.xslt']$/;"	v	class:HtmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    filenames = ['*.jade']$/;"	v	class:JadeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    filenames = ['*.scaml']$/;"	v	class:ScamlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    filenames = ['*.xml', '*.xsl', '*.rss', '*.xslt', '*.xsd',$/;"	v	class:XmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    filenames = ['*.xsl', '*.xslt', '*.xpl']  # xpl is XProc$/;"	v	class:XsltLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/idl.py	/^    filenames = ['*.pro']$/;"	v	class:IDLLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^    filenames = ['*.ipf']$/;"	v	class:IgorLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^    filenames = ['*.b']$/;"	v	class:LimboLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    filenames = ['*.nsi', '*.nsh']$/;"	v	class:NSISLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    filenames = ['*.spec']$/;"	v	class:RPMSpecLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    filenames = ['control']$/;"	v	class:DebianControlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    filenames = ['sources.list']$/;"	v	class:SourcesListLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    filenames = ['*.i6t']$/;"	v	class:Inform6TemplateLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    filenames = ['*.inf']$/;"	v	class:Inform6Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    filenames = ['*.ni', '*.i7x']$/;"	v	class:Inform7Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    filenames = ['*.t']$/;"	v	class:Tads3Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/iolang.py	/^    filenames = ['*.io']$/;"	v	class:IoLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    filenames = ['*.coffee']$/;"	v	class:CoffeeScriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    filenames = ['*.dart']$/;"	v	class:DartLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    filenames = ['*.j']$/;"	v	class:ObjectiveJLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    filenames = ['*.js', ]$/;"	v	class:JavascriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    filenames = ['*.kal']$/;"	v	class:KalLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    filenames = ['*.lasso', '*.lasso[89]']$/;"	v	class:LassoLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    filenames = ['*.ls']$/;"	v	class:LiveScriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    filenames = ['*.mask']$/;"	v	class:MaskLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    filenames = ['*.ts']$/;"	v	class:TypeScriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^    filenames = ['*.jl']$/;"	v	class:JuliaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    filenames = ['*.aj']$/;"	v	class:AspectJLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    filenames = ['*.ceylon']$/;"	v	class:CeylonLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    filenames = ['*.clj']$/;"	v	class:ClojureLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    filenames = ['*.cljs']$/;"	v	class:ClojureScriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    filenames = ['*.golo']$/;"	v	class:GoloLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    filenames = ['*.groovy']$/;"	v	class:GroovyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    filenames = ['*.gs', '*.gsx', '*.gsp', '*.vark']$/;"	v	class:GosuLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    filenames = ['*.gst']$/;"	v	class:GosuTemplateLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    filenames = ['*.ik']$/;"	v	class:IokeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    filenames = ['*.j']$/;"	v	class:JasminLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    filenames = ['*.java']$/;"	v	class:JavaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    filenames = ['*.kt']$/;"	v	class:KotlinLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    filenames = ['*.pig']$/;"	v	class:PigLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    filenames = ['*.scala']$/;"	v	class:ScalaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    filenames = ['*.xtend']$/;"	v	class:XtendLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    filenames = ['*.cl', '*.lisp', '*.el']  # use for Elisp too$/;"	v	class:CommonLispLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    filenames = ['*.hy']$/;"	v	class:HyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    filenames = ['*.lsp', '*.nl']$/;"	v	class:NewLispLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    filenames = ['*.rkt', '*.rktd', '*.rktl']$/;"	v	class:RacketLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    filenames = ['*.scm', '*.ss']$/;"	v	class:SchemeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    filenames = ['*.cmake', 'CMakeLists.txt']$/;"	v	class:CMakeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    filenames = ['*.mak', '*.mk', 'Makefile', 'makefile', 'Makefile.*', 'GNUmakefile']$/;"	v	class:MakefileLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    filenames = []$/;"	v	class:BaseMakefileLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    filenames = ['*.[1234567]', '*.man']$/;"	v	class:GroffLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    filenames = ['*.css.in']$/;"	v	class:MozPreprocCssLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    filenames = ['*.js.in']$/;"	v	class:MozPreprocJavascriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    filenames = ['*.rst', '*.rest']$/;"	v	class:RstLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    filenames = ['*.tex', '*.aux', '*.toc']$/;"	v	class:TexLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    filenames = ['*.xul.in']$/;"	v	class:MozPreprocXulLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    filenames = []$/;"	v	class:MoinWikiLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    filenames = []$/;"	v	class:MozPreprocHashLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    filenames = []$/;"	v	class:MozPreprocPercentLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    filenames = ['*.m']$/;"	v	class:MatlabLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    filenames = ['*.m']$/;"	v	class:OctaveLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    filenames = ['*.sci', '*.sce', '*.tst']$/;"	v	class:ScilabLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    filenames = ['*.ml', '*.mli', '*.mll', '*.mly']$/;"	v	class:OcamlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    filenames = ['*.opa']$/;"	v	class:OpaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    filenames = ['*.sml', '*.sig', '*.fun']$/;"	v	class:SMLLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    filenames = ['*.bug']$/;"	v	class:BugsLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    filenames = ['*.jag', '*.bug']$/;"	v	class:JagsLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    filenames = ['*.mo']$/;"	v	class:ModelicaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    filenames = ['*.stan']$/;"	v	class:StanLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    filenames = ['*.nim', '*.nimrod']$/;"	v	class:NimrodLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nit.py	/^    filenames = ['*.nit']$/;"	v	class:NitLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^    filenames = ['*.nix']$/;"	v	class:NixLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    filenames = ['*.m', '*.h']$/;"	v	class:ObjectiveCLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    filenames = ['*.mm', '*.hh']$/;"	v	class:ObjectiveCppLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    filenames = ['*.swift']$/;"	v	class:SwiftLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    filenames = ['*.x', '*.xi', '*.xm', '*.xmi']$/;"	v	class:LogosLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ooc.py	/^    filenames = ['*.ooc']$/;"	v	class:OocLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrActionScriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrCSharpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrCppLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrJavaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrObjectiveCLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrPerlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrPythonLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrRubyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    filenames = ['*.ebnf']$/;"	v	class:EbnfLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelCLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelCppLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelDLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelEmbeddedLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelJavaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelObjectiveCLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelRubyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    filenames = ['*.treetop', '*.tt']$/;"	v	class:TreetopLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    filenames = []$/;"	v	class:AntlrLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    filenames = []$/;"	v	class:RagelLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    filenames = ['*.adb', '*.ads', '*.ada']$/;"	v	class:AdaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    filenames = ['*.def', '*.mod']$/;"	v	class:Modula2Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    filenames = ['*.pas']$/;"	v	class:DelphiLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    filenames = ['*.p', '*.pwn', '*.inc']$/;"	v	class:PawnLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    filenames = ['*.sp']$/;"	v	class:SourcePawnLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    filenames = ['*.pl', '*.pm', '*.nqp', '*.p6', '*.6pl', '*.p6l', '*.pl6',$/;"	v	class:Perl6Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    filenames = ['*.pl', '*.pm', '*.t']$/;"	v	class:PerlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    filenames = ['*.php', '*.php[345]', '*.inc']$/;"	v	class:PhpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    filenames = ['*.zep']$/;"	v	class:ZephirLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    filenames = ['*.ecl', '*.prolog', '*.pro', '*.pl']$/;"	v	class:PrologLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    filenames = ['*.lgt', '*.logtalk']$/;"	v	class:LogtalkLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    filenames = ['*.dg']$/;"	v	class:DgLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    filenames = ['*.py', '*.pyw', '*.sc', 'SConstruct', 'SConscript', '*.tac', '*.sage']$/;"	v	class:PythonLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    filenames = ['*.py3tb']$/;"	v	class:Python3TracebackLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    filenames = ['*.pytb']$/;"	v	class:PythonTracebackLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    filenames = ['*.pyx', '*.pxd', '*.pxi']$/;"	v	class:CythonLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    filenames = []  # Nothing until Python 3 gets widespread$/;"	v	class:Python3Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    filenames = []$/;"	v	class:NumPyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    filenames = ['*.Rd']$/;"	v	class:RdLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    filenames = ['*.Rout']$/;"	v	class:RConsoleLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    filenames = ['*.S', '*.R', '.Rhistory', '.Rprofile', '.Renviron']$/;"	v	class:SLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^    filenames = ['*.rq', '*.sparql']$/;"	v	class:SparqlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    filenames = ['*.r', '*.r3', '*.reb']$/;"	v	class:RebolLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    filenames = ['*.red', '*.reds']$/;"	v	class:RedLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^    filenames = ['*.txt']$/;"	v	class:ResourceLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    filenames = ['*.txt', '*.robot']$/;"	v	class:RobotFrameworkLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    filenames = ['*.fy', '*.fancypack']$/;"	v	class:FancyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    filenames = ['*.rb', '*.rbw', 'Rakefile', '*.rake', '*.gemspec',$/;"	v	class:RubyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^    filenames = ['*.rs']$/;"	v	class:RustLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    filenames = ["*.moon"]$/;"	v	class:MoonScriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    filenames = ['*.applescript']$/;"	v	class:AppleScriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    filenames = ['*.chai']$/;"	v	class:ChaiscriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    filenames = ['*.hy', '*.hyb']$/;"	v	class:HybrisLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    filenames = ['*.lsl']$/;"	v	class:LSLLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    filenames = ['*.lua', '*.wlua']$/;"	v	class:LuaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    filenames = ['*.moo']$/;"	v	class:MOOCodeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    filenames = ['*.rexx', '*.rex', '*.rx', '*.arexx']$/;"	v	class:RexxLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    filenames = ['*.bat', '*.cmd']$/;"	v	class:BatchLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    filenames = ['*.ps1','*.psm1']$/;"	v	class:PowerShellLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    filenames = ['*.sh', '*.ksh', '*.bash', '*.ebuild', '*.eclass',$/;"	v	class:BashLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    filenames = ['*.sh-session']$/;"	v	class:BashSessionLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    filenames = ['*.shell-session']$/;"	v	class:ShellSessionLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    filenames = ['*.tcsh', '*.csh']$/;"	v	class:TcshLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^    filenames = ['*.ns2']$/;"	v	class:NewspeakLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^    filenames = ['*.st']$/;"	v	class:SmalltalkLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/snobol.py	/^    filenames = ['*.snobol']$/;"	v	class:SnobolLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^    filenames = ['*.txt']$/;"	v	class:TextLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^    filenames = []$/;"	v	class:RawTokenLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    filenames = ['*.rql']$/;"	v	class:RqlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    filenames = ['*.sql']$/;"	v	class:SqlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    filenames = ['*.sqlite3-console']$/;"	v	class:SqliteConsoleLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^    filenames = ['*.tcl', '*.rvt']$/;"	v	class:TclLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.cfc']$/;"	v	class:ColdfusionCFCLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.cfm', '*.cfml']$/;"	v	class:ColdfusionHtmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.evoque']$/;"	v	class:EvoqueLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.handlebars', '*.hbs']$/;"	v	class:HandlebarsHtmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.html']$/;"	v	class:EvoqueHtmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.jsp']$/;"	v	class:JspLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.kid']$/;"	v	class:GenshiLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.liquid']$/;"	v	class:LiquidLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.m', '*.mhtml', '*.mc', '*.mi', 'autohandler', 'dhandler']$/;"	v	class:MasonLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.mao']$/;"	v	class:MakoLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.myt', 'autodelegate']$/;"	v	class:MyghtyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.phtml']$/;"	v	class:HtmlPhpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.rhtml']$/;"	v	class:RhtmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.sls']$/;"	v	class:YamlJinjaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.ssp']$/;"	v	class:SspLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.tea']$/;"	v	class:TeaTemplateLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.tmpl', '*.spt']$/;"	v	class:CheetahLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.tpl']$/;"	v	class:SmartyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.twig']$/;"	v	class:TwigHtmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.vm', '*.fhtml']$/;"	v	class:VelocityLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = ['*.xml']$/;"	v	class:EvoqueXmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = []$/;"	v	class:ColdfusionLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    filenames = []$/;"	v	class:ColdfusionMarkupLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/testing.py	/^    filenames = ['*.feature']$/;"	v	class:GherkinLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    filenames = ['*.awk']$/;"	v	class:AwkLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    filenames = ['*.vim', '.vimrc', '.exrc', '.gvimrc',$/;"	v	class:VimLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    filenames = ['*.pot', '*.po']$/;"	v	class:GettextLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    filenames = ['*.weechatlog']$/;"	v	class:IrcLogsLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    filenames = ['todo.txt', '*.todotxt']$/;"	v	class:TodotxtLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    filenames = ['*.lean']$/;"	v	class:LeanLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    filenames = ['*.thy']$/;"	v	class:IsabelleLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    filenames = ['*.v']$/;"	v	class:CoqLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^    filenames = ['*.u']$/;"	v	class:UrbiscriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    filenames = ['*.cirru']$/;"	v	class:CirruLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    filenames = ['*.duel', '*.jbst']$/;"	v	class:DuelLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    filenames = ['*.qml']$/;"	v	class:QmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    filenames = ['*.slim']$/;"	v	class:SlimLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    filenames = ['*.xqy', '*.xquery', '*.xq', '*.xql', '*.xqm']$/;"	v	class:XQueryLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatter.py	/^    filenames = []$/;"	v	class:Formatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/bbcode.py	/^    filenames = []$/;"	v	class:BBCodeFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    filenames = ['*.html', '*.htm']$/;"	v	class:HtmlFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    filenames = ['*.bmp']$/;"	v	class:BmpImageFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    filenames = ['*.gif']$/;"	v	class:GifImageFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    filenames = ['*.jpg']$/;"	v	class:JpgImageFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    filenames = ['*.png']$/;"	v	class:ImageFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^    filenames = ['*.tex']$/;"	v	class:LatexFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^    filenames = ['*.raw']$/;"	v	class:RawTokenFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^    filenames = ['*.txt']$/;"	v	class:NullFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/rtf.py	/^    filenames = ['*.rtf']$/;"	v	class:RtfFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/svg.py	/^    filenames = ['*.svg']$/;"	v	class:SvgFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^    filenames = []$/;"	v	class:TerminalFormatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal256.py	/^    filenames = []$/;"	v	class:Terminal256Formatter
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    filenames = []$/;"	v	class:Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    filenames = ['*.as']$/;"	v	class:ActionScript3Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    filenames = ['*.as']$/;"	v	class:ActionScriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    filenames = ['*.mxml']$/;"	v	class:MxmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    filenames = ['*.g', '*.gd', '*.gi', '*.gap']$/;"	v	class:GAPLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    filenames = ['*.mu']$/;"	v	class:MuPADLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    filenames = ['*.nb', '*.cdf', '*.nbp', '*.ma']$/;"	v	class:MathematicaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^    filenames = ['*.at']$/;"	v	class:AmbientTalkLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/apl.py	/^    filenames = ['*.apl']$/;"	v	class:APLLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    filenames = ['*.asm', '*.ASM']$/;"	v	class:NasmLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    filenames = ['*.c-objdump']$/;"	v	class:CObjdumpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    filenames = ['*.cpp-objdump', '*.c++-objdump', '*.cxx-objdump']$/;"	v	class:CppObjdumpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    filenames = ['*.d-objdump']$/;"	v	class:DObjdumpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    filenames = ['*.ll']$/;"	v	class:LlvmLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    filenames = ['*.objdump']$/;"	v	class:ObjdumpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    filenames = ['*.objdump-intel']$/;"	v	class:NasmObjdumpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    filenames = ['*.s', '*.S']$/;"	v	class:GasLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    filenames = ['*.s']$/;"	v	class:Ca65Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^    filenames = ['*.ahk', '*.ahkl']$/;"	v	class:AutohotkeyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^    filenames = ['*.au3']$/;"	v	class:AutoItLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    filenames = ['*.BAS', '*.bas']$/;"	v	class:QBasicLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    filenames = ['*.bas']$/;"	v	class:CbmBasicV2Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    filenames = ['*.bb', '*.decls']$/;"	v	class:BlitzBasicLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    filenames = ['*.bmx']$/;"	v	class:BlitzMaxLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    filenames = ['*.monkey']$/;"	v	class:MonkeyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    filenames = ['*.abap']$/;"	v	class:ABAPLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    filenames = ['*.cbl', '*.CBL']$/;"	v	class:CobolFreeformatLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    filenames = ['*.cob', '*.COB', '*.cpy', '*.CPY']$/;"	v	class:CobolLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    filenames = ['*.gdc']$/;"	v	class:GoodDataCLLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    filenames = ['*.maql']$/;"	v	class:MaqlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    filenames = ['*.p', '*.cls']$/;"	v	class:OpenEdgeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    filenames = ['*.c', '*.h', '*.idc']$/;"	v	class:CLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    filenames = ['*.cpp', '*.hpp', '*.c++', '*.h++',$/;"	v	class:CppLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    filenames = ['*.clay']$/;"	v	class:ClayLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    filenames = ['*.cu', '*.cuh']$/;"	v	class:CudaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    filenames = ['*.ec', '*.eh']$/;"	v	class:ECLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    filenames = ['*.mq4', '*.mq5', '*.mqh']$/;"	v	class:MqlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    filenames = ['*.nc']$/;"	v	class:NesCLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    filenames = ['*.pike', '*.pmod']$/;"	v	class:PikeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    filenames = ['*.swg', '*.i']$/;"	v	class:SwigLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    filenames = ['*.vala', '*.vapi']$/;"	v	class:ValaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/chapel.py	/^    filenames = ['*.chpl']$/;"	v	class:ChapelLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    filenames = ['*.cf']$/;"	v	class:Cfengine3Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    filenames = ['*.ini', '*.cfg']$/;"	v	class:IniLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    filenames = ['*.properties']$/;"	v	class:PropertiesLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    filenames = ['*.reg']$/;"	v	class:RegeditLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    filenames = ['.htaccess', 'apache.conf', 'apache2.conf']$/;"	v	class:ApacheConfLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    filenames = ['Dockerfile', '*.docker']$/;"	v	class:DockerLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    filenames = ['Kconfig', '*Config.in*', 'external.in*',$/;"	v	class:KconfigLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    filenames = ['squid.conf']$/;"	v	class:SquidConfLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    filenames = []$/;"	v	class:LighttpdConfLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    filenames = []$/;"	v	class:NginxConfLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^    filenames = ["*.pypylog"]$/;"	v	class:PyPyLogLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^    filenames = []$/;"	v	class:VCTreeStatusLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    filenames = ['*.css']$/;"	v	class:CssLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    filenames = ['*.sass']$/;"	v	class:SassLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    filenames = ['*.scss']$/;"	v	class:ScssLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    filenames = ['*.croc']$/;"	v	class:CrocLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    filenames = ['*.d', '*.di']$/;"	v	class:DLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    filenames = []  # don't lex .md as MiniD, reserve for Markdown$/;"	v	class:MiniDLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dalvik.py	/^    filenames = ['*.smali']$/;"	v	class:SmaliLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    filenames = ['*.json']$/;"	v	class:JsonLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    filenames = ['*.jsonld']$/;"	v	class:JsonLdLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    filenames = ['*.yaml', '*.yml']$/;"	v	class:YamlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^    filenames = ['*.diff', '*.patch']$/;"	v	class:DiffLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^    filenames = ['*.dpatch', '*.darcspatch']$/;"	v	class:DarcsPatchLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    filenames = ['*.aspx', '*.asax', '*.ascx', '*.ashx', '*.asmx', '*.axd']$/;"	v	class:CSharpAspxLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    filenames = ['*.aspx', '*.asax', '*.ascx', '*.ashx', '*.asmx', '*.axd']$/;"	v	class:VbNetAspxLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    filenames = ['*.boo']$/;"	v	class:BooLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    filenames = ['*.cs']$/;"	v	class:CSharpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    filenames = ['*.fs', '*.fsi']$/;"	v	class:FSharpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    filenames = ['*.n']$/;"	v	class:NemerleLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    filenames = ['*.vb', '*.bas']$/;"	v	class:VbNetLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    filenames = []$/;"	v	class:GenericAspxLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    filenames = ['*.als']$/;"	v	class:AlloyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    filenames = ['*.bro']$/;"	v	class:BroLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    filenames = ['*.msc']$/;"	v	class:MscgenLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    filenames = ['*.pan']$/;"	v	class:PanLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    filenames = ['*.pp']$/;"	v	class:PuppetLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    filenames = ['*.proto']$/;"	v	class:ProtoBufLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    filenames = ['*.rpf']$/;"	v	class:VGLLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    filenames = ['*.rsl']$/;"	v	class:RslLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    filenames = ['*.dylan', '*.dyl', '*.intr']$/;"	v	class:DylanLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    filenames = ['*.dylan-console']$/;"	v	class:DylanConsoleLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    filenames = ['*.lid', '*.hdp']$/;"	v	class:DylanLidLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^    filenames = ['*.ecl']$/;"	v	class:ECLLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/eiffel.py	/^    filenames = ['*.e']$/;"	v	class:EiffelLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    filenames = ['*.erl', '*.hrl', '*.es', '*.escript']$/;"	v	class:ErlangLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    filenames = ['*.erl-sh']$/;"	v	class:ErlangShellLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    filenames = ['*.ex', '*.exs']$/;"	v	class:ElixirLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    filenames = ['*.befunge']$/;"	v	class:BefungeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    filenames = ['*.bf', '*.b']$/;"	v	class:BrainfuckLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    filenames = ['*.cw']$/;"	v	class:RedcodeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^    filenames = ['*.factor']$/;"	v	class:FactorLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    filenames = ['*.fan']$/;"	v	class:FantomLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    filenames = ['*.flx', '*.flxh']$/;"	v	class:FelixLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^    filenames = ['*.f', '*.f90', '*.F', '*.F90']$/;"	v	class:FortranLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/foxpro.py	/^    filenames = ['*.PRG', '*.prg']$/;"	v	class:FoxProLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^    filenames = ['*.go']$/;"	v	class:GoLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^    filenames = ['*.cyp', '*.cypher']$/;"	v	class:CypherLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    filenames = ['*.asy']$/;"	v	class:AsymptoteLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    filenames = ['*.plot', '*.plt']$/;"	v	class:GnuplotLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    filenames = ['*.pov', '*.inc']$/;"	v	class:PovrayLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    filenames = ['*.ps', '*.eps']$/;"	v	class:PostScriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    filenames = ['*.vert', '*.frag', '*.geo']$/;"	v	class:GLShaderLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    filenames = ['*.agda']$/;"	v	class:AgdaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    filenames = ['*.cry']$/;"	v	class:CryptolLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    filenames = ['*.hs']$/;"	v	class:HaskellLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    filenames = ['*.idr']$/;"	v	class:IdrisLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    filenames = ['*.kk', '*.kki']$/;"	v	class:KokaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    filenames = ['*.lagda']$/;"	v	class:LiterateAgdaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    filenames = ['*.lcry']$/;"	v	class:LiterateCryptolLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    filenames = ['*.lhs']$/;"	v	class:LiterateHaskellLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    filenames = ['*.lidr']$/;"	v	class:LiterateIdrisLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    filenames = ['*.hx', '*.hxsl']$/;"	v	class:HaxeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    filenames = ['*.hxml']$/;"	v	class:HxmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    filenames = ['*.sv', '*.svh']$/;"	v	class:SystemVerilogLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    filenames = ['*.v']$/;"	v	class:VerilogLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    filenames = ['*.vhdl', '*.vhd']$/;"	v	class:VhdlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    filenames = ['*.dtd']$/;"	v	class:DtdLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    filenames = ['*.haml']$/;"	v	class:HamlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    filenames = ['*.html', '*.htm', '*.xhtml', '*.xslt']$/;"	v	class:HtmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    filenames = ['*.jade']$/;"	v	class:JadeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    filenames = ['*.scaml']$/;"	v	class:ScamlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    filenames = ['*.xml', '*.xsl', '*.rss', '*.xslt', '*.xsd',$/;"	v	class:XmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    filenames = ['*.xsl', '*.xslt', '*.xpl']  # xpl is XProc$/;"	v	class:XsltLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/idl.py	/^    filenames = ['*.pro']$/;"	v	class:IDLLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^    filenames = ['*.ipf']$/;"	v	class:IgorLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^    filenames = ['*.b']$/;"	v	class:LimboLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    filenames = ['*.nsi', '*.nsh']$/;"	v	class:NSISLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    filenames = ['*.spec']$/;"	v	class:RPMSpecLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    filenames = ['control']$/;"	v	class:DebianControlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    filenames = ['sources.list']$/;"	v	class:SourcesListLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    filenames = ['*.i6t']$/;"	v	class:Inform6TemplateLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    filenames = ['*.inf']$/;"	v	class:Inform6Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    filenames = ['*.ni', '*.i7x']$/;"	v	class:Inform7Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    filenames = ['*.t']$/;"	v	class:Tads3Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/iolang.py	/^    filenames = ['*.io']$/;"	v	class:IoLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    filenames = ['*.coffee']$/;"	v	class:CoffeeScriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    filenames = ['*.dart']$/;"	v	class:DartLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    filenames = ['*.j']$/;"	v	class:ObjectiveJLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    filenames = ['*.js', ]$/;"	v	class:JavascriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    filenames = ['*.kal']$/;"	v	class:KalLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    filenames = ['*.lasso', '*.lasso[89]']$/;"	v	class:LassoLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    filenames = ['*.ls']$/;"	v	class:LiveScriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    filenames = ['*.mask']$/;"	v	class:MaskLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    filenames = ['*.ts']$/;"	v	class:TypeScriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^    filenames = ['*.jl']$/;"	v	class:JuliaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    filenames = ['*.aj']$/;"	v	class:AspectJLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    filenames = ['*.ceylon']$/;"	v	class:CeylonLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    filenames = ['*.clj']$/;"	v	class:ClojureLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    filenames = ['*.cljs']$/;"	v	class:ClojureScriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    filenames = ['*.golo']$/;"	v	class:GoloLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    filenames = ['*.groovy']$/;"	v	class:GroovyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    filenames = ['*.gs', '*.gsx', '*.gsp', '*.vark']$/;"	v	class:GosuLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    filenames = ['*.gst']$/;"	v	class:GosuTemplateLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    filenames = ['*.ik']$/;"	v	class:IokeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    filenames = ['*.j']$/;"	v	class:JasminLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    filenames = ['*.java']$/;"	v	class:JavaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    filenames = ['*.kt']$/;"	v	class:KotlinLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    filenames = ['*.pig']$/;"	v	class:PigLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    filenames = ['*.scala']$/;"	v	class:ScalaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    filenames = ['*.xtend']$/;"	v	class:XtendLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    filenames = ['*.cl', '*.lisp', '*.el']  # use for Elisp too$/;"	v	class:CommonLispLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    filenames = ['*.hy']$/;"	v	class:HyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    filenames = ['*.lsp', '*.nl']$/;"	v	class:NewLispLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    filenames = ['*.rkt', '*.rktd', '*.rktl']$/;"	v	class:RacketLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    filenames = ['*.scm', '*.ss']$/;"	v	class:SchemeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    filenames = ['*.cmake', 'CMakeLists.txt']$/;"	v	class:CMakeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    filenames = ['*.mak', '*.mk', 'Makefile', 'makefile', 'Makefile.*', 'GNUmakefile']$/;"	v	class:MakefileLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    filenames = []$/;"	v	class:BaseMakefileLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    filenames = ['*.[1234567]', '*.man']$/;"	v	class:GroffLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    filenames = ['*.css.in']$/;"	v	class:MozPreprocCssLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    filenames = ['*.js.in']$/;"	v	class:MozPreprocJavascriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    filenames = ['*.rst', '*.rest']$/;"	v	class:RstLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    filenames = ['*.tex', '*.aux', '*.toc']$/;"	v	class:TexLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    filenames = ['*.xul.in']$/;"	v	class:MozPreprocXulLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    filenames = []$/;"	v	class:MoinWikiLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    filenames = []$/;"	v	class:MozPreprocHashLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    filenames = []$/;"	v	class:MozPreprocPercentLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    filenames = ['*.m']$/;"	v	class:MatlabLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    filenames = ['*.m']$/;"	v	class:OctaveLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    filenames = ['*.sci', '*.sce', '*.tst']$/;"	v	class:ScilabLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    filenames = ['*.ml', '*.mli', '*.mll', '*.mly']$/;"	v	class:OcamlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    filenames = ['*.opa']$/;"	v	class:OpaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    filenames = ['*.sml', '*.sig', '*.fun']$/;"	v	class:SMLLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    filenames = ['*.bug']$/;"	v	class:BugsLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    filenames = ['*.jag', '*.bug']$/;"	v	class:JagsLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    filenames = ['*.mo']$/;"	v	class:ModelicaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    filenames = ['*.stan']$/;"	v	class:StanLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    filenames = ['*.nim', '*.nimrod']$/;"	v	class:NimrodLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nit.py	/^    filenames = ['*.nit']$/;"	v	class:NitLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^    filenames = ['*.nix']$/;"	v	class:NixLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    filenames = ['*.m', '*.h']$/;"	v	class:ObjectiveCLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    filenames = ['*.mm', '*.hh']$/;"	v	class:ObjectiveCppLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    filenames = ['*.swift']$/;"	v	class:SwiftLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    filenames = ['*.x', '*.xi', '*.xm', '*.xmi']$/;"	v	class:LogosLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ooc.py	/^    filenames = ['*.ooc']$/;"	v	class:OocLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrActionScriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrCSharpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrCppLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrJavaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrObjectiveCLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrPerlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrPythonLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrRubyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    filenames = ['*.ebnf']$/;"	v	class:EbnfLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelCLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelCppLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelDLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelEmbeddedLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelJavaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelObjectiveCLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelRubyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    filenames = ['*.treetop', '*.tt']$/;"	v	class:TreetopLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    filenames = []$/;"	v	class:AntlrLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    filenames = []$/;"	v	class:RagelLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    filenames = ['*.adb', '*.ads', '*.ada']$/;"	v	class:AdaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    filenames = ['*.def', '*.mod']$/;"	v	class:Modula2Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    filenames = ['*.pas']$/;"	v	class:DelphiLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    filenames = ['*.p', '*.pwn', '*.inc']$/;"	v	class:PawnLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    filenames = ['*.sp']$/;"	v	class:SourcePawnLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    filenames = ['*.pl', '*.pm', '*.nqp', '*.p6', '*.6pl', '*.p6l', '*.pl6',$/;"	v	class:Perl6Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    filenames = ['*.pl', '*.pm', '*.t']$/;"	v	class:PerlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    filenames = ['*.php', '*.php[345]', '*.inc']$/;"	v	class:PhpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    filenames = ['*.zep']$/;"	v	class:ZephirLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    filenames = ['*.ecl', '*.prolog', '*.pro', '*.pl']$/;"	v	class:PrologLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    filenames = ['*.lgt', '*.logtalk']$/;"	v	class:LogtalkLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    filenames = ['*.dg']$/;"	v	class:DgLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    filenames = ['*.py', '*.pyw', '*.sc', 'SConstruct', 'SConscript', '*.tac', '*.sage']$/;"	v	class:PythonLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    filenames = ['*.py3tb']$/;"	v	class:Python3TracebackLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    filenames = ['*.pytb']$/;"	v	class:PythonTracebackLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    filenames = ['*.pyx', '*.pxd', '*.pxi']$/;"	v	class:CythonLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    filenames = []  # Nothing until Python 3 gets widespread$/;"	v	class:Python3Lexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    filenames = []$/;"	v	class:NumPyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    filenames = ['*.Rd']$/;"	v	class:RdLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    filenames = ['*.Rout']$/;"	v	class:RConsoleLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    filenames = ['*.S', '*.R', '.Rhistory', '.Rprofile', '.Renviron']$/;"	v	class:SLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^    filenames = ['*.rq', '*.sparql']$/;"	v	class:SparqlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    filenames = ['*.r', '*.r3', '*.reb']$/;"	v	class:RebolLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    filenames = ['*.red', '*.reds']$/;"	v	class:RedLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^    filenames = ['*.txt']$/;"	v	class:ResourceLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    filenames = ['*.txt', '*.robot']$/;"	v	class:RobotFrameworkLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    filenames = ['*.fy', '*.fancypack']$/;"	v	class:FancyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    filenames = ['*.rb', '*.rbw', 'Rakefile', '*.rake', '*.gemspec',$/;"	v	class:RubyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^    filenames = ['*.rs']$/;"	v	class:RustLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    filenames = ["*.moon"]$/;"	v	class:MoonScriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    filenames = ['*.applescript']$/;"	v	class:AppleScriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    filenames = ['*.chai']$/;"	v	class:ChaiscriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    filenames = ['*.hy', '*.hyb']$/;"	v	class:HybrisLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    filenames = ['*.lsl']$/;"	v	class:LSLLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    filenames = ['*.lua', '*.wlua']$/;"	v	class:LuaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    filenames = ['*.moo']$/;"	v	class:MOOCodeLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    filenames = ['*.rexx', '*.rex', '*.rx', '*.arexx']$/;"	v	class:RexxLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    filenames = ['*.bat', '*.cmd']$/;"	v	class:BatchLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    filenames = ['*.ps1','*.psm1']$/;"	v	class:PowerShellLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    filenames = ['*.sh', '*.ksh', '*.bash', '*.ebuild', '*.eclass',$/;"	v	class:BashLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    filenames = ['*.sh-session']$/;"	v	class:BashSessionLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    filenames = ['*.shell-session']$/;"	v	class:ShellSessionLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    filenames = ['*.tcsh', '*.csh']$/;"	v	class:TcshLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^    filenames = ['*.ns2']$/;"	v	class:NewspeakLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^    filenames = ['*.st']$/;"	v	class:SmalltalkLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/snobol.py	/^    filenames = ['*.snobol']$/;"	v	class:SnobolLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^    filenames = ['*.txt']$/;"	v	class:TextLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^    filenames = []$/;"	v	class:RawTokenLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    filenames = ['*.rql']$/;"	v	class:RqlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    filenames = ['*.sql']$/;"	v	class:SqlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    filenames = ['*.sqlite3-console']$/;"	v	class:SqliteConsoleLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^    filenames = ['*.tcl', '*.rvt']$/;"	v	class:TclLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.cfc']$/;"	v	class:ColdfusionCFCLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.cfm', '*.cfml']$/;"	v	class:ColdfusionHtmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.evoque']$/;"	v	class:EvoqueLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.handlebars', '*.hbs']$/;"	v	class:HandlebarsHtmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.html']$/;"	v	class:EvoqueHtmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.jsp']$/;"	v	class:JspLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.kid']$/;"	v	class:GenshiLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.liquid']$/;"	v	class:LiquidLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.m', '*.mhtml', '*.mc', '*.mi', 'autohandler', 'dhandler']$/;"	v	class:MasonLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.mao']$/;"	v	class:MakoLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.myt', 'autodelegate']$/;"	v	class:MyghtyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.phtml']$/;"	v	class:HtmlPhpLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.rhtml']$/;"	v	class:RhtmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.sls']$/;"	v	class:YamlJinjaLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.ssp']$/;"	v	class:SspLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.tea']$/;"	v	class:TeaTemplateLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.tmpl', '*.spt']$/;"	v	class:CheetahLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.tpl']$/;"	v	class:SmartyLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.twig']$/;"	v	class:TwigHtmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.vm', '*.fhtml']$/;"	v	class:VelocityLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = ['*.xml']$/;"	v	class:EvoqueXmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = []$/;"	v	class:ColdfusionLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    filenames = []$/;"	v	class:ColdfusionMarkupLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/testing.py	/^    filenames = ['*.feature']$/;"	v	class:GherkinLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    filenames = ['*.awk']$/;"	v	class:AwkLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    filenames = ['*.vim', '.vimrc', '.exrc', '.gvimrc',$/;"	v	class:VimLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    filenames = ['*.pot', '*.po']$/;"	v	class:GettextLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    filenames = ['*.weechatlog']$/;"	v	class:IrcLogsLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    filenames = ['todo.txt', '*.todotxt']$/;"	v	class:TodotxtLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    filenames = ['*.lean']$/;"	v	class:LeanLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    filenames = ['*.thy']$/;"	v	class:IsabelleLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    filenames = ['*.v']$/;"	v	class:CoqLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^    filenames = ['*.u']$/;"	v	class:UrbiscriptLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    filenames = ['*.cirru']$/;"	v	class:CirruLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    filenames = ['*.duel', '*.jbst']$/;"	v	class:DuelLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    filenames = ['*.qml']$/;"	v	class:QmlLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    filenames = ['*.slim']$/;"	v	class:SlimLexer
filenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    filenames = ['*.xqy', '*.xquery', '*.xq', '*.xql', '*.xqm']$/;"	v	class:XQueryLexer
fileno	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^    def fileno(self):$/;"	m	class:WrappedSocket
fileno	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def fileno(self):$/;"	m	class:HTTPResponse
filereadable	plugged/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:filereadable(cache_dir, filename) abort$/;"	f
filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filter.py	/^    def filter(self, lexer, stream):$/;"	m	class:Filter
filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filter.py	/^    def filter(self, lexer, stream):$/;"	m	class:FunctionFilter
filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:CodeTagFilter
filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:GobbleFilter
filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:KeywordCaseFilter
filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:NameHighlightFilter
filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:RaiseOnErrorTokenFilter
filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:TokenMergeFilter
filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:VisibleWhitespaceFilter
filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filter.py	/^    def filter(self, lexer, stream):$/;"	m	class:Filter
filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filter.py	/^    def filter(self, lexer, stream):$/;"	m	class:FunctionFilter
filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:CodeTagFilter
filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:GobbleFilter
filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:KeywordCaseFilter
filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:NameHighlightFilter
filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:RaiseOnErrorTokenFilter
filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:TokenMergeFilter
filter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:VisibleWhitespaceFilter
filter_alias_action	plugged/unite.vim/autoload/unite/action.vim	/^function! s:filter_alias_action(action_table, alias_table, from) "{{{$/;"	f
filter_high_bit_only	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetprober.py	/^    def filter_high_bit_only(self, aBuf):$/;"	m	class:CharSetProber
filter_self_func	plugged/unite.vim/autoload/unite/action.vim	/^function! s:filter_self_func(action_table, self_func) "{{{$/;"	f
filter_with_english_letters	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetprober.py	/^    def filter_with_english_letters(self, aBuf):$/;"	m	class:CharSetProber
filter_without_english_letters	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetprober.py	/^    def filter_without_english_letters(self, aBuf):$/;"	m	class:CharSetProber
final_argument_whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^    final_argument_whitespace = False$/;"	v	class:PygmentsDoc
final_argument_whitespace	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^    final_argument_whitespace = False$/;"	v	class:PygmentsDoc
finalize	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:finalize()$/;"	f
find	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
findAndRevealPath	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath()$/;"	f
find_filter_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^from pygments.filters import get_all_filters, find_filter_class$/;"	i
find_filter_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^def find_filter_class(filtername):$/;"	f
find_filter_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^from pygments.filters import get_all_filters, find_filter_class$/;"	i
find_filter_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^def find_filter_class(filtername):$/;"	f
find_formatter_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    TerminalFormatter  # pylint:disable-msg=E0611$/;"	i
find_formatter_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^def find_formatter_class(alias):$/;"	f
find_formatter_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    TerminalFormatter  # pylint:disable-msg=E0611$/;"	i
find_formatter_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^def find_formatter_class(alias):$/;"	f
find_index	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_indices	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_last_index	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_lexer_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    get_lexer_for_filename, find_lexer_class, TextLexer$/;"	i
find_lexer_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^def find_lexer_class(name):$/;"	f
find_lexer_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    get_lexer_for_filename, find_lexer_class, TextLexer$/;"	i
find_lexer_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^def find_lexer_class(name):$/;"	f
find_lexer_class_for_filename	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^def find_lexer_class_for_filename(_fn, code=None):$/;"	f
find_lexer_class_for_filename	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^def find_lexer_class_for_filename(_fn, code=None):$/;"	f
find_name	autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
find_plugin_filters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^from pygments.plugin import find_plugin_filters$/;"	i
find_plugin_filters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/plugin.py	/^def find_plugin_filters():$/;"	f
find_plugin_filters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^from pygments.plugin import find_plugin_filters$/;"	i
find_plugin_filters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/plugin.py	/^def find_plugin_filters():$/;"	f
find_plugin_formatters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^from pygments.plugin import find_plugin_formatters$/;"	i
find_plugin_formatters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/plugin.py	/^def find_plugin_formatters():$/;"	f
find_plugin_formatters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^from pygments.plugin import find_plugin_formatters$/;"	i
find_plugin_formatters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/plugin.py	/^def find_plugin_formatters():$/;"	f
find_plugin_lexers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^from pygments.plugin import find_plugin_lexers$/;"	i
find_plugin_lexers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/plugin.py	/^def find_plugin_lexers():$/;"	f
find_plugin_lexers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^from pygments.plugin import find_plugin_lexers$/;"	i
find_plugin_lexers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/plugin.py	/^def find_plugin_lexers():$/;"	f
find_plugin_styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/plugin.py	/^def find_plugin_styles():$/;"	f
find_plugin_styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/__init__.py	/^from pygments.plugin import find_plugin_styles$/;"	i
find_plugin_styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/plugin.py	/^def find_plugin_styles():$/;"	f
find_plugin_styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/__init__.py	/^from pygments.plugin import find_plugin_styles$/;"	i
finish	autoload/plug.vim	/^function! s:finish(pull)$/;"	f
first_day	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:first_day() abort$/;"	f
first_sunday_on_or_after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^def first_sunday_on_or_after(dt):$/;"	f
first_sunday_on_or_after	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^def first_sunday_on_or_after(dt):$/;"	f
fixindent	plugged/vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    flags = re.MULTILINE$/;"	v	class:RegexLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:ActionScript3Lexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    flags = re.DOTALL$/;"	v	class:ActionScriptLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:MxmlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:AmbientTalkLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:NasmLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    flags = re.IGNORECASE$/;"	v	class:Ca65Lexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    flags = re.IGNORECASE$/;"	v	class:CbmBasicV2Lexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:BlitzBasicLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:BlitzMaxLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    flags = re.MULTILINE$/;"	v	class:MonkeyLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:ABAPLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:CobolFreeformatLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:CobolLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    flags = re.IGNORECASE$/;"	v	class:GoodDataCLLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    flags = re.IGNORECASE$/;"	v	class:MaqlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    flags = 0$/;"	v	class:KconfigLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:DockerLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    flags = re.IGNORECASE$/;"	v	class:SquidConfLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:ApacheConfLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    flags = re.IGNORECASE | re.DOTALL$/;"	v	class:ScssLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:SassLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    flags = re.DOTALL$/;"	v	class:JsonLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    flags = re.DOTALL$/;"	v	class:GenericAspxLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:CSharpLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:NemerleLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:VbNetLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    flags = re.MULTILINE | re.DOTALL | re.IGNORECASE$/;"	v	class:VGLLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:AlloyLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:RslLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    flags = re.IGNORECASE$/;"	v	class:DylanLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    flags = re.IGNORECASE$/;"	v	class:DylanLidLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:ECLLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:FactorLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:FortranLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/foxpro.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:FoxProLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:GoLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:CypherLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:HaskellLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:HaxeLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:VhdlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    flags = re.IGNORECASE | re.DOTALL$/;"	v	class:HtmlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    flags = re.IGNORECASE$/;"	v	class:HamlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    flags = re.IGNORECASE$/;"	v	class:JadeLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    flags = re.IGNORECASE$/;"	v	class:ScamlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:XmlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:DtdLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/idl.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:IDLLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:IgorLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    flags = re.IGNORECASE$/;"	v	class:NSISLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:Tads3Lexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:Inform6Lexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:Inform7Lexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:ObjectiveJLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:TypeScriptLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    flags = re.DOTALL | re.UNICODE | re.MULTILINE$/;"	v	class:JavascriptLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    flags = re.DOTALL$/;"	v	class:CoffeeScriptLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    flags = re.DOTALL$/;"	v	class:KalLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    flags = re.DOTALL$/;"	v	class:LiveScriptLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    flags = re.IGNORECASE | re.DOTALL | re.MULTILINE$/;"	v	class:LassoLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:DartLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    flags = re.MULTILINE | re.IGNORECASE | re.DOTALL$/;"	v	class:MaskLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:JavaLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:KotlinLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:CeylonLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:GosuLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:GroovyLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:ScalaLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:TeaLangLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:XtendLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:PigLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    flags = re.IGNORECASE | re.MULTILINE | re.UNICODE$/;"	v	class:NewLispLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:CommonLispLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:MoinWikiLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    flags = re.MULTILINE$/;"	v	class:RstLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:ModelicaLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    flags = re.MULTILINE | re.IGNORECASE | re.UNICODE$/;"	v	class:NimrodLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:NixLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:Modula2Lexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:AdaLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:PerlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:Perl6Lexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:ZephirLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    flags = re.IGNORECASE | re.DOTALL | re.MULTILINE$/;"	v	class:PhpLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    flags = re.UNICODE | re.MULTILINE$/;"	v	class:PrologLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:Python3Lexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^    flags = re.IGNORECASE$/;"	v	class:SparqlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:RebolLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:RedLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:ResourceLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:RubyLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:ChaiscriptLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    flags = re.IGNORECASE$/;"	v	class:RexxLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:AppleScriptLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:HybrisLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    flags = re.MULTILINE$/;"	v	class:LSLLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    flags = re.DOTALL | re.IGNORECASE | re.MULTILINE$/;"	v	class:PowerShellLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:BatchLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    flags = re.IGNORECASE$/;"	v	class:MySqlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    flags = re.IGNORECASE$/;"	v	class:PlPgsqlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    flags = re.IGNORECASE$/;"	v	class:PostgresLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    flags = re.IGNORECASE$/;"	v	class:PsqlRegexLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    flags = re.IGNORECASE$/;"	v	class:RqlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    flags = re.IGNORECASE$/;"	v	class:SqlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    flags = re.DOTALL$/;"	v	class:EvoqueLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    flags = re.DOTALL$/;"	v	class:GenshiMarkupLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    flags = re.IGNORECASE$/;"	v	class:ColdfusionLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    flags = re.M | re.S$/;"	v	class:DjangoLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    flags = re.M | re.S$/;"	v	class:TwigLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:SmartyLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:VelocityLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    flags = re.MULTILINE$/;"	v	class:VimLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    flags = re.DOTALL$/;"	v	class:HttpLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    flags = re.VERBOSE | re.MULTILINE$/;"	v	class:IrcLogsLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:LeanLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^    flags = re.DOTALL$/;"	v	class:UrbiscriptLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    flags = re.DOTALL | re.MULTILINE | re.UNICODE$/;"	v	class:XQueryLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:QmlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    flags = re.DOTALL$/;"	v	class:DuelLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    flags = re.IGNORECASE$/;"	v	class:SlimLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    flags = re.MULTILINE$/;"	v	class:CirruLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    flags = re.MULTILINE$/;"	v	class:RegexLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:ActionScript3Lexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    flags = re.DOTALL$/;"	v	class:ActionScriptLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:MxmlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:AmbientTalkLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:NasmLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    flags = re.IGNORECASE$/;"	v	class:Ca65Lexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    flags = re.IGNORECASE$/;"	v	class:CbmBasicV2Lexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:BlitzBasicLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:BlitzMaxLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    flags = re.MULTILINE$/;"	v	class:MonkeyLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:ABAPLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:CobolFreeformatLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:CobolLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    flags = re.IGNORECASE$/;"	v	class:GoodDataCLLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    flags = re.IGNORECASE$/;"	v	class:MaqlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    flags = 0$/;"	v	class:KconfigLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:DockerLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    flags = re.IGNORECASE$/;"	v	class:SquidConfLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:ApacheConfLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    flags = re.IGNORECASE | re.DOTALL$/;"	v	class:ScssLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:SassLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    flags = re.DOTALL$/;"	v	class:JsonLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    flags = re.DOTALL$/;"	v	class:GenericAspxLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:CSharpLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:NemerleLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:VbNetLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    flags = re.MULTILINE | re.DOTALL | re.IGNORECASE$/;"	v	class:VGLLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:AlloyLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:RslLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    flags = re.IGNORECASE$/;"	v	class:DylanLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    flags = re.IGNORECASE$/;"	v	class:DylanLidLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:ECLLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:FactorLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:FortranLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/foxpro.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:FoxProLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:GoLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:CypherLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:HaskellLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:HaxeLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:VhdlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    flags = re.IGNORECASE | re.DOTALL$/;"	v	class:HtmlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    flags = re.IGNORECASE$/;"	v	class:HamlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    flags = re.IGNORECASE$/;"	v	class:JadeLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    flags = re.IGNORECASE$/;"	v	class:ScamlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:XmlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:DtdLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/idl.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:IDLLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:IgorLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    flags = re.IGNORECASE$/;"	v	class:NSISLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:Tads3Lexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:Inform6Lexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:Inform7Lexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:ObjectiveJLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:TypeScriptLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    flags = re.DOTALL | re.UNICODE | re.MULTILINE$/;"	v	class:JavascriptLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    flags = re.DOTALL$/;"	v	class:CoffeeScriptLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    flags = re.DOTALL$/;"	v	class:KalLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    flags = re.DOTALL$/;"	v	class:LiveScriptLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    flags = re.IGNORECASE | re.DOTALL | re.MULTILINE$/;"	v	class:LassoLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:DartLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    flags = re.MULTILINE | re.IGNORECASE | re.DOTALL$/;"	v	class:MaskLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:JavaLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:KotlinLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:CeylonLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:GosuLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:GroovyLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:ScalaLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:TeaLangLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:XtendLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:PigLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    flags = re.IGNORECASE | re.MULTILINE | re.UNICODE$/;"	v	class:NewLispLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:CommonLispLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:MoinWikiLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    flags = re.MULTILINE$/;"	v	class:RstLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:ModelicaLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    flags = re.MULTILINE | re.IGNORECASE | re.UNICODE$/;"	v	class:NimrodLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:NixLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:Modula2Lexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:AdaLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:PerlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:Perl6Lexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:ZephirLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    flags = re.IGNORECASE | re.DOTALL | re.MULTILINE$/;"	v	class:PhpLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    flags = re.UNICODE | re.MULTILINE$/;"	v	class:PrologLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:Python3Lexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^    flags = re.IGNORECASE$/;"	v	class:SparqlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:RebolLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:RedLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:ResourceLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:RubyLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:ChaiscriptLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    flags = re.IGNORECASE$/;"	v	class:RexxLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:AppleScriptLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:HybrisLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    flags = re.MULTILINE$/;"	v	class:LSLLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    flags = re.DOTALL | re.IGNORECASE | re.MULTILINE$/;"	v	class:PowerShellLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:BatchLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    flags = re.IGNORECASE$/;"	v	class:MySqlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    flags = re.IGNORECASE$/;"	v	class:PlPgsqlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    flags = re.IGNORECASE$/;"	v	class:PostgresLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    flags = re.IGNORECASE$/;"	v	class:PsqlRegexLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    flags = re.IGNORECASE$/;"	v	class:RqlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    flags = re.IGNORECASE$/;"	v	class:SqlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    flags = re.DOTALL$/;"	v	class:EvoqueLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    flags = re.DOTALL$/;"	v	class:GenshiMarkupLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    flags = re.IGNORECASE$/;"	v	class:ColdfusionLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    flags = re.M | re.S$/;"	v	class:DjangoLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    flags = re.M | re.S$/;"	v	class:TwigLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:SmartyLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:VelocityLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    flags = re.MULTILINE$/;"	v	class:VimLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    flags = re.DOTALL$/;"	v	class:HttpLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    flags = re.VERBOSE | re.MULTILINE$/;"	v	class:IrcLogsLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:LeanLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^    flags = re.DOTALL$/;"	v	class:UrbiscriptLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    flags = re.DOTALL | re.MULTILINE | re.UNICODE$/;"	v	class:XQueryLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:QmlLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    flags = re.DOTALL$/;"	v	class:DuelLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    flags = re.IGNORECASE$/;"	v	class:SlimLexer
flags	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    flags = re.MULTILINE$/;"	v	class:CirruLexer
flatten	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
floatn	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    floatn = decn + r'\\.e?' + decn$/;"	v	class:NasmLexer
floatn	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    floatn = decn + r'\\.e?' + decn$/;"	v	class:NasmLexer
floatstr	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^        def floatstr(o, allow_nan=self.allow_nan, ignore_nan=self.ignore_nan,$/;"	f	function:JSONEncoder.iterencode
flowControl	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^    flowControl = ($/;"	v	class:IgorLexer
flowControl	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^    flowControl = ($/;"	v	class:IgorLexer
flush	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^            def flush():$/;"	f	function:RawTokenFormatter.format
flush	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^            def flush():$/;"	f	function:RawTokenFormatter.format
flush	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def flush(self):$/;"	m	class:HTTPResponse
flush_accumulator	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^flush_accumulator(JSON_Accu *acc)$/;"	f	file:
fmt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^fmt = '%Y-%m-%d %H:%M:%S %Z%z'$/;"	v
fmt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^fmt = '%Y-%m-%d %H:%M:%S %Z%z'$/;"	v
fnameescape	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
fnmatch	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^import fnmatch$/;"	i
fnmatch	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^import fnmatch$/;"	i
fnmatch	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^import fnmatch$/;"	i
fnmatch	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^import fnmatch$/;"	i
foldl	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl1	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldr	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr1	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
foo	plugged/vim-ruby/spec/indent/blocks_spec.rb	/^      def foo$/;"	f
foo	plugged/vim-ruby/spec/indent/blocks_spec.rb	/^      def foo(job)$/;"	f
footer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/_mapping.py	/^    footer = content[content.find("if __name__ == '__main__':"):]$/;"	v
footer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_mapping.py	/^    footer = content[content.find("if __name__ == '__main__':"):]$/;"	v
footer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_scilab_builtins.py	/^    footer = content[content.find("if __name__ == '__main__':"):]$/;"	v
footer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^    footer = content[content.find("def combine("):]$/;"	v
footer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/_mapping.py	/^    footer = content[content.find("if __name__ == '__main__':"):]$/;"	v
footer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_mapping.py	/^    footer = content[content.find("if __name__ == '__main__':"):]$/;"	v
footer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_scilab_builtins.py	/^    footer = content[content.find("if __name__ == '__main__':"):]$/;"	v
footer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^    footer = content[content.find("def combine("):]$/;"	v
for_json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    int for_json;$/;"	m	struct:_PyEncoderObject	file:
for_json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^    def for_json(self):$/;"	m	class:DictForJson
for_json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^    def for_json(self):$/;"	m	class:ForJson
for_json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^    def for_json(self):$/;"	m	class:ForJsonList
for_json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^    def for_json(self):$/;"	m	class:ListForJson
for_json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^    def for_json(self):$/;"	m	class:NestedForJson
forkpty	plugged/vimproc.vim/autoload/ptytty.c	/^forkpty(int *amaster, char *name,$/;"	f
format	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^    def format(self, record, *args):$/;"	m	class:JsonFormatter
format	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^        def format(tuple_size):$/;"	f	function:HelpFormatter._metavar_formatter
format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/__init__.py	/^def format(tokens, formatter, outfile=None):$/;"	f
format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatter.py	/^    def format(self, tokensource, outfile):$/;"	m	class:Formatter
format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def format(self, tokensource, outfile):$/;"	m	class:ImageFormatter
format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^    def format(self, tokensource, outfile):$/;"	m	class:NullFormatter
format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^    def format(self, tokensource, outfile):$/;"	m	class:RawTokenFormatter
format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^    def format(self, tokensource, outfile):$/;"	m	class:TestcaseFormatter
format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^    def format(self, tokensource, outfile):$/;"	m	class:TerminalFormatter
format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal256.py	/^    def format(self, tokensource, outfile):$/;"	m	class:Terminal256Formatter
format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/__init__.py	/^def format(tokens, formatter, outfile=None):$/;"	f
format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatter.py	/^    def format(self, tokensource, outfile):$/;"	m	class:Formatter
format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def format(self, tokensource, outfile):$/;"	m	class:ImageFormatter
format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^    def format(self, tokensource, outfile):$/;"	m	class:NullFormatter
format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^    def format(self, tokensource, outfile):$/;"	m	class:RawTokenFormatter
format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^    def format(self, tokensource, outfile):$/;"	m	class:TestcaseFormatter
format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^    def format(self, tokensource, outfile):$/;"	m	class:TerminalFormatter
format	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal256.py	/^    def format(self, tokensource, outfile):$/;"	m	class:Terminal256Formatter
formatException	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^    def formatException(self, exc_info):$/;"	m	class:JsonFormatter
format_header_param	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/fields.py	/^def format_header_param(name, value):$/;"	f
format_help	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^        def format_help(self):$/;"	m	class:HelpFormatter._Section
format_help	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def format_help(self):$/;"	m	class:ArgumentParser
format_help	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def format_help(self):$/;"	m	class:HelpFormatter
format_lines	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_postgres_builtins.py	/^    from pygments.util import format_lines$/;"	i
format_lines	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_scilab_builtins.py	/^    from pygments.util import format_lines, duplicates_removed$/;"	i
format_lines	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_sourcemod_builtins.py	/^    from pygments.util import format_lines$/;"	i
format_lines	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^def format_lines(var_name, seq, raw=False, indent_level=0):$/;"	f
format_lines	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_postgres_builtins.py	/^    from pygments.util import format_lines$/;"	i
format_lines	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_scilab_builtins.py	/^    from pygments.util import format_lines, duplicates_removed$/;"	i
format_lines	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_sourcemod_builtins.py	/^    from pygments.util import format_lines$/;"	i
format_lines	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^def format_lines(var_name, seq, raw=False, indent_level=0):$/;"	f
format_message	autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
format_time	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! s:format_time(time) abort$/;"	f
format_time	plugged/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:format_time(time) "{{{$/;"	f
format_time_end	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! s:format_time_end(time) abort$/;"	f
format_unencoded	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/bbcode.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:BBCodeFormatter
format_unencoded	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:HtmlFormatter
format_unencoded	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:LatexFormatter
format_unencoded	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/rtf.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:RtfFormatter
format_unencoded	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/svg.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:SvgFormatter
format_unencoded	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:TerminalFormatter
format_unencoded	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal256.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:Terminal256Formatter
format_unencoded	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/bbcode.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:BBCodeFormatter
format_unencoded	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:HtmlFormatter
format_unencoded	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:LatexFormatter
format_unencoded	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/rtf.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:RtfFormatter
format_unencoded	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/svg.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:SvgFormatter
format_unencoded	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:TerminalFormatter
format_unencoded	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal256.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:Terminal256Formatter
format_usage	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def format_usage(self):$/;"	m	class:ArgumentParser
format_version	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def format_version(self):$/;"	m	class:ArgumentParser
formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/_mapping.py	/^                    formatter = getattr(module, formatter_name)$/;"	v
formatter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/_mapping.py	/^                    formatter = getattr(module, formatter_name)$/;"	v
found_formatters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/_mapping.py	/^    found_formatters = []$/;"	v
found_formatters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/_mapping.py	/^    found_formatters = []$/;"	v
found_lexers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_mapping.py	/^    found_lexers = []$/;"	v
found_lexers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_mapping.py	/^    found_lexers = []$/;"	v
frac_part	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    frac_part = r'\\.\\d+'$/;"	v	class:JsonLexer
frac_part	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    frac_part = r'\\.\\d+'$/;"	v	class:JsonLexer
frame	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:frame() abort$/;"	f
frame_default	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:frame_default() abort$/;"	f
frame_space	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:frame_space() abort$/;"	f
frame_unicode	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:frame_unicode() abort$/;"	f
frame_unicode_bold	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:frame_unicode_bold() abort$/;"	f
frame_unicode_double	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:frame_unicode_double() abort$/;"	f
frame_unicode_round	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:frame_unicode_round() abort$/;"	f
frameworkHeadersDir	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^        frameworkHeadersDir = FRAMEWORKS_PATH + framework + '\/Headers\/'$/;"	v
frameworkHeadersDir	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^        frameworkHeadersDir = FRAMEWORKS_PATH + framework + '\/Headers\/'$/;"	v
frameworks	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^    frameworks = os.listdir(FRAMEWORKS_PATH)$/;"	v
frameworks	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^    frameworks = os.listdir(FRAMEWORKS_PATH)$/;"	v
from	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^            and ('import numpy' in text or 'from numpy import' in text)$/;"	i
from	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^            and ('import numpy' in text or 'from numpy import' in text)$/;"	i
from_float	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/timeout.py	/^    def from_float(cls, timeout):$/;"	m	class:Timeout
from_httplib	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def from_httplib(cls, message): # Python 2$/;"	m	class:HTTPHeaderDict
from_httplib	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def from_httplib(ResponseCls, r, **response_kw):$/;"	m	class:HTTPResponse
from_int	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/retry.py	/^    def from_int(cls, retries, redirect=True, default=None):$/;"	m	class:Retry
from_key_val_list	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def from_key_val_list(value):$/;"	f
from_tuples	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/fields.py	/^    def from_tuples(cls, fieldname, value):$/;"	m	class:RequestField
fromhex	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    def fromhex(s):$/;"	f
fromhex	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^from .compat import fromhex, b, u, text_type, binary_type, PY3, unichr$/;"	i
fromkeys	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    def fromkeys(cls, iterable, value=None):$/;"	m	class:OrderedDict
fromkeys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def fromkeys(cls, iterable, value=None):$/;"	m	class:OrderedDict
fromkeys	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def fromkeys(cls, iterable, value=None):$/;"	m	class:OrderedDict
fromutc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def fromutc(self, dt):$/;"	m	class:UTC
fromutc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    def fromutc(self, dt):$/;"	m	class:DstTzInfo
fromutc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    def fromutc(self, dt):$/;"	m	class:StaticTzInfo
fromutc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def fromutc(self, dt):$/;"	m	class:UTC
fromutc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    def fromutc(self, dt):$/;"	m	class:DstTzInfo
fromutc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    def fromutc(self, dt):$/;"	m	class:StaticTzInfo
fugitive	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#can_diffoff	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#can_diffoff(buf) abort$/;"	f
fugitive#cwindow	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cwindow() abort$/;"	f
fugitive#detect	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#foldtext	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#git_commands	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_commands() abort$/;"	f
fugitive#git_version	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_version(...) abort$/;"	f
fugitive#head	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#reload_status	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#statusline	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive_blame	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_foldtext	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_foldtext$/;"	a
fugitive_remove	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_temp	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
fugitive_utility	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_utility$/;"	a
funcref	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:funcref(funcname)$/;"	f
function	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filter.py	/^    function = None$/;"	v	class:FunctionFilter
function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filter.py	/^    function = None$/;"	v	class:FunctionFilter
function_kw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    function_kw = ($/;"	v	class:OctaveLexer
function_kw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    function_kw = ($/;"	v	class:OctaveLexer
function_qualifiers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    function_qualifiers = set(('__device__', '__global__', '__host__',$/;"	v	class:CudaLexer
function_qualifiers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    function_qualifiers = set(('__device__', '__global__', '__host__',$/;"	v	class:CudaLexer
functions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    functions = ($/;"	v	class:QBasicLexer
functions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    functions = set(('__threadfence_block', '__threadfence', '__threadfence_system',$/;"	v	class:CudaLexer
functions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    functions = set(($/;"	v	class:DylanLexer
functions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^    functions = ($/;"	v	class:IgorLexer
functions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    functions = ($/;"	v	class:QBasicLexer
functions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    functions = set(('__threadfence_block', '__threadfence', '__threadfence_system',$/;"	v	class:CudaLexer
functions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    functions = set(($/;"	v	class:DylanLexer
functions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^    functions = ($/;"	v	class:IgorLexer
functions_kw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_scilab_builtins.py	/^functions_kw = ($/;"	v
functions_kw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_scilab_builtins.py	/^functions_kw = ($/;"	v
fzf_statusline	configs/plugins/fzf.vim	/^function! s:fzf_statusline()$/;"	f
g#	configs/keybindings.vim	/^nnoremap g# g#zz$/;"	m
g*	configs/keybindings.vim	/^nnoremap g* g*zz$/;"	m
g:IngoLibrary_PreferredDateFormat	plugged/ingo-library/autoload/ingo/date/format.vim	/^    let g:IngoLibrary_PreferredDateFormat = '%x'$/;"	v
g:NERDTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoDeleteBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeCreator	plugged/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	plugged/nerdtree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeIgnore	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeKeyMap	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMenuController	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeOpener	plugged/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	plugged/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	plugged/nerdtree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeSortOrder	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"$/;"	v
g:NERDTreeUI	plugged/nerdtree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:R_R_window_title	plugged/Nvim-R/R/windows.vim	/^let g:R_R_window_title = "R Console"$/;"	v
g:R_applescript	plugged/Nvim-R/R/common_global.vim	/^    let g:R_applescript = 0$/;"	v
g:R_args	plugged/Nvim-R/R/windows.vim	/^    let g:R_args = ["--sdi"]$/;"	v
g:R_i386	plugged/Nvim-R/R/windows.vim	/^            let g:R_i386 = 1$/;"	v
g:R_in_buffer	plugged/Nvim-R/R/common_global.vim	/^    let g:R_in_buffer = 1$/;"	v
g:R_objbr_place	plugged/Nvim-R/R/common_global.vim	/^            let g:R_objbr_place = substitute(g:R_objbr_place, "console", "script", "")$/;"	v
g:R_objbr_w	plugged/Nvim-R/R/common_global.vim	/^    let g:R_objbr_w = 10$/;"	v
g:R_sleeptime	plugged/Nvim-R/R/windows.vim	/^    let g:R_sleeptime = 100$/;"	v
g:R_start_libs	plugged/Nvim-R/R/functions.vim	/^    let g:R_start_libs = "base,stats,graphics,grDevices,utils,methods"$/;"	v
g:R_term	plugged/Nvim-R/R/common_global.vim	/^    let g:R_term = "none"$/;"	v
g:R_term	plugged/Nvim-R/R/external_term.vim	/^            let g:R_term = s:term$/;"	v
g:R_term	plugged/Nvim-R/R/external_term.vim	/^        let g:R_term = "xterm"$/;"	v
g:R_term	plugged/Nvim-R/R/external_term.vim	/^    let g:R_term = "xterm"$/;"	v
g:R_term_cmd	plugged/Nvim-R/R/common_global.vim	/^    let g:R_term_cmd = "none"$/;"	v
g:R_tmux_ob	plugged/Nvim-R/R/common_global.vim	/^    let g:R_tmux_ob = 0$/;"	v
g:R_tmux_ob	plugged/Nvim-R/R/common_global.vim	/^    let g:R_tmux_ob = 1$/;"	v
g:Rout_more_colors	plugged/Nvim-R/syntax/rout.vim	/^    let g:Rout_more_colors = 0$/;"	v
g:SendCmdToR	plugged/Nvim-R/R/common_buffer.vim	/^    let g:SendCmdToR = function('SendCmdToR_fake')$/;"	v
g:SyntasticAutoloclistNotifier	plugged/syntastic/plugin/syntastic/autoloclist.vim	/^let g:SyntasticAutoloclistNotifier = {}$/;"	v
g:SyntasticBalloonsNotifier	plugged/syntastic/plugin/syntastic/balloons.vim	/^let g:SyntasticBalloonsNotifier = {}$/;"	v
g:SyntasticChecker	plugged/syntastic/plugin/syntastic/checker.vim	/^let g:SyntasticChecker = {}$/;"	v
g:SyntasticCursorNotifier	plugged/syntastic/plugin/syntastic/cursor.vim	/^let g:SyntasticCursorNotifier = {}$/;"	v
g:SyntasticHighlightingNotifier	plugged/syntastic/plugin/syntastic/highlighting.vim	/^let g:SyntasticHighlightingNotifier = {}$/;"	v
g:SyntasticLoclist	plugged/syntastic/plugin/syntastic/loclist.vim	/^let g:SyntasticLoclist = {}$/;"	v
g:SyntasticModeMap	plugged/syntastic/plugin/syntastic/modemap.vim	/^let g:SyntasticModeMap = {}$/;"	v
g:SyntasticNotifiers	plugged/syntastic/plugin/syntastic/notifiers.vim	/^let g:SyntasticNotifiers = {}$/;"	v
g:SyntasticRegistry	plugged/syntastic/plugin/syntastic/registry.vim	/^let g:SyntasticRegistry = {}$/;"	v
g:SyntasticSignsNotifier	plugged/syntastic/plugin/syntastic/signs.vim	/^let g:SyntasticSignsNotifier = {}$/;"	v
g:_SYNTASTIC_DEBUG_AUTOCOMMANDS	plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_AUTOCOMMANDS  = 8$/;"	v
g:_SYNTASTIC_DEBUG_CHECKERS	plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_CHECKERS      = 32$/;"	v
g:_SYNTASTIC_DEBUG_LOCLIST	plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_LOCLIST       = 2$/;"	v
g:_SYNTASTIC_DEBUG_NOTIFICATIONS	plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_NOTIFICATIONS = 4$/;"	v
g:_SYNTASTIC_DEBUG_TRACE	plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_TRACE         = 1$/;"	v
g:_SYNTASTIC_DEBUG_VARIABLES	plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_VARIABLES     = 16$/;"	v
g:_SYNTASTIC_DEFAULTS	plugged/syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_DEFAULTS = {$/;"	v
g:_SYNTASTIC_START	plugged/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_START = reltime()$/;"	v
g:_SYNTASTIC_UNAME	plugged/syntastic/plugin/syntastic.vim	/^        let g:_SYNTASTIC_UNAME = 'Unknown'$/;"	v
g:_SYNTASTIC_UNAME	plugged/syntastic/plugin/syntastic.vim	/^        let g:_SYNTASTIC_UNAME = split(syntastic#util#system('uname'), "\\n")[0]$/;"	v
g:_SYNTASTIC_UNAME	plugged/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_UNAME = 'Unknown'$/;"	v
g:_SYNTASTIC_UNAME	plugged/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_UNAME = 'Windows'$/;"	v
g:_SYNTASTIC_VERSION	plugged/syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_VERSION = '3.6.0-88'$/;"	v
g:calendar_google_event_download	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^let g:calendar_google_event_download = 0$/;"	v
g:calendar_google_event_downloading	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^let g:calendar_google_event_downloading = {}$/;"	v
g:calendar_google_event_downloading_list	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^let g:calendar_google_event_downloading_list = 0$/;"	v
g:colors_name	colors/dracula.vim	/^let g:colors_name = "dracula"$/;"	v
g:colors_name	plugged/vim-lucius/colors/lucius.vim	/^let g:colors_name="lucius"$/;"	v
g:delimitMate_eol_marker	plugged/delimitMate/test/eol_marker.vim	/^let g:delimitMate_eol_marker = ';'$/;"	v
g:delimitMate_eol_marker	plugged/delimitMate/test/first_buffer_no_ft.vim	/^let g:delimitMate_eol_marker = ';'$/;"	v
g:delimitMate_expand_cr	plugged/delimitMate/test/eol_marker.vim	/^let g:delimitMate_expand_cr = 1$/;"	v
g:delimitMate_expand_cr	plugged/delimitMate/test/expand_cr.vim	/^let g:delimitMate_expand_cr = 1$/;"	v
g:delimitMate_expand_cr	plugged/delimitMate/test/first_buffer_no_ft.vim	/^let g:delimitMate_expand_cr = 1$/;"	v
g:delimitMate_expand_space	plugged/delimitMate/test/expand_space.vim	/^let g:delimitMate_expand_space = 1$/;"	v
g:delimitMate_insert_eol_marker	plugged/delimitMate/test/eol_marker.vim	/^let g:delimitMate_insert_eol_marker = 0$/;"	v
g:delimitMate_insert_eol_marker	plugged/delimitMate/test/eol_marker.vim	/^let g:delimitMate_insert_eol_marker = 1$/;"	v
g:delimitMate_insert_eol_marker	plugged/delimitMate/test/eol_marker.vim	/^let g:delimitMate_insert_eol_marker = 2$/;"	v
g:delimitMate_matchpairs	plugged/delimitMate/test/autoclose_matchpairs.vim	/^let g:delimitMate_matchpairs = '(:),{:},[:],<:>,¿:?,¡:!,,::'$/;"	v
g:delimitMate_quotes	plugged/delimitMate/test/autoclose_quotes.vim	/^let g:delimitMate_quotes = '" '' ` « |'$/;"	v
g:deoplete#enable_at_startup	configs/packages.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:did_nvimr_gui_running	plugged/Nvim-R/R/gui_running.vim	/^let g:did_nvimr_gui_running = 1$/;"	v
g:did_ruby_ftplugin_functions	plugged/vim-ruby/ftplugin/ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:emmet_curl_command	plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_curl_command = 'curl -s -L -A Mozilla\/5.0'$/;"	v
g:emmet_debug	plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_debug = 0$/;"	v
g:emmet_docroot	plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_docroot = {}$/;"	v
g:emmet_html5	plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_html5 = 1$/;"	v
g:eruby_default_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	plugged/vim-ruby/syntax/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:fugitive_browse_handlers	plugged/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_browse_handlers = []$/;"	v
g:fugitive_git_executable	plugged/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	plugged/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:fzf_action	configs/plugins/fzf.vim	/^let g:fzf_action = {$/;"	v
g:gitgutter_eager	plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_eager = 0$/;"	v
g:gitgutter_realtime	plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_realtime = 0$/;"	v
g:gitgutter_sign_column_always	plugged/vim-gitgutter/test/testSignColumnAlways.vim	/^let g:gitgutter_sign_column_always=1$/;"	v
g:gitgutter_sign_removed_first_line	plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_removed_first_line = '_^'$/;"	v
g:go_dispatch_enabled	plugged/vim-go/autoload/go/cmd.vim	/^    let g:go_dispatch_enabled = 0$/;"	v
g:go_doc_command	plugged/vim-go/autoload/go/doc.vim	/^    let g:go_doc_command = "godoc"$/;"	v
g:go_doc_options	plugged/vim-go/autoload/go/doc.vim	/^    let g:go_doc_options = ""$/;"	v
g:go_errcheck_bin	plugged/vim-go/autoload/go/errcheck.vim	/^    let g:go_errcheck_bin = "errcheck"$/;"	v
g:go_fmt_command	plugged/vim-go/autoload/go/fmt.vim	/^    let g:go_fmt_command = "gofmt"$/;"	v
g:go_fmt_experimental	plugged/vim-go/autoload/go/fmt.vim	/^    let g:go_fmt_experimental = 0$/;"	v
g:go_fmt_fail_silently	plugged/vim-go/autoload/go/fmt.vim	/^    let g:go_fmt_fail_silently = 0$/;"	v
g:go_fmt_options	plugged/vim-go/autoload/go/fmt.vim	/^    let g:go_fmt_options = ''$/;"	v
g:go_gocode_bin	plugged/vim-go/autoload/go/complete.vim	/^    let g:go_gocode_bin = "gocode"$/;"	v
g:go_godef_bin	plugged/vim-go/autoload/go/def.vim	/^	let g:go_godef_bin = "godef"$/;"	v
g:go_goimports_bin	plugged/vim-go/autoload/go/fmt.vim	/^    let g:go_goimports_bin = "goimports"$/;"	v
g:go_golint_bin	plugged/vim-go/autoload/go/lint.vim	/^    let g:go_golint_bin = "golint"$/;"	v
g:go_gorename_bin	plugged/vim-go/autoload/go/rename.vim	/^    let g:go_gorename_bin = "gorename"$/;"	v
g:go_gotags_bin	plugged/vim-go/ftplugin/go/tagbar.vim	/^	let g:go_gotags_bin = "gotags"$/;"	v
g:go_highlight_array_whitespace_error	plugged/vim-go/syntax/go.vim	/^  let g:go_highlight_array_whitespace_error = 1$/;"	v
g:go_highlight_build_constraints	plugged/vim-go/syntax/go.vim	/^    let g:go_highlight_build_constraints = 0$/;"	v
g:go_highlight_chan_whitespace_error	plugged/vim-go/syntax/go.vim	/^  let g:go_highlight_chan_whitespace_error = 1$/;"	v
g:go_highlight_extra_types	plugged/vim-go/syntax/go.vim	/^  let g:go_highlight_extra_types = 1$/;"	v
g:go_highlight_functions	plugged/vim-go/syntax/go.vim	/^	let g:go_highlight_functions = 0$/;"	v
g:go_highlight_methods	plugged/vim-go/syntax/go.vim	/^	let g:go_highlight_methods = 0$/;"	v
g:go_highlight_operators	plugged/vim-go/syntax/go.vim	/^	let g:go_highlight_operators = 0$/;"	v
g:go_highlight_space_tab_error	plugged/vim-go/syntax/go.vim	/^  let g:go_highlight_space_tab_error = 1$/;"	v
g:go_highlight_structs	plugged/vim-go/syntax/go.vim	/^	let g:go_highlight_structs = 0$/;"	v
g:go_highlight_trailing_whitespace_error	plugged/vim-go/syntax/go.vim	/^  let g:go_highlight_trailing_whitespace_error = 1$/;"	v
g:go_jump_to_error	plugged/vim-go/ftplugin/go/commands.vim	/^    let g:go_jump_to_error = 1$/;"	v
g:go_loaded_commands	plugged/vim-go/ftplugin/go/commands.vim	/^let g:go_loaded_commands = 1$/;"	v
g:go_loaded_gosnippets	plugged/vim-go/ftplugin/go/snippets.vim	/^let g:go_loaded_gosnippets = 1$/;"	v
g:go_loaded_install	plugged/vim-go/plugin/go.vim	/^let g:go_loaded_install = 1$/;"	v
g:go_oracle_bin	plugged/vim-go/autoload/go/oracle.vim	/^    let g:go_oracle_bin = "oracle"$/;"	v
g:go_play_open_browser	plugged/vim-go/autoload/go/play.vim	/^    let g:go_play_open_browser = 1$/;"	v
g:go_snippet_engine	plugged/vim-go/ftplugin/go/snippets.vim	/^	let g:go_snippet_engine = "ultisnips"$/;"	v
g:go_textobj_enabled	plugged/vim-go/autoload/go/textobj.vim	/^    let g:go_textobj_enabled = 1$/;"	v
g:haml_self_closing_tags	plugged/vim-haml/indent/haml.vim	/^  let g:haml_self_closing_tags = 'base|link|meta|br|hr|img|input'$/;"	v
g:instant_markdown_autostart	plugged/vim-instant-markdown/after/ftplugin/markdown/instant-markdown.vim	/^    let g:instant_markdown_autostart = 1$/;"	v
g:instant_markdown_slow	plugged/vim-instant-markdown/after/ftplugin/markdown/instant-markdown.vim	/^    let g:instant_markdown_slow = 0$/;"	v
g:jade_self_closing_tags	plugged/vim-jade/indent/jade.vim	/^  let g:jade_self_closing_tags = 'meta|link|img|hr|br|input'$/;"	v
g:javascript_conceal	plugged/vim-javascript/syntax/javascript.vim	/^  let g:javascript_conceal = 0$/;"	v
g:kind	plugged/unite.vim/test/source.vim	/^let g:kind = {$/;"	v
g:kind	plugged/unite.vim/test/source.vim	/^let g:kind.action_table.open = {$/;"	v
g:less_html_style_tags	plugged/vim-less/after/syntax/html.vim	/^  let g:less_html_style_tags = 1$/;"	v
g:lightline	configs/plugins/lightline.vim	/^let g:lightline = {$/;"	v
g:lightline#colorscheme#16color#palette	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let g:lightline#colorscheme#16color#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow#palette	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let g:lightline#colorscheme#Tomorrow#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night#palette	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let g:lightline#colorscheme#Tomorrow_Night#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Blue#palette	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Blue#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Bright#palette	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Bright#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Eighties#palette	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Eighties#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#default#palette	plugged/lightline.vim/autoload/lightline/colorscheme/default.vim	/^let g:lightline#colorscheme#default#palette = g:lightline#colorscheme#powerline#palette$/;"	v
g:lightline#colorscheme#jellybeans#palette	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let g:lightline#colorscheme#jellybeans#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#landscape#palette	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let g:lightline#colorscheme#landscape#palette = s:p$/;"	v
g:lightline#colorscheme#powerline#palette	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let g:lightline#colorscheme#powerline#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#solarized#palette	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let g:lightline#colorscheme#solarized#palette = g:lightline#colorscheme#solarized_dark#palette$/;"	v
g:lightline#colorscheme#solarized#palette	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let g:lightline#colorscheme#solarized#palette = g:lightline#colorscheme#solarized_light#palette$/;"	v
g:lightline#colorscheme#solarized_dark#palette	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let g:lightline#colorscheme#solarized_dark#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#solarized_light#palette	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let g:lightline#colorscheme#solarized_light#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#wombat#palette	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let g:lightline#colorscheme#wombat#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:loaded_AdvancedSorters	plugged/AdvancedSorters/plugin/AdvancedSorters.vim	/^let g:loaded_AdvancedSorters = 1$/;"	v
g:loaded_calendar	plugged/calendar.vim/plugin/calendar.vim	/^let g:loaded_calendar = 1$/;"	v
g:loaded_delimitMate	plugged/delimitMate/plugin/delimitMate.vim	/^let g:loaded_delimitMate = 1$/;"	v
g:loaded_emmet_vim	plugged/emmet-vim/plugin/emmet.vim	/^let g:loaded_emmet_vim = 1$/;"	v
g:loaded_fugitive	plugged/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_gitgutter	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:loaded_gitgutter = 1$/;"	v
g:loaded_lightline	plugged/lightline.vim/plugin/lightline.vim	/^let g:loaded_lightline = 1$/;"	v
g:loaded_nerdtree_autoload	plugged/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_plug	autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:loaded_repeat	plugged/repeat.vim/autoload/repeat.vim	/^let g:loaded_repeat = 1$/;"	v
g:loaded_smartpairs	plugged/smartpairs.vim/plugin/smartpairs.vim	/^    let g:loaded_smartpairs = 1$/;"	v
g:loaded_surround	plugged/vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_syntastic_actionscript_mxmlc_checker	plugged/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let g:loaded_syntastic_actionscript_mxmlc_checker = 1$/;"	v
g:loaded_syntastic_ada_gcc_checker	plugged/syntastic/syntax_checkers/ada/gcc.vim	/^let g:loaded_syntastic_ada_gcc_checker = 1$/;"	v
g:loaded_syntastic_apiblueprint_snowcrash_checker	plugged/syntastic/syntax_checkers/apiblueprint/snowcrash.vim	/^let g:loaded_syntastic_apiblueprint_snowcrash_checker = 1$/;"	v
g:loaded_syntastic_applescript_osacompile_checker	plugged/syntastic/syntax_checkers/applescript/osacompile.vim	/^let g:loaded_syntastic_applescript_osacompile_checker = 1$/;"	v
g:loaded_syntastic_asciidoc_asciidoc_checker	plugged/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let g:loaded_syntastic_asciidoc_asciidoc_checker = 1$/;"	v
g:loaded_syntastic_asm_gcc_checker	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^let g:loaded_syntastic_asm_gcc_checker = 1$/;"	v
g:loaded_syntastic_bemhtml_bemhtmllint_checker	plugged/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let g:loaded_syntastic_bemhtml_bemhtmllint_checker = 1$/;"	v
g:loaded_syntastic_bro_bro_checker	plugged/syntastic/syntax_checkers/bro/bro.vim	/^let g:loaded_syntastic_bro_bro_checker = 1$/;"	v
g:loaded_syntastic_c_autoload	plugged/syntastic/autoload/syntastic/c.vim	/^let g:loaded_syntastic_c_autoload = 1$/;"	v
g:loaded_syntastic_c_avrgcc_checker	plugged/syntastic/syntax_checkers/c/avrgcc.vim	/^let g:loaded_syntastic_c_avrgcc_checker = 1$/;"	v
g:loaded_syntastic_c_checkpatch_checker	plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^let g:loaded_syntastic_c_checkpatch_checker = 1$/;"	v
g:loaded_syntastic_c_clang_check_checker	plugged/syntastic/syntax_checkers/c/clang_check.vim	/^let g:loaded_syntastic_c_clang_check_checker = 1$/;"	v
g:loaded_syntastic_c_clang_tidy_checker	plugged/syntastic/syntax_checkers/c/clang_tidy.vim	/^let g:loaded_syntastic_c_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_c_cppcheck_checker	plugged/syntastic/syntax_checkers/c/cppcheck.vim	/^let g:loaded_syntastic_c_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_c_gcc_checker	plugged/syntastic/syntax_checkers/c/gcc.vim	/^let g:loaded_syntastic_c_gcc_checker = 1$/;"	v
g:loaded_syntastic_c_make_checker	plugged/syntastic/syntax_checkers/c/make.vim	/^let g:loaded_syntastic_c_make_checker = 1$/;"	v
g:loaded_syntastic_c_oclint_checker	plugged/syntastic/syntax_checkers/c/oclint.vim	/^let g:loaded_syntastic_c_oclint_checker = 1$/;"	v
g:loaded_syntastic_c_pc_lint_checker	plugged/syntastic/syntax_checkers/c/pc_lint.vim	/^let g:loaded_syntastic_c_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_c_sparse_checker	plugged/syntastic/syntax_checkers/c/sparse.vim	/^let g:loaded_syntastic_c_sparse_checker = 1$/;"	v
g:loaded_syntastic_c_splint_checker	plugged/syntastic/syntax_checkers/c/splint.vim	/^let g:loaded_syntastic_c_splint_checker = 1$/;"	v
g:loaded_syntastic_cabal_cabal_checker	plugged/syntastic/syntax_checkers/cabal/cabal.vim	/^let g:loaded_syntastic_cabal_cabal_checker = 1$/;"	v
g:loaded_syntastic_checker	plugged/syntastic/plugin/syntastic/checker.vim	/^let g:loaded_syntastic_checker = 1$/;"	v
g:loaded_syntastic_chef_foodcritic_checker	plugged/syntastic/syntax_checkers/chef/foodcritic.vim	/^let g:loaded_syntastic_chef_foodcritic_checker = 1$/;"	v
g:loaded_syntastic_co_coco_checker	plugged/syntastic/syntax_checkers/co/coco.vim	/^let g:loaded_syntastic_co_coco_checker = 1$/;"	v
g:loaded_syntastic_cobol_cobc_checker	plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^let g:loaded_syntastic_cobol_cobc_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffee_checker	plugged/syntastic/syntax_checkers/coffee/coffee.vim	/^let g:loaded_syntastic_coffee_coffee_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffeelint_checker	plugged/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let g:loaded_syntastic_coffee_coffeelint_checker = 1$/;"	v
g:loaded_syntastic_coq_coqtop_checker	plugged/syntastic/syntax_checkers/coq/coqtop.vim	/^let g:loaded_syntastic_coq_coqtop_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_check_checker	plugged/syntastic/syntax_checkers/cpp/clang_check.vim	/^let g:loaded_syntastic_cpp_clang_check_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_tidy_checker	plugged/syntastic/syntax_checkers/cpp/clang_tidy.vim	/^let g:loaded_syntastic_cpp_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_cpp_cppcheck_checker	plugged/syntastic/syntax_checkers/cpp/cppcheck.vim	/^let g:loaded_syntastic_cpp_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_cpp_cpplint_checker	plugged/syntastic/syntax_checkers/cpp/cpplint.vim	/^let g:loaded_syntastic_cpp_cpplint_checker = 1$/;"	v
g:loaded_syntastic_cpp_gcc_checker	plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^let g:loaded_syntastic_cpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_cpp_oclint_checker	plugged/syntastic/syntax_checkers/cpp/oclint.vim	/^let g:loaded_syntastic_cpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_cpp_pc_lint_checker	plugged/syntastic/syntax_checkers/cpp/pc_lint.vim	/^let g:loaded_syntastic_cpp_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_cpp_verapp_checker	plugged/syntastic/syntax_checkers/cpp/verapp.vim	/^let g:loaded_syntastic_cpp_verapp_checker = 1$/;"	v
g:loaded_syntastic_cs_mcs_checker	plugged/syntastic/syntax_checkers/cs/mcs.vim	/^let g:loaded_syntastic_cs_mcs_checker = 1$/;"	v
g:loaded_syntastic_css_csslint_checker	plugged/syntastic/syntax_checkers/css/csslint.vim	/^let g:loaded_syntastic_css_csslint_checker = 1$/;"	v
g:loaded_syntastic_css_phpcs_checker	plugged/syntastic/syntax_checkers/css/phpcs.vim	/^let g:loaded_syntastic_css_phpcs_checker = 1$/;"	v
g:loaded_syntastic_css_prettycss_checker	plugged/syntastic/syntax_checkers/css/prettycss.vim	/^let g:loaded_syntastic_css_prettycss_checker = 1$/;"	v
g:loaded_syntastic_css_recess_checker	plugged/syntastic/syntax_checkers/css/recess.vim	/^let g:loaded_syntastic_css_recess_checker = 1$/;"	v
g:loaded_syntastic_cucumber_cucumber_checker	plugged/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let g:loaded_syntastic_cucumber_cucumber_checker = 1$/;"	v
g:loaded_syntastic_cuda_nvcc_checker	plugged/syntastic/syntax_checkers/cuda/nvcc.vim	/^let g:loaded_syntastic_cuda_nvcc_checker = 1$/;"	v
g:loaded_syntastic_d_dmd_checker	plugged/syntastic/syntax_checkers/d/dmd.vim	/^let g:loaded_syntastic_d_dmd_checker = 1$/;"	v
g:loaded_syntastic_dart_dartanalyzer_checker	plugged/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let g:loaded_syntastic_dart_dartanalyzer_checker = 1$/;"	v
g:loaded_syntastic_docbk_igor_checker	plugged/syntastic/syntax_checkers/docbk/igor.vim	/^let g:loaded_syntastic_docbk_igor_checker = 1$/;"	v
g:loaded_syntastic_docbk_xmllint_checker	plugged/syntastic/syntax_checkers/docbk/xmllint.vim	/^let g:loaded_syntastic_docbk_xmllint_checker = 1$/;"	v
g:loaded_syntastic_dustjs_swiffer_checker	plugged/syntastic/syntax_checkers/dustjs/swiffer.vim	/^let g:loaded_syntastic_dustjs_swiffer_checker = 1$/;"	v
g:loaded_syntastic_elixir_elixir_checker	plugged/syntastic/syntax_checkers/elixir/elixir.vim	/^let g:loaded_syntastic_elixir_elixir_checker = 1$/;"	v
g:loaded_syntastic_erlang_erlang_checker	plugged/syntastic/syntax_checkers/erlang/escript.vim	/^let g:loaded_syntastic_erlang_erlang_checker = 1$/;"	v
g:loaded_syntastic_erlang_syntaxerl_checker	plugged/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^let g:loaded_syntastic_erlang_syntaxerl_checker = 1$/;"	v
g:loaded_syntastic_eruby_ruby_checker	plugged/syntastic/syntax_checkers/eruby/ruby.vim	/^let g:loaded_syntastic_eruby_ruby_checker = 1$/;"	v
g:loaded_syntastic_fortran_gfortran_checker	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^let g:loaded_syntastic_fortran_gfortran_checker = 1$/;"	v
g:loaded_syntastic_glsl_cgc_checker	plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^let g:loaded_syntastic_glsl_cgc_checker = 1$/;"	v
g:loaded_syntastic_go_go_checker	plugged/syntastic/syntax_checkers/go/go.vim	/^let g:loaded_syntastic_go_go_checker = 1$/;"	v
g:loaded_syntastic_go_gofmt_checker	plugged/syntastic/syntax_checkers/go/gofmt.vim	/^let g:loaded_syntastic_go_gofmt_checker = 1$/;"	v
g:loaded_syntastic_go_golint_checker	plugged/syntastic/syntax_checkers/go/golint.vim	/^let g:loaded_syntastic_go_golint_checker = 1$/;"	v
g:loaded_syntastic_go_gotype_checker	plugged/syntastic/syntax_checkers/go/gotype.vim	/^let g:loaded_syntastic_go_gotype_checker = 1$/;"	v
g:loaded_syntastic_go_govet_checker	plugged/syntastic/syntax_checkers/go/govet.vim	/^let g:loaded_syntastic_go_govet_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_checker	plugged/syntastic/syntax_checkers/haml/haml.vim	/^let g:loaded_syntastic_haml_haml_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_lint_checker	plugged/syntastic/syntax_checkers/haml/haml_lint.vim	/^let g:loaded_syntastic_haml_haml_lint_checker = 1$/;"	v
g:loaded_syntastic_handlebars_handlebars_checker	plugged/syntastic/syntax_checkers/handlebars/handlebars.vim	/^let g:loaded_syntastic_handlebars_handlebars_checker = 1$/;"	v
g:loaded_syntastic_haskell_ghc_mod_checker	plugged/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let g:loaded_syntastic_haskell_ghc_mod_checker = 1$/;"	v
g:loaded_syntastic_haskell_hdevtools_checker	plugged/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let g:loaded_syntastic_haskell_hdevtools_checker = 1$/;"	v
g:loaded_syntastic_haskell_hlint_checker	plugged/syntastic/syntax_checkers/haskell/hlint.vim	/^let g:loaded_syntastic_haskell_hlint_checker = 1$/;"	v
g:loaded_syntastic_haskell_scan_checker	plugged/syntastic/syntax_checkers/haskell/scan.vim	/^let g:loaded_syntastic_haskell_scan_checker = 1$/;"	v
g:loaded_syntastic_haxe_haxe_checker	plugged/syntastic/syntax_checkers/haxe/haxe.vim	/^let g:loaded_syntastic_haxe_haxe_checker = 1$/;"	v
g:loaded_syntastic_hss_hss_checker	plugged/syntastic/syntax_checkers/hss/hss.vim	/^let g:loaded_syntastic_hss_hss_checker = 1$/;"	v
g:loaded_syntastic_html_jshint_checker	plugged/syntastic/syntax_checkers/html/jshint.vim	/^let g:loaded_syntastic_html_jshint_checker = 1$/;"	v
g:loaded_syntastic_html_tidy_checker	plugged/syntastic/syntax_checkers/html/tidy.vim	/^let g:loaded_syntastic_html_tidy_checker = 1$/;"	v
g:loaded_syntastic_html_validator_checker	plugged/syntastic/syntax_checkers/html/validator.vim	/^let g:loaded_syntastic_html_validator_checker=1$/;"	v
g:loaded_syntastic_html_w3_checker	plugged/syntastic/syntax_checkers/html/w3.vim	/^let g:loaded_syntastic_html_w3_checker = 1$/;"	v
g:loaded_syntastic_java_checkstyle_checker	plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^let g:loaded_syntastic_java_checkstyle_checker = 1$/;"	v
g:loaded_syntastic_java_javac_checker	plugged/syntastic/syntax_checkers/java/javac.vim	/^let g:loaded_syntastic_java_javac_checker = 1$/;"	v
g:loaded_syntastic_javascript_closurecompiler_checker	plugged/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let g:loaded_syntastic_javascript_closurecompiler_checker = 1$/;"	v
g:loaded_syntastic_javascript_eslint_checker	plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^let g:loaded_syntastic_javascript_eslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_flow_checker	plugged/syntastic/syntax_checkers/javascript/flow.vim	/^let g:loaded_syntastic_javascript_flow_checker = 1$/;"	v
g:loaded_syntastic_javascript_gjslint_checker	plugged/syntastic/syntax_checkers/javascript/gjslint.vim	/^let g:loaded_syntastic_javascript_gjslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jscs_checker	plugged/syntastic/syntax_checkers/javascript/jscs.vim	/^let g:loaded_syntastic_javascript_jscs_checker = 1$/;"	v
g:loaded_syntastic_javascript_jshint_checker	plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^let g:loaded_syntastic_javascript_jshint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsl_checker	plugged/syntastic/syntax_checkers/javascript/jsl.vim	/^let g:loaded_syntastic_javascript_jsl_checker = 1$/;"	v
g:loaded_syntastic_javascript_jslint_checker	plugged/syntastic/syntax_checkers/javascript/jslint.vim	/^let g:loaded_syntastic_javascript_jslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsxhint_checker	plugged/syntastic/syntax_checkers/javascript/jsxhint.vim	/^let g:loaded_syntastic_javascript_jsxhint_checker = 1$/;"	v
g:loaded_syntastic_javascript_standard_checker	plugged/syntastic/syntax_checkers/javascript/standard.vim	/^let g:loaded_syntastic_javascript_standard_checker = 1$/;"	v
g:loaded_syntastic_json_jsonlint_checker	plugged/syntastic/syntax_checkers/json/jsonlint.vim	/^let g:loaded_syntastic_json_jsonlint_checker = 1$/;"	v
g:loaded_syntastic_json_jsonval_checker	plugged/syntastic/syntax_checkers/json/jsonval.vim	/^let g:loaded_syntastic_json_jsonval_checker = 1$/;"	v
g:loaded_syntastic_less_lessc_checker	plugged/syntastic/syntax_checkers/less/lessc.vim	/^let g:loaded_syntastic_less_lessc_checker = 1$/;"	v
g:loaded_syntastic_less_recess_checker	plugged/syntastic/syntax_checkers/less/recess.vim	/^let g:loaded_syntastic_less_recess_checker = 1$/;"	v
g:loaded_syntastic_lex_flex_checker	plugged/syntastic/syntax_checkers/lex/flex.vim	/^let g:loaded_syntastic_lex_flex_checker = 1$/;"	v
g:loaded_syntastic_limbo_limbo_checker	plugged/syntastic/syntax_checkers/limbo/limbo.vim	/^let g:loaded_syntastic_limbo_limbo_checker = 1$/;"	v
g:loaded_syntastic_lisp_clisp_checker	plugged/syntastic/syntax_checkers/lisp/clisp.vim	/^let g:loaded_syntastic_lisp_clisp_checker = 1$/;"	v
g:loaded_syntastic_llvm_llvm_checker	plugged/syntastic/syntax_checkers/llvm/llvm.vim	/^let g:loaded_syntastic_llvm_llvm_checker = 1$/;"	v
g:loaded_syntastic_loclist	plugged/syntastic/plugin/syntastic/loclist.vim	/^let g:loaded_syntastic_loclist = 1$/;"	v
g:loaded_syntastic_log_autoload	plugged/syntastic/autoload/syntastic/log.vim	/^let g:loaded_syntastic_log_autoload = 1$/;"	v
g:loaded_syntastic_lua_luac_checker	plugged/syntastic/syntax_checkers/lua/luac.vim	/^let g:loaded_syntastic_lua_luac_checker = 1$/;"	v
g:loaded_syntastic_lua_luacheck_checker	plugged/syntastic/syntax_checkers/lua/luacheck.vim	/^let g:loaded_syntastic_lua_luacheck_checker = 1$/;"	v
g:loaded_syntastic_markdown_mdl_checker	plugged/syntastic/syntax_checkers/markdown/mdl.vim	/^let g:loaded_syntastic_markdown_mdl_checker = 1$/;"	v
g:loaded_syntastic_matlab_mlint_checker	plugged/syntastic/syntax_checkers/matlab/mlint.vim	/^let g:loaded_syntastic_matlab_mlint_checker = 1$/;"	v
g:loaded_syntastic_mercury_mmc_checker	plugged/syntastic/syntax_checkers/mercury/mmc.vim	/^let g:loaded_syntastic_mercury_mmc_checker = 1$/;"	v
g:loaded_syntastic_modemap	plugged/syntastic/plugin/syntastic/modemap.vim	/^let g:loaded_syntastic_modemap = 1$/;"	v
g:loaded_syntastic_nasm_nasm_checker	plugged/syntastic/syntax_checkers/nasm/nasm.vim	/^let g:loaded_syntastic_nasm_nasm_checker = 1$/;"	v
g:loaded_syntastic_notifier_autoloclist	plugged/syntastic/plugin/syntastic/autoloclist.vim	/^let g:loaded_syntastic_notifier_autoloclist = 1$/;"	v
g:loaded_syntastic_notifier_balloons	plugged/syntastic/plugin/syntastic/balloons.vim	/^let g:loaded_syntastic_notifier_balloons = 1$/;"	v
g:loaded_syntastic_notifier_cursor	plugged/syntastic/plugin/syntastic/cursor.vim	/^let g:loaded_syntastic_notifier_cursor = 1$/;"	v
g:loaded_syntastic_notifier_highlighting	plugged/syntastic/plugin/syntastic/highlighting.vim	/^let g:loaded_syntastic_notifier_highlighting = 1$/;"	v
g:loaded_syntastic_notifier_signs	plugged/syntastic/plugin/syntastic/signs.vim	/^let g:loaded_syntastic_notifier_signs = 1$/;"	v
g:loaded_syntastic_notifiers	plugged/syntastic/plugin/syntastic/notifiers.vim	/^let g:loaded_syntastic_notifiers = 1$/;"	v
g:loaded_syntastic_nroff_igor_checker	plugged/syntastic/syntax_checkers/nroff/igor.vim	/^let g:loaded_syntastic_nroff_igor_checker = 1$/;"	v
g:loaded_syntastic_nroff_mandoc_checker	plugged/syntastic/syntax_checkers/nroff/mandoc.vim	/^let g:loaded_syntastic_nroff_mandoc_checker = 1$/;"	v
g:loaded_syntastic_objc_gcc_checker	plugged/syntastic/syntax_checkers/objc/gcc.vim	/^let g:loaded_syntastic_objc_gcc_checker = 1$/;"	v
g:loaded_syntastic_objc_oclint_checker	plugged/syntastic/syntax_checkers/objc/oclint.vim	/^let g:loaded_syntastic_objc_oclint_checker = 1$/;"	v
g:loaded_syntastic_objcpp_gcc_checker	plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^let g:loaded_syntastic_objcpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_objcpp_oclint_checker	plugged/syntastic/syntax_checkers/objcpp/oclint.vim	/^let g:loaded_syntastic_objcpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_ocaml_camlp4o_checker	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let g:loaded_syntastic_ocaml_camlp4o_checker = 1$/;"	v
g:loaded_syntastic_perl_perl_checker	plugged/syntastic/syntax_checkers/perl/perl.vim	/^let g:loaded_syntastic_perl_perl_checker = 1$/;"	v
g:loaded_syntastic_perl_perlcritic_checker	plugged/syntastic/syntax_checkers/perl/perlcritic.vim	/^let g:loaded_syntastic_perl_perlcritic_checker = 1$/;"	v
g:loaded_syntastic_perl_podchecker_checker	plugged/syntastic/syntax_checkers/perl/podchecker.vim	/^let g:loaded_syntastic_perl_podchecker_checker = 1$/;"	v
g:loaded_syntastic_php_php_checker	plugged/syntastic/syntax_checkers/php/php.vim	/^let g:loaded_syntastic_php_php_checker = 1$/;"	v
g:loaded_syntastic_php_phpcs_checker	plugged/syntastic/syntax_checkers/php/phpcs.vim	/^let g:loaded_syntastic_php_phpcs_checker = 1$/;"	v
g:loaded_syntastic_php_phplint_checker	plugged/syntastic/syntax_checkers/php/phplint.vim	/^let g:loaded_syntastic_php_phplint_checker = 1$/;"	v
g:loaded_syntastic_php_phpmd_checker	plugged/syntastic/syntax_checkers/php/phpmd.vim	/^let g:loaded_syntastic_php_phpmd_checker = 1$/;"	v
g:loaded_syntastic_plugin	plugged/syntastic/plugin/syntastic.vim	/^let g:loaded_syntastic_plugin = 1$/;"	v
g:loaded_syntastic_po_msgfmt_checker	plugged/syntastic/syntax_checkers/po/msgfmt.vim	/^let g:loaded_syntastic_po_msgfmt_checker = 1$/;"	v
g:loaded_syntastic_pod_podchecker_checker	plugged/syntastic/syntax_checkers/pod/podchecker.vim	/^let g:loaded_syntastic_pod_podchecker_checker = 1$/;"	v
g:loaded_syntastic_postprocess_autoload	plugged/syntastic/autoload/syntastic/postprocess.vim	/^let g:loaded_syntastic_postprocess_autoload = 1$/;"	v
g:loaded_syntastic_preprocess_autoload	plugged/syntastic/autoload/syntastic/preprocess.vim	/^let g:loaded_syntastic_preprocess_autoload = 1$/;"	v
g:loaded_syntastic_puppet_puppet_checker	plugged/syntastic/syntax_checkers/puppet/puppet.vim	/^let g:loaded_syntastic_puppet_puppet_checker = 1$/;"	v
g:loaded_syntastic_puppet_puppetlint_checker	plugged/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let g:loaded_syntastic_puppet_puppetlint_checker = 1$/;"	v
g:loaded_syntastic_python_flake8_checker	plugged/syntastic/syntax_checkers/python/flake8.vim	/^let g:loaded_syntastic_python_flake8_checker = 1$/;"	v
g:loaded_syntastic_python_frosted_checker	plugged/syntastic/syntax_checkers/python/frosted.vim	/^let g:loaded_syntastic_python_frosted_checker = 1$/;"	v
g:loaded_syntastic_python_mypy_checker	plugged/syntastic/syntax_checkers/python/mypy.vim	/^let g:loaded_syntastic_python_mypy_checker = 1$/;"	v
g:loaded_syntastic_python_pep257_checker	plugged/syntastic/syntax_checkers/python/pep257.vim	/^let g:loaded_syntastic_python_pep257_checker = 1$/;"	v
g:loaded_syntastic_python_pep8_checker	plugged/syntastic/syntax_checkers/python/pep8.vim	/^let g:loaded_syntastic_python_pep8_checker = 1$/;"	v
g:loaded_syntastic_python_prospector_checker	plugged/syntastic/syntax_checkers/python/prospector.vim	/^let g:loaded_syntastic_python_prospector_checker = 1$/;"	v
g:loaded_syntastic_python_py3kwarn_checker	plugged/syntastic/syntax_checkers/python/py3kwarn.vim	/^let g:loaded_syntastic_python_py3kwarn_checker = 1$/;"	v
g:loaded_syntastic_python_pyflakes_checker	plugged/syntastic/syntax_checkers/python/pyflakes.vim	/^let g:loaded_syntastic_python_pyflakes_checker = 1$/;"	v
g:loaded_syntastic_python_pylama_checker	plugged/syntastic/syntax_checkers/python/pylama.vim	/^let g:loaded_syntastic_python_pylama_checker = 1$/;"	v
g:loaded_syntastic_python_pylint_checker	plugged/syntastic/syntax_checkers/python/pylint.vim	/^let g:loaded_syntastic_python_pylint_checker = 1$/;"	v
g:loaded_syntastic_python_python_checker	plugged/syntastic/syntax_checkers/python/python.vim	/^let g:loaded_syntastic_python_python_checker = 1$/;"	v
g:loaded_syntastic_r_lint_checker	plugged/syntastic/syntax_checkers/r/lint.vim	/^let g:loaded_syntastic_r_lint_checker = 1$/;"	v
g:loaded_syntastic_r_svtools_checker	plugged/syntastic/syntax_checkers/r/svtools.vim	/^let g:loaded_syntastic_r_svtools_checker = 1$/;"	v
g:loaded_syntastic_racket_code_ayatollah_checker	plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let g:loaded_syntastic_racket_code_ayatollah_checker = 1$/;"	v
g:loaded_syntastic_racket_racket_checker	plugged/syntastic/syntax_checkers/racket/racket.vim	/^let g:loaded_syntastic_racket_racket_checker=1$/;"	v
g:loaded_syntastic_registry	plugged/syntastic/plugin/syntastic/registry.vim	/^let g:loaded_syntastic_registry = 1$/;"	v
g:loaded_syntastic_rnc_rnv_checker	plugged/syntastic/syntax_checkers/rnc/rnv.vim	/^let g:loaded_syntastic_rnc_rnv_checker = 1$/;"	v
g:loaded_syntastic_rst_rst2pseudoxml_checker	plugged/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let g:loaded_syntastic_rst_rst2pseudoxml_checker = 1$/;"	v
g:loaded_syntastic_rst_rstcheck_checker	plugged/syntastic/syntax_checkers/rst/rstcheck.vim	/^let g:loaded_syntastic_rst_rstcheck_checker = 1$/;"	v
g:loaded_syntastic_ruby_jruby_checker	plugged/syntastic/syntax_checkers/ruby/jruby.vim	/^let g:loaded_syntastic_ruby_jruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_macruby_checker	plugged/syntastic/syntax_checkers/ruby/macruby.vim	/^let g:loaded_syntastic_ruby_macruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_mri_checker	plugged/syntastic/syntax_checkers/ruby/mri.vim	/^let g:loaded_syntastic_ruby_mri_checker = 1$/;"	v
g:loaded_syntastic_ruby_reek_checker	plugged/syntastic/syntax_checkers/ruby/reek.vim	/^let g:loaded_syntastic_ruby_reek_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubocop_checker	plugged/syntastic/syntax_checkers/ruby/rubocop.vim	/^let g:loaded_syntastic_ruby_rubocop_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubylint_checker	plugged/syntastic/syntax_checkers/ruby/rubylint.vim	/^let g:loaded_syntastic_ruby_rubylint_checker = 1$/;"	v
g:loaded_syntastic_sass_sass_checker	plugged/syntastic/syntax_checkers/sass/sass.vim	/^let g:loaded_syntastic_sass_sass_checker = 1$/;"	v
g:loaded_syntastic_sass_sassc_checker	plugged/syntastic/syntax_checkers/sass/sassc.vim	/^let g:loaded_syntastic_sass_sassc_checker = 1$/;"	v
g:loaded_syntastic_scala_fsc_checker	plugged/syntastic/syntax_checkers/scala/fsc.vim	/^let g:loaded_syntastic_scala_fsc_checker = 1$/;"	v
g:loaded_syntastic_scala_scalac_checker	plugged/syntastic/syntax_checkers/scala/scalac.vim	/^let g:loaded_syntastic_scala_scalac_checker = 1$/;"	v
g:loaded_syntastic_scala_scalastyle_checker	plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^let g:loaded_syntastic_scala_scalastyle_checker = 1$/;"	v
g:loaded_syntastic_scss_sass_checker	plugged/syntastic/syntax_checkers/scss/sass.vim	/^let g:loaded_syntastic_scss_sass_checker = 1$/;"	v
g:loaded_syntastic_scss_sassc_checker	plugged/syntastic/syntax_checkers/scss/sassc.vim	/^let g:loaded_syntastic_scss_sassc_checker = 1$/;"	v
g:loaded_syntastic_scss_scss_lint_checker	plugged/syntastic/syntax_checkers/scss/scss_lint.vim	/^let g:loaded_syntastic_scss_scss_lint_checker = 1$/;"	v
g:loaded_syntastic_sh_bashate_checker	plugged/syntastic/syntax_checkers/sh/bashate.vim	/^let g:loaded_syntastic_sh_bashate_checker = 1$/;"	v
g:loaded_syntastic_sh_checkbashisms_checker	plugged/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let g:loaded_syntastic_sh_checkbashisms_checker = 1$/;"	v
g:loaded_syntastic_sh_sh_checker	plugged/syntastic/syntax_checkers/sh/sh.vim	/^let g:loaded_syntastic_sh_sh_checker = 1$/;"	v
g:loaded_syntastic_sh_shellcheck_checker	plugged/syntastic/syntax_checkers/sh/shellcheck.vim	/^let g:loaded_syntastic_sh_shellcheck_checker = 1$/;"	v
g:loaded_syntastic_slim_slimrb_checker	plugged/syntastic/syntax_checkers/slim/slimrb.vim	/^let g:loaded_syntastic_slim_slimrb_checker = 1$/;"	v
g:loaded_syntastic_sml_smlnj_checker	plugged/syntastic/syntax_checkers/sml/smlnj.vim	/^let g:loaded_syntastic_sml_smlnj_checker = 1$/;"	v
g:loaded_syntastic_spec_rpmlint_checker	plugged/syntastic/syntax_checkers/spec/rpmlint.vim	/^let g:loaded_syntastic_spec_rpmlint_checker = 1$/;"	v
g:loaded_syntastic_tcl_nagelfar_checker	plugged/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let g:loaded_syntastic_tcl_nagelfar_checker = 1$/;"	v
g:loaded_syntastic_tex_chktex_checker	plugged/syntastic/syntax_checkers/tex/chktex.vim	/^let g:loaded_syntastic_tex_chktex_checker = 1$/;"	v
g:loaded_syntastic_tex_lacheck_checker	plugged/syntastic/syntax_checkers/tex/lacheck.vim	/^let g:loaded_syntastic_tex_lacheck_checker = 1$/;"	v
g:loaded_syntastic_texinfo_makeinfo_checker	plugged/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let g:loaded_syntastic_texinfo_makeinfo_checker = 1$/;"	v
g:loaded_syntastic_text_atdtool_checker	plugged/syntastic/syntax_checkers/text/atdtool.vim	/^let g:loaded_syntastic_text_atdtool_checker = 1$/;"	v
g:loaded_syntastic_text_igor_checker	plugged/syntastic/syntax_checkers/text/igor.vim	/^let g:loaded_syntastic_text_igor_checker = 1$/;"	v
g:loaded_syntastic_text_language_check_checker	plugged/syntastic/syntax_checkers/text/language_check.vim	/^let g:loaded_syntastic_text_language_check_checker = 1$/;"	v
g:loaded_syntastic_twig_twiglint_checker	plugged/syntastic/syntax_checkers/twig/twiglint.vim	/^let g:loaded_syntastic_twig_twiglint_checker = 1$/;"	v
g:loaded_syntastic_typescript_tsc_checker	plugged/syntastic/syntax_checkers/typescript/tsc.vim	/^let g:loaded_syntastic_typescript_tsc_checker = 1$/;"	v
g:loaded_syntastic_typescript_tslint_checker	plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^let g:loaded_syntastic_typescript_tslint_checker = 1$/;"	v
g:loaded_syntastic_util_autoload	plugged/syntastic/autoload/syntastic/util.vim	/^let g:loaded_syntastic_util_autoload = 1$/;"	v
g:loaded_syntastic_vala_valac_checker	plugged/syntastic/syntax_checkers/vala/valac.vim	/^let g:loaded_syntastic_vala_valac_checker = 1$/;"	v
g:loaded_syntastic_verilog_verilator_checker	plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^let g:loaded_syntastic_verilog_verilator_checker = 1$/;"	v
g:loaded_syntastic_vhdl_ghdl_checker	plugged/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let g:loaded_syntastic_vhdl_ghdl_checker = 1$/;"	v
g:loaded_syntastic_vim_vimlint_checker	plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^let g:loaded_syntastic_vim_vimlint_checker = 1$/;"	v
g:loaded_syntastic_vim_vint_checker	plugged/syntastic/syntax_checkers/vim/vint.vim	/^let g:loaded_syntastic_vim_vint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_jshint_checker	plugged/syntastic/syntax_checkers/xhtml/jshint.vim	/^let g:loaded_syntastic_xhtml_jshint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_tidy_checker	plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^let g:loaded_syntastic_xhtml_tidy_checker = 1$/;"	v
g:loaded_syntastic_xml_plutil_checker	plugged/syntastic/syntax_checkers/xml/plutil.vim	/^let g:loaded_syntastic_xml_plutil_checker = 1$/;"	v
g:loaded_syntastic_xml_xmllint_checker	plugged/syntastic/syntax_checkers/xml/xmllint.vim	/^let g:loaded_syntastic_xml_xmllint_checker = 1$/;"	v
g:loaded_syntastic_xslt_xmllint_checker	plugged/syntastic/syntax_checkers/xslt/xmllint.vim	/^let g:loaded_syntastic_xslt_xmllint_checker = 1$/;"	v
g:loaded_syntastic_yacc_bison_checker	plugged/syntastic/syntax_checkers/yacc/bison.vim	/^let g:loaded_syntastic_yacc_bison_checker = 1$/;"	v
g:loaded_syntastic_yaml_jsyaml_checker	plugged/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let g:loaded_syntastic_yaml_jsyaml_checker = 1$/;"	v
g:loaded_syntastic_yaml_yamlxs_checker	plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^let g:loaded_syntastic_yaml_yamlxs_checker = 1$/;"	v
g:loaded_syntastic_z80_z80syntaxchecker_checker	plugged/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let g:loaded_syntastic_z80_z80syntaxchecker_checker = 1$/;"	v
g:loaded_syntastic_zpt_zptlint_checker	plugged/syntastic/syntax_checkers/zpt/zptlint.vim	/^let g:loaded_syntastic_zpt_zptlint_checker = 1$/;"	v
g:loaded_syntastic_zsh_zsh_checker	plugged/syntastic/syntax_checkers/zsh/zsh.vim	/^let g:loaded_syntastic_zsh_zsh_checker = 1$/;"	v
g:loaded_unite	plugged/unite.vim/plugin/unite.vim	/^let g:loaded_unite = 1$/;"	v
g:loaded_unite_source_bookmark	plugged/unite.vim/plugin/unite/bookmark.vim	/^let g:loaded_unite_source_bookmark = 1$/;"	v
g:loaded_unite_source_buffer	plugged/unite.vim/plugin/unite/buffer.vim	/^let g:loaded_unite_source_buffer = 1$/;"	v
g:loaded_unite_source_history_yank	plugged/unite.vim/plugin/unite/history_yank.vim	/^let g:loaded_unite_source_history_yank = 1$/;"	v
g:loaded_unite_source_window	plugged/unite.vim/plugin/unite/window.vim	/^let g:loaded_unite_source_window = 1$/;"	v
g:loaded_vimproc	plugged/vimproc.vim/plugin/vimproc.vim	/^let g:loaded_vimproc = 1$/;"	v
g:loaded_wakatime	plugged/vim-wakatime/plugin/wakatime.vim	/^    let g:loaded_wakatime = 1$/;"	v
g:macvim_skim_app_path	plugged/Nvim-R/R/common_global.vim	/^        let g:macvim_skim_app_path = '\/Applications\/Skim.app'$/;"	v
g:nerdtree_tabs_autoclose	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_autoclose = 1$/;"	v
g:nerdtree_tabs_autofind	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_autofind = 0$/;"	v
g:nerdtree_tabs_focus_on_files	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_focus_on_files = 0$/;"	v
g:nerdtree_tabs_meaningful_tab_names	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_meaningful_tab_names = 1$/;"	v
g:nerdtree_tabs_no_startup_for_diff	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^    let g:nerdtree_tabs_no_startup_for_diff = 1$/;"	v
g:nerdtree_tabs_open_on_console_startup	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_open_on_console_startup = 0$/;"	v
g:nerdtree_tabs_open_on_gui_startup	configs/plugins/nerdtree.vim	/^let g:nerdtree_tabs_open_on_gui_startup = 0$/;"	v
g:nerdtree_tabs_open_on_gui_startup	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_open_on_gui_startup = 1$/;"	v
g:nerdtree_tabs_open_on_new_tab	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_open_on_new_tab = 1$/;"	v
g:nerdtree_tabs_smart_startup_focus	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_smart_startup_focus = 1$/;"	v
g:nerdtree_tabs_startup_cd	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_startup_cd = 1$/;"	v
g:nerdtree_tabs_synchronize_focus	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_synchronize_focus = 1$/;"	v
g:nerdtree_tabs_synchronize_view	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_synchronize_view = 1$/;"	v
g:plugs_order	autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
g:r_indent_ess_comments	plugged/Nvim-R/R/common_global.vim	/^    let g:r_indent_ess_comments = 0$/;"	v
g:repeat_reg	plugged/repeat.vim/autoload/repeat.vim	/^let g:repeat_reg = ['', '']$/;"	v
g:repeat_tick	plugged/repeat.vim/autoload/repeat.vim	/^let g:repeat_tick = -1$/;"	v
g:rplugin_R	plugged/Nvim-R/R/common_global.vim	/^        let g:rplugin_R = "Rgui.exe"$/;"	v
g:rplugin_R	plugged/Nvim-R/R/common_global.vim	/^        let g:rplugin_R = "Rterm.exe"$/;"	v
g:rplugin_R	plugged/Nvim-R/R/common_global.vim	/^    let g:rplugin_R = "R"$/;"	v
g:rplugin_R_job	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_R_job = 0$/;"	v
g:rplugin_R_path	plugged/Nvim-R/R/common_global.vim	/^    let g:rplugin_R_path = expand(g:R_path)$/;"	v
g:rplugin_Rhelp_list	plugged/Nvim-R/R/functions.vim	/^let g:rplugin_Rhelp_list = []$/;"	v
g:rplugin_addedtohist	plugged/Nvim-R/R/common_global.vim	/^    let g:rplugin_addedtohist = 0$/;"	v
g:rplugin_clt_job	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_clt_job = 0$/;"	v
g:rplugin_compldir	plugged/Nvim-R/R/setcompldir.vim	/^    let g:rplugin_compldir = $APPDATA . "\\\\Nvim-R"$/;"	v
g:rplugin_compldir	plugged/Nvim-R/R/setcompldir.vim	/^    let g:rplugin_compldir = expand("~\/.cache\/Nvim-R")$/;"	v
g:rplugin_compldir	plugged/Nvim-R/R/setcompldir.vim	/^    let g:rplugin_compldir = expand("~\/Library\/Caches\/Nvim-R")$/;"	v
g:rplugin_compldir	plugged/Nvim-R/R/setcompldir.vim	/^    let g:rplugin_compldir = expand(g:R_compldir)$/;"	v
g:rplugin_compldir	plugged/Nvim-R/R/setcompldir.vim	/^    let g:rplugin_compldir = g:rplugin_uservimfiles . "\/R\/objlist\/"$/;"	v
g:rplugin_curview	plugged/Nvim-R/ftplugin/rbrowser.vim	/^let g:rplugin_curview = "GlobalEnv"$/;"	v
g:rplugin_debug_lists	plugged/Nvim-R/R/functions.vim	/^let g:rplugin_debug_lists = []$/;"	v
g:rplugin_did_global_stuff	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_did_global_stuff = 1$/;"	v
g:rplugin_do_tmux_split	plugged/Nvim-R/R/common_global.vim	/^    let g:rplugin_do_tmux_split = 0$/;"	v
g:rplugin_do_tmux_split	plugged/Nvim-R/R/common_global.vim	/^    let g:rplugin_do_tmux_split = 1$/;"	v
g:rplugin_docfile	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_docfile = g:rplugin_tmpdir . "\/Rdoc"$/;"	v
g:rplugin_evince_loop	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^            let g:rplugin_evince_loop = 0$/;"	v
g:rplugin_failed	plugged/Nvim-R/R/common_global.vim	/^        let g:rplugin_failed = 1$/;"	v
g:rplugin_failed	plugged/Nvim-R/R/common_global.vim	/^    let g:rplugin_failed = 1$/;"	v
g:rplugin_failed	plugged/Nvim-R/R/external_term.vim	/^    let g:rplugin_failed = 1$/;"	v
g:rplugin_failed	plugged/Nvim-R/R/setcompldir.vim	/^    let g:rplugin_failed = 1$/;"	v
g:rplugin_failed	plugged/Nvim-R/R/windows.vim	/^        let g:rplugin_failed = 1$/;"	v
g:rplugin_firstbuffer	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_firstbuffer = expand("%:p")$/;"	v
g:rplugin_globalenvlines	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_globalenvlines = []$/;"	v
g:rplugin_has_latexmk	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^        let g:rplugin_has_latexmk = 0$/;"	v
g:rplugin_has_latexmk	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^        let g:rplugin_has_latexmk = 1$/;"	v
g:rplugin_has_pandoc	plugged/Nvim-R/ftplugin/rmd_nvimr.vim	/^let g:rplugin_has_pandoc = 0$/;"	v
g:rplugin_has_rst2pdf	plugged/Nvim-R/ftplugin/rrst_nvimr.vim	/^let g:rplugin_has_rst2pdf = 0$/;"	v
g:rplugin_has_soffice	plugged/Nvim-R/ftplugin/rmd_nvimr.vim	/^let g:rplugin_has_soffice = 0$/;"	v
g:rplugin_has_wmctrl	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_has_wmctrl = 0$/;"	v
g:rplugin_hasbrowsermenu	plugged/Nvim-R/ftplugin/rbrowser.vim	/^    let g:rplugin_hasbrowsermenu = 0$/;"	v
g:rplugin_hasmenu	plugged/Nvim-R/R/common_global.vim	/^    let g:rplugin_hasmenu = 0$/;"	v
g:rplugin_hasmenu	plugged/Nvim-R/ftplugin/rbrowser.vim	/^    let g:rplugin_hasmenu = 0$/;"	v
g:rplugin_home	plugged/Nvim-R/R/setcompldir.vim	/^    let g:rplugin_home = substitute(g:rplugin_home, "\\\\", "\/", "g")$/;"	v
g:rplugin_home	plugged/Nvim-R/R/setcompldir.vim	/^let g:rplugin_home = expand("<sfile>:h:h")$/;"	v
g:rplugin_is_darwin	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_is_darwin = system("uname") =~ "Darwin"$/;"	v
g:rplugin_job_handlers	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_job_handlers = {'on_stdout': function('ROnJobStdout'), 'on_stderr': function('ROnJobStderr'), 'on_exit': function('ROnJobExit')}$/;"	v
g:rplugin_last_r_prompt	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_last_r_prompt = ""$/;"	v
g:rplugin_lastev	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_lastev = ""$/;"	v
g:rplugin_lastft	plugged/Nvim-R/R/common_buffer.vim	/^let g:rplugin_lastft = &filetype$/;"	v
g:rplugin_lists_to_load	plugged/Nvim-R/R/functions.vim	/^let g:rplugin_lists_to_load = split(g:R_start_libs, ",")$/;"	v
g:rplugin_loaded_lists	plugged/Nvim-R/R/functions.vim	/^let g:rplugin_loaded_lists = []$/;"	v
g:rplugin_myport	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_myport = 0$/;"	v
g:rplugin_new_libs	plugged/Nvim-R/R/functions.vim	/^let g:rplugin_new_libs = 0$/;"	v
g:rplugin_null	plugged/Nvim-R/R/common_global.vim	/^    let g:rplugin_null = "'NUL'"$/;"	v
g:rplugin_null	plugged/Nvim-R/R/common_global.vim	/^    let g:rplugin_null = "'\/dev\/null'"$/;"	v
g:rplugin_null	plugged/Nvim-R/R/common_global.vim	/^    let g:rplugin_null = 'tempfile()'$/;"	v
g:rplugin_nvimcom_bin_dir	plugged/Nvim-R/R/common_global.vim	/^        let g:rplugin_nvimcom_bin_dir = s:filelines[1]$/;"	v
g:rplugin_nvimcom_bin_dir	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_nvimcom_bin_dir = ""$/;"	v
g:rplugin_nvimcom_port	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_nvimcom_port = 0$/;"	v
g:rplugin_ob_port	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_ob_port = 0$/;"	v
g:rplugin_omni_lines	plugged/Nvim-R/R/functions.vim	/^let g:rplugin_omni_lines = []$/;"	v
g:rplugin_py_exec	plugged/Nvim-R/R/common_global.vim	/^    let g:rplugin_py_exec = "python"$/;"	v
g:rplugin_py_exec	plugged/Nvim-R/R/common_global.vim	/^    let g:rplugin_py_exec = "python3"$/;"	v
g:rplugin_py_exec	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_py_exec = "none"$/;"	v
g:rplugin_python_initialized	plugged/Nvim-R/R/windows.vim	/^let g:rplugin_python_initialized = 0$/;"	v
g:rplugin_r64app	plugged/Nvim-R/R/common_global.vim	/^        let g:rplugin_r64app = 1$/;"	v
g:rplugin_r64app	plugged/Nvim-R/R/common_global.vim	/^    let g:rplugin_r64app = 0$/;"	v
g:rplugin_r_pid	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_r_pid = 0$/;"	v
g:rplugin_rhist_pos	plugged/Nvim-R/R/common_global.vim	/^    let g:rplugin_rhist_pos = -1$/;"	v
g:rplugin_rhistory	plugged/Nvim-R/R/common_global.vim	/^    let g:rplugin_rhistory = [ ]$/;"	v
g:rplugin_rsource	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_rsource = g:rplugin_tmpdir . "\/Rsource-" . getpid()$/;"	v
g:rplugin_running_objbr	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_running_objbr = 0$/;"	v
g:rplugin_running_rhelp	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_running_rhelp = 0$/;"	v
g:rplugin_sleeptime	plugged/Nvim-R/R/windows.vim	/^let g:rplugin_sleeptime = g:R_sleeptime . 'm'$/;"	v
g:rplugin_srv_job	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_srv_job = 0$/;"	v
g:rplugin_srv_job	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^            let g:rplugin_srv_job = jobstart("nvimrserver", g:rplugin_job_handlers)$/;"	v
g:rplugin_starting_R	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_starting_R = 0$/;"	v
g:rplugin_status_line	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_status_line = &statusline$/;"	v
g:rplugin_sumatra_in_path	plugged/Nvim-R/R/windows.vim	/^let g:rplugin_sumatra_in_path = 0$/;"	v
g:rplugin_termcmd	plugged/Nvim-R/R/external_term.vim	/^        let g:rplugin_termcmd = "konsole --icon " . g:rplugin_home . "\/bitmaps\/ricon.png -e"$/;"	v
g:rplugin_termcmd	plugged/Nvim-R/R/external_term.vim	/^        let g:rplugin_termcmd = "konsole --workdir '" . expand("%:p:h") . "' --icon " . g:rplugin_home . "\/bitmaps\/ricon.png -e"$/;"	v
g:rplugin_termcmd	plugged/Nvim-R/R/external_term.vim	/^        let g:rplugin_termcmd = "roxterm --directory='" . expand("%:p:h") . "' --title R -e"$/;"	v
g:rplugin_termcmd	plugged/Nvim-R/R/external_term.vim	/^        let g:rplugin_termcmd = "roxterm --title R -e"$/;"	v
g:rplugin_termcmd	plugged/Nvim-R/R/external_term.vim	/^        let g:rplugin_termcmd = "terminator --title R -x"$/;"	v
g:rplugin_termcmd	plugged/Nvim-R/R/external_term.vim	/^        let g:rplugin_termcmd = "terminator --working-directory='" . expand("%:p:h") . "' --title R -x"$/;"	v
g:rplugin_termcmd	plugged/Nvim-R/R/external_term.vim	/^        let g:rplugin_termcmd = g:R_term . " --title R -e"$/;"	v
g:rplugin_termcmd	plugged/Nvim-R/R/external_term.vim	/^        let g:rplugin_termcmd = g:R_term . " --working-directory='" . expand("%:p:h") . "' --title R -e"$/;"	v
g:rplugin_termcmd	plugged/Nvim-R/R/external_term.vim	/^    let g:rplugin_termcmd = "Eterm --icon " . g:rplugin_home . "\/bitmaps\/ricon.png -e"$/;"	v
g:rplugin_termcmd	plugged/Nvim-R/R/external_term.vim	/^    let g:rplugin_termcmd = g:R_term . " -cd '" . expand("%:p:h") . "' -title R -xrm '*iconPixmap: " . g:rplugin_home . "\/bitmaps\/ricon.xbm' -e"$/;"	v
g:rplugin_termcmd	plugged/Nvim-R/R/external_term.vim	/^    let g:rplugin_termcmd = g:R_term . " -xrm '*iconPixmap: " . g:rplugin_home . "\/bitmaps\/ricon.xbm' -e"$/;"	v
g:rplugin_termcmd	plugged/Nvim-R/R/external_term.vim	/^    let g:rplugin_termcmd = g:R_term_cmd$/;"	v
g:rplugin_termcmd	plugged/Nvim-R/R/external_term.vim	/^let g:rplugin_termcmd = g:R_term . " -e"$/;"	v
g:rplugin_tmpdir	plugged/Nvim-R/R/common_global.vim	/^                let g:rplugin_tmpdir = $TMPDIR . "Nvim-R-" . g:rplugin_userlogin$/;"	v
g:rplugin_tmpdir	plugged/Nvim-R/R/common_global.vim	/^                let g:rplugin_tmpdir = $TMPDIR . "\/Nvim-R-" . g:rplugin_userlogin$/;"	v
g:rplugin_tmpdir	plugged/Nvim-R/R/common_global.vim	/^            let g:rplugin_tmpdir = "\/tmp\/Nvim-R-" . g:rplugin_userlogin$/;"	v
g:rplugin_tmpdir	plugged/Nvim-R/R/common_global.vim	/^            let g:rplugin_tmpdir = $TEMP . "\/Nvim-R-" . g:rplugin_userlogin$/;"	v
g:rplugin_tmpdir	plugged/Nvim-R/R/common_global.vim	/^            let g:rplugin_tmpdir = $TMP . "\/NvimR-" . g:rplugin_userlogin$/;"	v
g:rplugin_tmpdir	plugged/Nvim-R/R/common_global.vim	/^            let g:rplugin_tmpdir = g:rplugin_uservimfiles . "\/R\/tmp"$/;"	v
g:rplugin_tmpdir	plugged/Nvim-R/R/common_global.vim	/^        let g:rplugin_tmpdir = substitute(g:rplugin_tmpdir, "\\\\", "\/", "g")$/;"	v
g:rplugin_tmpdir	plugged/Nvim-R/R/common_global.vim	/^    let g:rplugin_tmpdir = expand(g:R_tmpdir)$/;"	v
g:rplugin_tmuxsname	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_tmuxsname = "NvimR-" . substitute(localtime(), '.*\\(...\\)', '\\1', '')$/;"	v
g:rplugin_upobcnt	plugged/Nvim-R/ftplugin/rbrowser.vim	/^let g:rplugin_upobcnt = 0$/;"	v
g:rplugin_userlogin	plugged/Nvim-R/R/setcompldir.vim	/^        let g:rplugin_userlogin = substitute($USERNAME, '\\W', '', 'g')$/;"	v
g:rplugin_userlogin	plugged/Nvim-R/R/setcompldir.vim	/^    let g:rplugin_userlogin = $USER$/;"	v
g:rplugin_userlogin	plugged/Nvim-R/R/setcompldir.vim	/^    let g:rplugin_userlogin = $USERNAME$/;"	v
g:rplugin_userlogin	plugged/Nvim-R/R/setcompldir.vim	/^    let g:rplugin_userlogin = substitute(system('whoami'), '\\W', '-', 'g')$/;"	v
g:rplugin_userlogin	plugged/Nvim-R/R/setcompldir.vim	/^let g:rplugin_userlogin = substitute(substitute(g:rplugin_userlogin, '.*\\\\', '', ''), '\\W', '', 'g')$/;"	v
g:rplugin_uservimfiles	plugged/Nvim-R/R/setcompldir.vim	/^    let g:rplugin_uservimfiles = g:rplugin_home$/;"	v
g:rplugin_uservimfiles	plugged/Nvim-R/R/setcompldir.vim	/^    let g:rplugin_uservimfiles = split(&runtimepath, ",")[0]$/;"	v
g:rplugin_uservimfiles	plugged/Nvim-R/R/setcompldir.vim	/^    let g:rplugin_uservimfiles = substitute(g:rplugin_uservimfiles, "\\\\", "\/", "g")$/;"	v
g:rplugin_zathura_pid	plugged/Nvim-R/R/common_global.vim	/^let g:rplugin_zathura_pid = {}$/;"	v
g:rplugin_zathura_pid	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^            let g:rplugin_zathura_pid[s:this_master] = 0$/;"	v
g:ruby_default_path	plugged/vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_default_path = map(split($RUBYLIB,':'), 'v:val ==# "." ? "" : v:val')$/;"	v
g:ruby_default_path	plugged/vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_default_path = s:query_path($HOME)$/;"	v
g:ruby_indent_access_modifier_style	plugged/vim-ruby/indent/ruby.vim	/^  let g:ruby_indent_access_modifier_style = 'normal'$/;"	v
g:ruby_version_paths	plugged/vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_version_paths[b:ruby_version] = s:query_path(fnamemodify(s:version_file, ':p:h'))$/;"	v
g:ruby_version_paths	plugged/vim-ruby/ftplugin/ruby.vim	/^  let g:ruby_version_paths = {}$/;"	v
g:rubycomplete_buffer_loading	plugged/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_classes_in_global	plugged/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_include_object	plugged/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	plugged/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_rails	plugged/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:smartpairs_key	plugged/smartpairs.vim/plugin/smartpairs.vim	/^    let g:smartpairs_key = 'v'$/;"	v
g:smartpairs_maxdepth	plugged/smartpairs.vim/plugin/smartpairs.vim	/^    let g:smartpairs_maxdepth = 20$/;"	v
g:smartpairs_nextpairs_key	plugged/smartpairs.vim/plugin/smartpairs.vim	/^    let g:smartpairs_nextpairs_key = 'v'$/;"	v
g:smartpairs_nextpairs_key_a	plugged/smartpairs.vim/plugin/smartpairs.vim	/^    let g:smartpairs_nextpairs_key_a = 'M'$/;"	v
g:smartpairs_nextpairs_key_i	plugged/smartpairs.vim/plugin/smartpairs.vim	/^    let g:smartpairs_nextpairs_key_i = 'm'$/;"	v
g:smartpairs_revert_key	plugged/smartpairs.vim/plugin/smartpairs.vim	/^    let g:smartpairs_revert_key = '<C-V>'$/;"	v
g:smartpairs_start_from_word	plugged/smartpairs.vim/plugin/smartpairs.vim	/^    let g:smartpairs_start_from_word = 0$/;"	v
g:smartpairs_uber_mode	plugged/smartpairs.vim/plugin/smartpairs.vim	/^    let g:smartpairs_uber_mode = 1$/;"	v
g:smartpairs_uber_mode	plugged/smartpairs.vim/spec/support/settings.vim	/^let g:smartpairs_uber_mode = 0$/;"	v
g:source	plugged/unite.vim/test/source.vim	/^let g:source = {$/;"	v
g:syntastic_	plugged/syntastic/plugin/syntastic.vim	/^        let g:syntastic_{s:key} = copy(g:_SYNTASTIC_DEFAULTS[s:key])$/;"	v
g:syntastic_ada_compiler_options	plugged/syntastic/syntax_checkers/ada/gcc.vim	/^    let g:syntastic_ada_compiler_options = ''$/;"	v
g:syntastic_apiblueprint_snowcrash_sort	plugged/syntastic/syntax_checkers/apiblueprint/snowcrash.vim	/^    let g:syntastic_apiblueprint_snowcrash_sort = 1$/;"	v
g:syntastic_asm_compiler_options	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^    let g:syntastic_asm_compiler_options = ''$/;"	v
g:syntastic_avrgcc_config_file	plugged/syntastic/syntax_checkers/c/avrgcc.vim	/^    let g:syntastic_avrgcc_config_file = '.syntastic_avrgcc_config'$/;"	v
g:syntastic_c_clang_check_sort	plugged/syntastic/syntax_checkers/c/clang_check.vim	/^    let g:syntastic_c_clang_check_sort = 1$/;"	v
g:syntastic_c_clang_tidy_sort	plugged/syntastic/syntax_checkers/c/clang_tidy.vim	/^    let g:syntastic_c_clang_tidy_sort = 1$/;"	v
g:syntastic_c_compiler_options	plugged/syntastic/syntax_checkers/c/gcc.vim	/^    let g:syntastic_c_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_c_oclint_sort	plugged/syntastic/syntax_checkers/c/oclint.vim	/^    let g:syntastic_c_oclint_sort = 1$/;"	v
g:syntastic_clang_check_config_file	plugged/syntastic/syntax_checkers/c/clang_check.vim	/^    let g:syntastic_clang_check_config_file = '.syntastic_clang_check_config'$/;"	v
g:syntastic_clang_tidy_config_file	plugged/syntastic/syntax_checkers/c/clang_tidy.vim	/^    let g:syntastic_clang_tidy_config_file = '.syntastic_clang_tidy_config'$/;"	v
g:syntastic_cobol_compiler_options	plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^    let g:syntastic_cobol_compiler_options = ''$/;"	v
g:syntastic_cpp_compiler_options	plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^    let g:syntastic_cpp_compiler_options = ''$/;"	v
g:syntastic_cpp_cpplint_thres	plugged/syntastic/syntax_checkers/cpp/cpplint.vim	/^    let g:syntastic_cpp_cpplint_thres = 5$/;"	v
g:syntastic_cppcheck_config_file	plugged/syntastic/syntax_checkers/c/cppcheck.vim	/^    let g:syntastic_cppcheck_config_file = '.syntastic_cppcheck_config'$/;"	v
g:syntastic_css_prettycss_sort	plugged/syntastic/syntax_checkers/css/prettycss.vim	/^    let g:syntastic_css_prettycss_sort = 1$/;"	v
g:syntastic_d_compiler_options	plugged/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_compiler_options = ''$/;"	v
g:syntastic_enable_balloons	plugged/syntastic/plugin/syntastic/balloons.vim	/^    let g:syntastic_enable_balloons = 0$/;"	v
g:syntastic_erlc_include_path	plugged/syntastic/syntax_checkers/erlang/escript.vim	/^    let g:syntastic_erlc_include_path = ''$/;"	v
g:syntastic_fortran_compiler_options	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^    let g:syntastic_fortran_compiler_options = ''$/;"	v
g:syntastic_haskell_scan_sort	plugged/syntastic/syntax_checkers/haskell/scan.vim	/^    let g:syntastic_haskell_scan_sort = 1$/;"	v
g:syntastic_html_tidy_blocklevel_tags	plugged/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_blocklevel_tags = []$/;"	v
g:syntastic_html_tidy_empty_tags	plugged/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_empty_tags = []$/;"	v
g:syntastic_html_tidy_ignore_errors	plugged/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_ignore_errors = []$/;"	v
g:syntastic_html_tidy_inline_tags	plugged/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_inline_tags = []$/;"	v
g:syntastic_html_validator_api	plugged/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_api = 'https:\/\/validator.nu\/'$/;"	v
g:syntastic_html_validator_nsfilter	plugged/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_nsfilter = ''$/;"	v
g:syntastic_html_validator_parser	plugged/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_parser = ''$/;"	v
g:syntastic_html_w3_api	plugged/syntastic/syntax_checkers/html/w3.vim	/^    let g:syntastic_html_w3_api = 'http:\/\/validator.w3.org\/check'$/;"	v
g:syntastic_java_checkstyle_classpath	plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_classpath = 'checkstyle-5.5-all.jar'$/;"	v
g:syntastic_java_checkstyle_conf_file	plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_conf_file = 'sun_checks.xml'$/;"	v
g:syntastic_java_javac_autoload_maven_classpath	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_autoload_maven_classpath = 1$/;"	v
g:syntastic_java_javac_classpath	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_classpath = ''$/;"	v
g:syntastic_java_javac_config_file	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file = '.syntastic_javac_config'$/;"	v
g:syntastic_java_javac_config_file_enabled	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file_enabled = 0$/;"	v
g:syntastic_java_javac_custom_classpath_command	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_custom_classpath_command = ''$/;"	v
g:syntastic_java_javac_delete_output	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_delete_output = 1$/;"	v
g:syntastic_java_javac_executable	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_executable = 'javac'$/;"	v
g:syntastic_java_javac_maven_pom_classpath	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_classpath = {}$/;"	v
g:syntastic_java_javac_maven_pom_ftime	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_ftime = {}$/;"	v
g:syntastic_java_javac_maven_pom_properties	plugged/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_properties = {}$/;"	v
g:syntastic_java_javac_maven_pom_tags	plugged/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_tags = ['build', 'properties']$/;"	v
g:syntastic_java_javac_options	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_options = '-Xlint'$/;"	v
g:syntastic_java_maven_executable	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_executable = 'mvn'$/;"	v
g:syntastic_java_maven_options	plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_options = ''$/;"	v
g:syntastic_javascript_eslint_sort	plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^    let g:syntastic_javascript_eslint_sort = 1$/;"	v
g:syntastic_javascript_flow_sort	plugged/syntastic/syntax_checkers/javascript/flow.vim	/^    let g:syntastic_javascript_flow_sort = 1$/;"	v
g:syntastic_javascript_jscs_sort	plugged/syntastic/syntax_checkers/javascript/jscs.vim	/^    let g:syntastic_javascript_jscs_sort = 1$/;"	v
g:syntastic_javascript_jshint_sort	plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^    let g:syntastic_javascript_jshint_sort = 1$/;"	v
g:syntastic_less_options	plugged/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_options = ''$/;"	v
g:syntastic_less_use_less_lint	plugged/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_use_less_lint = 0$/;"	v
g:syntastic_markdown_mdl_sort	plugged/syntastic/syntax_checkers/markdown/mdl.vim	/^    let g:syntastic_markdown_mdl_sort = 1$/;"	v
g:syntastic_objc_compiler_options	plugged/syntastic/syntax_checkers/objc/gcc.vim	/^    let g:syntastic_objc_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_objcpp_compiler_options	plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^    let g:syntastic_objcpp_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_ocaml_use_janestreet_core	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_janestreet_core = 0$/;"	v
g:syntastic_ocaml_use_ocamlbuild	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlbuild = 0$/;"	v
g:syntastic_ocaml_use_ocamlc	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlc = 0$/;"	v
g:syntastic_oclint_config_file	plugged/syntastic/syntax_checkers/c/oclint.vim	/^    let g:syntastic_oclint_config_file = '.syntastic_oclint_config'$/;"	v
g:syntastic_pc_lint_config_file	plugged/syntastic/syntax_checkers/c/pc_lint.vim	/^    let g:syntastic_pc_lint_config_file = 'options.lnt'$/;"	v
g:syntastic_perl_lib_path	plugged/syntastic/syntax_checkers/perl/perl.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_lib_path	plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_perlcritic_thres	plugged/syntastic/syntax_checkers/perl/perlcritic.vim	/^    let g:syntastic_perl_perlcritic_thres = 5$/;"	v
g:syntastic_python_prospector_sort	plugged/syntastic/syntax_checkers/python/prospector.vim	/^    let g:syntastic_python_prospector_sort = 1$/;"	v
g:syntastic_python_pylama_sort	plugged/syntastic/syntax_checkers/python/pylama.vim	/^    let g:syntastic_python_pylama_sort = 1$/;"	v
g:syntastic_python_pylint_sort	plugged/syntastic/syntax_checkers/python/pylint.vim	/^    let g:syntastic_python_pylint_sort = 1$/;"	v
g:syntastic_python_python_use_codec	plugged/syntastic/syntax_checkers/python/python.vim	/^    let g:syntastic_python_python_use_codec = 0$/;"	v
g:syntastic_quiet_messages	plugged/syntastic/plugin/syntastic.vim	/^        let g:syntastic_quiet_messages['type'] = s:quiet_warnings$/;"	v
g:syntastic_r_lint_sort	plugged/syntastic/syntax_checkers/r/lint.vim	/^    let g:syntastic_r_lint_sort = 1$/;"	v
g:syntastic_r_lint_styles	plugged/syntastic/syntax_checkers/r/lint.vim	/^    let g:syntastic_r_lint_styles = 'lint.style'$/;"	v
g:syntastic_r_svtools_styles	plugged/syntastic/syntax_checkers/r/svtools.vim	/^    let g:syntastic_r_svtools_styles = 'lint.style'$/;"	v
g:syntastic_racket_code_ayatollah_script	plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_script = 'code-ayatollah.rkt'$/;"	v
g:syntastic_racket_code_ayatollah_sort	plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_sort = 1$/;"	v
g:syntastic_sass_check_partials	plugged/syntastic/syntax_checkers/sass/sass.vim	/^    let g:syntastic_sass_check_partials = 0$/;"	v
g:syntastic_scala_scalastyle_config_file	plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^    let g:syntastic_scala_scalastyle_config_file = 'scalastyle_config.xml'$/;"	v
g:syntastic_scala_scalastyle_jar	plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^    let g:syntastic_scala_scalastyle_jar = 'scalastyle-batch_2.10.jar'$/;"	v
g:syntastic_shell	plugged/syntastic/plugin/syntastic.vim	/^    let g:syntastic_shell = &shell$/;"	v
g:syntastic_sparse_config_file	plugged/syntastic/syntax_checkers/c/sparse.vim	/^    let g:syntastic_sparse_config_file = '.syntastic_sparse_config'$/;"	v
g:syntastic_splint_config_file	plugged/syntastic/syntax_checkers/c/splint.vim	/^    let g:syntastic_splint_config_file = '.syntastic_splint_config'$/;"	v
g:syntastic_tex_chktex_showmsgs	plugged/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_showmsgs = 1$/;"	v
g:syntastic_tex_chktex_sort	plugged/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_sort = 1$/;"	v
g:syntastic_text_atdtool_sort	plugged/syntastic/syntax_checkers/text/atdtool.vim	/^    let g:syntastic_text_atdtool_sort = 1$/;"	v
g:syntastic_typescript_tsc_sort	plugged/syntastic/syntax_checkers/typescript/tsc.vim	/^    let g:syntastic_typescript_tsc_sort = 1$/;"	v
g:syntastic_typescript_tslint_sort	plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^    let g:syntastic_typescript_tslint_sort = 1$/;"	v
g:syntastic_verapp_config_file	plugged/syntastic/syntax_checkers/cpp/verapp.vim	/^    let g:syntastic_verapp_config_file = '.syntastic_verapp_config'$/;"	v
g:syntastic_verilog_compiler_options	plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^    let g:syntastic_verilog_compiler_options = '-Wall'$/;"	v
g:syntastic_vim_vint_sort	plugged/syntastic/syntax_checkers/vim/vint.vim	/^    let g:syntastic_vim_vint_sort = 1$/;"	v
g:syntastic_xhtml_tidy_ignore_errors	plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^    let g:syntastic_xhtml_tidy_ignore_errors = []$/;"	v
g:tabular_default_format	plugged/tabular/autoload/tabular.vim	/^  let g:tabular_default_format = "l1"$/;"	v
g:tabular_loaded	plugged/tabular/plugin/Tabular.vim	/^let g:tabular_loaded = 1$/;"	v
g:tail#Center_Win	configs/plugins/tail.vim	/^let g:tail#Center_Win = 1$/;"	v
g:tail#Height	configs/plugins/tail.vim	/^let g:tail#Height = 15$/;"	v
g:unite_enable_auto_select	plugged/unite.vim/autoload/unite/init.vim	/^let g:unite_enable_auto_select =$/;"	v
g:unite_force_overwrite_statusline	plugged/unite.vim/autoload/unite/init.vim	/^let g:unite_force_overwrite_statusline =$/;"	v
g:unite_ignore_source_files	plugged/unite.vim/autoload/unite/init.vim	/^let g:unite_ignore_source_files =$/;"	v
g:unite_kind_file_preview_max_filesize	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^  let g:unite_kind_file_preview_max_filesize = 1000000$/;"	v
g:unite_kind_jump_list_after_jump_scroll	plugged/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let g:unite_kind_jump_list_after_jump_scroll = 25$/;"	v
g:unite_kind_jump_list_after_jump_scroll	plugged/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let g:unite_kind_jump_list_after_jump_scroll =$/;"	v
g:unite_quick_match_table	plugged/unite.vim/autoload/unite/init.vim	/^let g:unite_quick_match_table =$/;"	v
g:unite_redraw_hold_candidates	plugged/unite.vim/autoload/unite/init.vim	/^let g:unite_redraw_hold_candidates =$/;"	v
g:unite_source_grep_default_opts	configs/plugins/unite.vim	/^let g:unite_source_grep_default_opts = "-iRHn"$/;"	v
g:unite_source_rec_async_command	configs/plugins/unite.vim	/^let g:unite_source_rec_async_command='ag --nogroup --hidden -g ""'$/;"	v
g:user_emmet_leader_key	plugged/emmet-vim/plugin/emmet.vim	/^  let g:user_emmet_leader_key = '<c-y>'$/;"	v
g:vimproc#dll_path	plugged/vimproc.vim/autoload/vimproc.vim	/^let g:vimproc#dll_path =$/;"	v
g:vimproc#lexer#token_type	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^let g:vimproc#lexer#token_type = {$/;"	v
g:vimproc_password_pattern	plugged/vimproc.vim/autoload/vimproc.vim	/^let g:vimproc_password_pattern = g:vimproc#password_pattern$/;"	v
g:vimwiki_list	configs/plugins/vimwiki.vim	/^let g:vimwiki_list = [$/;"	v
g:wakatime_HeartbeatFrequency	plugged/vim-wakatime/plugin/wakatime.vim	/^        let g:wakatime_HeartbeatFrequency = 2$/;"	v
g:wakatime_PythonBinary	plugged/vim-wakatime/plugin/wakatime.vim	/^        let g:wakatime_PythonBinary = 'python'$/;"	v
g<C-]>	plugged/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <script> <buffer> g<C-]>      :<C-U>exe         "tjump <C-R>=RubyCursorIdentifier()<CR>"<SID>foldopen<CR>$/;"	m
g]	plugged/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <script> <buffer> g]          :<C-U>exe       "tselect <C-R>=RubyCursorIdentifier()<CR>"<SID>foldopen<CR>$/;"	m
garbage_collect	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:garbage_collect(is_force) "{{{$/;"	f
gd	plugged/vim-go/ftplugin/go.vim	/^   nnoremap <buffer> <silent> gd :GoDef<cr>$/;"	m
ge	plugged/Nvim-R/ftplugin/rdoc.vim	/^nmap <buffer><silent> ge :call RDocExSection()<CR>$/;"	m
gen_elixir_sigil_rules	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    def gen_elixir_sigil_rules():$/;"	m	class:ElixirLexer
gen_elixir_sigil_rules	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    def gen_elixir_sigil_rules():$/;"	m	class:ElixirLexer
gen_elixir_sigstr_rules	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^def gen_elixir_sigstr_rules(term, token, interpol=True):$/;"	f
gen_elixir_sigstr_rules	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^def gen_elixir_sigstr_rules(term, token, interpol=True):$/;"	f
gen_elixir_string_rules	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^def gen_elixir_string_rules(name, symbol, token):$/;"	f
gen_elixir_string_rules	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^def gen_elixir_string_rules(name, symbol, token):$/;"	f
gen_rubystrings_rules	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    def gen_rubystrings_rules():$/;"	m	class:RubyLexer
gen_rubystrings_rules	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    def gen_rubystrings_rules():$/;"	m	class:RubyLexer
generate	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^        def generate():$/;"	f	function:Response.iter_content
get	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:get(name, ...) "{{{$/;"	f
get	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:get(...) " {{{$/;"	f
get	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def get(self):$/;"	m	class:words
get	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^    def get(self):$/;"	m	class:Future
get	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def get(self):$/;"	m	class:words
get	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^    def get(self):$/;"	m	class:Future
get	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^from .api import request, get, head, post, patch, put, delete, options$/;"	i
get	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/api.py	/^def get(url, params=None, **kwargs):$/;"	f
get	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def get(self, name, default=None, domain=None, path=None):$/;"	m	class:RequestsCookieJar
get	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    get = MutableMapping.get$/;"	v	class:HTTPHeaderDict
get	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def get(self, url, **kwargs):$/;"	m	class:Session
get	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/structures.py	/^    def get(self, key, default=None):$/;"	m	class:LookupDict
get	plugged/vim-wakatime/plugin/packages/wakatime/session_cache.py	/^    def get(self):$/;"	m	class:SessionCache
getLogger	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/ntlmpool.py	/^from logging import getLogger$/;"	i
getOffset	plugged/vim-go/autoload/go/def.vim	/^function! s:getOffset()$/;"	f
get_action_table	plugged/unite.vim/autoload/unite/action.vim	/^function! s:get_action_table(source_name, kind_name, self_func, is_parents_action, source_table) "{{{$/;"	f
get_actions	plugged/unite.vim/autoload/unite/sources/action.vim	/^function! s:get_actions(candidates, sources) "{{{$/;"	f
get_adapter	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def get_adapter(self, url):$/;"	m	class:Session
get_agenda_events	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! s:get_agenda_events() abort$/;"	f
get_alias_table	plugged/unite.vim/autoload/unite/action.vim	/^function! s:get_alias_table(source_name, kind_name, source_table) "{{{$/;"	f
get_all_filters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^from pygments.filters import get_all_filters, find_filter_class$/;"	i
get_all_filters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^def get_all_filters():$/;"	f
get_all_filters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^from pygments.filters import get_all_filters, find_filter_class$/;"	i
get_all_filters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^def get_all_filters():$/;"	f
get_all_formatters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    TerminalFormatter  # pylint:disable-msg=E0611$/;"	i
get_all_formatters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^def get_all_formatters():$/;"	f
get_all_formatters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    TerminalFormatter  # pylint:disable-msg=E0611$/;"	i
get_all_formatters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^def get_all_formatters():$/;"	f
get_all_lexers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    get_lexer_for_filename, find_lexer_class, TextLexer$/;"	i
get_all_lexers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^def get_all_lexers():$/;"	f
get_all_lexers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    get_lexer_for_filename, find_lexer_class, TextLexer$/;"	i
get_all_lexers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^def get_all_lexers():$/;"	f
get_all_styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^from pygments.styles import get_all_styles, get_style_by_name$/;"	i
get_all_styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/__init__.py	/^def get_all_styles():$/;"	f
get_all_styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^from pygments.styles import get_all_styles, get_style_by_name$/;"	i
get_all_styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/__init__.py	/^def get_all_styles():$/;"	f
get_auth_from_url	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def get_auth_from_url(url):$/;"	f
get_backoff_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/retry.py	/^    def get_backoff_time(self):$/;"	m	class:Retry
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^     get_choice_opt, ClassNotFound, OptionError, text_type, string_types$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatter.py	/^from pygments.util import get_bool_opt, string_types$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/bbcode.py	/^from pygments.util import get_bool_opt$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    StringIO, string_types, iteritems$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    get_choice_opt, xrange$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^    iteritems$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/svg.py	/^from pygments.util import get_bool_opt, get_int_opt$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    make_analysator, text_type, add_metaclass, iteritems, Future, guess_decode$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^from pygments.util import get_bool_opt$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^from pygments.util import get_bool_opt, iteritems$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^from pygments.util import get_bool_opt, ClassNotFound$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^from pygments.util import get_bool_opt, get_list_opt$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^from pygments.util import get_bool_opt$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^from pygments.util import get_bool_opt, get_list_opt, iteritems$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^from pygments.util import get_bool_opt, shebang_matches$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^from pygments.util import get_bool_opt, get_list_opt, iteritems$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^def get_bool_opt(options, optname, default=None):$/;"	f
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^     get_choice_opt, ClassNotFound, OptionError, text_type, string_types$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatter.py	/^from pygments.util import get_bool_opt, string_types$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/bbcode.py	/^from pygments.util import get_bool_opt$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    StringIO, string_types, iteritems$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    get_choice_opt, xrange$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^    iteritems$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/svg.py	/^from pygments.util import get_bool_opt, get_int_opt$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    make_analysator, text_type, add_metaclass, iteritems, Future, guess_decode$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^from pygments.util import get_bool_opt$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^from pygments.util import get_bool_opt, iteritems$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^from pygments.util import get_bool_opt, ClassNotFound$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^from pygments.util import get_bool_opt, get_list_opt$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^from pygments.util import get_bool_opt$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^from pygments.util import get_bool_opt, get_list_opt, iteritems$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^from pygments.util import get_bool_opt, shebang_matches$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^from pygments.util import get_bool_opt, get_list_opt, iteritems$/;"	i
get_bool_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^def get_bool_opt(options, optname, default=None):$/;"	f
get_browser_command	plugged/vim-go/autoload/go/play.vim	/^function! s:get_browser_command()$/;"	f
get_browser_command	plugged/vim-go/autoload/go/tool.vim	/^function! s:get_browser_command()$/;"	f
get_buffer_direction	plugged/unite.vim/autoload/unite/view.vim	/^function! s:get_buffer_direction(context) "{{{$/;"	f
get_buffer_list	plugged/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:get_buffer_list(is_bang, is_question, is_plus, is_minus) "{{{$/;"	f
get_bufnr	plugged/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:get_bufnr(candidate) "{{{$/;"	f
get_candidate_text	plugged/unite.vim/autoload/unite/kinds/common.vim	/^function! s:get_candidate_text(candidate) "{{{$/;"	f
get_candidates	plugged/unite.vim/autoload/unite/start.vim	/^function! s:get_candidates(sources, context) "{{{$/;"	f
get_candidates_action_table	plugged/unite.vim/autoload/unite/action.vim	/^function! s:get_candidates_action_table(action_name, candidates, sources) "{{{$/;"	f
get_char	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:get_char(...) "{{{$/;"	f
get_char	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/scanner.py	/^    def get_char(self):$/;"	m	class:Scanner
get_char	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/scanner.py	/^    def get_char(self):$/;"	m	class:Scanner
get_char_size	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def get_char_size(self):$/;"	m	class:FontManager
get_char_size	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def get_char_size(self):$/;"	m	class:FontManager
get_charset_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/big5prober.py	/^    def get_charset_name(self):$/;"	m	class:Big5Prober
get_charset_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetgroupprober.py	/^    def get_charset_name(self):$/;"	m	class:CharSetGroupProber
get_charset_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetprober.py	/^    def get_charset_name(self):$/;"	m	class:CharSetProber
get_charset_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/cp949prober.py	/^    def get_charset_name(self):$/;"	m	class:CP949Prober
get_charset_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escprober.py	/^    def get_charset_name(self):$/;"	m	class:EscCharSetProber
get_charset_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/eucjpprober.py	/^    def get_charset_name(self):$/;"	m	class:EUCJPProber
get_charset_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euckrprober.py	/^    def get_charset_name(self):$/;"	m	class:EUCKRProber
get_charset_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/euctwprober.py	/^    def get_charset_name(self):$/;"	m	class:EUCTWProber
get_charset_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/gb2312prober.py	/^    def get_charset_name(self):$/;"	m	class:GB2312Prober
get_charset_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^    def get_charset_name(self):$/;"	m	class:HebrewProber
get_charset_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^    def get_charset_name(self):$/;"	m	class:SJISContextAnalysis
get_charset_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^    def get_charset_name(self):$/;"	m	class:Latin1Prober
get_charset_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcharsetprober.py	/^    def get_charset_name(self):$/;"	m	class:MultiByteCharSetProber
get_charset_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcharsetprober.py	/^    def get_charset_name(self):$/;"	m	class:SingleByteCharSetProber
get_charset_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sjisprober.py	/^    def get_charset_name(self):$/;"	m	class:SJISProber
get_charset_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/utf8prober.py	/^    def get_charset_name(self):$/;"	m	class:UTF8Prober
get_choice_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^     get_choice_opt, ClassNotFound, OptionError, text_type, string_types$/;"	i
get_choice_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    get_choice_opt, xrange$/;"	i
get_choice_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^from pygments.util import OptionError, get_choice_opt$/;"	i
get_choice_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^from pygments.util import get_choice_opt$/;"	i
get_choice_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^from pygments.util import get_choice_opt, iteritems$/;"	i
get_choice_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^from pygments.util import get_choice_opt, text_type, BytesIO$/;"	i
get_choice_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^def get_choice_opt(options, optname, allowed, default=None, normcase=False):$/;"	f
get_choice_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^     get_choice_opt, ClassNotFound, OptionError, text_type, string_types$/;"	i
get_choice_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    get_choice_opt, xrange$/;"	i
get_choice_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^from pygments.util import OptionError, get_choice_opt$/;"	i
get_choice_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^from pygments.util import get_choice_opt$/;"	i
get_choice_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^from pygments.util import get_choice_opt, iteritems$/;"	i
get_choice_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^from pygments.util import get_choice_opt, text_type, BytesIO$/;"	i
get_choice_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^def get_choice_opt(options, optname, allowed, default=None, normcase=False):$/;"	f
get_coding_state_machine	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/codingstatemachine.py	/^    def get_coding_state_machine(self):$/;"	m	class:CodingStateMachine
get_confidence	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^    def get_confidence(self):$/;"	m	class:CharDistributionAnalysis
get_confidence	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetgroupprober.py	/^    def get_confidence(self):$/;"	m	class:CharSetGroupProber
get_confidence	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetprober.py	/^    def get_confidence(self):$/;"	m	class:CharSetProber
get_confidence	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escprober.py	/^    def get_confidence(self):$/;"	m	class:EscCharSetProber
get_confidence	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/eucjpprober.py	/^    def get_confidence(self):$/;"	m	class:EUCJPProber
get_confidence	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^    def get_confidence(self):$/;"	m	class:JapaneseContextAnalysis
get_confidence	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^    def get_confidence(self):$/;"	m	class:Latin1Prober
get_confidence	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcharsetprober.py	/^    def get_confidence(self):$/;"	m	class:MultiByteCharSetProber
get_confidence	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcharsetprober.py	/^    def get_confidence(self):$/;"	m	class:SingleByteCharSetProber
get_confidence	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sjisprober.py	/^    def get_confidence(self):$/;"	m	class:SJISProber
get_confidence	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/utf8prober.py	/^    def get_confidence(self):$/;"	m	class:UTF8Prober
get_configs_for_plugin	plugged/vim-wakatime/plugin/packages/wakatime/project.py	/^def get_configs_for_plugin(plugin_name, configs):$/;"	f
get_connect_duration	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/timeout.py	/^    def get_connect_duration(self):$/;"	m	class:Timeout
get_connection	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^    def get_connection(self, url, proxies=None):$/;"	m	class:HTTPAdapter
get_context_lines	plugged/unite.vim/autoload/unite/sources/line.vim	/^function! s:get_context_lines(context, direction, start) "{{{$/;"	f
get_cookie_header	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^def get_cookie_header(jar, request):$/;"	f
get_cookie_header	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^from .cookies import cookiejar_from_dict, get_cookie_header, _copy_cookie_jar$/;"	i
get_current_charlen	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/codingstatemachine.py	/^    def get_current_charlen(self):$/;"	m	class:CodingStateMachine
get_default	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def get_default(self, dest):$/;"	m	class:_ActionsContainer
get_default_action	plugged/unite.vim/autoload/unite/action.vim	/^function! s:get_default_action(source_name, kind_name) "{{{$/;"	f
get_dict	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def get_dict(self, domain=None, path=None):$/;"	m	class:RequestsCookieJar
get_encoding_from_headers	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .utils import (DEFAULT_CA_BUNDLE_PATH, get_encoding_from_headers,$/;"	i
get_encoding_from_headers	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def get_encoding_from_headers(headers):$/;"	f
get_encodings_from_content	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def get_encodings_from_content(content):$/;"	f
get_environ_proxies	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def get_environ_proxies(url):$/;"	f
get_file_contents	plugged/vim-wakatime/plugin/packages/wakatime/stats.py	/^def get_file_contents(file_name):$/;"	f
get_file_stats	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^from .stats import get_file_stats$/;"	i
get_file_stats	plugged/vim-wakatime/plugin/packages/wakatime/stats.py	/^def get_file_stats(file_name, entity_type='file', lineno=None, cursorpos=None):$/;"	f
get_filename	plugged/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:get_filename(candidate) "{{{$/;"	f
get_files	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:get_files(context, files, level, max_unit, ignore_dir) "{{{$/;"	f
get_filetime	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! s:get_filetime(filename) "{{{$/;"	f
get_filetype_from_buffer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^from pygments.modeline import get_filetype_from_buffer$/;"	i
get_filetype_from_buffer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/modeline.py	/^def get_filetype_from_buffer(buf, max_lines=5):$/;"	f
get_filetype_from_buffer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^from pygments.modeline import get_filetype_from_buffer$/;"	i
get_filetype_from_buffer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/modeline.py	/^def get_filetype_from_buffer(buf, max_lines=5):$/;"	f
get_filetype_from_buffer	plugged/vim-wakatime/plugin/packages/wakatime/stats.py	/^from pygments.modeline import get_filetype_from_buffer$/;"	i
get_filetype_from_line	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/modeline.py	/^def get_filetype_from_line(l):$/;"	f
get_filetype_from_line	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/modeline.py	/^def get_filetype_from_line(l):$/;"	f
get_filter_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^def get_filter_by_name(filtername, **options):$/;"	f
get_filter_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^from pygments.filters import get_filter_by_name$/;"	i
get_filter_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^def get_filter_by_name(filtername, **options):$/;"	f
get_filter_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^from pygments.filters import get_filter_by_name$/;"	i
get_font	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def get_font(self, bold, oblique):$/;"	m	class:FontManager
get_font	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def get_font(self, bold, oblique):$/;"	m	class:FontManager
get_formatter_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    TerminalFormatter  # pylint:disable-msg=E0611$/;"	i
get_formatter_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^def get_formatter_by_name(_alias, **options):$/;"	f
get_formatter_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    TerminalFormatter  # pylint:disable-msg=E0611$/;"	i
get_formatter_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^def get_formatter_by_name(_alias, **options):$/;"	f
get_formatter_for_filename	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    TerminalFormatter  # pylint:disable-msg=E0611$/;"	i
get_formatter_for_filename	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^def get_formatter_for_filename(fn, **options):$/;"	f
get_formatter_for_filename	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    TerminalFormatter  # pylint:disable-msg=E0611$/;"	i
get_formatter_for_filename	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^def get_formatter_for_filename(fn, **options):$/;"	f
get_full_url	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def get_full_url(self):$/;"	m	class:MockRequest
get_function_code	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^get_function_code = operator.attrgetter(_func_code)$/;"	v
get_function_defaults	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^get_function_defaults = operator.attrgetter(_func_defaults)$/;"	v
get_function_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^    def get_function_module(name):$/;"	f
get_function_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^    def get_function_module(name):$/;"	f
get_header	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def get_header(self, name, default=None):$/;"	m	class:MockRequest
get_hit_enter_max_length	plugged/unite.vim/autoload/vital/_unite/Vim/Message.vim	/^function! s:get_hit_enter_max_length() abort$/;"	f
get_host	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def get_host(self):$/;"	m	class:MockRequest
get_host	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^from .util.url import get_host$/;"	i
get_host	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^from .util.url import get_host$/;"	i
get_host	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/url.py	/^def get_host(url):$/;"	f
get_ignore_results	plugged/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^function! s:get_ignore_results(path) "{{{$/;"	f
get_int_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^     get_choice_opt, ClassNotFound, OptionError, text_type, string_types$/;"	i
get_int_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    StringIO, string_types, iteritems$/;"	i
get_int_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    get_choice_opt, xrange$/;"	i
get_int_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^    iteritems$/;"	i
get_int_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/rtf.py	/^from pygments.util import get_int_opt, _surrogatepair$/;"	i
get_int_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/svg.py	/^from pygments.util import get_bool_opt, get_int_opt$/;"	i
get_int_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    make_analysator, text_type, add_metaclass, iteritems, Future, guess_decode$/;"	i
get_int_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^def get_int_opt(options, optname, default=None):$/;"	f
get_int_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^     get_choice_opt, ClassNotFound, OptionError, text_type, string_types$/;"	i
get_int_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    StringIO, string_types, iteritems$/;"	i
get_int_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    get_choice_opt, xrange$/;"	i
get_int_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^    iteritems$/;"	i
get_int_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/rtf.py	/^from pygments.util import get_int_opt, _surrogatepair$/;"	i
get_int_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/svg.py	/^from pygments.util import get_bool_opt, get_int_opt$/;"	i
get_int_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    make_analysator, text_type, add_metaclass, iteritems, Future, guess_decode$/;"	i
get_int_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^def get_int_opt(options, optname, default=None):$/;"	f
get_language_from_extension	plugged/vim-wakatime/plugin/packages/wakatime/stats.py	/^def get_language_from_extension(file_name):$/;"	f
get_last_status	plugged/unite.vim/autoload/vital/_unite/Process.vim	/^function! s:get_last_status() abort$/;"	f
get_lexer_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    get_lexer_for_filename, find_lexer_class, TextLexer$/;"	i
get_lexer_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^def get_lexer_by_name(_alias, **options):$/;"	f
get_lexer_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^        from pygments.lexers import get_lexer_by_name$/;"	i
get_lexer_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^from pygments.lexers import get_lexer_by_name, ClassNotFound$/;"	i
get_lexer_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    get_lexer_for_filename, find_lexer_class, TextLexer$/;"	i
get_lexer_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^def get_lexer_by_name(_alias, **options):$/;"	f
get_lexer_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^        from pygments.lexers import get_lexer_by_name$/;"	i
get_lexer_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^from pygments.lexers import get_lexer_by_name, ClassNotFound$/;"	i
get_lexer_by_name	plugged/vim-wakatime/plugin/packages/wakatime/stats.py	/^from pygments.lexers import get_lexer_by_name, guess_lexer_for_filename$/;"	i
get_lexer_for_filename	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    get_lexer_for_filename, find_lexer_class, TextLexer$/;"	i
get_lexer_for_filename	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^def get_lexer_for_filename(_fn, code=None, **options):$/;"	f
get_lexer_for_filename	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    get_lexer_for_filename, find_lexer_class, TextLexer$/;"	i
get_lexer_for_filename	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^def get_lexer_for_filename(_fn, code=None, **options):$/;"	f
get_lexer_for_mimetype	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^def get_lexer_for_mimetype(_mime, **options):$/;"	f
get_lexer_for_mimetype	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^            from pygments.lexers import get_lexer_for_mimetype$/;"	i
get_lexer_for_mimetype	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^def get_lexer_for_mimetype(_mime, **options):$/;"	f
get_lexer_for_mimetype	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^            from pygments.lexers import get_lexer_for_mimetype$/;"	i
get_lines	plugged/unite.vim/autoload/unite/sources/line.vim	/^function! s:get_lines(context, direction, bufnr, start, max) "{{{$/;"	f
get_lines	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^                def get_lines(parts, indent, prefix=None):$/;"	f	function:HelpFormatter._format_usage
get_list	plugged/unite.vim/autoload/unite/util.vim	/^function! s:get_list() "{{{$/;"	f
get_list_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^     get_choice_opt, ClassNotFound, OptionError, text_type, string_types$/;"	i
get_list_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    StringIO, string_types, iteritems$/;"	i
get_list_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    get_choice_opt, xrange$/;"	i
get_list_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    make_analysator, text_type, add_metaclass, iteritems, Future, guess_decode$/;"	i
get_list_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^from pygments.util import get_bool_opt, get_list_opt$/;"	i
get_list_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^from pygments.util import get_bool_opt, get_list_opt, iteritems$/;"	i
get_list_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^from pygments.util import get_bool_opt, get_list_opt, iteritems$/;"	i
get_list_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^def get_list_opt(options, optname, default=None):$/;"	f
get_list_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^     get_choice_opt, ClassNotFound, OptionError, text_type, string_types$/;"	i
get_list_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    StringIO, string_types, iteritems$/;"	i
get_list_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    get_choice_opt, xrange$/;"	i
get_list_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    make_analysator, text_type, add_metaclass, iteritems, Future, guess_decode$/;"	i
get_list_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^from pygments.util import get_bool_opt, get_list_opt$/;"	i
get_list_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^from pygments.util import get_bool_opt, get_list_opt, iteritems$/;"	i
get_list_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^from pygments.util import get_bool_opt, get_list_opt, iteritems$/;"	i
get_list_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^def get_list_opt(options, optname, default=None):$/;"	f
get_localzone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/__init__.py	/^    from tzlocal.unix import get_localzone, reload_localzone$/;"	i
get_localzone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/__init__.py	/^    from tzlocal.win32 import get_localzone, reload_localzone$/;"	i
get_localzone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/unix.py	/^def get_localzone():$/;"	f
get_localzone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/win32.py	/^def get_localzone():$/;"	f
get_localzone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/__init__.py	/^    from tzlocal.unix import get_localzone, reload_localzone$/;"	i
get_localzone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/__init__.py	/^    from tzlocal.win32 import get_localzone, reload_localzone$/;"	i
get_localzone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/unix.py	/^def get_localzone():$/;"	f
get_localzone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/win32.py	/^def get_localzone():$/;"	f
get_localzone_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/win32.py	/^def get_localzone_name():$/;"	f
get_localzone_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/win32.py	/^def get_localzone_name():$/;"	f
get_lua_functions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^    def get_lua_functions(version):$/;"	f
get_lua_functions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^    def get_lua_functions(version):$/;"	f
get_message	plugged/unite.vim/autoload/unite/util.vim	/^function! s:get_message() "{{{$/;"	f
get_method_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^get_method_function = operator.attrgetter(_meth_func)$/;"	v
get_method_self	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^get_method_self = operator.attrgetter(_meth_self)$/;"	v
get_migemo_pattern	plugged/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! s:get_migemo_pattern(input)$/;"	f
get_netrc_auth	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def get_netrc_auth(url, raise_errors=False):$/;"	f
get_new_headers	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def get_new_headers(self):$/;"	m	class:MockRequest
get_newest_version	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^    def get_newest_version():$/;"	f
get_newest_version	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^    def get_newest_version():$/;"	f
get_order	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^    def get_order(self, aBuf):$/;"	m	class:Big5DistributionAnalysis
get_order	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^    def get_order(self, aBuf):$/;"	m	class:CharDistributionAnalysis
get_order	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^    def get_order(self, aBuf):$/;"	m	class:EUCJPDistributionAnalysis
get_order	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^    def get_order(self, aBuf):$/;"	m	class:EUCKRDistributionAnalysis
get_order	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^    def get_order(self, aBuf):$/;"	m	class:EUCTWDistributionAnalysis
get_order	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^    def get_order(self, aBuf):$/;"	m	class:GB2312DistributionAnalysis
get_order	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^    def get_order(self, aBuf):$/;"	m	class:SJISDistributionAnalysis
get_order	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^    def get_order(self, aBuf):$/;"	m	class:EUCJPContextAnalysis
get_order	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^    def get_order(self, aBuf):$/;"	m	class:JapaneseContextAnalysis
get_order	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^    def get_order(self, aBuf):$/;"	m	class:SJISContextAnalysis
get_origin_req_host	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def get_origin_req_host(self):$/;"	m	class:MockRequest
get_paths	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:get_paths(args, context) "{{{$/;"	f
get_php_functions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_php_builtins.py	/^    def get_php_functions():$/;"	f
get_php_functions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_php_builtins.py	/^    def get_php_functions():$/;"	f
get_php_references	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_php_builtins.py	/^    def get_php_references():$/;"	f
get_php_references	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_php_builtins.py	/^    def get_php_references():$/;"	f
get_prelude	plugged/unite.vim/autoload/unite/util.vim	/^function! s:get_prelude() "{{{$/;"	f
get_process	plugged/unite.vim/autoload/unite/util.vim	/^function! s:get_process() "{{{$/;"	f
get_project_info	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^from .project import get_project_info$/;"	i
get_project_info	plugged/vim-wakatime/plugin/packages/wakatime/project.py	/^def get_project_info(configs, args):$/;"	f
get_quick_match_table	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:get_quick_match_table() "{{{$/;"	f
get_random_id	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^def get_random_id():$/;"	f
get_random_id	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^def get_random_id():$/;"	f
get_rating	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^    def get_rating(info):$/;"	f	function:find_lexer_class_for_filename
get_rating	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^    def get_rating(info):$/;"	f	function:find_lexer_class_for_filename
get_redirect_location	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def get_redirect_location(self):$/;"	m	class:HTTPResponse
get_replaced_base	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def get_replaced_base(self, variables):$/;"	m	class:VariableSplitter
get_replaced_base	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def get_replaced_base(self, variables):$/;"	m	class:VariableSplitter
get_resume_buffer	plugged/unite.vim/autoload/unite/start.vim	/^function! s:get_resume_buffer(buffer_name) "{{{$/;"	f
get_root	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(Dir) ->$/;"	f
get_root	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["src" | Tail], _Path) ->$/;"	f
get_root	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["test" | Tail], _Path) ->$/;"	f
get_root	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([], Path) ->$/;"	f
get_root	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([_ | Tail], Path) ->$/;"	f
get_sm_functions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_sourcemod_builtins.py	/^    def get_sm_functions():$/;"	f
get_sm_functions	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_sourcemod_builtins.py	/^    def get_sm_functions():$/;"	f
get_source_candidates	plugged/unite.vim/autoload/unite/candidates.vim	/^function! s:get_source_candidates(source) "{{{$/;"	f
get_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetprober.py	/^    def get_state(self):$/;"	m	class:CharSetProber
get_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^    def get_state(self):$/;"	m	class:HebrewProber
get_string	plugged/unite.vim/autoload/unite/util.vim	/^function! s:get_string() "{{{$/;"	f
get_style_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^from pygments.styles import get_all_styles, get_style_by_name$/;"	i
get_style_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatter.py	/^from pygments.styles import get_style_by_name$/;"	i
get_style_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/__init__.py	/^def get_style_by_name(name):$/;"	f
get_style_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^from pygments.styles import get_all_styles, get_style_by_name$/;"	i
get_style_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatter.py	/^from pygments.styles import get_style_by_name$/;"	i
get_style_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/__init__.py	/^def get_style_by_name(name):$/;"	f
get_style_defs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatter.py	/^    def get_style_defs(self, arg=''):$/;"	m	class:Formatter
get_style_defs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    def get_style_defs(self, arg=None):$/;"	m	class:HtmlFormatter
get_style_defs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    def get_style_defs(self, arg=''):$/;"	m	class:ImageFormatter
get_style_defs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^    def get_style_defs(self, arg=''):$/;"	m	class:LatexFormatter
get_style_defs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatter.py	/^    def get_style_defs(self, arg=''):$/;"	m	class:Formatter
get_style_defs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    def get_style_defs(self, arg=None):$/;"	m	class:HtmlFormatter
get_style_defs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    def get_style_defs(self, arg=''):$/;"	m	class:ImageFormatter
get_style_defs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^    def get_style_defs(self, arg=''):$/;"	m	class:LatexFormatter
get_subj_alt_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^def get_subj_alt_name(peer_cert):$/;"	f
get_suite	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^    def get_suite():$/;"	f	function:all_tests_suite
get_syn_name	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:get_syn_name() "{{{$/;"	f
get_system	plugged/unite.vim/autoload/unite/util.vim	/^function! s:get_system() "{{{$/;"	f
get_timeevts	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:get_timeevts(events, blockmin) abort$/;"	f
get_tokendefs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def get_tokendefs(cls):$/;"	m	class:RegexLexerMeta
get_tokendefs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def get_tokendefs(cls):$/;"	m	class:RegexLexerMeta
get_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def get_tokens(self, text, unfiltered=False):$/;"	m	class:Lexer
get_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^    def get_tokens(self, text):$/;"	m	class:RawTokenLexer
get_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def get_tokens(self, text, unfiltered=False):$/;"	m	class:Lexer
get_tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^    def get_tokens(self, text):$/;"	m	class:RawTokenLexer
get_tokens_aux	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^    def get_tokens_aux(self, index, text):$/;"	m	class:LatexEmbeddedLexer
get_tokens_aux	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^    def get_tokens_aux(self, index, text):$/;"	m	class:LatexEmbeddedLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:LatexEmbeddedLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:DelegatingLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:Lexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def get_tokens_unprocessed(self, text, stack=('root',)):$/;"	m	class:ProfilingRegexLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def get_tokens_unprocessed(self, text, stack=('root',)):$/;"	m	class:RegexLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def get_tokens_unprocessed(self, text=None, context=None):$/;"	m	class:ExtendedRegexLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:CFamilyLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:CudaLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    def get_tokens_unprocessed(self, text=None, context=None):$/;"	m	class:YamlLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:DylanConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:DylanLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:ElixirConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:ElixirLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:ErlangShellLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:AsymptoteLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:CryptolLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:LiterateLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:SystemVerilogLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:VerilogLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:XsltLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:Inform6Lexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    def get_tokens_unprocessed(self, text, **kwargs):$/;"	m	class:Tads3Lexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    def get_tokens_unprocessed(self, text, stack=('+i6t-root',)):$/;"	m	class:Inform6TemplateLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:LassoLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:JuliaConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:AspectJLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:GosuTemplateLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:CommonLispLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:MakefileLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:MatlabSessionLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^        def get_tokens_unprocessed(self, text):$/;"	m	class:objective.GeneratedObjectiveCVariant
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:SwiftLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:DelphiLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:Modula2Lexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:SourcePawnLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:PhpLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:NumPyLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:PythonConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:RConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:RobotFrameworkLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:RubyConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:LuaLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:MoonScriptLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:BashSessionLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:ShellSessionLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:RawTokenLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:TextLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    def get_tokens_unprocessed(self, data):$/;"	m	class:PostgresConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    def get_tokens_unprocessed(self, data):$/;"	m	class:SqliteConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    def get_tokens_unprocessed(self, text, *args):$/;"	m	class:PostgresBase
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:CheetahPythonLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:ErbLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:VimLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:LatexEmbeddedLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:DelegatingLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:Lexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def get_tokens_unprocessed(self, text, stack=('root',)):$/;"	m	class:ProfilingRegexLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def get_tokens_unprocessed(self, text, stack=('root',)):$/;"	m	class:RegexLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def get_tokens_unprocessed(self, text=None, context=None):$/;"	m	class:ExtendedRegexLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:CFamilyLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:CudaLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    def get_tokens_unprocessed(self, text=None, context=None):$/;"	m	class:YamlLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:DylanConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:DylanLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:ElixirConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:ElixirLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:ErlangShellLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:AsymptoteLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:CryptolLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:LiterateLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:SystemVerilogLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:VerilogLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:XsltLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:Inform6Lexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    def get_tokens_unprocessed(self, text, **kwargs):$/;"	m	class:Tads3Lexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    def get_tokens_unprocessed(self, text, stack=('+i6t-root',)):$/;"	m	class:Inform6TemplateLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:LassoLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:JuliaConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:AspectJLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:GosuTemplateLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:CommonLispLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:MakefileLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:MatlabSessionLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^        def get_tokens_unprocessed(self, text):$/;"	m	class:objective.GeneratedObjectiveCVariant
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:SwiftLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:DelphiLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:Modula2Lexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:SourcePawnLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:PhpLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:NumPyLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:PythonConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:RConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:RobotFrameworkLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:RubyConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:LuaLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:MoonScriptLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:BashSessionLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:ShellSessionLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:RawTokenLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:TextLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    def get_tokens_unprocessed(self, data):$/;"	m	class:PostgresConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    def get_tokens_unprocessed(self, data):$/;"	m	class:SqliteConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    def get_tokens_unprocessed(self, text, *args):$/;"	m	class:PostgresBase
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:CheetahPythonLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:ErbLexer
get_tokens_unprocessed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:VimLexer
get_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def get_type(self):$/;"	m	class:MockRequest
get_unbound_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    def get_unbound_function(unbound):$/;"	f
get_unicode_from_response	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def get_unicode_from_response(r):$/;"	f
get_unite_buffer	plugged/unite.vim/autoload/unite/start.vim	/^function! s:get_unite_buffer(buffer_name) "{{{$/;"	f
get_url	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! s:get_url() abort$/;"	f
get_user_agent	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^def get_user_agent(plugin):$/;"	f
get_version	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_sourcemod_builtins.py	/^    def get_version():$/;"	f
get_version	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_sourcemod_builtins.py	/^    def get_version():$/;"	f
get_visual_content	plugged/vim-go/autoload/go/play.vim	/^function! s:get_visual_content()$/;"	f
get_visual_selection	plugged/vim-go/autoload/go/play.vim	/^function! s:get_visual_selection()$/;"	f
get_winwidth	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:get_winwidth()$/;"	f
getallmatchingheaders	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    getallmatchingheaders = getlist$/;"	v	class:HTTPHeaderDict
getchar	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar	plugged/vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
getchar_safe	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
getdata	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! s:getdata(id) abort$/;"	f
getdata	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! s:getdata(id) abort$/;"	f
getfilename	plugged/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:getfilename(cache_dir, filename) abort$/;"	f
getheader	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def getheader(self, name, default=None):$/;"	m	class:HTTPResponse
getheaders	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def getheaders(self, name):$/;"	m	class:MockResponse
getheaders	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    getheaders = getlist$/;"	v	class:HTTPHeaderDict
getheaders	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def getheaders(self):$/;"	m	class:HTTPResponse
getlist	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def getlist(self, key):$/;"	m	class:HTTPHeaderDict
getopt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^import getopt$/;"	i
getopt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^import getopt$/;"	i
getpeercert	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^    def getpeercert(self, binary_form=False):$/;"	m	class:WrappedSocket
getpos	plugged/vim-go/autoload/go/oracle.vim	/^func! s:getpos(l, c)$/;"	f
getpos	plugged/vim-go/autoload/go/rename.vim	/^func! s:getpos(l, c)$/;"	f
getproxies	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib import quote, unquote, quote_plus, unquote_plus, urlencode, getproxies, proxy_bypass$/;"	i
getproxies	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib.request import parse_http_list, getproxies, proxy_bypass$/;"	i
getstatusoutput	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^            from commands import getstatusoutput$/;"	i
getstatusoutput	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^            from subprocess import getstatusoutput$/;"	i
getstatusoutput	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^            from commands import getstatusoutput$/;"	i
getstatusoutput	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^            from subprocess import getstatusoutput$/;"	i
gettext	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^import sys, datetime, os.path, gettext$/;"	i
gettext	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^import sys, datetime, os.path, gettext$/;"	i
getting_attrs	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^    getting_attrs = False$/;"	v	class:HtmlDjangoParser
gf	plugged/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> gf         :<C-U>exe <SID>gf(v:count1,"gf",'edit')<CR>$/;"	m
gf	plugged/vim-ruby/ftplugin/ruby.vim	/^function! s:gf(count,map,edit) abort$/;"	f
ggi*	plugged/vim-gitgutter/test/testModifyLines.vim	/^normal ggi*$/;"	m
ggo*	plugged/vim-gitgutter/test/testAddLines.vim	/^normal ggo*$/;"	m
ggo*	plugged/vim-gitgutter/test/testFilenameWithSquareBrackets.vim	/^normal ggo*$/;"	m
ggx	plugged/vim-gitgutter/test/testKeepAlt.vim	/^normal ggx$/;"	m
git_valid	autoload/plug.vim	/^function! s:git_valid(spec, check_branch)$/;"	f
git_version_requirement	autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
gitgutter	plugged/vim-gitgutter/plugin/gitgutter.vim	/^augroup gitgutter$/;"	a
gitgutter#all	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#all()$/;"	f
gitgutter#debug#debug	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#debug()$/;"	f
gitgutter#debug#git_version	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#git_version()$/;"	f
gitgutter#debug#log	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#log(message)$/;"	f
gitgutter#debug#option	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#option(name)$/;"	f
gitgutter#debug#output	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#output(text)$/;"	f
gitgutter#debug#separator	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#separator()$/;"	f
gitgutter#debug#vim_version	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#vim_version()$/;"	f
gitgutter#diff#adjust_hunk_summary	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#adjust_hunk_summary(diff_for_hunk, staging)$/;"	f
gitgutter#diff#discard_hunks	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#discard_hunks(diff, keep_header)$/;"	f
gitgutter#diff#generate_diff_for_hunk	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#generate_diff_for_hunk(type)$/;"	f
gitgutter#diff#is_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_added(from_count, to_count)$/;"	f
gitgutter#diff#is_modified	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified(from_count, to_count)$/;"	f
gitgutter#diff#is_modified_and_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified_and_added(from_count, to_count)$/;"	f
gitgutter#diff#is_modified_and_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified_and_removed(from_count, to_count)$/;"	f
gitgutter#diff#is_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_removed(from_count, to_count)$/;"	f
gitgutter#diff#parse_diff	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_diff(diff)$/;"	f
gitgutter#diff#parse_hunk	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_hunk(line)$/;"	f
gitgutter#diff#process_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_added(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#process_hunk	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunk(hunk)$/;"	f
gitgutter#diff#process_hunks	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunks(hunks)$/;"	f
gitgutter#diff#process_modified	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#process_modified_and_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified_and_added(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#process_modified_and_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified_and_removed(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#process_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_removed(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#run_diff	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#run_diff(realtime, use_external_grep)$/;"	f
gitgutter#disable	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#disable()$/;"	f
gitgutter#enable	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#enable()$/;"	f
gitgutter#highlight#define_highlights	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_highlights()$/;"	f
gitgutter#highlight#define_sign_column_highlight	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_column_highlight()$/;"	f
gitgutter#highlight#define_sign_line_highlights	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_line_highlights()$/;"	f
gitgutter#highlight#define_sign_text	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text()$/;"	f
gitgutter#highlight#define_sign_text_highlights	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text_highlights()$/;"	f
gitgutter#highlight#define_signs	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_signs()$/;"	f
gitgutter#highlight#get_background_colors	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#get_background_colors(group)$/;"	f
gitgutter#highlight#match_highlight	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#match_highlight(highlight, pattern)$/;"	f
gitgutter#hunk#current_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#current_hunk()$/;"	f
gitgutter#hunk#cursor_in_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#cursor_in_hunk(hunk)$/;"	f
gitgutter#hunk#hunks	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#hunks()$/;"	f
gitgutter#hunk#increment_lines_added	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_added(count)$/;"	f
gitgutter#hunk#increment_lines_modified	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_modified(count)$/;"	f
gitgutter#hunk#increment_lines_removed	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_removed(count)$/;"	f
gitgutter#hunk#line_adjustment_for_current_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#line_adjustment_for_current_hunk()$/;"	f
gitgutter#hunk#next_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#next_hunk(count)$/;"	f
gitgutter#hunk#prev_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#prev_hunk(count)$/;"	f
gitgutter#hunk#reset	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#reset()$/;"	f
gitgutter#hunk#set_hunks	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#set_hunks(hunks)$/;"	f
gitgutter#hunk#summary	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#summary()$/;"	f
gitgutter#line_highlights_disable	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_disable()$/;"	f
gitgutter#line_highlights_enable	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_enable()$/;"	f
gitgutter#line_highlights_toggle	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_toggle()$/;"	f
gitgutter#preview_hunk	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#preview_hunk()$/;"	f
gitgutter#process_buffer	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#process_buffer(bufnr, realtime)$/;"	f
gitgutter#revert_hunk	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#revert_hunk()$/;"	f
gitgutter#sign#add_dummy_sign	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#add_dummy_sign()$/;"	f
gitgutter#sign#clear_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#clear_signs()$/;"	f
gitgutter#sign#find_current_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#find_current_signs()$/;"	f
gitgutter#sign#next_sign_id	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#next_sign_id()$/;"	f
gitgutter#sign#obsolete_gitgutter_signs_to_remove	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#obsolete_gitgutter_signs_to_remove(new_gitgutter_signs_line_numbers)$/;"	f
gitgutter#sign#remove_dummy_sign	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#remove_dummy_sign(force)$/;"	f
gitgutter#sign#remove_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#remove_signs(sign_ids, all_signs)$/;"	f
gitgutter#sign#update_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#update_signs(modified_lines)$/;"	f
gitgutter#sign#upsert_new_gitgutter_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#upsert_new_gitgutter_signs(modified_lines)$/;"	f
gitgutter#signs_disable	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#signs_disable()$/;"	f
gitgutter#signs_enable	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#signs_enable()$/;"	f
gitgutter#signs_toggle	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#signs_toggle()$/;"	f
gitgutter#stage_hunk	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#stage_hunk()$/;"	f
gitgutter#toggle	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#toggle()$/;"	f
gitgutter#utility#bufnr	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#bufnr()$/;"	f
gitgutter#utility#command_in_directory_of_file	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#command_in_directory_of_file(cmd)$/;"	f
gitgutter#utility#directory_of_file	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#directory_of_file()$/;"	f
gitgutter#utility#exists_file	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#exists_file()$/;"	f
gitgutter#utility#extension	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#extension()$/;"	f
gitgutter#utility#file	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file()$/;"	f
gitgutter#utility#file_relative_to_repo_root	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file_relative_to_repo_root()$/;"	f
gitgutter#utility#filename	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#filename()$/;"	f
gitgutter#utility#full_path_to_directory_of_file	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#full_path_to_directory_of_file()$/;"	f
gitgutter#utility#has_fresh_changes	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#has_fresh_changes()$/;"	f
gitgutter#utility#has_unsaved_changes	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#has_unsaved_changes()$/;"	f
gitgutter#utility#highlight_name_for_change	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#highlight_name_for_change(text)$/;"	f
gitgutter#utility#is_active	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#is_active()$/;"	f
gitgutter#utility#not_git_dir	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#not_git_dir()$/;"	f
gitgutter#utility#save_last_seen_change	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#save_last_seen_change()$/;"	f
gitgutter#utility#set_buffer	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#set_buffer(bufnr)$/;"	f
gitgutter#utility#shell_error	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shell_error()$/;"	f
gitgutter#utility#shellescape	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shellescape(arg)$/;"	f
gitgutter#utility#strip_trailing_new_line	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#strip_trailing_new_line(line)$/;"	f
gitgutter#utility#system	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#system(cmd, ...)$/;"	f
gitgutter#utility#using_xolox_shell	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#using_xolox_shell()$/;"	f
gitgutter#utility#warn	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn(message)$/;"	f
github_url	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(opts, ...) abort$/;"	f
glib	plugged/Nvim-R/R/synctex_evince_backward.py	/^import dbus.mainloop.glib, sys, os, signal$/;"	i
glib	plugged/Nvim-R/R/synctex_evince_forward.py	/^import dbus.mainloop.glib, sys, os$/;"	i
glob	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
glob	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_php_builtins.py	/^    import glob$/;"	i
glob	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_php_builtins.py	/^    import glob$/;"	i
glob2_pattern	plugged/unite.vim/autoload/unite/filters.vim	/^function! s:glob2_pattern(glob, is_lua) abort "{{{$/;"	f
glob_dir	autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
globpath	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:globpath(path, expr) abort$/;"	f
gnu_pervasives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    gnu_pervasives = [$/;"	v	class:Modula2Lexer
gnu_pervasives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    gnu_pervasives = [$/;"	v	class:Modula2Lexer
gnu_reserved_words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    gnu_reserved_words = [$/;"	v	class:Modula2Lexer
gnu_reserved_words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    gnu_reserved_words = [$/;"	v	class:Modula2Lexer
go#cmd#Build	plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Build(bang, ...)$/;"	f
go#cmd#Coverage	plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Coverage(bang, ...)$/;"	f
go#cmd#Generate	plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Generate(bang, ...)$/;"	f
go#cmd#Install	plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Install(bang, ...)$/;"	f
go#cmd#Run	plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Run(bang, ...)$/;"	f
go#cmd#Test	plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Test(bang, compile, ...)$/;"	f
go#cmd#TestFunc	plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#TestFunc(bang, ...)$/;"	f
go#cmd#Vet	plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Vet(bang, ...)$/;"	f
go#cmd#autowrite	plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#autowrite()$/;"	f
go#complete#Complete	plugged/vim-go/autoload/go/complete.vim	/^fu! go#complete#Complete(findstart, base)$/;"	f
go#complete#GetInfo	plugged/vim-go/autoload/go/complete.vim	/^function! go#complete#GetInfo()$/;"	f
go#complete#Info	plugged/vim-go/autoload/go/complete.vim	/^function! go#complete#Info()$/;"	f
go#def#Jump	plugged/vim-go/autoload/go/def.vim	/^function! go#def#Jump(...)$/;"	f
go#def#JumpMode	plugged/vim-go/autoload/go/def.vim	/^function! go#def#JumpMode(mode)$/;"	f
go#doc#Open	plugged/vim-go/autoload/go/doc.vim	/^function! go#doc#Open(newmode, mode, ...)$/;"	f
go#doc#OpenBrowser	plugged/vim-go/autoload/go/doc.vim	/^function! go#doc#OpenBrowser(...)$/;"	f
go#errcheck#Run	plugged/vim-go/autoload/go/errcheck.vim	/^function! go#errcheck#Run(...) abort$/;"	f
go#fmt#Format	plugged/vim-go/autoload/go/fmt.vim	/^function! go#fmt#Format(withGoimport)$/;"	f
go#import#SwitchImport	plugged/vim-go/autoload/go/import.vim	/^function! go#import#SwitchImport(enabled, localname, path, bang)$/;"	f
go#lint#Run	plugged/vim-go/autoload/go/lint.vim	/^function! go#lint#Run(...) abort$/;"	f
go#oracle#Callees	plugged/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Callees(selected)$/;"	f
go#oracle#Callers	plugged/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Callers(selected)$/;"	f
go#oracle#Callstack	plugged/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Callstack(selected)$/;"	f
go#oracle#ChannelPeers	plugged/vim-go/autoload/go/oracle.vim	/^function! go#oracle#ChannelPeers(selected)$/;"	f
go#oracle#Describe	plugged/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Describe(selected)$/;"	f
go#oracle#Freevars	plugged/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Freevars(selected)$/;"	f
go#oracle#Implements	plugged/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Implements(selected)$/;"	f
go#oracle#Referrers	plugged/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Referrers(selected)$/;"	f
go#oracle#Scope	plugged/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Scope(...)$/;"	f
go#package#Complete	plugged/vim-go/autoload/go/package.vim	/^function! go#package#Complete(ArgLead, CmdLine, CursorPos)$/;"	f
go#package#CompleteMembers	plugged/vim-go/autoload/go/package.vim	/^function! go#package#CompleteMembers(package, member)$/;"	f
go#package#FromPath	plugged/vim-go/autoload/go/package.vim	/^function! go#package#FromPath(arg)$/;"	f
go#package#ImportPath	plugged/vim-go/autoload/go/package.vim	/^function! go#package#ImportPath(arg)$/;"	f
go#package#Paths	plugged/vim-go/autoload/go/package.vim	/^function! go#package#Paths()$/;"	f
go#path#BinPath	plugged/vim-go/autoload/go/path.vim	/^function! go#path#BinPath()$/;"	f
go#path#CheckBinPath	plugged/vim-go/autoload/go/path.vim	/^function! go#path#CheckBinPath(binpath)$/;"	f
go#path#Default	plugged/vim-go/autoload/go/path.vim	/^function! go#path#Default()$/;"	f
go#path#Detect	plugged/vim-go/autoload/go/path.vim	/^function! go#path#Detect()$/;"	f
go#path#GoPath	plugged/vim-go/autoload/go/path.vim	/^function! go#path#GoPath(...)$/;"	f
go#path#HasPath	plugged/vim-go/autoload/go/path.vim	/^function! go#path#HasPath(path)$/;"	f
go#play#Share	plugged/vim-go/autoload/go/play.vim	/^function! go#play#Share(count, line1, line2)$/;"	f
go#rename#Rename	plugged/vim-go/autoload/go/rename.vim	/^function! go#rename#Rename(...)$/;"	f
go#textobj#Function	plugged/vim-go/autoload/go/textobj.vim	/^function! go#textobj#Function(mode)$/;"	f
go#tool#Deps	plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#Deps()$/;"	f
go#tool#ExecuteInDir	plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#ExecuteInDir(cmd) abort$/;"	f
go#tool#Exists	plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#Exists(importpath)$/;"	f
go#tool#Files	plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#Files()$/;"	f
go#tool#Imports	plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#Imports()$/;"	f
go#tool#OpenBrowser	plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#OpenBrowser(url)$/;"	f
go#tool#ShowErrors	plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#ShowErrors(out)$/;"	f
go#ui#CloseWindow	plugged/vim-go/autoload/go/ui.vim	/^function! go#ui#CloseWindow()$/;"	f
go#ui#OpenDefinition	plugged/vim-go/autoload/go/ui.vim	/^function! go#ui#OpenDefinition(filter)$/;"	f
go#ui#OpenWindow	plugged/vim-go/autoload/go/ui.vim	/^function! go#ui#OpenWindow(title, content)$/;"	f
go#util#IsWin	plugged/vim-go/autoload/go/util.vim	/^function! go#util#IsWin()$/;"	f
go#util#LineEnding	plugged/vim-go/autoload/go/util.vim	/^function! go#util#LineEnding()$/;"	f
go#util#PathListSep	plugged/vim-go/autoload/go/util.vim	/^function! go#util#PathListSep()$/;"	f
go#util#PathSep	plugged/vim-go/autoload/go/util.vim	/^function! go#util#PathSep()$/;"	f
go#util#Shelljoin	plugged/vim-go/autoload/go/util.vim	/^function! go#util#Shelljoin(arglist, ...)$/;"	f
go#util#StripPathSep	plugged/vim-go/autoload/go/util.vim	/^function! go#util#StripPathSep(path)$/;"	f
go#vimproc#has_vimproc	plugged/vim-go/autoload/go/vimproc.vim	/^function! go#vimproc#has_vimproc()$/;"	f
gobble	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    def gobble(self, value, left):$/;"	m	class:GobbleFilter
gobble	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    def gobble(self, value, left):$/;"	m	class:GobbleFilter
gocodeAutocomplete	plugged/vim-go/autoload/go/complete.vim	/^fu! s:gocodeAutocomplete()$/;"	f
gocodeCommand	plugged/vim-go/autoload/go/complete.vim	/^fu! s:gocodeCommand(cmd, preargs, args)$/;"	f
gocodeCurrentBuffer	plugged/vim-go/autoload/go/complete.vim	/^fu! s:gocodeCurrentBuffer()$/;"	f
gocodeCurrentBufferOpt	plugged/vim-go/autoload/go/complete.vim	/^fu! s:gocodeCurrentBufferOpt(filename)$/;"	f
gocodeCursor	plugged/vim-go/autoload/go/complete.vim	/^fu! s:gocodeCursor()$/;"	f
gocodeShellescape	plugged/vim-go/autoload/go/complete.vim	/^fu! s:gocodeShellescape(arg)$/;"	f
godefJump	plugged/vim-go/autoload/go/def.vim	/^function! s:godefJump(out, mode)$/;"	f
godocNotFound	plugged/vim-go/autoload/go/doc.vim	/^function! s:godocNotFound(content)$/;"	f
godocWord	plugged/vim-go/autoload/go/doc.vim	/^function! s:godocWord(args)$/;"	f
gofiletype_post	plugged/vim-go/ftdetect/gofiletype.vim	/^function! s:gofiletype_post()$/;"	f
gofiletype_pre	plugged/vim-go/ftdetect/gofiletype.vim	/^function! s:gofiletype_pre()$/;"	f
google_calendar	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:google_calendar() abort$/;"	f
google_client	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:google_client() abort$/;"	f
google_task	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:google_task() abort$/;"	f
got_enough_data	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^    def got_enough_data(self):$/;"	m	class:CharDistributionAnalysis
got_enough_data	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^    def got_enough_data(self):$/;"	m	class:JapaneseContextAnalysis
group	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def group(self, arg=None):$/;"	m	class:_PseudoMatch
group	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def group(self, arg=None):$/;"	m	class:_PseudoMatch
group_by	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
groupby	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/regexopt.py	/^from itertools import groupby$/;"	i
groupby	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/regexopt.py	/^from itertools import groupby$/;"	i
groupdict	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def groupdict(self):$/;"	m	class:_PseudoMatch
groupdict	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def groupdict(self):$/;"	m	class:_PseudoMatch
groups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def groups(self):$/;"	m	class:_PseudoMatch
groups	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def groups(self):$/;"	m	class:_PseudoMatch
gsub	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
guess_content_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/fields.py	/^def guess_content_type(filename, default='application\/octet-stream'):$/;"	f
guess_decode	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    guess_decode, guess_decode_from_terminal, terminal_encoding$/;"	i
guess_decode	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    make_analysator, text_type, add_metaclass, iteritems, Future, guess_decode$/;"	i
guess_decode	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^from pygments.util import ClassNotFound, itervalues, guess_decode$/;"	i
guess_decode	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^def guess_decode(text):$/;"	f
guess_decode	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    guess_decode, guess_decode_from_terminal, terminal_encoding$/;"	i
guess_decode	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    make_analysator, text_type, add_metaclass, iteritems, Future, guess_decode$/;"	i
guess_decode	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^from pygments.util import ClassNotFound, itervalues, guess_decode$/;"	i
guess_decode	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^def guess_decode(text):$/;"	f
guess_decode_from_terminal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    guess_decode, guess_decode_from_terminal, terminal_encoding$/;"	i
guess_decode_from_terminal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^def guess_decode_from_terminal(text, term):$/;"	f
guess_decode_from_terminal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    guess_decode, guess_decode_from_terminal, terminal_encoding$/;"	i
guess_decode_from_terminal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^def guess_decode_from_terminal(text, term):$/;"	f
guess_filename	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def guess_filename(obj):$/;"	f
guess_json_utf	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def guess_json_utf(data):$/;"	f
guess_language	plugged/vim-wakatime/plugin/packages/wakatime/stats.py	/^def guess_language(file_name):$/;"	f
guess_lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    get_lexer_for_filename, find_lexer_class, TextLexer$/;"	i
guess_lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^def guess_lexer(_text, **options):$/;"	f
guess_lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    get_lexer_for_filename, find_lexer_class, TextLexer$/;"	i
guess_lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^def guess_lexer(_text, **options):$/;"	f
guess_lexer_for_filename	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^def guess_lexer_for_filename(_fn, _text, **options):$/;"	f
guess_lexer_for_filename	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^def guess_lexer_for_filename(_fn, _text, **options):$/;"	f
guess_lexer_for_filename	plugged/vim-wakatime/plugin/packages/wakatime/stats.py	/^from pygments.lexers import get_lexer_by_name, guess_lexer_for_filename$/;"	i
guess_lexer_using_filename	plugged/vim-wakatime/plugin/packages/wakatime/stats.py	/^def guess_lexer_using_filename(file_name, text):$/;"	f
guess_lexer_using_modeline	plugged/vim-wakatime/plugin/packages/wakatime/stats.py	/^def guess_lexer_using_modeline(text):$/;"	f
gzip	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^            import gzip$/;"	i
gzip	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^            import gzip$/;"	i
gzip	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^            import gzip$/;"	i
gzip	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^            import gzip$/;"	i
handleActivity	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:handleActivity(is_write)$/;"	f
handleLeftClick	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick()$/;"	f
handleMiddleMouse	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse()$/;"	f
handle_401	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^    def handle_401(self, r, **kwargs):$/;"	m	class:HTTPDigestAuth
handle_find_document_error	plugged/Nvim-R/R/synctex_evince_backward.py	/^    def handle_find_document_error(self, error):$/;"	m	class:EvinceWindowProxy
handle_find_document_error	plugged/Nvim-R/R/synctex_evince_forward.py	/^    def handle_find_document_error(self, error):$/;"	m	class:EvinceWindowProxy
handle_find_document_reply	plugged/Nvim-R/R/synctex_evince_backward.py	/^    def handle_find_document_reply(self, evince_name):$/;"	m	class:EvinceWindowProxy
handle_find_document_reply	plugged/Nvim-R/R/synctex_evince_forward.py	/^    def handle_find_document_reply(self, evince_name):$/;"	m	class:EvinceWindowProxy
handle_get_window_list_error	plugged/Nvim-R/R/synctex_evince_backward.py	/^    def handle_get_window_list_error (self, e):$/;"	m	class:EvinceWindowProxy
handle_get_window_list_error	plugged/Nvim-R/R/synctex_evince_forward.py	/^    def handle_get_window_list_error (self, e):$/;"	m	class:EvinceWindowProxy
handle_get_window_list_reply	plugged/Nvim-R/R/synctex_evince_backward.py	/^    def handle_get_window_list_reply (self, window_list):$/;"	m	class:EvinceWindowProxy
handle_get_window_list_reply	plugged/Nvim-R/R/synctex_evince_forward.py	/^    def handle_get_window_list_reply (self, window_list):$/;"	m	class:EvinceWindowProxy
handle_redirect	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^    def handle_redirect(self, r, **kwargs):$/;"	m	class:HTTPDigestAuth
has	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
has_common_items	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_content	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^    has_content = False$/;"	v	class:PygmentsDoc
has_content	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^    has_content = False$/;"	v	class:PygmentsDoc
has_header	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def has_header(self, name):$/;"	m	class:MockRequest
has_index	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_preview_window	plugged/unite.vim/autoload/unite/view.vim	/^function! s:has_preview_window() "{{{$/;"	f
has_speedups	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_speedups.py	/^def has_speedups():$/;"	f
has_vimproc	plugged/unite.vim/autoload/vital/_unite/Process.vim	/^function! s:has_vimproc() abort$/;"	f
hash	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:hash(str) abort$/;"	f
hashlib	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^import hashlib$/;"	i
hd2list	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:hd2list(hd)$/;"	f
hd2str	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:hd2str(hd)$/;"	f
hd2str_lua	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:hd2str_lua(hd)$/;"	f
head	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^from .api import request, get, head, post, patch, put, delete, options$/;"	i
head	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/api.py	/^def head(url, **kwargs):$/;"	f
head	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def head(self, url, **kwargs):$/;"	m	class:Session
header	plugged/delimitMate/test/expand_cr.vim	/^    let header = empty(header) ? item[1:] : 'Lines should match.'$/;"	v
header	plugged/delimitMate/test/expand_cr.vim	/^  let header = ''$/;"	v
header	plugged/delimitMate/test/expand_cr.vim	/^let header = ''$/;"	v
header	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/_mapping.py	/^    header = content[:content.find('FORMATTERS = {')]$/;"	v
header	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_mapping.py	/^    header = content[:content.find('LEXERS = {')]$/;"	v
header	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_scilab_builtins.py	/^    header = content[:content.find('# Autogenerated')]$/;"	v
header	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^    header = content[:content.find('Cc =')]$/;"	v
header	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/_mapping.py	/^    header = content[:content.find('FORMATTERS = {')]$/;"	v
header	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_mapping.py	/^    header = content[:content.find('LEXERS = {')]$/;"	v
header	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_scilab_builtins.py	/^    header = content[:content.find('# Autogenerated')]$/;"	v
header	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^    header = content[:content.find('Cc =')]$/;"	v
headerFilePath	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^            headerFilePath = frameworkHeadersDir + f$/;"	v
headerFilePath	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^            headerFilePath = frameworkHeadersDir + f$/;"	v
headerFilenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^        headerFilenames = os.listdir(frameworkHeadersDir)$/;"	v
headerFilenames	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^        headerFilenames = os.listdir(frameworkHeadersDir)$/;"	v
header_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    def header_callback(self, match):$/;"	m	class:HttpLexer
header_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    def header_callback(self, match):$/;"	m	class:HttpLexer
heredoc_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    def heredoc_callback(self, match, ctx):$/;"	m	class:RubyLexer
heredoc_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    def heredoc_callback(self, match, ctx):$/;"	m	class:RubyLexer
hex_char_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    hex_char_re = r'(\\\\x[\\da-fA-F]{1,2})'$/;"	v	class:ElixirLexer
hex_char_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    hex_char_re = r'(\\\\x[\\da-fA-F]{1,2})'$/;"	v	class:ElixirLexer
hexlify	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^from binascii import hexlify, unhexlify$/;"	i
hexn	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    hexn = r'(?:0x[0-9a-f]+|$0[0-9a-f]*|[0-9]+[0-9a-f]*h)'$/;"	v	class:NasmLexer
hexn	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    hexn = r'(?:0x[0-9a-f]+|$0[0-9a-f]*|[0-9]+[0-9a-f]*h)'$/;"	v	class:NasmLexer
highlight	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/__init__.py	/^def highlight(code, lexer, formatter, outfile=None):$/;"	f
highlight	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^from pygments import __version__, highlight$/;"	i
highlight	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/__init__.py	/^def highlight(code, lexer, formatter, outfile=None):$/;"	f
highlight	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^from pygments import __version__, highlight$/;"	i
highlight_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/style.py	/^    highlight_color = '#ffffcc'$/;"	v	class:Style
highlight_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/fruity.py	/^    highlight_color = '#333333'$/;"	v	class:FruityStyle
highlight_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/monokai.py	/^    highlight_color = "#49483e"$/;"	v	class:MonokaiStyle
highlight_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/native.py	/^    highlight_color = '#404040'$/;"	v	class:NativeStyle
highlight_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^    highlight_color = SELECTION$/;"	v	class:ParaisoDarkStyle
highlight_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^    highlight_color = SELECTION$/;"	v	class:ParaisoLightStyle
highlight_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/rrt.py	/^    highlight_color = '#0000ff'$/;"	v	class:RrtStyle
highlight_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vim.py	/^    highlight_color = "#222222"$/;"	v	class:VimStyle
highlight_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/style.py	/^    highlight_color = '#ffffcc'$/;"	v	class:Style
highlight_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/fruity.py	/^    highlight_color = '#333333'$/;"	v	class:FruityStyle
highlight_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/monokai.py	/^    highlight_color = "#49483e"$/;"	v	class:MonokaiStyle
highlight_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/native.py	/^    highlight_color = '#404040'$/;"	v	class:NativeStyle
highlight_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^    highlight_color = SELECTION$/;"	v	class:ParaisoDarkStyle
highlight_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^    highlight_color = SELECTION$/;"	v	class:ParaisoLightStyle
highlight_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/rrt.py	/^    highlight_color = '#0000ff'$/;"	v	class:RrtStyle
highlight_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vim.py	/^    highlight_color = "#222222"$/;"	v	class:VimStyle
history_complete	plugged/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:history_complete(arglead, cmdline, cursorpos)$/;"	f
host	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def host(self):$/;"	m	class:MockRequest
hostname	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/url.py	/^    def hostname(self):$/;"	m	class:Url
html_doctype_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^from pygments.util import looks_like_xml, html_doctype_matches$/;"	i
html_doctype_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^from pygments.util import html_doctype_matches, looks_like_xml$/;"	i
html_doctype_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^def html_doctype_matches(text):$/;"	f
html_doctype_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^from pygments.util import looks_like_xml, html_doctype_matches$/;"	i
html_doctype_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^from pygments.util import html_doctype_matches, looks_like_xml$/;"	i
html_doctype_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^def html_doctype_matches(text):$/;"	f
http	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    import http.client as httplib$/;"	i
httplib	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    import http.client as httplib$/;"	i
httplib	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    import httplib$/;"	i
hy_builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    hy_builtins = ()$/;"	v	class:HyLexer
hy_builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    hy_builtins = ()$/;"	v	class:HyLexer
hy_core	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    hy_core = ($/;"	v	class:HyLexer
hy_core	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    hy_core = ($/;"	v	class:HyLexer
i(	plugged/delimitMate/test/eol_marker.vim	/^normal i($/;"	m
i6t	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^                                i6t='+i6t-inline'), Punctuation), '#pop'),$/;"	v	class:Inform7Lexer
i6t	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^                                i6t='+i6t-not-inline'), Punctuation)),$/;"	v	class:Inform7Lexer
i6t	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^                                i6t='+i6t-use-option'), Punctuation), '#pop'),$/;"	v	class:Inform7Lexer
i6t	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^                                i6t='+i6t-inline'), Punctuation), '#pop'),$/;"	v	class:Inform7Lexer
i6t	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^                                i6t='+i6t-not-inline'), Punctuation)),$/;"	v	class:Inform7Lexer
i6t	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^                                i6t='+i6t-use-option'), Punctuation), '#pop'),$/;"	v	class:Inform7Lexer
iM	plugged/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
iconv	plugged/unite.vim/autoload/vital/_unite/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
id_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    def id_callback(self, match):$/;"	m	class:SMLLexer
id_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    def id_callback(self, match):$/;"	m	class:SMLLexer
iden_rex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    iden_rex = r'[a-zA-Z_][\\w\\']*'$/;"	v	class:AlloyLexer
iden_rex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    iden_rex = r'[a-zA-Z_][\\w\\']*'$/;"	v	class:AlloyLexer
ident	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    ident = r'(?:_*[a-z]\\w*|_+[0-9]\\w*|' + typeid + '|_+|\\$\\w+)'$/;"	v	class:HaxeLexer
ident	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    ident = r'(?:_*[a-z]\\w*|_+[0-9]\\w*|' + typeid + '|_+|\\$\\w+)'$/;"	v	class:HaxeLexer
ident_no_keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    ident_no_keyword = r'(?!' + keyword + ')' + ident$/;"	v	class:HaxeLexer
ident_no_keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    ident_no_keyword = r'(?!' + keyword + ')' + ident$/;"	v	class:HaxeLexer
ident_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    ident_re = r'(([a-zA-Z_]\\w*)|(`[^`]*`))'$/;"	v	class:OpaLexer
ident_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    ident_re = r'(([a-zA-Z_]\\w*)|(`[^`]*`))'$/;"	v	class:OpaLexer
identifier	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    identifier = r'[$a-zA-Z_]\\w*'$/;"	v	class:ActionScript3Lexer
identifier	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    identifier = r'(?:[a-zA-Z$_]' + char + '*|\\.' + char + '+)'$/;"	v	class:GasLexer
identifier	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    identifier = r'([-a-zA-Z$._][\\w\\-$.]*|' + string + ')'$/;"	v	class:LlvmLexer
identifier	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    identifier = r'[a-z$._?][\\w$.?#@~]*'$/;"	v	class:NasmLexer
identifier	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    identifier = r'[a-zA-Z_]\\w*'$/;"	v	class:VelocityLexer
identifier	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    identifier = r'[$a-zA-Z_]\\w*'$/;"	v	class:ActionScript3Lexer
identifier	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    identifier = r'(?:[a-zA-Z$_]' + char + '*|\\.' + char + '+)'$/;"	v	class:GasLexer
identifier	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    identifier = r'([-a-zA-Z$._][\\w\\-$.]*|' + string + ')'$/;"	v	class:LlvmLexer
identifier	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    identifier = r'[a-z$._?][\\w$.?#@~]*'$/;"	v	class:NasmLexer
identifier	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    identifier = r'[a-zA-Z_]\\w*'$/;"	v	class:VelocityLexer
identity	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^        def identity(string):$/;"	f	function:ArgumentParser.__init__
idrest	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    idrest = u'%s(?:%s|[0-9])*(?:(?<=_)%s)?' % (letter, letter, op)$/;"	v	class:ScalaLexer
idrest	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    idrest = u'%s(?:%s|[0-9])*(?:(?<=_)%s)?' % (letter, letter, op)$/;"	v	class:ScalaLexer
if	plugged/vim-go/ftplugin/go.vim	/^    onoremap <buffer> if :<c-u>call go#textobj#Function('i')<cr>$/;"	m
iget	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    iget = getlist$/;"	v	class:HTTPHeaderDict
ignore_candidates	plugged/unite.vim/autoload/unite/candidates.vim	/^function! s:ignore_candidates(candidates, context) "{{{$/;"	f
ihello	plugged/vim-gitgutter/test/testFileAddedToGit.vim	/^normal ihello$/;"	m
im	plugged/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
import	plugged/unite.vim/autoload/vital/_unite.vim	/^function! s:import(name, ...) abort$/;"	f
import	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^            and ('import numpy' in text or 'from numpy import' in text)$/;"	i
import	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^            and ('import numpy' in text or 'from numpy import' in text)$/;"	i
import_module	plugged/vim-wakatime/plugin/packages/wakatime/compat.py	/^    def import_module(name, package=None):$/;"	f
import_module	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^from ..compat import u, open, import_module$/;"	i
imports	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/_mapping.py	/^    imports = []$/;"	v
imports	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/_mapping.py	/^    imports = []$/;"	v
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^class include(str):$/;"	c
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, DelegatingLexer$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^from pygments.lexer import RegexLexer, include, bygroups, combined$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^from pygments.lexer import RegexLexer, bygroups, default, words, include$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^from pygments.lexer import RegexLexer, include, words, bygroups$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    this, inherit, default, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^from pygments.lexer import RegexLexer, default, words, bygroups, include, using$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    default, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dalvik.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    include, bygroups, inherit$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    using, this, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^from pygments.lexer import RegexLexer, bygroups, words, include, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^from pygments.lexer import RegexLexer, include, bygroups, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/eiffel.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    include, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^from pygments.lexer import RegexLexer, include$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    this, default, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    combined$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    this, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    default, include$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^from pygments.lexer import RegexLexer, bygroups, include, using, this, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    default, using$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^from pygments.lexer import RegexLexer, include, bygroups, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    this, default, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    this, combined, default, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    do_insertions, using$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    using, this, do_insertions, default, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^from pygments.lexer import RegexLexer, include, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^from pygments.lexer import RegexLexer, include$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    inherit, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    include, bygroups, using$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    using, this, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    using, this, default, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    default, words, combined, do_insertions$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^from pygments.lexer import Lexer, RegexLexer, include, words, do_insertions$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    bygroups, default, LexerContext, do_insertions, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, include$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^from pygments.lexer import RegexLexer, include, bygroups, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    include, using, this, default, combined$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/testing.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^from pygments.lexer import RegexLexer, include, default, bygroups, using, this$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    default, using$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^class include(str):$/;"	c
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, DelegatingLexer$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^from pygments.lexer import RegexLexer, include, bygroups, combined$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^from pygments.lexer import RegexLexer, bygroups, default, words, include$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^from pygments.lexer import RegexLexer, include, words, bygroups$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    this, inherit, default, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^from pygments.lexer import RegexLexer, default, words, bygroups, include, using$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    default, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dalvik.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    include, bygroups, inherit$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    using, this, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^from pygments.lexer import RegexLexer, bygroups, words, include, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^from pygments.lexer import RegexLexer, include, bygroups, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/eiffel.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    include, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^from pygments.lexer import RegexLexer, include$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    this, default, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    combined$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    this, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    default, include$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^from pygments.lexer import RegexLexer, bygroups, include, using, this, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    default, using$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^from pygments.lexer import RegexLexer, include, bygroups, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    this, default, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    this, combined, default, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    do_insertions, using$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    using, this, do_insertions, default, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^from pygments.lexer import RegexLexer, include, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^from pygments.lexer import RegexLexer, include$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    inherit, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    include, bygroups, using$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    using, this, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    using, this, default, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    default, words, combined, do_insertions$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^from pygments.lexer import Lexer, RegexLexer, include, words, do_insertions$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    bygroups, default, LexerContext, do_insertions, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, include$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^from pygments.lexer import RegexLexer, include, bygroups, default$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    include, using, this, default, combined$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/testing.py	/^from pygments.lexer import RegexLexer, include, bygroups$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^from pygments.lexer import RegexLexer, include, default, bygroups, using, this$/;"	i
include	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    default, using$/;"	i
increment	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/retry.py	/^    def increment(self, method=None, url=None, response=None, error=None, _pool=None, _stacktrace=None):$/;"	m	class:Retry
indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *indent;$/;"	m	struct:_PyEncoderObject	file:
infer_properties	autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
info	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def info(self):$/;"	m	class:MockResponse
ingo#actions#EvaluateOrFunc	plugged/ingo-library/autoload/ingo/actions.vim	/^function! ingo#actions#EvaluateOrFunc( Action, ... )$/;"	f
ingo#actions#EvaluateWithVal	plugged/ingo-library/autoload/ingo/actions.vim	/^function! ingo#actions#EvaluateWithVal( expression, val )$/;"	f
ingo#actions#EvaluateWithValOrFunc	plugged/ingo-library/autoload/ingo/actions.vim	/^function! ingo#actions#EvaluateWithValOrFunc( Action, ... )$/;"	f
ingo#actions#ExecuteOrFunc	plugged/ingo-library/autoload/ingo/actions.vim	/^function! ingo#actions#ExecuteOrFunc( Action, ... )$/;"	f
ingo#actions#GetValExpr	plugged/ingo-library/autoload/ingo/actions.vim	/^function! ingo#actions#GetValExpr()$/;"	f
ingo#actions#NormalOrFunc	plugged/ingo-library/autoload/ingo/actions.vim	/^function! ingo#actions#NormalOrFunc( Action, ... )$/;"	f
ingo#actions#ValueOrFunc	plugged/ingo-library/autoload/ingo/actions.vim	/^function! ingo#actions#ValueOrFunc( Action, ... )$/;"	f
ingo#avoidprompt#Echo	plugged/ingo-library/autoload/ingo/avoidprompt.vim	/^function! ingo#avoidprompt#Echo( text )$/;"	f
ingo#avoidprompt#EchoAsSingleLine	plugged/ingo-library/autoload/ingo/avoidprompt.vim	/^function! ingo#avoidprompt#EchoAsSingleLine( text )$/;"	f
ingo#avoidprompt#MaxLength	plugged/ingo-library/autoload/ingo/avoidprompt.vim	/^function! ingo#avoidprompt#MaxLength()$/;"	f
ingo#avoidprompt#TranslateLineBreaks	plugged/ingo-library/autoload/ingo/avoidprompt.vim	/^function! ingo#avoidprompt#TranslateLineBreaks( text )$/;"	f
ingo#avoidprompt#Truncate	plugged/ingo-library/autoload/ingo/avoidprompt.vim	/^function! ingo#avoidprompt#Truncate( text, ... )$/;"	f
ingo#avoidprompt#TruncateTo	plugged/ingo-library/autoload/ingo/avoidprompt.vim	/^function! ingo#avoidprompt#TruncateTo( text, length )$/;"	f
ingo#buffer#ExistOtherBuffers	plugged/ingo-library/autoload/ingo/buffer.vim	/^function! ingo#buffer#ExistOtherBuffers( targetBufNr )$/;"	f
ingo#buffer#IsBlank	plugged/ingo-library/autoload/ingo/buffer.vim	/^function! ingo#buffer#IsBlank( ... )$/;"	f
ingo#buffer#IsEmpty	plugged/ingo-library/autoload/ingo/buffer.vim	/^function! ingo#buffer#IsEmpty( ... )$/;"	f
ingo#buffer#IsEmptyVim	plugged/ingo-library/autoload/ingo/buffer.vim	/^function! ingo#buffer#IsEmptyVim()$/;"	f
ingo#buffer#IsPersisted	plugged/ingo-library/autoload/ingo/buffer.vim	/^function! ingo#buffer#IsPersisted( ... )$/;"	f
ingo#buffer#scratch#Create	plugged/ingo-library/autoload/ingo/buffer/scratch.vim	/^function! ingo#buffer#scratch#Create( scratchDirspec, scratchFilename, scratchIsFile, scratchCommand, windowOpenCommand )$/;"	f
ingo#buffer#scratch#GetUnusedBracketedFilename	plugged/ingo-library/autoload/ingo/buffer/scratch.vim	/^function! ingo#buffer#scratch#GetUnusedBracketedFilename( dirspec, baseFilename, isFile, template )$/;"	f
ingo#buffer#scratch#NextBracketedFilename	plugged/ingo-library/autoload/ingo/buffer/scratch.vim	/^function! ingo#buffer#scratch#NextBracketedFilename( filespec, template )$/;"	f
ingo#buffer#scratch#NextFilename	plugged/ingo-library/autoload/ingo/buffer/scratch.vim	/^function! ingo#buffer#scratch#NextFilename( filespec )$/;"	f
ingo#buffer#scratch#SetLocal	plugged/ingo-library/autoload/ingo/buffer/scratch.vim	/^function! ingo#buffer#scratch#SetLocal( isFile )$/;"	f
ingo#buffer#temp#Call	plugged/ingo-library/autoload/ingo/buffer/temp.vim	/^function! ingo#buffer#temp#Call( Funcref, arguments, ... )$/;"	f
ingo#buffer#temp#Execute	plugged/ingo-library/autoload/ingo/buffer/temp.vim	/^function! ingo#buffer#temp#Execute( command, ... )$/;"	f
ingo#buffer#temprange#Call	plugged/ingo-library/autoload/ingo/buffer/temprange.vim	/^function! ingo#buffer#temprange#Call( lines, Funcref, arguments, ... )$/;"	f
ingo#buffer#temprange#Execute	plugged/ingo-library/autoload/ingo/buffer/temprange.vim	/^function! ingo#buffer#temprange#Execute( lines, command, ... )$/;"	f
ingo#buffer#visible#Call	plugged/ingo-library/autoload/ingo/buffer/visible.vim	/^function! ingo#buffer#visible#Call( bufnr, Funcref, arguments )$/;"	f
ingo#buffer#visible#Execute	plugged/ingo-library/autoload/ingo/buffer/visible.vim	/^function! ingo#buffer#visible#Execute( bufnr, command )$/;"	f
ingo#cmdargs#GetStringExpr	plugged/ingo-library/autoload/ingo/cmdargs.vim	/^function! ingo#cmdargs#GetStringExpr( argument )$/;"	f
ingo#cmdargs#GetUnescapedExpr	plugged/ingo-library/autoload/ingo/cmdargs.vim	/^function! ingo#cmdargs#GetUnescapedExpr( argument )$/;"	f
ingo#cmdargs#command#DelimiterExpr	plugged/ingo-library/autoload/ingo/cmdargs/command.vim	/^function! ingo#cmdargs#command#DelimiterExpr()$/;"	f
ingo#cmdargs#command#Parse	plugged/ingo-library/autoload/ingo/cmdargs/command.vim	/^function! ingo#cmdargs#command#Parse( commandLine, ... )$/;"	f
ingo#cmdargs#commandcommands#GetExpr	plugged/ingo-library/autoload/ingo/cmdargs/commandcommands.vim	/^function! ingo#cmdargs#commandcommands#GetExpr()$/;"	f
ingo#cmdargs#file#FilterEscapedFileOptionsAndCommands	plugged/ingo-library/autoload/ingo/cmdargs/file.vim	/^function! ingo#cmdargs#file#FilterEscapedFileOptionsAndCommands( arguments )$/;"	f
ingo#cmdargs#file#FilterFileOptionsAndCommands	plugged/ingo-library/autoload/ingo/cmdargs/file.vim	/^function! ingo#cmdargs#file#FilterFileOptionsAndCommands( fileglobs )$/;"	f
ingo#cmdargs#file#SplitAndUnescape	plugged/ingo-library/autoload/ingo/cmdargs/file.vim	/^function! ingo#cmdargs#file#SplitAndUnescape( fileArguments )$/;"	f
ingo#cmdargs#file#Unescape	plugged/ingo-library/autoload/ingo/cmdargs/file.vim	/^function! ingo#cmdargs#file#Unescape( fileArgument )$/;"	f
ingo#cmdargs#glob#Expand	plugged/ingo-library/autoload/ingo/cmdargs/glob.vim	/^function! ingo#cmdargs#glob#Expand( fileglobs, ... )$/;"	f
ingo#cmdargs#glob#ExpandSingle	plugged/ingo-library/autoload/ingo/cmdargs/glob.vim	/^function! ingo#cmdargs#glob#ExpandSingle( fileglob, ... )$/;"	f
ingo#cmdargs#glob#Resolve	plugged/ingo-library/autoload/ingo/cmdargs/glob.vim	/^function! ingo#cmdargs#glob#Resolve( fileglobs )$/;"	f
ingo#cmdargs#pattern#IsDelimited	plugged/ingo-library/autoload/ingo/cmdargs/pattern.vim	/^function! ingo#cmdargs#pattern#IsDelimited( arguments, ... )$/;"	f
ingo#cmdargs#pattern#Parse	plugged/ingo-library/autoload/ingo/cmdargs/pattern.vim	/^function! ingo#cmdargs#pattern#Parse( arguments, ... )$/;"	f
ingo#cmdargs#pattern#ParseUnescaped	plugged/ingo-library/autoload/ingo/cmdargs/pattern.vim	/^function! ingo#cmdargs#pattern#ParseUnescaped( arguments, ... )$/;"	f
ingo#cmdargs#pattern#ParseUnescapedWithLiteralWholeWord	plugged/ingo-library/autoload/ingo/cmdargs/pattern.vim	/^function! ingo#cmdargs#pattern#ParseUnescapedWithLiteralWholeWord( arguments, ... )$/;"	f
ingo#cmdargs#pattern#Unescape	plugged/ingo-library/autoload/ingo/cmdargs/pattern.vim	/^function! ingo#cmdargs#pattern#Unescape( parsedArguments )$/;"	f
ingo#cmdargs#range#Parse	plugged/ingo-library/autoload/ingo/cmdargs/range.vim	/^function! ingo#cmdargs#range#Parse( commandLine, ... )$/;"	f
ingo#cmdargs#range#RangeExpr	plugged/ingo-library/autoload/ingo/cmdargs/range.vim	/^function! ingo#cmdargs#range#RangeExpr()$/;"	f
ingo#cmdargs#range#SingleRangeExpr	plugged/ingo-library/autoload/ingo/cmdargs/range.vim	/^function! ingo#cmdargs#range#SingleRangeExpr()$/;"	f
ingo#cmdargs#register#ParseAppendedWritableRegister	plugged/ingo-library/autoload/ingo/cmdargs/register.vim	/^function! ingo#cmdargs#register#ParseAppendedWritableRegister( arguments, ... )$/;"	f
ingo#cmdargs#substitute#Parse	plugged/ingo-library/autoload/ingo/cmdargs/substitute.vim	/^function! ingo#cmdargs#substitute#Parse( arguments, ... )$/;"	f
ingo#cmdline#showmode#OneLineTemporaryNoShowMode	plugged/ingo-library/autoload/ingo/cmdline/showmode.vim	/^function! ingo#cmdline#showmode#OneLineTemporaryNoShowMode()$/;"	f
ingo#cmdrangeconverter#BufferToLineRange	plugged/ingo-library/autoload/ingo/cmdrangeconverter.vim	/^function! ingo#cmdrangeconverter#BufferToLineRange( cmd ) range$/;"	f
ingo#cmdrangeconverter#LineToBufferRange	plugged/ingo-library/autoload/ingo/cmdrangeconverter.vim	/^function! ingo#cmdrangeconverter#LineToBufferRange( cmd )$/;"	f
ingo#codec#URL#Decode	plugged/ingo-library/autoload/ingo/codec/URL.vim	/^function! ingo#codec#URL#Decode( text )$/;"	f
ingo#codec#URL#Encode	plugged/ingo-library/autoload/ingo/codec/URL.vim	/^function! ingo#codec#URL#Encode( text )$/;"	f
ingo#codec#URL#FilespecEncode	plugged/ingo-library/autoload/ingo/codec/URL.vim	/^function! ingo#codec#URL#FilespecEncode( text )$/;"	f
ingo#collections#Flatten	plugged/ingo-library/autoload/ingo/collections.vim	/^function! ingo#collections#Flatten( list )$/;"	f
ingo#collections#Flatten1	plugged/ingo-library/autoload/ingo/collections.vim	/^function! ingo#collections#Flatten1( list )$/;"	f
ingo#collections#SplitKeepSeparators	plugged/ingo-library/autoload/ingo/collections.vim	/^function! ingo#collections#SplitKeepSeparators( expr, pattern, ... )$/;"	f
ingo#collections#ToDict	plugged/ingo-library/autoload/ingo/collections.vim	/^function! ingo#collections#ToDict( list, ... )$/;"	f
ingo#collections#Unique	plugged/ingo-library/autoload/ingo/collections.vim	/^function! ingo#collections#Unique( list, ... )$/;"	f
ingo#collections#UniqueSorted	plugged/ingo-library/autoload/ingo/collections.vim	/^function! ingo#collections#UniqueSorted( list )$/;"	f
ingo#collections#UniqueStable	plugged/ingo-library/autoload/ingo/collections.vim	/^function! ingo#collections#UniqueStable( list, ... )$/;"	f
ingo#collections#differences#Get	plugged/ingo-library/autoload/ingo/collections/differences.vim	/^function! ingo#collections#differences#Get( list1, list2 )$/;"	f
ingo#collections#isort	plugged/ingo-library/autoload/ingo/collections.vim	/^function! ingo#collections#isort( i1, i2 )$/;"	f
ingo#collections#mapsort	plugged/ingo-library/autoload/ingo/collections.vim	/^function! ingo#collections#mapsort( string, i1, i2 )$/;"	f
ingo#collections#memoized#Mapsort	plugged/ingo-library/autoload/ingo/collections/memoized.vim	/^function! ingo#collections#memoized#Mapsort( string, i1, i2, ... )$/;"	f
ingo#collections#numsort	plugged/ingo-library/autoload/ingo/collections.vim	/^function! ingo#collections#numsort( i1, i2, ... )$/;"	f
ingo#collections#permute#Shuffle	plugged/ingo-library/autoload/ingo/collections/permute.vim	/^function! ingo#collections#permute#Shuffle( list, Rand )$/;"	f
ingo#collections#rotate#Left	plugged/ingo-library/autoload/ingo/collections/rotate.vim	/^function! ingo#collections#rotate#Left( list )$/;"	f
ingo#collections#rotate#Right	plugged/ingo-library/autoload/ingo/collections/rotate.vim	/^function! ingo#collections#rotate#Right( list )$/;"	f
ingo#collections#unique#AddNew	plugged/ingo-library/autoload/ingo/collections/unique.vim	/^function! ingo#collections#unique#AddNew( list, expr )$/;"	f
ingo#collections#unique#ExtendWithNew	plugged/ingo-library/autoload/ingo/collections/unique.vim	/^function! ingo#collections#unique#ExtendWithNew( expr1, expr2, ... )$/;"	f
ingo#collections#unique#InsertNew	plugged/ingo-library/autoload/ingo/collections/unique.vim	/^function! ingo#collections#unique#InsertNew( list, expr, ... )$/;"	f
ingo#collections#unique#MakeUnique	plugged/ingo-library/autoload/ingo/collections/unique.vim	/^function! ingo#collections#unique#MakeUnique( memory, expr )$/;"	f
ingo#comments#CheckComment	plugged/ingo-library/autoload/ingo/comments.vim	/^function! ingo#comments#CheckComment( text, ... )$/;"	f
ingo#comments#GetCommentPrefixType	plugged/ingo-library/autoload/ingo/comments.vim	/^function! ingo#comments#GetCommentPrefixType( prefix )$/;"	f
ingo#comments#GetThreePieceIndent	plugged/ingo-library/autoload/ingo/comments.vim	/^function! ingo#comments#GetThreePieceIndent( prefix )$/;"	f
ingo#comments#RemoveCommentPrefix	plugged/ingo-library/autoload/ingo/comments.vim	/^function! ingo#comments#RemoveCommentPrefix( text, checkComment )$/;"	f
ingo#comments#RenderComment	plugged/ingo-library/autoload/ingo/comments.vim	/^function! ingo#comments#RenderComment( text, checkComment )$/;"	f
ingo#compat#abs	plugged/ingo-library/autoload/ingo/compat.vim	/^    function! ingo#compat#abs( expr )$/;"	f
ingo#compat#complete#FileType	plugged/ingo-library/autoload/ingo/compat/complete.vim	/^function! ingo#compat#complete#FileType( ArgLead, CmdLine, CursorPos )$/;"	f
ingo#compat#fnameescape	plugged/ingo-library/autoload/ingo/compat.vim	/^function! ingo#compat#fnameescape( filespec )$/;"	f
ingo#compat#glob	plugged/ingo-library/autoload/ingo/compat.vim	/^    function! ingo#compat#glob( ... )$/;"	f
ingo#compat#globpath	plugged/ingo-library/autoload/ingo/compat.vim	/^    function! ingo#compat#globpath( ... )$/;"	f
ingo#compat#maparg	plugged/ingo-library/autoload/ingo/compat.vim	/^    function! ingo#compat#maparg( name, ... )$/;"	f
ingo#compat#regexp#GetOldEnginePrefix	plugged/ingo-library/autoload/ingo/compat/regexp.vim	/^    function! ingo#compat#regexp#GetOldEnginePrefix()$/;"	f
ingo#compat#setpos	plugged/ingo-library/autoload/ingo/compat.vim	/^    function! ingo#compat#setpos( expr, list )$/;"	f
ingo#compat#shellcommand#escape	plugged/ingo-library/autoload/ingo/compat/shellcommand.vim	/^function! ingo#compat#shellcommand#escape( command )$/;"	f
ingo#compat#shellescape	plugged/ingo-library/autoload/ingo/compat.vim	/^function! ingo#compat#shellescape( filespec, ... )$/;"	f
ingo#compat#shiftwidth	plugged/ingo-library/autoload/ingo/compat.vim	/^    function ingo#compat#shiftwidth()$/;"	f
ingo#compat#strchars	plugged/ingo-library/autoload/ingo/compat.vim	/^    function! ingo#compat#strchars( expr )$/;"	f
ingo#compat#strdisplaywidth	plugged/ingo-library/autoload/ingo/compat.vim	/^    function! ingo#compat#strdisplaywidth( expr, ... )$/;"	f
ingo#compat#uniq	plugged/ingo-library/autoload/ingo/compat.vim	/^    function! ingo#compat#uniq( list )$/;"	f
ingo#cursor#IsAtEndOfLine	plugged/ingo-library/autoload/ingo/cursor.vim	/^function! ingo#cursor#IsAtEndOfLine( ... )$/;"	f
ingo#cursor#Set	plugged/ingo-library/autoload/ingo/cursor.vim	/^function! ingo#cursor#Set( lnum, virtcol )$/;"	f
ingo#cursor#move#Left	plugged/ingo-library/autoload/ingo/cursor/move.vim	/^function! ingo#cursor#move#Left( ... )$/;"	f
ingo#cursor#move#Move	plugged/ingo-library/autoload/ingo/cursor/move.vim	/^function! ingo#cursor#move#Move( movement )$/;"	f
ingo#cursor#move#Right	plugged/ingo-library/autoload/ingo/cursor/move.vim	/^function! ingo#cursor#move#Right( ... )$/;"	f
ingo#date#HumanReltime	plugged/ingo-library/autoload/ingo/date.vim	/^function! ingo#date#HumanReltime( timeElapsed, ... )$/;"	f
ingo#date#epoch#ConvertTo	plugged/ingo-library/autoload/ingo/date/epoch.vim	/^function! ingo#date#epoch#ConvertTo( date )$/;"	f
ingo#date#format#International	plugged/ingo-library/autoload/ingo/date/format.vim	/^function! ingo#date#format#International( ... )$/;"	f
ingo#date#format#InternetTimestamp	plugged/ingo-library/autoload/ingo/date/format.vim	/^function! ingo#date#format#InternetTimestamp( ... )$/;"	f
ingo#date#format#Preferred	plugged/ingo-library/autoload/ingo/date/format.vim	/^function! ingo#date#format#Preferred( ... )$/;"	f
ingo#date#format#Sortable	plugged/ingo-library/autoload/ingo/date/format.vim	/^function! ingo#date#format#Sortable( ... )$/;"	f
ingo#date#format#SortableNumeric	plugged/ingo-library/autoload/ingo/date/format.vim	/^function! ingo#date#format#SortableNumeric( ... )$/;"	f
ingo#dict#AddMirrored	plugged/ingo-library/autoload/ingo/dict.vim	/^function! ingo#dict#AddMirrored( dict, ... )$/;"	f
ingo#dict#FromItems	plugged/ingo-library/autoload/ingo/dict.vim	/^function! ingo#dict#FromItems( items, ... )$/;"	f
ingo#dict#FromKeys	plugged/ingo-library/autoload/ingo/dict.vim	/^function! ingo#dict#FromKeys( keys, defaultValue )$/;"	f
ingo#dict#Mirror	plugged/ingo-library/autoload/ingo/dict.vim	/^function! ingo#dict#Mirror( dict, ... )$/;"	f
ingo#dict#find#FirstKey	plugged/ingo-library/autoload/ingo/dict/find.vim	/^function! ingo#dict#find#FirstKey( dict, value, ... )$/;"	f
ingo#dict#find#Keys	plugged/ingo-library/autoload/ingo/dict/find.vim	/^function! ingo#dict#find#Keys( dict, value, ... )$/;"	f
ingo#encoding#GetFileEncoding	plugged/ingo-library/autoload/ingo/encoding.vim	/^function! ingo#encoding#GetFileEncoding()$/;"	f
ingo#err#Clear	plugged/ingo-library/autoload/ingo/err.vim	/^function! ingo#err#Clear()$/;"	f
ingo#err#Get	plugged/ingo-library/autoload/ingo/err.vim	/^function! ingo#err#Get()$/;"	f
ingo#err#IsSet	plugged/ingo-library/autoload/ingo/err.vim	/^function! ingo#err#IsSet()$/;"	f
ingo#err#Set	plugged/ingo-library/autoload/ingo/err.vim	/^function! ingo#err#Set( errmsg )$/;"	f
ingo#err#SetCustomException	plugged/ingo-library/autoload/ingo/err.vim	/^function! ingo#err#SetCustomException( customPrefixPattern )$/;"	f
ingo#err#SetVimException	plugged/ingo-library/autoload/ingo/err.vim	/^function! ingo#err#SetVimException()$/;"	f
ingo#escape#Unescape	plugged/ingo-library/autoload/ingo/escape.vim	/^function! ingo#escape#Unescape( string, chars )$/;"	f
ingo#escape#UnescapeExpr	plugged/ingo-library/autoload/ingo/escape.vim	/^function! ingo#escape#UnescapeExpr( string, expr )$/;"	f
ingo#escape#command#mapescape	plugged/ingo-library/autoload/ingo/escape/command.vim	/^function! ingo#escape#command#mapescape( command )$/;"	f
ingo#escape#file#autocmdescape	plugged/ingo-library/autoload/ingo/escape/file.vim	/^function! ingo#escape#file#autocmdescape( filespec )$/;"	f
ingo#escape#file#bufnameescape	plugged/ingo-library/autoload/ingo/escape/file.vim	/^function! ingo#escape#file#bufnameescape( filespec, ... )$/;"	f
ingo#escape#file#fnameunescape	plugged/ingo-library/autoload/ingo/escape/file.vim	/^function! ingo#escape#file#fnameunescape( exfilespec, ... )$/;"	f
ingo#escape#file#wildcardescape	plugged/ingo-library/autoload/ingo/escape/file.vim	/^function! ingo#escape#file#wildcardescape( filespec )$/;"	f
ingo#escape#shellcommand#exescape	plugged/ingo-library/autoload/ingo/escape/shellcommand.vim	/^function! ingo#escape#shellcommand#exescape( command )$/;"	f
ingo#event#Trigger	plugged/ingo-library/autoload/ingo/event.vim	/^function! ingo#event#Trigger( arguments )$/;"	f
ingo#event#TriggerCustom	plugged/ingo-library/autoload/ingo/event.vim	/^function! ingo#event#TriggerCustom( eventName )$/;"	f
ingo#external#LaunchGvim	plugged/ingo-library/autoload/ingo/external.vim	/^function! ingo#external#LaunchGvim( commands, ... )$/;"	f
ingo#filetype#Is	plugged/ingo-library/autoload/ingo/filetype.vim	/^function! ingo#filetype#Is( filetypes )$/;"	f
ingo#filetype#IsPrimary	plugged/ingo-library/autoload/ingo/filetype.vim	/^function! ingo#filetype#IsPrimary( filetypes )$/;"	f
ingo#folds#FoldedLines	plugged/ingo-library/autoload/ingo/folds.vim	/^function! ingo#folds#FoldedLines( startLine, endLine )$/;"	f
ingo#folds#GetClosedFolds	plugged/ingo-library/autoload/ingo/folds.vim	/^function! ingo#folds#GetClosedFolds( startLnum, endLnum )$/;"	f
ingo#folds#NextVisibleLine	plugged/ingo-library/autoload/ingo/folds.vim	/^function! ingo#folds#NextVisibleLine( lnum, direction )$/;"	f
ingo#folds#RelativeWindowLine	plugged/ingo-library/autoload/ingo/folds.vim	/^function! ingo#folds#RelativeWindowLine( lnum, count, direction, ... )$/;"	f
ingo#folds#persistence#RestoreManualFolds	plugged/ingo-library/autoload/ingo/folds/persistence.vim	/^function! ingo#folds#persistence#RestoreManualFolds( handle )$/;"	f
ingo#folds#persistence#SaveManualFolds	plugged/ingo-library/autoload/ingo/folds/persistence.vim	/^function! ingo#folds#persistence#SaveManualFolds()$/;"	f
ingo#foldtext#DefaultPrefix	plugged/ingo-library/autoload/ingo/foldtext.vim	/^function! ingo#foldtext#DefaultPrefix( text )$/;"	f
ingo#format#Format	plugged/ingo-library/autoload/ingo/format.vim	/^function! ingo#format#Format( fmt, ... )$/;"	f
ingo#fs#path#Combine	plugged/ingo-library/autoload/ingo/fs/path.vim	/^function! ingo#fs#path#Combine( first, ... )$/;"	f
ingo#fs#path#Equals	plugged/ingo-library/autoload/ingo/fs/path.vim	/^function! ingo#fs#path#Equals( p1, p2 )$/;"	f
ingo#fs#path#Exists	plugged/ingo-library/autoload/ingo/fs/path.vim	/^function! ingo#fs#path#Exists( filespec )$/;"	f
ingo#fs#path#GetRootDir	plugged/ingo-library/autoload/ingo/fs/path.vim	/^function! ingo#fs#path#GetRootDir( filespec )$/;"	f
ingo#fs#path#IsCaseInsensitive	plugged/ingo-library/autoload/ingo/fs/path.vim	/^function! ingo#fs#path#IsCaseInsensitive( ... )$/;"	f
ingo#fs#path#IsUncPathRoot	plugged/ingo-library/autoload/ingo/fs/path.vim	/^function! ingo#fs#path#IsUncPathRoot( filespec )$/;"	f
ingo#fs#path#Normalize	plugged/ingo-library/autoload/ingo/fs/path.vim	/^function! ingo#fs#path#Normalize( filespec, ... )$/;"	f
ingo#fs#path#Separator	plugged/ingo-library/autoload/ingo/fs/path.vim	/^function! ingo#fs#path#Separator()$/;"	f
ingo#fs#path#split#AtBasePath	plugged/ingo-library/autoload/ingo/fs/path/split.vim	/^function! ingo#fs#path#split#AtBasePath( filespec, basePath )$/;"	f
ingo#fs#tempfile#Make	plugged/ingo-library/autoload/ingo/fs/tempfile.vim	/^function! ingo#fs#tempfile#Make( filename, ... )$/;"	f
ingo#fs#traversal#FindDirUpwards	plugged/ingo-library/autoload/ingo/fs/traversal.vim	/^function! ingo#fs#traversal#FindDirUpwards( Predicate, ... )$/;"	f
ingo#fs#traversal#FindLastContainedInUpDir	plugged/ingo-library/autoload/ingo/fs/traversal.vim	/^function! ingo#fs#traversal#FindLastContainedInUpDir( expr, ... )$/;"	f
ingo#ftplugin#onbufwinenter#Execute	plugged/ingo-library/autoload/ingo/ftplugin/onbufwinenter.vim	/^function! ingo#ftplugin#onbufwinenter#Execute( command, ... )$/;"	f
ingo#ftplugin#windowsettings#Undo	plugged/ingo-library/autoload/ingo/ftplugin/windowsettings.vim	/^function! ingo#ftplugin#windowsettings#Undo( windowSettings )$/;"	f
ingo#funcref#ToString	plugged/ingo-library/autoload/ingo/funcref.vim	/^function! ingo#funcref#ToString( Funcref )$/;"	f
ingo#gui#position#Get	plugged/ingo-library/autoload/ingo/gui/position.vim	/^function! ingo#gui#position#Get()$/;"	f
ingo#join#FoldedLines	plugged/ingo-library/autoload/ingo/join.vim	/^function! ingo#join#FoldedLines( isKeepSpace, startLnum, endLnum, separator )$/;"	f
ingo#join#Lines	plugged/ingo-library/autoload/ingo/join.vim	/^function! ingo#join#Lines( lnum, isKeepSpace, separator )$/;"	f
ingo#join#Ranges	plugged/ingo-library/autoload/ingo/join.vim	/^function! ingo#join#Ranges( isKeepSpace, startLnum, endLnum, separator, ranges )$/;"	f
ingo#lines#PutBefore	plugged/ingo-library/autoload/ingo/lines.vim	/^function! ingo#lines#PutBefore( lnum, lines )$/;"	f
ingo#lines#PutWrapper	plugged/ingo-library/autoload/ingo/lines.vim	/^function! ingo#lines#PutWrapper( lnum, putCommand, lines )$/;"	f
ingo#lines#Replace	plugged/ingo-library/autoload/ingo/lines.vim	/^function! ingo#lines#Replace( startLnum, endLnum, lines, ... )$/;"	f
ingo#list#AddOrExtend	plugged/ingo-library/autoload/ingo/list.vim	/^function! ingo#list#AddOrExtend( list, val, ... )$/;"	f
ingo#list#Make	plugged/ingo-library/autoload/ingo/list.vim	/^function! ingo#list#Make( val, ... )$/;"	f
ingo#list#Zip	plugged/ingo-library/autoload/ingo/list.vim	/^function! ingo#list#Zip( ... )$/;"	f
ingo#list#ZipLongest	plugged/ingo-library/autoload/ingo/list.vim	/^function! ingo#list#ZipLongest( defaultValue, ... )$/;"	f
ingo#mapmaker#OperatorMappingForRangeCommand	plugged/ingo-library/autoload/ingo/mapmaker.vim	/^function! ingo#mapmaker#OperatorMappingForRangeCommand( mapArgs, mapKeys, rangeCommand )$/;"	f
ingo#matches#CountMatches	plugged/ingo-library/autoload/ingo/matches.vim	/^function! ingo#matches#CountMatches( text, pattern )$/;"	f
ingo#mbyte#virtcol#GetVirtColOfCurrentCharacter	plugged/ingo-library/autoload/ingo/mbyte/virtcol.vim	/^function! ingo#mbyte#virtcol#GetVirtColOfCurrentCharacter( lineNum, column )$/;"	f
ingo#mbyte#virtcol#GetVirtColOfNextCharacter	plugged/ingo-library/autoload/ingo/mbyte/virtcol.vim	/^function! ingo#mbyte#virtcol#GetVirtColOfNextCharacter( lineNum, column )$/;"	f
ingo#mbyte#virtcol#GetVirtStartColOfCurrentCharacter	plugged/ingo-library/autoload/ingo/mbyte/virtcol.vim	/^function! ingo#mbyte#virtcol#GetVirtStartColOfCurrentCharacter( lineNum, column )$/;"	f
ingo#motion#boundary#FirstArgument	plugged/ingo-library/autoload/ingo/motion/boundary.vim	/^function! ingo#motion#boundary#FirstArgument( count )$/;"	f
ingo#motion#boundary#FirstChange	plugged/ingo-library/autoload/ingo/motion/boundary.vim	/^function! ingo#motion#boundary#FirstChange( count )$/;"	f
ingo#motion#boundary#FirstMisspelling	plugged/ingo-library/autoload/ingo/motion/boundary.vim	/^function! ingo#motion#boundary#FirstMisspelling( count )$/;"	f
ingo#motion#boundary#LastArgument	plugged/ingo-library/autoload/ingo/motion/boundary.vim	/^function! ingo#motion#boundary#LastArgument( count )$/;"	f
ingo#motion#boundary#LastChange	plugged/ingo-library/autoload/ingo/motion/boundary.vim	/^function! ingo#motion#boundary#LastChange( count )$/;"	f
ingo#motion#boundary#LastLocationList	plugged/ingo-library/autoload/ingo/motion/boundary.vim	/^function! ingo#motion#boundary#LastLocationList( count )$/;"	f
ingo#motion#boundary#LastMisspelling	plugged/ingo-library/autoload/ingo/motion/boundary.vim	/^function! ingo#motion#boundary#LastMisspelling( count )$/;"	f
ingo#motion#boundary#LastQuickfix	plugged/ingo-library/autoload/ingo/motion/boundary.vim	/^function! ingo#motion#boundary#LastQuickfix( count )$/;"	f
ingo#motion#helper#AdditionalMovement	plugged/ingo-library/autoload/ingo/motion/helper.vim	/^function! ingo#motion#helper#AdditionalMovement( ... )$/;"	f
ingo#motion#omap#repeat	plugged/ingo-library/autoload/ingo/motion/omap.vim	/^function! ingo#motion#omap#repeat( repeatMapping, operator, count )$/;"	f
ingo#msg#CustomExceptionMsg	plugged/ingo-library/autoload/ingo/msg.vim	/^function! ingo#msg#CustomExceptionMsg( customPrefixPattern )$/;"	f
ingo#msg#ErrorMsg	plugged/ingo-library/autoload/ingo/msg.vim	/^function! ingo#msg#ErrorMsg( text, ... )$/;"	f
ingo#msg#HighlightMsg	plugged/ingo-library/autoload/ingo/msg.vim	/^function! ingo#msg#HighlightMsg( text, hlgroup )$/;"	f
ingo#msg#MsgFromVimException	plugged/ingo-library/autoload/ingo/msg.vim	/^function! ingo#msg#MsgFromVimException()$/;"	f
ingo#msg#ShellError	plugged/ingo-library/autoload/ingo/msg.vim	/^function! ingo#msg#ShellError( whatFailure, shellOutput )$/;"	f
ingo#msg#StatusMsg	plugged/ingo-library/autoload/ingo/msg.vim	/^function! ingo#msg#StatusMsg( text, ... )$/;"	f
ingo#msg#VimExceptionMsg	plugged/ingo-library/autoload/ingo/msg.vim	/^function! ingo#msg#VimExceptionMsg()$/;"	f
ingo#msg#WarningMsg	plugged/ingo-library/autoload/ingo/msg.vim	/^function! ingo#msg#WarningMsg( text )$/;"	f
ingo#number#DecimalStringIncrement	plugged/ingo-library/autoload/ingo/number.vim	/^function! ingo#number#DecimalStringIncrement( number, offset )$/;"	f
ingo#option#Contains	plugged/ingo-library/autoload/ingo/option.vim	/^function! ingo#option#Contains( optionValue, expr )$/;"	f
ingo#option#ContainsOneOf	plugged/ingo-library/autoload/ingo/option.vim	/^function! ingo#option#ContainsOneOf( optionValue, list )$/;"	f
ingo#option#Split	plugged/ingo-library/autoload/ingo/option.vim	/^function! ingo#option#Split( optionValue, ... )$/;"	f
ingo#option#SplitAndUnescape	plugged/ingo-library/autoload/ingo/option.vim	/^function! ingo#option#SplitAndUnescape( optionValue, ... )$/;"	f
ingo#os#IsCygwin	plugged/ingo-library/autoload/ingo/os.vim	/^function! ingo#os#IsCygwin()$/;"	f
ingo#os#IsWinOrDos	plugged/ingo-library/autoload/ingo/os.vim	/^function! ingo#os#IsWinOrDos()$/;"	f
ingo#os#IsWindows	plugged/ingo-library/autoload/ingo/os.vim	/^function! ingo#os#IsWindows()$/;"	f
ingo#os#PathSeparator	plugged/ingo-library/autoload/ingo/os.vim	/^function! ingo#os#PathSeparator()$/;"	f
ingo#plugin#cmdcomplete#MakeFixedListCompleteFunc	plugged/ingo-library/autoload/ingo/plugin/cmdcomplete.vim	/^function! ingo#plugin#cmdcomplete#MakeFixedListCompleteFunc( argumentList, ... )$/;"	f
ingo#plugin#compiler#CompilerSet	plugged/ingo-library/autoload/ingo/plugin/compiler.vim	/^function! ingo#plugin#compiler#CompilerSet( optionname, expr )$/;"	f
ingo#plugin#marks#Reserve	plugged/ingo-library/autoload/ingo/plugin/marks.vim	/^function! ingo#plugin#marks#Reserve( number, ... )$/;"	f
ingo#plugin#marks#Unreserve	plugged/ingo-library/autoload/ingo/plugin/marks.vim	/^function! ingo#plugin#marks#Unreserve( marksRecord )$/;"	f
ingo#plugin#setting#BooleanToStringValue	plugged/ingo-library/autoload/ingo/plugin/setting.vim	/^function! ingo#plugin#setting#BooleanToStringValue( settingName, ... )$/;"	f
ingo#plugin#setting#GetBufferLocal	plugged/ingo-library/autoload/ingo/plugin/setting.vim	/^function! ingo#plugin#setting#GetBufferLocal( variableName, ... )$/;"	f
ingo#plugin#setting#GetFromScope	plugged/ingo-library/autoload/ingo/plugin/setting.vim	/^function! ingo#plugin#setting#GetFromScope( variableName, scopeList, ... )$/;"	f
ingo#plugin#setting#GetScope	plugged/ingo-library/autoload/ingo/plugin/setting.vim	/^function! ingo#plugin#setting#GetScope( variableName, scopeList )$/;"	f
ingo#plugin#setting#GetTabLocal	plugged/ingo-library/autoload/ingo/plugin/setting.vim	/^function! ingo#plugin#setting#GetTabLocal( variableName, ... )$/;"	f
ingo#plugin#setting#GetWindowLocal	plugged/ingo-library/autoload/ingo/plugin/setting.vim	/^function! ingo#plugin#setting#GetWindowLocal( variableName, ... )$/;"	f
ingo#pos#After	plugged/ingo-library/autoload/ingo/pos.vim	/^function! ingo#pos#After( pos )$/;"	f
ingo#pos#Before	plugged/ingo-library/autoload/ingo/pos.vim	/^function! ingo#pos#Before( pos )$/;"	f
ingo#pos#IsAfter	plugged/ingo-library/autoload/ingo/pos.vim	/^function! ingo#pos#IsAfter( posA, posB )$/;"	f
ingo#pos#IsBefore	plugged/ingo-library/autoload/ingo/pos.vim	/^function! ingo#pos#IsBefore( posA, posB )$/;"	f
ingo#pos#IsInside	plugged/ingo-library/autoload/ingo/pos.vim	/^function! ingo#pos#IsInside( pos, start, end )$/;"	f
ingo#pos#IsOnOrAfter	plugged/ingo-library/autoload/ingo/pos.vim	/^function! ingo#pos#IsOnOrAfter( posA, posB )$/;"	f
ingo#pos#IsOnOrBefore	plugged/ingo-library/autoload/ingo/pos.vim	/^function! ingo#pos#IsOnOrBefore( posA, posB )$/;"	f
ingo#pos#IsOutside	plugged/ingo-library/autoload/ingo/pos.vim	/^function! ingo#pos#IsOutside( pos, start, end )$/;"	f
ingo#print#Number	plugged/ingo-library/autoload/ingo/print.vim	/^function! ingo#print#Number( lnum, ... )$/;"	f
ingo#query#Confirm	plugged/ingo-library/autoload/ingo/query.vim	/^function! ingo#query#Confirm( msg, ... )$/;"	f
ingo#query#ConfirmAsText	plugged/ingo-library/autoload/ingo/query.vim	/^function! ingo#query#ConfirmAsText( msg, choices, ... )$/;"	f
ingo#query#confirm#AutoAccelerators	plugged/ingo-library/autoload/ingo/query/confirm.vim	/^function! ingo#query#confirm#AutoAccelerators( choices, ... )$/;"	f
ingo#query#file#Browse	plugged/ingo-library/autoload/ingo/query/file.vim	/^function! ingo#query#file#Browse( save, title, initdir, default, browsefilter )$/;"	f
ingo#query#file#BrowseDirForAction	plugged/ingo-library/autoload/ingo/query/file.vim	/^function! ingo#query#file#BrowseDirForAction( action, title, dirspec, browsefilter )$/;"	f
ingo#query#file#BrowseDirForOpenFile	plugged/ingo-library/autoload/ingo/query/file.vim	/^function! ingo#query#file#BrowseDirForOpenFile( title, dirspec, browsefilter )$/;"	f
ingo#query#fromlist#Query	plugged/ingo-library/autoload/ingo/query/fromlist.vim	/^function! ingo#query#fromlist#Query( what, list, ... )$/;"	f
ingo#query#get#Char	plugged/ingo-library/autoload/ingo/query/get.vim	/^function! ingo#query#get#Char( ... )$/;"	f
ingo#query#get#Mark	plugged/ingo-library/autoload/ingo/query/get.vim	/^function! ingo#query#get#Mark( ... )$/;"	f
ingo#query#get#Number	plugged/ingo-library/autoload/ingo/query/get.vim	/^function! ingo#query#get#Number( maxNum, ... )$/;"	f
ingo#query#get#Register	plugged/ingo-library/autoload/ingo/query/get.vim	/^function! ingo#query#get#Register( errorRegister, ... )$/;"	f
ingo#query#substitute#Get	plugged/ingo-library/autoload/ingo/query/substitute.vim	/^function! ingo#query#substitute#Get( msg )$/;"	f
ingo#range#Get	plugged/ingo-library/autoload/ingo/range.vim	/^function! ingo#range#Get( range )$/;"	f
ingo#range#NetEnd	plugged/ingo-library/autoload/ingo/range.vim	/^function! ingo#range#NetEnd( ... )$/;"	f
ingo#range#NetStart	plugged/ingo-library/autoload/ingo/range.vim	/^function! ingo#range#NetStart( ... )$/;"	f
ingo#range#lines#Get	plugged/ingo-library/autoload/ingo/range/lines.vim	/^function! ingo#range#lines#Get( startLnum, endLnum, range, ... )$/;"	f
ingo#range#merge#Merge	plugged/ingo-library/autoload/ingo/range/merge.vim	/^function! ingo#range#merge#Merge( ranges )$/;"	f
ingo#record#Position	plugged/ingo-library/autoload/ingo/record.vim	/^function! ingo#record#Position( isRecordChange )$/;"	f
ingo#record#PositionAndLocation	plugged/ingo-library/autoload/ingo/record.vim	/^function! ingo#record#PositionAndLocation( isRecordChange )$/;"	f
ingo#regexp#EscapeLiteralText	plugged/ingo-library/autoload/ingo/regexp.vim	/^function! ingo#regexp#EscapeLiteralText( text, additionalEscapeCharacters )$/;"	f
ingo#regexp#FromLiteralText	plugged/ingo-library/autoload/ingo/regexp.vim	/^function! ingo#regexp#FromLiteralText( text, isWholeWordSearch, additionalEscapeCharacters )$/;"	f
ingo#regexp#FromWildcard	plugged/ingo-library/autoload/ingo/regexp.vim	/^function! ingo#regexp#FromWildcard( wildcardExpr, additionalEscapeCharacters )$/;"	f
ingo#regexp#GetSpecialCharacters	plugged/ingo-library/autoload/ingo/regexp.vim	/^function! ingo#regexp#GetSpecialCharacters()$/;"	f
ingo#regexp#MakeWholeWordSearch	plugged/ingo-library/autoload/ingo/regexp.vim	/^function! ingo#regexp#MakeWholeWordSearch( text, ... )$/;"	f
ingo#regexp#comments#CommentToExpression	plugged/ingo-library/autoload/ingo/regexp/comments.vim	/^function! ingo#regexp#comments#CommentToExpression( comment )$/;"	f
ingo#regexp#comments#FromSetting	plugged/ingo-library/autoload/ingo/regexp/comments.vim	/^function! ingo#regexp#comments#FromSetting()$/;"	f
ingo#regexp#fromwildcard#AnchoredToPathBoundaries	plugged/ingo-library/autoload/ingo/regexp/fromwildcard.vim	/^function! ingo#regexp#fromwildcard#AnchoredToPathBoundaries( ... )$/;"	f
ingo#regexp#fromwildcard#Convert	plugged/ingo-library/autoload/ingo/regexp/fromwildcard.vim	/^function! ingo#regexp#fromwildcard#Convert( ... )$/;"	f
ingo#regexp#fromwildcard#IsWildcardPathPattern	plugged/ingo-library/autoload/ingo/regexp/fromwildcard.vim	/^function! ingo#regexp#fromwildcard#IsWildcardPathPattern( expr, ... )$/;"	f
ingo#regexp#magic#GetNormalizeMagicnessAtom	plugged/ingo-library/autoload/ingo/regexp/magic.vim	/^function! ingo#regexp#magic#GetNormalizeMagicnessAtom( pattern )$/;"	f
ingo#regexp#magic#HasMagicAtoms	plugged/ingo-library/autoload/ingo/regexp/magic.vim	/^function! ingo#regexp#magic#HasMagicAtoms( pattern )$/;"	f
ingo#regexp#magic#Normalize	plugged/ingo-library/autoload/ingo/regexp/magic.vim	/^function! ingo#regexp#magic#Normalize( pattern )$/;"	f
ingo#regexp#pairs#MatchEnd	plugged/ingo-library/autoload/ingo/regexp/pairs.vim	/^function! ingo#regexp#pairs#MatchEnd( expr, startPattern, endPattern, ... )$/;"	f
ingo#regexp#previoussubstitution#Get	plugged/ingo-library/autoload/ingo/regexp/previoussubstitution.vim	/^function! ingo#regexp#previoussubstitution#Get()$/;"	f
ingo#regexp#virtcols#ExtractCells	plugged/ingo-library/autoload/ingo/regexp/virtcols.vim	/^function! ingo#regexp#virtcols#ExtractCells( virtcol, width, isAllowSmaller )$/;"	f
ingo#register#Default	plugged/ingo-library/autoload/ingo/register.vim	/^function! ingo#register#Default()$/;"	f
ingo#register#KeepRegisterExecuteOrFunc	plugged/ingo-library/autoload/ingo/register.vim	/^function! ingo#register#KeepRegisterExecuteOrFunc( Action, ... )$/;"	f
ingo#search#buffer#IsKeywordMatch	plugged/ingo-library/autoload/ingo/search/buffer.vim	/^function! ingo#search#buffer#IsKeywordMatch( text, startVirtCol )$/;"	f
ingo#search#pattern#GetLastForwardSearch	plugged/ingo-library/autoload/ingo/search/pattern.vim	/^function! ingo#search#pattern#GetLastForwardSearch( ... )$/;"	f
ingo#search#timelimited#GetSearchArguments	plugged/ingo-library/autoload/ingo/search/timelimited.vim	/^function! ingo#search#timelimited#GetSearchArguments( timeout )$/;"	f
ingo#search#timelimited#IsBufferContains	plugged/ingo-library/autoload/ingo/search/timelimited.vim	/^function! ingo#search#timelimited#IsBufferContains( pattern, ... )$/;"	f
ingo#search#timelimited#search	plugged/ingo-library/autoload/ingo/search/timelimited.vim	/^function! ingo#search#timelimited#search( pattern, flags, ... )$/;"	f
ingo#selection#Get	plugged/ingo-library/autoload/ingo/selection.vim	/^function! ingo#selection#Get()$/;"	f
ingo#selection#frompattern#GetPositions	plugged/ingo-library/autoload/ingo/selection/frompattern.vim	/^function! ingo#selection#frompattern#GetPositions( pattern, ... )$/;"	f
ingo#selection#frompattern#Select	plugged/ingo-library/autoload/ingo/selection/frompattern.vim	/^function! ingo#selection#frompattern#Select( selectMode, pattern, ... )$/;"	f
ingo#selection#patternmatch#AdaptEmptySelection	plugged/ingo-library/autoload/ingo/selection/patternmatch.vim	/^function! ingo#selection#patternmatch#AdaptEmptySelection()$/;"	f
ingo#selection#position#Get	plugged/ingo-library/autoload/ingo/selection/position.vim	/^function! ingo#selection#position#Get()$/;"	f
ingo#smartcase#FromPattern	plugged/ingo-library/autoload/ingo/smartcase.vim	/^function! ingo#smartcase#FromPattern( pattern, ... )$/;"	f
ingo#smartcase#IsSmartCasePattern	plugged/ingo-library/autoload/ingo/smartcase.vim	/^function! ingo#smartcase#IsSmartCasePattern( pattern )$/;"	f
ingo#smartcase#Undo	plugged/ingo-library/autoload/ingo/smartcase.vim	/^function! ingo#smartcase#Undo( smartCasePattern )$/;"	f
ingo#str#EndsWith	plugged/ingo-library/autoload/ingo/str.vim	/^function! ingo#str#EndsWith( string, substring, ... )$/;"	f
ingo#str#Equals	plugged/ingo-library/autoload/ingo/str.vim	/^function! ingo#str#Equals( string1, string2, ...)$/;"	f
ingo#str#GetVirtCols	plugged/ingo-library/autoload/ingo/str.vim	/^function! ingo#str#GetVirtCols( string, virtcol, width, isAllowSmaller )$/;"	f
ingo#str#Reverse	plugged/ingo-library/autoload/ingo/str.vim	/^function! ingo#str#Reverse( string )$/;"	f
ingo#str#StartsWith	plugged/ingo-library/autoload/ingo/str.vim	/^function! ingo#str#StartsWith( string, substring, ... )$/;"	f
ingo#str#Trim	plugged/ingo-library/autoload/ingo/str.vim	/^function! ingo#str#Trim( string )$/;"	f
ingo#str#frompattern#Get	plugged/ingo-library/autoload/ingo/str/frompattern.vim	/^function! ingo#str#frompattern#Get( text, pattern, replacement, isOnlyFirstMatch, isUnique )$/;"	f
ingo#str#join#NonEmpty	plugged/ingo-library/autoload/ingo/str/join.vim	/^function! ingo#str#join#NonEmpty( list, ... )$/;"	f
ingo#str#restricted#ToShortCharacterwise	plugged/ingo-library/autoload/ingo/str/restricted.vim	/^function! ingo#str#restricted#ToShortCharacterwise( expr, ... )$/;"	f
ingo#str#split#First	plugged/ingo-library/autoload/ingo/str/split.vim	/^function! ingo#str#split#First( expr, pattern )$/;"	f
ingo#strdisplaywidth#GetMinMax	plugged/ingo-library/autoload/ingo/strdisplaywidth.vim	/^function! ingo#strdisplaywidth#GetMinMax( lines, ... )$/;"	f
ingo#strdisplaywidth#HasMoreThan	plugged/ingo-library/autoload/ingo/strdisplaywidth.vim	/^function! ingo#strdisplaywidth#HasMoreThan( expr, virtCol )$/;"	f
ingo#strdisplaywidth#TruncateTo	plugged/ingo-library/autoload/ingo/strdisplaywidth.vim	/^function! ingo#strdisplaywidth#TruncateTo( text, virtCol, ... )$/;"	f
ingo#strdisplaywidth#pad#Left	plugged/ingo-library/autoload/ingo/strdisplaywidth/pad.vim	/^function! ingo#strdisplaywidth#pad#Left( text, width, ... )$/;"	f
ingo#strdisplaywidth#pad#Right	plugged/ingo-library/autoload/ingo/strdisplaywidth/pad.vim	/^function! ingo#strdisplaywidth#pad#Right( text, width, ... )$/;"	f
ingo#strdisplaywidth#pad#Width	plugged/ingo-library/autoload/ingo/strdisplaywidth/pad.vim	/^function! ingo#strdisplaywidth#pad#Width( text, width, ... )$/;"	f
ingo#strdisplaywidth#strleft	plugged/ingo-library/autoload/ingo/strdisplaywidth.vim	/^function! ingo#strdisplaywidth#strleft( expr, virtCol )$/;"	f
ingo#strdisplaywidth#strright	plugged/ingo-library/autoload/ingo/strdisplaywidth.vim	/^function! ingo#strdisplaywidth#strright( expr, virtCol )$/;"	f
ingo#subst#MultiGsub	plugged/ingo-library/autoload/ingo/subst.vim	/^function! ingo#subst#MultiGsub( expr, substitutions )$/;"	f
ingo#subst#expr#emulation#Substitute	plugged/ingo-library/autoload/ingo/subst/expr/emulation.vim	/^function! ingo#subst#expr#emulation#Substitute( expr, pat, sub, flags )$/;"	f
ingo#subst#gsub	plugged/ingo-library/autoload/ingo/subst.vim	/^function! ingo#subst#gsub( expr, pat, sub )$/;"	f
ingo#subst#pairs#Split	plugged/ingo-library/autoload/ingo/subst/pairs.vim	/^function! ingo#subst#pairs#Split( pairs )$/;"	f
ingo#subst#pairs#Substitute	plugged/ingo-library/autoload/ingo/subst/pairs.vim	/^function! ingo#subst#pairs#Substitute( text, pairs )$/;"	f
ingo#syntaxitem#IsOnSyntax	plugged/ingo-library/autoload/ingo/syntaxitem.vim	/^function! ingo#syntaxitem#IsOnSyntax( pos, syntaxItemPattern )$/;"	f
ingo#system#Chomped	plugged/ingo-library/autoload/ingo/system.vim	/^function! ingo#system#Chomped( ... )$/;"	f
ingo#tabstops#DisplayWidth	plugged/ingo-library/autoload/ingo/tabstops.vim	/^function! ingo#tabstops#DisplayWidth( column, tabstop )$/;"	f
ingo#tabstops#Render	plugged/ingo-library/autoload/ingo/tabstops.vim	/^function! ingo#tabstops#Render( text, ... )$/;"	f
ingo#tabstops#RenderMultiLine	plugged/ingo-library/autoload/ingo/tabstops.vim	/^function! ingo#tabstops#RenderMultiLine( text, ... )$/;"	f
ingo#text#Get	plugged/ingo-library/autoload/ingo/text.vim	/^function! ingo#text#Get( startPos, endPos, ... )$/;"	f
ingo#text#GetChar	plugged/ingo-library/autoload/ingo/text.vim	/^function! ingo#text#GetChar( startPos, ... )$/;"	f
ingo#text#Insert	plugged/ingo-library/autoload/ingo/text.vim	/^function! ingo#text#Insert( pos, text )$/;"	f
ingo#text#Remove	plugged/ingo-library/autoload/ingo/text.vim	/^function! ingo#text#Remove( pos, len )$/;"	f
ingo#text#RemoveVirtCol	plugged/ingo-library/autoload/ingo/text.vim	/^function! ingo#text#RemoveVirtCol( pos, width, isAllowSmaller )$/;"	f
ingo#text#frompattern#Get	plugged/ingo-library/autoload/ingo/text/frompattern.vim	/^function! ingo#text#frompattern#Get( firstLine, lastLine, pattern, replacement, isOnlyFirstMatch, isUnique )$/;"	f
ingo#text#frompattern#GetHere	plugged/ingo-library/autoload/ingo/text/frompattern.vim	/^function! ingo#text#frompattern#GetHere( pattern, ... )$/;"	f
ingo#text#replace#Area	plugged/ingo-library/autoload/ingo/text/replace.vim	/^function! ingo#text#replace#Area( startPos, endPos, Text )$/;"	f
ingo#text#replace#PatternWithText	plugged/ingo-library/autoload/ingo/text/replace.vim	/^function! ingo#text#replace#PatternWithText( pattern, Text, ... )$/;"	f
ingo#text#replace#PatternWithTextAndMessage	plugged/ingo-library/autoload/ingo/text/replace.vim	/^function! ingo#text#replace#PatternWithTextAndMessage( what, pattern, text, ... )$/;"	f
ingo#undo#GetChangeNumber	plugged/ingo-library/autoload/ingo/undo.vim	/^function! ingo#undo#GetChangeNumber()$/;"	f
ingo#units#Format	plugged/ingo-library/autoload/ingo/units.vim	/^function! ingo#units#Format( number, ... )$/;"	f
ingo#units#FormatBytesBinary	plugged/ingo-library/autoload/ingo/units.vim	/^function! ingo#units#FormatBytesBinary( number, ... )$/;"	f
ingo#units#FormatBytesDecimal	plugged/ingo-library/autoload/ingo/units.vim	/^function! ingo#units#FormatBytesDecimal( number, ... )$/;"	f
ingo#window#cmdwin#UndefineMappingForCmdwin	plugged/ingo-library/autoload/ingo/window/cmdwin.vim	/^function! ingo#window#cmdwin#UndefineMappingForCmdwin( mappings, ... )$/;"	f
ingo#window#dimensions#DisplayedLines	plugged/ingo-library/autoload/ingo/window/dimensions.vim	/^function! ingo#window#dimensions#DisplayedLines()$/;"	f
ingo#window#dimensions#GetNumberWidth	plugged/ingo-library/autoload/ingo/window/dimensions.vim	/^function! ingo#window#dimensions#GetNumberWidth( isGetAbsoluteNumberWidth )$/;"	f
ingo#window#dimensions#NetVisibleLines	plugged/ingo-library/autoload/ingo/window/dimensions.vim	/^function! ingo#window#dimensions#NetVisibleLines( startLine, endLine )$/;"	f
ingo#window#dimensions#NetWindowWidth	plugged/ingo-library/autoload/ingo/window/dimensions.vim	/^function! ingo#window#dimensions#NetWindowWidth()$/;"	f
ingo#window#dimensions#WindowDecorationColumns	plugged/ingo-library/autoload/ingo/window/dimensions.vim	/^function! ingo#window#dimensions#WindowDecorationColumns()$/;"	f
ingo#window#preview#GotoPreview	plugged/ingo-library/autoload/ingo/window/preview.vim	/^function! ingo#window#preview#GotoPreview()$/;"	f
ingo#window#preview#IsPreviewWindowVisible	plugged/ingo-library/autoload/ingo/window/preview.vim	/^function! ingo#window#preview#IsPreviewWindowVisible( ... )$/;"	f
ingo#window#preview#OpenBuffer	plugged/ingo-library/autoload/ingo/window/preview.vim	/^function! ingo#window#preview#OpenBuffer( bufnr, ... )$/;"	f
ingo#window#preview#OpenFilespec	plugged/ingo-library/autoload/ingo/window/preview.vim	/^function! ingo#window#preview#OpenFilespec( filespec, ... )$/;"	f
ingo#window#preview#OpenPreview	plugged/ingo-library/autoload/ingo/window/preview.vim	/^function! ingo#window#preview#OpenPreview( ... )$/;"	f
ingo#window#preview#SplitToPreview	plugged/ingo-library/autoload/ingo/window/preview.vim	/^function! ingo#window#preview#SplitToPreview( ... )$/;"	f
ingo#window#quickfix#GetList	plugged/ingo-library/autoload/ingo/window/quickfix.vim	/^function! ingo#window#quickfix#GetList()$/;"	f
ingo#window#quickfix#IsQuickfixList	plugged/ingo-library/autoload/ingo/window/quickfix.vim	/^function! ingo#window#quickfix#IsQuickfixList( ... )$/;"	f
ingo#window#quickfix#ParseFileFromQuickfixList	plugged/ingo-library/autoload/ingo/window/quickfix.vim	/^function! ingo#window#quickfix#ParseFileFromQuickfixList()$/;"	f
ingo#window#quickfix#SetList	plugged/ingo-library/autoload/ingo/window/quickfix.vim	/^function! ingo#window#quickfix#SetList( ... )$/;"	f
ingo#window#quickfix#TranslateVirtualColToByteCount	plugged/ingo-library/autoload/ingo/window/quickfix.vim	/^function! ingo#window#quickfix#TranslateVirtualColToByteCount( qfEntry )$/;"	f
ingo#window#special#IsSpecialWindow	plugged/ingo-library/autoload/ingo/window/special.vim	/^function! ingo#window#special#IsSpecialWindow( ... )$/;"	f
ingo#window#special#RestoreSpecialWindowSize	plugged/ingo-library/autoload/ingo/window/special.vim	/^function! ingo#window#special#RestoreSpecialWindowSize()$/;"	f
ingo#window#special#SaveSpecialWindowSize	plugged/ingo-library/autoload/ingo/window/special.vim	/^function! ingo#window#special#SaveSpecialWindowSize()$/;"	f
ingo#window#switches#GotoPreviousWindow	plugged/ingo-library/autoload/ingo/window/switches.vim	/^function! ingo#window#switches#GotoPreviousWindow( ... )$/;"	f
ingo#window#switches#WinRestoreCurrentBuffer	plugged/ingo-library/autoload/ingo/window/switches.vim	/^function! ingo#window#switches#WinRestoreCurrentBuffer( dict )$/;"	f
ingo#window#switches#WinSaveCurrentBuffer	plugged/ingo-library/autoload/ingo/window/switches.vim	/^function! ingo#window#switches#WinSaveCurrentBuffer()$/;"	f
inherit	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^inherit = _inherit()$/;"	v
inherit	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    this, inherit, default, words$/;"	i
inherit	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    default$/;"	i
inherit	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    include, bygroups, inherit$/;"	i
inherit	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    inherit, default$/;"	i
inherit	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^inherit = _inherit()$/;"	v
inherit	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    this, inherit, default, words$/;"	i
inherit	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    default$/;"	i
inherit	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    include, bygroups, inherit$/;"	i
inherit	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    inherit, default$/;"	i
init	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:init() "{{{$/;"	f
initDict	plugged/vim-instant-markdown/after/ftplugin/markdown/instant-markdown.vim	/^function! s:initDict()$/;"	f
initVariable	plugged/nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
init_bookmark	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:init_bookmark(filename)  "{{{$/;"	f
init_continuation	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:init_continuation(context, directory) "{{{$/;"	f
init_poolmanager	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^    def init_poolmanager(self, connections, maxsize, block=DEFAULT_POOLBLOCK, **pool_kwargs):$/;"	m	class:HTTPAdapter
init_speedups	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^init_speedups(void)$/;"	f
initialise	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^            import colorama.initialise$/;"	i
initialise	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^            import colorama.initialise$/;"	i
initialize_default	plugged/unite.vim/autoload/unite/variables.vim	/^function! s:initialize_default() "{{{$/;"	f
inject_into_urllib3	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^def inject_into_urllib3():$/;"	f
input2	plugged/delimitMate/test/autoclose_matchpairs.vim	/^    let input2 = substitute(input, '(', s:l, 'g')$/;"	v
input2	plugged/delimitMate/test/autoclose_matchpairs.vim	/^    let input2 = substitute(input2, ')', s:r, 'g')$/;"	v
input_directory	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:input_directory() "{{{$/;"	f
input_helper	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_overwrite_method	plugged/unite.vim/autoload/unite/kinds/file.vim	/^function! s:input_overwrite_method(dest, src) "{{{$/;"	f
input_q	plugged/delimitMate/test/autoclose_quotes.vim	/^    let input_q = substitute(input,"'" , escape(escape(quote, '"'), '\\'), 'g')$/;"	v
input_safe	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
inputreplacement	plugged/vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
inputtarget	plugged/vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
insert	plugged/vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
insert_enter	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:insert_enter(key) "{{{$/;"	f
insert_enter2	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:insert_enter2() "{{{$/;"	f
insert_leave	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:insert_leave() "{{{$/;"	f
insert_selected_candidate	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:insert_selected_candidate() "{{{$/;"	f
install	autoload/plug.vim	/^function! s:install(force, names)$/;"	f
install	plugged/vimproc.vim/plugin/vimproc.vim	/^function! s:install(args) "{{{$/;"	f
install_plugin	plugged/emmet-vim/plugin/emmet.vim	/^function! s:install_plugin(mode, buffer)$/;"	f
instance._action	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance._action(action) dict abort$/;"	f
instance.action	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.action(action) dict abort$/;"	f
instance.action	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.action(action) dict abort$/;"	f
instance.action	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.action(action) dict abort$/;"	f
instance.action	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.action(action) dict abort$/;"	f
instance.action	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^function! s:instance.action(action) dict abort$/;"	f
instance.add	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.add(diff) dict abort$/;"	f
instance.add	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.add(diff) dict abort$/;"	f
instance.add	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.add(diff) dict abort$/;"	f
instance.add_month	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.add_month(diff) dict abort$/;"	f
instance.add_year	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.add_year(diff) dict abort$/;"	f
instance.cache_key	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.cache_key() dict abort$/;"	f
instance.changed	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.changed() dict abort$/;"	f
instance.contents	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! s:instance.contents() dict abort$/;"	f
instance.contents	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.contents() dict abort$/;"	f
instance.contents	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.contents() dict abort$/;"	f
instance.contents	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.contents() dict abort$/;"	f
instance.contents	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^function! s:instance.contents() dict abort$/;"	f
instance.current_contents	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.current_contents() dict abort$/;"	f
instance.current_group_id	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.current_group_id() dict abort$/;"	f
instance.day	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.day() dict abort$/;"	f
instance.day	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.day() dict abort$/;"	f
instance.days	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.days() dict abort$/;"	f
instance.days	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.days() dict abort$/;"	f
instance.display_point	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.display_point() dict abort$/;"	f
instance.display_point	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.display_point() dict abort$/;"	f
instance.eq	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.eq(day) dict abort$/;"	f
instance.eq	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.eq(month) dict abort$/;"	f
instance.eq	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.eq(year) dict abort$/;"	f
instance.eq_month	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.eq_month(day) dict abort$/;"	f
instance.eq_month	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.eq_month(month) dict abort$/;"	f
instance.eq_week	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.eq_week(day) dict abort$/;"	f
instance.eq_year	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.eq_year(day) dict abort$/;"	f
instance.eq_year	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.eq_year(month) dict abort$/;"	f
instance.gather	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.gather(...) dict abort$/;"	f
instance.gen_syn	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! s:instance.gen_syn(chr, offsetx, offsety, syn) dict abort$/;"	f
instance.get_calendar	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^function! s:instance.get_calendar() dict abort$/;"	f
instance.get_contents	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.get_contents() dict abort$/;"	f
instance.get_day	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.get_day() dict abort$/;"	f
instance.get_day	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.get_day() dict abort$/;"	f
instance.get_day	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.get_day() dict abort$/;"	f
instance.get_days	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.get_days() dict abort$/;"	f
instance.get_index	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.get_index() dict abort$/;"	f
instance.get_key	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.get_key() dict abort$/;"	f
instance.get_left	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.get_left() dict abort$/;"	f
instance.get_min_day	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.get_min_day() dict abort$/;"	f
instance.get_min_max_hour	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.get_min_max_hour() dict abort$/;"	f
instance.get_month	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.get_month() dict abort$/;"	f
instance.get_month	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.get_month() dict abort$/;"	f
instance.get_month	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.get_month() dict abort$/;"	f
instance.get_months	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.get_months() dict abort$/;"	f
instance.get_months	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.get_months() dict abort$/;"	f
instance.get_scale	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! s:instance.get_scale(...) dict abort$/;"	f
instance.get_top	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.get_top() dict abort$/;"	f
instance.get_y	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.get_y() dict abort$/;"	f
instance.get_year	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.get_year() dict abort$/;"	f
instance.get_year	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.get_year() dict abort$/;"	f
instance.get_year	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.get_year() dict abort$/;"	f
instance.get_ym	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.get_ym() dict abort$/;"	f
instance.get_ym_string	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.get_ym_string() dict abort$/;"	f
instance.get_ymd	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^function! s:instance.get_ymd() dict abort$/;"	f
instance.head_day	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.head_day() dict abort$/;"	f
instance.head_day	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.head_day() dict abort$/;"	f
instance.head_month	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.head_month() dict abort$/;"	f
instance.height	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.height() dict abort$/;"	f
instance.height	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! s:instance.height() dict abort$/;"	f
instance.height	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.height() dict abort$/;"	f
instance.height	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.height() dict abort$/;"	f
instance.height	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^function! s:instance.height() dict abort$/;"	f
instance.is_absolute	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.is_absolute() dict abort$/;"	f
instance.is_bottom	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.is_bottom() dict abort$/;"	f
instance.is_center	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.is_center() dict abort$/;"	f
instance.is_friday	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.is_friday() dict abort$/;"	f
instance.is_full	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.is_full() dict abort$/;"	f
instance.is_gregorian	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^function! s:instance.is_gregorian() dict abort$/;"	f
instance.is_monday	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.is_monday() dict abort$/;"	f
instance.is_right	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.is_right() dict abort$/;"	f
instance.is_saturday	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.is_saturday() dict abort$/;"	f
instance.is_selected	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.is_selected() dict abort$/;"	f
instance.is_sunday	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.is_sunday() dict abort$/;"	f
instance.is_thursday	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.is_thursday() dict abort$/;"	f
instance.is_tuesday	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.is_tuesday() dict abort$/;"	f
instance.is_valid	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.is_valid() dict abort$/;"	f
instance.is_valid	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.is_valid() dict abort$/;"	f
instance.is_valid	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.is_valid() dict abort$/;"	f
instance.is_vcenter	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.is_vcenter() dict abort$/;"	f
instance.is_visible	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.is_visible() dict abort$/;"	f
instance.is_wednesday	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.is_wednesday() dict abort$/;"	f
instance.last_day	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.last_day() dict abort$/;"	f
instance.last_day	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.last_day() dict abort$/;"	f
instance.last_month	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.last_month() dict abort$/;"	f
instance.left	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.left() dict abort$/;"	f
instance.maxheight	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.maxheight() dict abort$/;"	f
instance.maxwidth	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.maxwidth() dict abort$/;"	f
instance.min_max_hour	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.min_max_hour() dict abort$/;"	f
instance.min_max_index	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.min_max_index(length) dict abort$/;"	f
instance.month	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.month() dict abort$/;"	f
instance.month	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.month() dict abort$/;"	f
instance.month	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.month() dict abort$/;"	f
instance.move_select	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.move_select(diff) dict abort$/;"	f
instance.new	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^function! s:instance.new(y, m, d) dict abort$/;"	f
instance.new	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.new(y, m) dict abort$/;"	f
instance.new	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.new(y) dict abort$/;"	f
instance.new_mjd	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^function! s:instance.new_mjd(mjd) dict abort$/;"	f
instance.next_contents	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.next_contents() dict abort$/;"	f
instance.on_resize	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! s:instance.on_resize() dict abort$/;"	f
instance.on_resize	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.on_resize() dict abort$/;"	f
instance.on_resize	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.on_resize() dict abort$/;"	f
instance.on_top	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.on_top() dict abort$/;"	f
instance.oneday	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.oneday(day, events) dict abort$/;"	f
instance.prev_contents	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.prev_contents() dict abort$/;"	f
instance.prevprev_contents	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.prevprev_contents() dict abort$/;"	f
instance.select_index	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.select_index() dict abort$/;"	f
instance.set_contents	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! s:instance.set_contents() dict abort$/;"	f
instance.set_contents	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.set_contents() dict abort$/;"	f
instance.set_contents	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.set_contents() dict abort$/;"	f
instance.set_day_name	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.set_day_name() dict abort$/;"	f
instance.set_day_name	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.set_day_name() dict abort$/;"	f
instance.set_index	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.set_index(index) dict abort$/;"	f
instance.set_min_max_hour	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.set_min_max_hour(hours) dict abort$/;"	f
instance.set_selected	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.set_selected(selected) dict abort$/;"	f
instance.set_size	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.set_size() dict abort$/;"	f
instance.set_visible	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.set_visible(value) dict abort$/;"	f
instance.sizex	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.sizex() dict abort$/;"	f
instance.sizey	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.sizey() dict abort$/;"	f
instance.sub	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.sub(day) dict abort$/;"	f
instance.sub	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^function! s:instance.sub(month) dict abort$/;"	f
instance.sub	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^function! s:instance.sub(year) dict abort$/;"	f
instance.timerange	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.timerange() dict abort$/;"	f
instance.timerange	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.timerange() dict abort$/;"	f
instance.today	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.today() dict abort$/;"	f
instance.top	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.top() dict abort$/;"	f
instance.updated	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.updated() dict abort$/;"	f
instance.updated	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! s:instance.updated() dict abort$/;"	f
instance.week	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.week() dict abort$/;"	f
instance.width	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^function! s:instance.width() dict abort$/;"	f
instance.width	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^function! s:instance.width() dict abort$/;"	f
instance.width	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^function! s:instance.width() dict abort$/;"	f
instance.width	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^function! s:instance.width() dict abort$/;"	f
instance.width	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.width() dict abort$/;"	f
instance.width	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^function! s:instance.width() dict abort$/;"	f
instance.yank	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^function! s:instance.yank() dict abort$/;"	f
instance.year	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^function! s:instance.year() dict abort$/;"	f
instant	plugged/vim-instant-markdown/after/ftplugin/markdown/instant-markdown.vim	/^    aug instant-markdown$/;"	a
instant	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    instant = timedelta(seconds=1)$/;"	v	class:USEasternDSTStartTestCase
instant	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    instant = timedelta(seconds=31)$/;"	v	class:VilniusWMTEndTestCase
instant	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    instant = timedelta(seconds=1)$/;"	v	class:USEasternDSTStartTestCase
instant	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    instant = timedelta(seconds=31)$/;"	v	class:VilniusWMTEndTestCase
instaweb_url	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(opts) abort$/;"	f
int2byte	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^        def int2byte(i):$/;"	f	function:iteritems.u
int2byte	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    int2byte = chr$/;"	v
int_part	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    int_part = r'-?(0|[1-9]\\d*)'$/;"	v	class:JsonLexer
int_part	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    int_part = r'-?(0|[1-9]\\d*)'$/;"	v	class:JsonLexer
integer_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    integer_types = (int, long)$/;"	v
integer_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    integer_types = int,$/;"	v
integer_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    integer_types = (int, long)$/;"	v
integer_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    integer_types = (int,)$/;"	v
integer_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^from .compat import u, unichr, binary_type, string_types, integer_types, PY3$/;"	i
intersect	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
intp_regex_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^        def intp_regex_callback(self, match, ctx):$/;"	f	function:RubyLexer.gen_rubystrings_rules
intp_regex_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^        def intp_regex_callback(self, match, ctx):$/;"	f	function:RubyLexer.gen_rubystrings_rules
intp_string_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^        def intp_string_callback(self, match, ctx):$/;"	f	function:RubyLexer.gen_rubystrings_rules
intp_string_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^        def intp_string_callback(self, match, ctx):$/;"	f	function:RubyLexer.gen_rubystrings_rules
io	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^            import io$/;"	i
io	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^            import io$/;"	i
io	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    import io$/;"	i
io	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^import io$/;"	i
io	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^import io$/;"	i
io	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    import io$/;"	i
ip_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    ip_re = ($/;"	v	class:SquidConfLexer
ip_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    ip_re = ($/;"	v	class:SquidConfLexer
is_absolute	plugged/unite.vim/autoload/unite/exrename.vim	/^function! s:is_absolute(path) "{{{$/;"	f
is_absolute	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^  function! s:is_absolute(path)$/;"	f
is_case_tolerant	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:is_case_tolerant()$/;"	f
is_connection_dropped	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^from .util.connection import is_connection_dropped$/;"	i
is_connection_dropped	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/__init__.py	/^from .connection import is_connection_dropped$/;"	i
is_connection_dropped	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/connection.py	/^def is_connection_dropped(conn):  # Platform-specific$/;"	f
is_cr_expansion	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:is_cr_expansion(...) " {{{$/;"	f
is_cygwin	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_dict	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_empty_matchpair	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:is_empty_matchpair() "{{{$/;"	f
is_empty_quotes	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:is_empty_quotes() "{{{$/;"	f
is_excluded_ft	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:is_excluded_ft(ft) "{{{$/;"	f
is_exhausted	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/retry.py	/^    def is_exhausted(self):$/;"	m	class:Retry
is_final	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^    def is_final(self, c):$/;"	m	class:HebrewProber
is_float	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_forbidden	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:is_forbidden(char) "{{{$/;"	f
is_forced_retry	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/retry.py	/^    def is_forced_retry(self, method, status_code):$/;"	m	class:Retry
is_fp_closed	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^from .util.response import is_fp_closed$/;"	i
is_fp_closed	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/__init__.py	/^from .response import is_fp_closed$/;"	i
is_fp_closed	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/response.py	/^def is_fp_closed(obj):$/;"	f
is_funcref	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_in	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    def is_in(self, w, mapping):$/;"	m	class:VimLexer
is_in	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    def is_in(self, w, mapping):$/;"	m	class:VimLexer
is_in_coroutine_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^        def is_in_coroutine_module(name):$/;"	f	function:module_callbacks
is_in_coroutine_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^        def is_in_coroutine_module(name):$/;"	f	function:module_callbacks
is_in_debug_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^        def is_in_debug_module(name):$/;"	f	function:module_callbacks
is_in_debug_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^        def is_in_debug_module(name):$/;"	f	function:module_callbacks
is_in_io_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^        def is_in_io_module(name):$/;"	f	function:module_callbacks
is_in_io_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^        def is_in_io_module(name):$/;"	f	function:module_callbacks
is_in_math_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^        def is_in_math_module(name):$/;"	f	function:module_callbacks
is_in_math_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^        def is_in_math_module(name):$/;"	f	function:module_callbacks
is_in_modules_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^        def is_in_modules_module(name):$/;"	f	function:module_callbacks
is_in_modules_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^        def is_in_modules_module(name):$/;"	f	function:module_callbacks
is_in_os_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^        def is_in_os_module(name):$/;"	f	function:module_callbacks
is_in_os_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^        def is_in_os_module(name):$/;"	f	function:module_callbacks
is_in_string_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^        def is_in_string_module(name):$/;"	f	function:module_callbacks
is_in_string_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^        def is_in_string_module(name):$/;"	f	function:module_callbacks
is_in_table_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^        def is_in_table_module(name):$/;"	f	function:module_callbacks
is_in_table_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^        def is_in_table_module(name):$/;"	f	function:module_callbacks
is_ipv4_address	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def is_ipv4_address(string_ip):$/;"	f
is_jump	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:is_jump(...) "{{{$/;"	f
is_list	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_listed	plugged/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:is_listed(is_bang, is_question, is_plus, is_minus, bufnr) "{{{$/;"	f
is_local_plug	autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
is_mac	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_managed	autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
is_non_final	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^    def is_non_final(self, c):$/;"	m	class:HebrewProber
is_null_device	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:is_null_device(filename)$/;"	f
is_number	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_numeric	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_permanent_redirect	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def is_permanent_redirect(self):$/;"	m	class:Response
is_preview_window_open	autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
is_pseudo_device	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:is_pseudo_device(filename) "{{{$/;"	f
is_py2	plugged/vim-wakatime/plugin/packages/wakatime/compat.py	/^is_py2 = (sys.version_info[0] == 2)$/;"	v
is_py2	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^is_py2 = (_ver[0] == 2)$/;"	v
is_py2	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^from .compat import (quote, urlparse, bytes, str, OrderedDict, unquote, is_py2,$/;"	i
is_py3	plugged/vim-wakatime/plugin/packages/wakatime/compat.py	/^is_py3 = (sys.version_info[0] == 3)$/;"	v
is_py3	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^from .compat import u, open, is_py3$/;"	i
is_py3	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^is_py3 = (_ver[0] == 3)$/;"	v
is_redirect	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def is_redirect(self):$/;"	m	class:Response
is_same_host	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def is_same_host(self, url):$/;"	m	class:HTTPConnectionPool
is_smart_quote	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:is_smart_quote(char) "{{{$/;"	f
is_space_expansion	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:is_space_expansion() " {{{$/;"	f
is_string	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_token_subtype	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^def is_token_subtype(ttype, other):$/;"	f
is_token_subtype	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^def is_token_subtype(ttype, other):$/;"	f
is_unix	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_unverifiable	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def is_unverifiable(self):$/;"	m	class:MockRequest
is_valid_cidr	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def is_valid_cidr(string_network):$/;"	f
is_verified	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    is_verified = False$/;"	v	class:HTTPConnection
is_windows	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_windows() abort$/;"	f
iso_pervasives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    iso_pervasives = [$/;"	v	class:Modula2Lexer
iso_pervasives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    iso_pervasives = [$/;"	v	class:Modula2Lexer
iso_reserved_words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    iso_reserved_words = [$/;"	v	class:Modula2Lexer
iso_reserved_words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    iso_reserved_words = [$/;"	v	class:Modula2Lexer
item_separator	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *item_separator;$/;"	m	struct:_PyEncoderObject	file:
item_separator	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^    item_separator = ', '$/;"	v	class:JSONEncoder
item_sort_key	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *item_sort_key;$/;"	m	struct:_PyEncoderObject	file:
item_sort_kw	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *item_sort_kw;$/;"	m	struct:_PyEncoderObject	file:
itemgetter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/regexopt.py	/^from operator import itemgetter$/;"	i
itemgetter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/regexopt.py	/^from operator import itemgetter$/;"	i
itemgetter	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^from operator import itemgetter$/;"	i
itemgetter	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_item_sort_key.py	/^from operator import itemgetter$/;"	i
itemno	plugged/emmet-vim/autoload/emmet.vim	/^function! s:itemno(itemno, current) abort$/;"	f
items	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    items = DictMixin.items$/;"	v	class:OrderedDict
items	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def items(self):$/;"	m	class:RequestsCookieJar
items	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def items(self):$/;"	m	class:HTTPHeaderDict
items	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def items(self):$/;"	m	class:OrderedDict
items	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    items = DictMixin.items$/;"	v	class:OrderedDict
itemsnumber	plugged/delimitMate/test/autoclose_matchpairs.vim	/^let itemsnumber = len(split(g:delimitMate_matchpairs, '.:.\\zs,\\ze.:.'))$/;"	v
itemsnumber	plugged/delimitMate/test/autoclose_quotes.vim	/^let itemsnumber = len(split(g:delimitMate_quotes, ' '))$/;"	v
iter_content	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def iter_content(self, chunk_size=1, decode_unicode=False):$/;"	m	class:Response
iter_dumps	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_iterable.py	/^def iter_dumps(obj, **kw):$/;"	f
iter_field_objects	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/filepost.py	/^def iter_field_objects(fields):$/;"	f
iter_fields	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/filepost.py	/^def iter_fields(fields):$/;"	f
iter_lines	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def iter_lines(self, chunk_size=ITER_CHUNK_SIZE, decode_unicode=None, delimiter=None):$/;"	m	class:Response
iter_slices	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def iter_slices(string, slice_length):$/;"	f
iterable_as_array	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    int iterable_as_array;$/;"	m	struct:_PyEncoderObject	file:
iterencode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^    def iterencode(self, o, _one_shot=False):$/;"	m	class:JSONEncoder
iterencode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^    def iterencode(self, o, _one_shot=False):$/;"	m	class:JSONEncoderForHTML
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    iteritems = DictMixin.iteritems$/;"	v	class:OrderedDict
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    StringIO, string_types, iteritems$/;"	i
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^    iteritems$/;"	i
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    make_analysator, text_type, add_metaclass, iteritems, Future, guess_decode$/;"	i
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^from pygments.util import iteritems$/;"	i
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^from pygments.util import get_choice_opt, iteritems$/;"	i
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^from pygments.util import get_bool_opt, iteritems$/;"	i
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^from pygments.util import get_bool_opt, get_list_opt, iteritems$/;"	i
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^from pygments.util import get_bool_opt, get_list_opt, iteritems$/;"	i
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^from pygments.util import iteritems$/;"	i
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^    iteritems = dict.items$/;"	v
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    StringIO, string_types, iteritems$/;"	i
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^    iteritems$/;"	i
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    make_analysator, text_type, add_metaclass, iteritems, Future, guess_decode$/;"	i
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^from pygments.util import iteritems$/;"	i
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^from pygments.util import get_choice_opt, iteritems$/;"	i
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^from pygments.util import get_bool_opt, iteritems$/;"	i
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^from pygments.util import get_bool_opt, get_list_opt, iteritems$/;"	i
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^from pygments.util import get_bool_opt, get_list_opt, iteritems$/;"	i
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^from pygments.util import iteritems$/;"	i
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^    iteritems = dict.items$/;"	v
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def iteritems(self):$/;"	m	class:RequestsCookieJar
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def iteritems(self):$/;"	m	class:HTTPHeaderDict
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def iteritems(self):$/;"	m	class:OrderedDict
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^def iteritems(d):$/;"	f
iteritems	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    iteritems = DictMixin.iteritems$/;"	v	class:OrderedDict
iterkeys	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    iterkeys = DictMixin.iterkeys$/;"	v	class:OrderedDict
iterkeys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def iterkeys(self):$/;"	m	class:RequestsCookieJar
iterkeys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^from .packages.six import iterkeys, itervalues, PY3$/;"	i
iterkeys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def iterkeys(self):$/;"	m	class:OrderedDict
iterkeys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^def iterkeys(d):$/;"	f
iterkeys	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    iterkeys = DictMixin.iterkeys$/;"	v	class:OrderedDict
itermerged	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def itermerged(self):$/;"	m	class:HTTPHeaderDict
itertools	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^import itertools$/;"	i
itertools	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^import itertools$/;"	i
itervalues	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    itervalues = DictMixin.itervalues$/;"	v	class:OrderedDict
itervalues	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^from pygments.util import ClassNotFound, itervalues$/;"	i
itervalues	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^from pygments.util import ClassNotFound, itervalues, guess_decode$/;"	i
itervalues	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^    itervalues = dict.values$/;"	v
itervalues	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^from pygments.util import ClassNotFound, itervalues$/;"	i
itervalues	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^from pygments.util import ClassNotFound, itervalues, guess_decode$/;"	i
itervalues	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^    itervalues = dict.values$/;"	v
itervalues	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def itervalues(self):$/;"	m	class:RequestsCookieJar
itervalues	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^from .packages.six import iterkeys, itervalues, PY3$/;"	i
itervalues	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def itervalues(self):$/;"	m	class:OrderedDict
itervalues	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^def itervalues(d):$/;"	f
itervalues	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    itervalues = DictMixin.itervalues$/;"	v	class:OrderedDict
job_abort	autoload/plug.vim	/^function! s:job_abort()$/;"	f
job_handler	autoload/plug.vim	/^function! s:job_handler(job_id, data, event) abort$/;"	f
job_handler	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:job_handler(job_id, data, event) abort "{{{$/;"	f
join	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:join(...)$/;"	f
join_list_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^#define join_list_string /;"	d	file:
join_list_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^join_list_string(PyObject *lst)$/;"	f	file:
join_list_unicode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^join_list_unicode(PyObject *lst)$/;"	f	file:
jp2CharContext	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^jp2CharContext = ($/;"	v
json	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^    from .packages import simplejson as json  # pragma: nocover$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^    import json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^    from .packages import simplejson as json  # pragma: nocover$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^    import json  # pragma: nocover$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    import json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def json(self, **kwargs):$/;"	m	class:Response
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_bigint_as_string.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_bitsize_int_as_string.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_check_circular.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decimal.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decode.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_default.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_encode_for_html.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_errors.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_fail.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_float.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_indent.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_item_sort_key.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_iterable.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_pass1.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_pass2.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_pass3.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_recursion.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_scanstring.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_separators.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_subclass.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tuple.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^import simplejson as json$/;"	i
json	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tool.py	/^import simplejson as json$/;"	i
json_PyOS_string_to_double	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^json_PyOS_string_to_double(const char *s, char **endptr, PyObject *overflow_exception)$/;"	f	file:
jump	plugged/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:jump(candidate, is_highlight) "{{{$/;"	f
jumpToChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(currentNode, direction)$/;"	f
jumpToFirstChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node)$/;"	f
jumpToLastChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node)$/;"	f
jumpToNextSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node)$/;"	f
jumpToParent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node)$/;"	f
jumpToPrevSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
jumpToRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot()$/;"	f
jumpToSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(currentNode, forward)$/;"	f
justify_equal_spacing	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
k	plugged/vim-gitgutter/test/testHunkRevertNearbyHunk.vim	/^normal k$/;"	m
k	plugged/vim-gitgutter/test/testHunkStageNearbyHunk.vim	/^normal k$/;"	m
key_memo	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *key_memo;$/;"	m	struct:_PyEncoderObject	file:
key_separator	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *key_separator;$/;"	m	struct:_PyEncoderObject	file:
key_separator	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^    key_separator = ': '$/;"	v	class:JSONEncoder
keyopts	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    keyopts = [$/;"	v	class:FSharpLexer
keyopts	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    keyopts = ($/;"	v	class:OcamlLexer
keyopts	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keyopts = ($/;"	v	class:CoqLexer
keyopts	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    keyopts = [$/;"	v	class:FSharpLexer
keyopts	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    keyopts = ($/;"	v	class:OcamlLexer
keyopts	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keyopts = ($/;"	v	class:CoqLexer
keys	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    def keys(self):$/;"	m	class:OrderedDict
keys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^    def keys(self):$/;"	m	class:LazyDict
keys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^    def keys(self):$/;"	m	class:LazyDict
keys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def keys(self):$/;"	m	class:RequestsCookieJar
keys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def keys(self):$/;"	m	class:RecentlyUsedContainer
keys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def keys(self):$/;"	m	class:OrderedDict
keys	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def keys(self):$/;"	m	class:OrderedDict
keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    keyword = (r'(?:function|class|static|var|if|else|while|do|for|'$/;"	v	class:HaxeLexer
keyword	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    keyword = (r'(?:function|class|static|var|if|else|while|do|for|'$/;"	v	class:HaxeLexer
keyword_abandon_proof	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keyword_abandon_proof = ('sorry', 'oops')$/;"	v	class:IsabelleLexer
keyword_abandon_proof	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keyword_abandon_proof = ('sorry', 'oops')$/;"	v	class:IsabelleLexer
keyword_cmds_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^    keyword_cmds_re = words(($/;"	v	class:TclLexer
keyword_cmds_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^    keyword_cmds_re = words(($/;"	v	class:TclLexer
keyword_constants	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    keyword_constants = ($/;"	v	class:FelixLexer
keyword_constants	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    keyword_constants = ($/;"	v	class:FelixLexer
keyword_declarations	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    keyword_declarations = ($/;"	v	class:FelixLexer
keyword_declarations	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    keyword_declarations = ($/;"	v	class:FelixLexer
keyword_diag	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keyword_diag = ($/;"	v	class:IsabelleLexer
keyword_diag	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keyword_diag = ($/;"	v	class:IsabelleLexer
keyword_directives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    keyword_directives = ($/;"	v	class:FelixLexer
keyword_directives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    keyword_directives = ($/;"	v	class:FelixLexer
keyword_minor	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keyword_minor = ($/;"	v	class:IsabelleLexer
keyword_minor	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keyword_minor = ($/;"	v	class:IsabelleLexer
keyword_proof_asm	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keyword_proof_asm = ('assume', 'case', 'def', 'fix', 'presume')$/;"	v	class:IsabelleLexer
keyword_proof_asm	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keyword_proof_asm = ('assume', 'case', 'def', 'fix', 'presume')$/;"	v	class:IsabelleLexer
keyword_proof_asm_goal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keyword_proof_asm_goal = ('guess', 'obtain', 'show', 'thus')$/;"	v	class:IsabelleLexer
keyword_proof_asm_goal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keyword_proof_asm_goal = ('guess', 'obtain', 'show', 'thus')$/;"	v	class:IsabelleLexer
keyword_proof_block	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keyword_proof_block = ('next', 'proof')$/;"	v	class:IsabelleLexer
keyword_proof_block	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keyword_proof_block = ('next', 'proof')$/;"	v	class:IsabelleLexer
keyword_proof_chain	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keyword_proof_chain = ($/;"	v	class:IsabelleLexer
keyword_proof_chain	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keyword_proof_chain = ($/;"	v	class:IsabelleLexer
keyword_proof_decl	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keyword_proof_decl = ($/;"	v	class:IsabelleLexer
keyword_proof_decl	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keyword_proof_decl = ($/;"	v	class:IsabelleLexer
keyword_proof_goal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keyword_proof_goal = ('have', 'hence', 'interpret')$/;"	v	class:IsabelleLexer
keyword_proof_goal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keyword_proof_goal = ('have', 'hence', 'interpret')$/;"	v	class:IsabelleLexer
keyword_proof_script	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keyword_proof_script = ($/;"	v	class:IsabelleLexer
keyword_proof_script	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keyword_proof_script = ($/;"	v	class:IsabelleLexer
keyword_qed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keyword_qed = ('by', 'done', 'qed')$/;"	v	class:IsabelleLexer
keyword_qed	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keyword_qed = ('by', 'done', 'qed')$/;"	v	class:IsabelleLexer
keyword_section	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keyword_section = ('header', 'chapter')$/;"	v	class:IsabelleLexer
keyword_section	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keyword_section = ('header', 'chapter')$/;"	v	class:IsabelleLexer
keyword_subsection	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keyword_subsection = ($/;"	v	class:IsabelleLexer
keyword_subsection	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keyword_subsection = ($/;"	v	class:IsabelleLexer
keyword_theory_decl	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keyword_theory_decl = ($/;"	v	class:IsabelleLexer
keyword_theory_decl	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keyword_theory_decl = ($/;"	v	class:IsabelleLexer
keyword_theory_goal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keyword_theory_goal = ($/;"	v	class:IsabelleLexer
keyword_theory_goal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keyword_theory_goal = ($/;"	v	class:IsabelleLexer
keyword_theory_script	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keyword_theory_script = ('inductive_cases', 'inductive_simps')$/;"	v	class:IsabelleLexer
keyword_theory_script	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keyword_theory_script = ('inductive_cases', 'inductive_simps')$/;"	v	class:IsabelleLexer
keyword_thy	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keyword_thy = ('theory', 'begin', 'end')$/;"	v	class:IsabelleLexer
keyword_thy	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keyword_thy = ('theory', 'begin', 'end')$/;"	v	class:IsabelleLexer
keyword_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    keyword_type = r'(?:Int|Float|String|Bool|Object|Array|Void)'$/;"	v	class:MonkeyLexer
keyword_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    keyword_type = r'(?:Int|Float|String|Bool|Object|Array|Void)'$/;"	v	class:MonkeyLexer
keyword_type_special	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    keyword_type_special = r'[?%#$]'$/;"	v	class:MonkeyLexer
keyword_type_special	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    keyword_type_special = r'[?%#$]'$/;"	v	class:MonkeyLexer
keyword_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    keyword_types = ($/;"	v	class:FelixLexer
keyword_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    keyword_types = ($/;"	v	class:FelixLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_mql_builtins.py	/^keywords = ($/;"	v
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    keywords = ($/;"	v	class:QBasicLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    keywords = words(OPENEDGEKEYWORDS,$/;"	v	class:OpenEdgeLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    keywords = ($/;"	v	class:SquidConfLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    keywords = [$/;"	v	class:FSharpLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    keywords = set(($/;"	v	class:DylanLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    keywords = ($/;"	v	class:ErlangLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    keywords = ($/;"	v	class:FelixLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    keywords = [$/;"	v	class:KokaLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^    keywords = ($/;"	v	class:IgorLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    keywords = ($/;"	v	class:SchemeLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    keywords = ($/;"	v	class:OcamlLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    keywords = ($/;"	v	class:OpaLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    keywords = [$/;"	v	class:NimrodLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^    keywords = ['rec', 'with', 'let', 'in', 'inherit', 'assert', 'if',$/;"	v	class:NixLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    keywords = ($/;"	v	class:PowerShellLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_mql_builtins.py	/^keywords = ($/;"	v
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    keywords = ($/;"	v	class:QBasicLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    keywords = words(OPENEDGEKEYWORDS,$/;"	v	class:OpenEdgeLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    keywords = ($/;"	v	class:SquidConfLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    keywords = [$/;"	v	class:FSharpLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    keywords = set(($/;"	v	class:DylanLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    keywords = ($/;"	v	class:ErlangLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    keywords = ($/;"	v	class:FelixLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    keywords = [$/;"	v	class:KokaLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^    keywords = ($/;"	v	class:IgorLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    keywords = ($/;"	v	class:SchemeLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    keywords = ($/;"	v	class:OcamlLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    keywords = ($/;"	v	class:OpaLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    keywords = [$/;"	v	class:NimrodLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^    keywords = ['rec', 'with', 'let', 'in', 'inherit', 'assert', 'if',$/;"	v	class:NixLexer
keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    keywords = ($/;"	v	class:PowerShellLexer
keywords1	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keywords1 = ($/;"	v	class:CoqLexer
keywords1	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keywords1 = ('import', 'abbreviation', 'opaque_hint', 'tactic_hint', 'definition', 'renaming',$/;"	v	class:LeanLexer
keywords1	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keywords1 = ($/;"	v	class:CoqLexer
keywords1	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keywords1 = ('import', 'abbreviation', 'opaque_hint', 'tactic_hint', 'definition', 'renaming',$/;"	v	class:LeanLexer
keywords2	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keywords2 = ($/;"	v	class:CoqLexer
keywords2	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keywords2 = ($/;"	v	class:LeanLexer
keywords2	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keywords2 = ($/;"	v	class:CoqLexer
keywords2	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keywords2 = ($/;"	v	class:LeanLexer
keywords3	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keywords3 = ($/;"	v	class:CoqLexer
keywords3	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keywords3 = ($/;"	v	class:LeanLexer
keywords3	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keywords3 = ($/;"	v	class:CoqLexer
keywords3	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keywords3 = ($/;"	v	class:LeanLexer
keywords4	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keywords4 = ($/;"	v	class:CoqLexer
keywords4	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keywords4 = ($/;"	v	class:LeanLexer
keywords4	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keywords4 = ($/;"	v	class:CoqLexer
keywords4	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keywords4 = ($/;"	v	class:LeanLexer
keywords5	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keywords5 = ($/;"	v	class:CoqLexer
keywords5	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keywords5 = ($/;"	v	class:CoqLexer
keywords6	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    keywords6 = ($/;"	v	class:CoqLexer
keywords6	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    keywords6 = ($/;"	v	class:CoqLexer
keywordsPseudo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    keywordsPseudo = [$/;"	v	class:NimrodLexer
keywordsPseudo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    keywordsPseudo = [$/;"	v	class:NimrodLexer
kill	plugged/unite.vim/autoload/unite/sources/process.vim	/^function! s:kill(signal, candidates) "{{{$/;"	f
killDaemon	plugged/vim-instant-markdown/after/ftplugin/markdown/instant-markdown.vim	/^function! s:killDaemon()$/;"	f
kind	plugged/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let kind.action_table.highlight = {$/;"	v
kind	plugged/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let kind.action_table.preview = {$/;"	v
kind	plugged/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let kind.action_table.replace = {$/;"	v
kind.action_table.above.func	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.above.func(candidates) "{{{$/;"	f
kind.action_table.append.func	plugged/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.append.func(candidate) "{{{$/;"	f
kind.action_table.backup.func	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.backup.func(candidates) "{{{$/;"	f
kind.action_table.below.func	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.below.func(candidates) "{{{$/;"	f
kind.action_table.cd.func	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.cd.func(candidate) "{{{$/;"	f
kind.action_table.choose.func	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.choose.func(candidates) "{{{$/;"	f
kind.action_table.copy.func	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.copy.func(candidates) "{{{$/;"	f
kind.action_table.delete.func	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.delete.func(candidates) "{{{$/;"	f
kind.action_table.delete.func	plugged/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:kind.action_table.delete.func(candidates) "{{{$/;"	f
kind.action_table.delete.func	plugged/unite.vim/autoload/unite/kinds/window.vim	/^function! s:kind.action_table.delete.func(candidates) "{{{$/;"	f
kind.action_table.diff.func	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.diff.func(candidates)$/;"	f
kind.action_table.dirdiff.func	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.dirdiff.func(candidates)$/;"	f
kind.action_table.echo.func	plugged/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.echo.func(candidates) "{{{$/;"	f
kind.action_table.edit.func	plugged/unite.vim/autoload/unite/kinds/command.vim	/^function! s:kind.action_table.edit.func(candidate) "{{{$/;"	f
kind.action_table.edit.func	plugged/unite.vim/autoload/unite/kinds/guicmd.vim	/^function! s:kind.action_table.edit.func(candidate) "{{{$/;"	f
kind.action_table.edit.func	plugged/unite.vim/autoload/unite/kinds/source.vim	/^function! s:kind.action_table.edit.func(candidate) "{{{$/;"	f
kind.action_table.ex.func	plugged/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.ex.func(candidates) "{{{$/;"	f
kind.action_table.execute.func	plugged/unite.vim/autoload/unite/kinds/command.vim	/^function! s:kind.action_table.execute.func(candidates) "{{{$/;"	f
kind.action_table.execute.func	plugged/unite.vim/autoload/unite/kinds/guicmd.vim	/^function! s:kind.action_table.execute.func(candidate) "{{{$/;"	f
kind.action_table.exrename.func	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.exrename.func(candidates)$/;"	f
kind.action_table.fdelete.func	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.fdelete.func(candidates) "{{{$/;"	f
kind.action_table.find.func	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.find.func(candidate) "{{{$/;"	f
kind.action_table.goto.func	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.goto.func(candidate) "{{{$/;"	f
kind.action_table.grep.func	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.grep.func(candidates) "{{{$/;"	f
kind.action_table.highlight.func	plugged/unite.vim/autoload/unite/kinds/jump_list.vim	/^  function! kind.action_table.highlight.func(candidate) "{{{$/;"	f
kind.action_table.insert.func	plugged/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.insert.func(candidate) "{{{$/;"	f
kind.action_table.insert.func	plugged/unite.vim/autoload/unite/kinds/completion.vim	/^function! s:kind.action_table.insert.func(candidate) "{{{$/;"	f
kind.action_table.insert_directory.func	plugged/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.insert_directory.func(candidate) "{{{$/;"	f
kind.action_table.lcd.func	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.lcd.func(candidate) "{{{$/;"	f
kind.action_table.left.func	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.left.func(candidates) "{{{$/;"	f
kind.action_table.mkdir.func	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.mkdir.func(candidate) "{{{$/;"	f
kind.action_table.move.func	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.move.func(candidates) "{{{$/;"	f
kind.action_table.narrow.func	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.narrow.func(candidate) "{{{$/;"	f
kind.action_table.nop.func	plugged/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.nop.func(candidate) "{{{$/;"	f
kind.action_table.only.func	plugged/unite.vim/autoload/unite/kinds/window.vim	/^function! s:kind.action_table.only.func(candidate) "{{{$/;"	f
kind.action_table.open.func	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.open.func(candidates) "{{{$/;"	f
kind.action_table.open.func	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.open.func(candidates) "{{{$/;"	f
kind.action_table.open.func	plugged/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:kind.action_table.open.func(candidate) "{{{$/;"	f
kind.action_table.open.func	plugged/unite.vim/autoload/unite/kinds/window.vim	/^function! s:kind.action_table.open.func(candidate) "{{{$/;"	f
kind.action_table.persist_open.func	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.persist_open.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	plugged/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	plugged/unite.vim/autoload/unite/kinds/completion.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	plugged/unite.vim/autoload/unite/kinds/jump_list.vim	/^  function! kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	plugged/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	plugged/unite.vim/autoload/unite/kinds/window.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.project_cd.func	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.project_cd.func(candidate) "{{{$/;"	f
kind.action_table.read.func	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.read.func(candidates) "{{{$/;"	f
kind.action_table.rename.func	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.rename.func(candidates) "{{{$/;"	f
kind.action_table.rename.func	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.rename.func(candidates) "{{{$/;"	f
kind.action_table.rename.func	plugged/unite.vim/autoload/unite/kinds/tab.vim	/^  function! s:kind.action_table.rename.func(candidates) "{{{$/;"	f
kind.action_table.replace.func	plugged/unite.vim/autoload/unite/kinds/jump_list.vim	/^  function! kind.action_table.replace.func(candidates) "{{{$/;"	f
kind.action_table.right.func	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.right.func(candidates) "{{{$/;"	f
kind.action_table.split.func	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.split.func(candidates) "{{{$/;"	f
kind.action_table.splitswitch.func	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.splitswitch.func(candidates) "{{{$/;"	f
kind.action_table.start.func	plugged/unite.vim/autoload/unite/kinds/source.vim	/^function! s:kind.action_table.start.func(candidates) "{{{$/;"	f
kind.action_table.start.func	plugged/unite.vim/autoload/unite/kinds/uri.vim	/^function! s:kind.action_table.start.func(candidates) "{{{$/;"	f
kind.action_table.switch.func	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.switch.func(candidates) "{{{$/;"	f
kind.action_table.tabnew_cd.func	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.tabnew_cd.func(candidate) "{{{$/;"	f
kind.action_table.tabnew_lcd.func	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.tabnew_lcd.func(candidate) "{{{$/;"	f
kind.action_table.tabopen.func	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.tabopen.func(candidates) "{{{$/;"	f
kind.action_table.tabsplit.func	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.tabsplit.func(candidates) "{{{$/;"	f
kind.action_table.tabswitch.func	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.tabswitch.func(candidates) "{{{$/;"	f
kind.action_table.tabvimfiler.func	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.tabvimfiler.func(candidate) "{{{$/;"	f
kind.action_table.tabvimshell.func	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.tabvimshell.func(candidate) "{{{$/;"	f
kind.action_table.unite__new_candidate.func	plugged/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:kind.action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
kind.action_table.unload.func	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.unload.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler.func	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.vimfiler.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__copy.func	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__copy.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__delete.func	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__delete.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__execute.func	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__execute.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__external_filer.func	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__external_filer.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__mkdir.func	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__mkdir.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__move.func	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__move.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__newfile.func	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__newfile.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__rename.func	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__rename.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__shell.func	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__shell.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__shellcmd.func	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__shellcmd.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__write.func	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__write.func(candidate) "{{{$/;"	f
kind.action_table.vimgrep.func	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.vimgrep.func(candidates) "{{{$/;"	f
kind.action_table.vimshell.func	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.vimshell.func(candidate) "{{{$/;"	f
kind.action_table.vsplit.func	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.vsplit.func(candidates) "{{{$/;"	f
kind.action_table.vsplitswitch.func	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.vsplitswitch.func(candidates) "{{{$/;"	f
kind.action_table.wipeout.func	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.wipeout.func(candidates) "{{{$/;"	f
kind.action_table.wunix.func	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.wunix.func(candidates) "{{{$/;"	f
kind.action_table.yank.func	plugged/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.yank.func(candidates) "{{{$/;"	f
kind.action_table.yank_escape.func	plugged/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.yank_escape.func(candidate) "{{{$/;"	f
kt_id	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    kt_id = '(' + kt_name + '|`' + kt_name + '`)'$/;"	v	class:KotlinLexer
kt_id	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    kt_id = '(' + kt_name + '|`' + kt_name + '`)'$/;"	v	class:KotlinLexer
kt_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    kt_name = ('@?[_' + uni.combine('Lu', 'Ll', 'Lt', 'Lm', 'Nl') + ']' +$/;"	v	class:KotlinLexer
kt_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    kt_name = ('@?[_' + uni.combine('Lu', 'Ll', 'Lt', 'Lm', 'Nl') + ']' +$/;"	v	class:KotlinLexer
l:runtimeFiletypes	plugged/ingo-library/autoload/ingo/compat/complete.vim	/^    let l:runtimeFiletypes = filter($/;"	v
language_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^def language_callback(lexer, match):$/;"	f
language_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^def language_callback(lexer, match):$/;"	f
language_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^language_re = re.compile(r"\\s+LANGUAGE\\s+'?(\\w+)'?", re.IGNORECASE)$/;"	v
language_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^language_re = re.compile(r"\\s+LANGUAGE\\s+'?(\\w+)'?", re.IGNORECASE)$/;"	v
large_strings	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *large_strings;  \/* A list of previously accumulated large strings *\/$/;"	m	struct:__anon1	file:
lasterror	plugged/vimproc.vim/autoload/proc_w32.c	/^lasterror()$/;"	f	file:
lastline	autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
latin5_CharToOrderMap	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langcyrillicmodel.py	/^latin5_CharToOrderMap = ($/;"	v
lazy	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^        def lazy(name):$/;"	f	function:LazyList.__new__
lazy	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/lazy.py	/^        def lazy(name):$/;"	f	function:LazySet.__new__
lazy	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^        def lazy(name):$/;"	f	function:LazyList.__new__
lazy	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/lazy.py	/^        def lazy(name):$/;"	f	function:LazySet.__new__
lengthof	plugged/vimproc.vim/autoload/proc_w32.c	/^#define lengthof(/;"	d	file:
letter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    letter = (u'[a-zA-Z\\\\$_\\u00aa\\u00b5\\u00ba\\u00c0-\\u00d6\\u00d8-\\u00f6'$/;"	v	class:ScalaLexer
letter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    letter = (u'[a-zA-Z\\\\$_\\u00aa\\u00b5\\u00ba\\u00c0-\\u00d6\\u00d8-\\u00f6'$/;"	v	class:ScalaLexer
letter_letter_digit	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    letter_letter_digit = u'%s(?:%s|\\d)*' % (letter, letter)$/;"	v	class:ScalaLexer
letter_letter_digit	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    letter_letter_digit = u'%s(?:%s|\\d)*' % (letter, letter)$/;"	v	class:ScalaLexer
level	plugged/vim-wakatime/plugin/packages/wakatime/compat.py	/^                raise ValueError("attempted relative import beyond top-level "$/;"	i
level	plugged/vim-wakatime/plugin/packages/wakatime/languages/data.py	/^    level = 0$/;"	v	class:JsonParser
levels	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    levels = {$/;"	v	class:CSharpLexer
levels	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    levels = {$/;"	v	class:NemerleLexer
levels	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    levels = {$/;"	v	class:CSharpLexer
levels	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    levels = {$/;"	v	class:NemerleLexer
levenshtein_distance	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
lex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/__init__.py	/^def lex(code, lexer):$/;"	f
lex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/__init__.py	/^def lex(code, lexer):$/;"	f
lexer	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^    lexer = None$/;"	v	class:DependencyParser
lexer	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^    lexer = None$/;"	v	class:TokenParser
lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_mapping.py	/^                    lexer = getattr(module, lexer_name)$/;"	v
lexer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_mapping.py	/^                    lexer = getattr(module, lexer_name)$/;"	v
lexer.advance	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.advance()$/;"	f
lexer.lex_digit	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.lex_digit()$/;"	f
lexer.skip_spaces	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.skip_spaces()$/;"	f
lexer.token	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.token()$/;"	f
lexer.value	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.value()$/;"	f
libcall	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:libcall(func, args) "{{{$/;"	f
libcall_raw_read	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:libcall_raw_read(func, args) "{{{$/;"	f
libcall_raw_write	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:libcall_raw_write(func, args) "{{{$/;"	f
light_colors	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/console.py	/^light_colors = ["darkgray", "red", "green", "yellow", "blue",$/;"	v
light_colors	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/console.py	/^light_colors = ["darkgray", "red", "green", "yellow", "blue",$/;"	v
lightline#colorscheme	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#colorscheme() abort$/;"	f
lightline#colorscheme#fill	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#fill(p) abort$/;"	f
lightline#colorscheme#flatten	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#flatten(p) abort$/;"	f
lightline#colortable#gui2cui	plugged/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#gui2cui(rgb, fallback) abort$/;"	f
lightline#colortable#name_to_rgb	plugged/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#name_to_rgb(name) abort$/;"	f
lightline#concatenate	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#concatenate(x, s) abort$/;"	f
lightline#disable	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#disable() abort$/;"	f
lightline#enable	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#enable() abort$/;"	f
lightline#error	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#error(msg) abort$/;"	f
lightline#highlight	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#highlight(...) abort$/;"	f
lightline#init	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#init() abort$/;"	f
lightline#link	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#link(...) abort$/;"	f
lightline#mode	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#mode() abort$/;"	f
lightline#onetab	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#onetab(n, active) abort$/;"	f
lightline#palette	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#palette() abort$/;"	f
lightline#statusline	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#statusline(inactive) abort$/;"	f
lightline#tab#filename	plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#filename(n) abort$/;"	f
lightline#tab#modified	plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#modified(n) abort$/;"	f
lightline#tab#readonly	plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#readonly(n) abort$/;"	f
lightline#tab#tabnum	plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#tabnum(n) abort$/;"	f
lightline#tabline	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#tabline() abort$/;"	f
lightline#tabs	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#tabs() abort$/;"	f
lightline#toggle	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#toggle() abort$/;"	f
lightline#update	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#update() abort$/;"	f
lightline#update_disable	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#update_disable() abort$/;"	f
lightline#update_once	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#update_once() abort$/;"	f
line	plugged/delimitMate/test/autoclose_matchpairs.vim	/^    let line = getline('.')$/;"	v
line	plugged/lightline.vim/autoload/lightline.vim	/^function! s:line(tabline, inactive) abort$/;"	f
line_number	plugged/Nvim-R/R/synctex_evince_forward.py	/^line_number = int(sys.argv[2])$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^line_re = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^line_re = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^line_re  = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^line_re  = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^line_re = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^line_re  = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^line_re = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^line_re  = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^line_re = re.compile(b'.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^line_re  = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^line_re = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^line_re = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^line_re  = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^line_re  = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^line_re = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^line_re  = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^line_re = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^line_re  = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^line_re = re.compile(b'.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^line_re  = re.compile('.*?\\n')$/;"	v
linechars	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
linecol	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/scanner.py	/^def linecol(doc, pos):$/;"	f
linenr	plugged/delimitMate/test/autoclose_quotes.vim	/^  let linenr += 1$/;"	v
linenr	plugged/delimitMate/test/autoclose_quotes.vim	/^let linenr = 0$/;"	v
lines	autoload/plug.vim	/^function! s:lines(msg)$/;"	f
lines	plugged/delimitMate/test/autoclose_matchpairs.vim	/^let lines = readfile(expand('<sfile>:t:r').'.txt')$/;"	v
lines	plugged/delimitMate/test/autoclose_quotes.vim	/^let lines = readfile(expand('<sfile>:t:r').'.txt')$/;"	v
lines	plugged/delimitMate/test/expand_cr.vim	/^  let lines = getline(1, line('$'))$/;"	v
lines	plugged/delimitMate/test/expand_cr.vim	/^let lines = readfile(expand('<sfile>:t:r').'.txt')$/;"	v
lines	plugged/delimitMate/test/expand_space.vim	/^  let lines = getline(1, line('$'))$/;"	v
lines	plugged/delimitMate/test/expand_space.vim	/^let lines = readfile(expand('<sfile>:t:r').'.txt')$/;"	v
lines	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:lines(str) abort$/;"	f
links	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def links(self):$/;"	m	class:Response
list2hd	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:list2hd(lis)$/;"	f
list2str	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:list2str(lis)$/;"	f
list_domains	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def list_domains(self):$/;"	m	class:RequestsCookieJar
list_paths	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def list_paths(self):$/;"	m	class:RequestsCookieJar
list_styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/style.py	/^    def list_styles(cls):$/;"	m	class:StyleMeta
list_styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/style.py	/^    def list_styles(cls):$/;"	m	class:StyleMeta
load	plugged/lightline.vim/autoload/lightline/colortable.vim	/^function! s:load() abort$/;"	f
load	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:load(filename)  "{{{$/;"	f
load	plugged/unite.vim/autoload/unite/sources/history_yank.vim	/^function! s:load()  "{{{$/;"	f
load	plugged/unite.vim/autoload/vital/_unite.vim	/^function! s:load(...) dict abort$/;"	f
load	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^def load(fp, encoding=None, cls=None, object_hook=None, parse_float=None,$/;"	f
load_cert_chain	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^        def load_cert_chain(self, certfile, keyfile):$/;"	m	class:SSLContext
load_verify_locations	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^        def load_verify_locations(self, location):$/;"	m	class:SSLContext
loadable_kw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    loadable_kw = ($/;"	v	class:OctaveLexer
loadable_kw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    loadable_kw = ($/;"	v	class:OctaveLexer
loaded_names	autoload/plug.vim	/^function! s:loaded_names()$/;"	f
loaded_nerd_tree	plugged/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loads	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^def loads(s, encoding=None, cls=None, object_hook=None, parse_float=None,$/;"	f
loads	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decimal.py	/^    def loads(self, s, **kw):$/;"	m	class:TestDecimal
locale	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:locale() abort$/;"	f
locale	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^            import locale$/;"	i
locale	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^    import locale$/;"	i
locale	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^            import locale$/;"	i
locale	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^    import locale$/;"	i
localize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def localize(self, dt, is_dst=False):$/;"	m	class:UTC
localize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def localize(self, dt, is_dst=False):$/;"	m	class:_FixedOffset
localize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    def localize(self, dt, is_dst=False):$/;"	m	class:DstTzInfo
localize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    def localize(self, dt, is_dst=False):$/;"	m	class:StaticTzInfo
localize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def localize(self, dt, is_dst=False):$/;"	m	class:UTC
localize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def localize(self, dt, is_dst=False):$/;"	m	class:_FixedOffset
localize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    def localize(self, dt, is_dst=False):$/;"	m	class:DstTzInfo
localize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    def localize(self, dt, is_dst=False):$/;"	m	class:StaticTzInfo
locs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_docs.py	/^locs = [$/;"	v
locs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_docs.py	/^locs = [$/;"	v
lod	autoload/plug.vim	/^function! s:lod(names, types)$/;"	f
lod_cmd	autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
lod_ft	autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
lod_map	autoload/plug.vim	/^function! s:lod_map(map, names, prefix)$/;"	f
log	autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
log	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/plugin/packages/wakatime/offlinequeue.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^log = logging.getLogger(__name__)$/;"	v
log	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/ntlmpool.py	/^log = getLogger(__name__)$/;"	v
log	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^log = logging.getLogger(__name__)$/;"	v
log	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/retry.py	/^log = logging.getLogger(__name__)$/;"	v
log	plugged/vim-wakatime/plugin/packages/wakatime/project.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/plugin/packages/wakatime/projects/base.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/plugin/packages/wakatime/projects/git.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/plugin/packages/wakatime/projects/mercurial.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/plugin/packages/wakatime/projects/projectmap.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/plugin/packages/wakatime/projects/wakatime_project_file.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/plugin/packages/wakatime/session_cache.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/plugin/packages/wakatime/stats.py	/^log = logging.getLogger('WakaTime')$/;"	v
logging	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^import logging$/;"	i
logging	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^import logging$/;"	i
logging	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^import logging$/;"	i
logging	plugged/vim-wakatime/plugin/packages/wakatime/offlinequeue.py	/^import logging$/;"	i
logging	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^import logging$/;"	i
logging	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^import logging$/;"	i
logging	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^import logging$/;"	i
logging	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^import logging$/;"	i
logging	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/retry.py	/^import logging$/;"	i
logging	plugged/vim-wakatime/plugin/packages/wakatime/project.py	/^import logging$/;"	i
logging	plugged/vim-wakatime/plugin/packages/wakatime/projects/base.py	/^import logging$/;"	i
logging	plugged/vim-wakatime/plugin/packages/wakatime/projects/git.py	/^import logging$/;"	i
logging	plugged/vim-wakatime/plugin/packages/wakatime/projects/mercurial.py	/^import logging$/;"	i
logging	plugged/vim-wakatime/plugin/packages/wakatime/projects/projectmap.py	/^import logging$/;"	i
logging	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^import logging$/;"	i
logging	plugged/vim-wakatime/plugin/packages/wakatime/projects/wakatime_project_file.py	/^import logging$/;"	i
logging	plugged/vim-wakatime/plugin/packages/wakatime/session_cache.py	/^import logging$/;"	i
logging	plugged/vim-wakatime/plugin/packages/wakatime/stats.py	/^import logging$/;"	i
login_tty	plugged/vimproc.vim/autoload/ptytty.c	/^login_tty(int fd)$/;"	f
logpos	autoload/plug.vim	/^function! s:logpos(name)$/;"	f
long_hex_char_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    long_hex_char_re = r'(\\\\x\\{)([\\da-fA-F]+)(\\})'$/;"	v	class:ElixirLexer
long_hex_char_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    long_hex_char_re = r'(\\\\x\\{)([\\da-fA-F]+)(\\})'$/;"	v	class:ElixirLexer
long_id_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    def long_id_callback(self, match):$/;"	m	class:SMLLexer
long_id_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    def long_id_callback(self, match):$/;"	m	class:SMLLexer
long_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^long_type = integer_types[-1]$/;"	v
long_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^from simplejson.compat import StringIO, long_type, b, binary_type, PY3$/;"	i
long_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_float.py	/^from simplejson.compat import long_type, text_type$/;"	i
lookahead	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^class lookahead(object):$/;"	c
lookahead	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^class lookahead(object):$/;"	c
looks_like_xml	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^from pygments.util import looks_like_xml, html_doctype_matches$/;"	i
looks_like_xml	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^from pygments.util import html_doctype_matches, looks_like_xml$/;"	i
looks_like_xml	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^def looks_like_xml(text):$/;"	f
looks_like_xml	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^from pygments.util import looks_like_xml, html_doctype_matches$/;"	i
looks_like_xml	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^from pygments.util import html_doctype_matches, looks_like_xml$/;"	i
looks_like_xml	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^def looks_like_xml(text):$/;"	f
loop	plugged/Nvim-R/R/synctex_evince_backward.py	/^loop = GObject.MainLoop()$/;"	v
loop	plugged/Nvim-R/R/synctex_evince_forward.py	/^loop = GObject.MainLoop()$/;"	v
lower_items	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/structures.py	/^    def lower_items(self):$/;"	m	class:CaseInsensitiveDict
lpad	autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
lquote	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:lquote(char) "{{{$/;"	f
lseek	plugged/vimproc.vim/autoload/proc_w32.c	/^#define lseek /;"	d	file:
lsl_constants_float	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    lsl_constants_float = r'\\b(?:DEG_TO_RAD|PI(?:_BY_TWO)?|RAD_TO_DEG|SQRT2|TWO_PI)\\b'$/;"	v	class:LSLLexer
lsl_constants_float	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    lsl_constants_float = r'\\b(?:DEG_TO_RAD|PI(?:_BY_TWO)?|RAD_TO_DEG|SQRT2|TWO_PI)\\b'$/;"	v	class:LSLLexer
lsl_constants_integer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    lsl_constants_integer = r'\\b(?:JSON_APPEND|STATUS_(?:PHYSICS|ROTATE_[XYZ]|PHANTOM|SANDBOX|BLOCK_GRAB(?:_OBJECT)?|(?:DIE|RETURN)_AT_EDGE|CAST_SHADOWS|OK|MALFORMED_PARAMS|TYPE_MISMATCH|BOUNDS_ERROR|NOT_(?:FOUND|SUPPORTED)|INTERNAL_ERROR|WHITELIST_FAILED)|AGENT(?:_(?:BY_(?:LEGACY_|USER)NAME|FLYING|ATTACHMENTS|SCRIPTED|MOUSELOOK|SITTING|ON_OBJECT|AWAY|WALKING|IN_AIR|TYPING|CROUCHING|BUSY|ALWAYS_RUN|AUTOPILOT|LIST_(?:PARCEL(?:_OWNER)?|REGION)))?|CAMERA_(?:PITCH|DISTANCE|BEHINDNESS_(?:ANGLE|LAG)|(?:FOCUS|POSITION)(?:_(?:THRESHOLD|LOCKED|LAG))?|FOCUS_OFFSET|ACTIVE)|ANIM_ON|LOOP|REVERSE|PING_PONG|SMOOTH|ROTATE|SCALE|ALL_SIDES|LINK_(?:ROOT|SET|ALL_(?:OTHERS|CHILDREN)|THIS)|ACTIVE|PASSIVE|SCRIPTED|CONTROL_(?:FWD|BACK|(?:ROT_)?(?:LEFT|RIGHT)|UP|DOWN|(?:ML_)?LBUTTON)|PERMISSION_(?:RETURN_OBJECTS|DEBIT|OVERRIDE_ANIMATIONS|SILENT_ESTATE_MANAGEMENT|TAKE_CONTROLS|TRIGGER_ANIMATION|ATTACH|CHANGE_LINKS|(?:CONTROL|TRACK)_CAMERA|TELEPORT)|INVENTORY_(?:TEXTURE|SOUND|OBJECT|SCRIPT|LANDMARK|CLOTHING|NOTECARD|BODYPART|ANIMATION|GESTURE|ALL|NONE)|CHANGED_(?:INVENTORY|COLOR|SHAPE|SCALE|TEXTURE|LINK|ALLOWED_DROP|OWNER|REGION(?:_START)?|TELEPORT|MEDIA)|OBJECT_(?:(?:PHYSICS|SERVER|STREAMING)_COST|UNKNOWN_DETAIL|CHARACTER_TIME|PHANTOM|PHYSICS|TEMP_ON_REZ|NAME|DESC|POS|PRIM_EQUIVALENCE|RETURN_(?:PARCEL(?:_OWNER)?|REGION)|ROO?T|VELOCITY|OWNER|GROUP|CREATOR|ATTACHED_POINT|RENDER_WEIGHT|PATHFINDING_TYPE|(?:RUNNING|TOTAL)_SCRIPT_COUNT|SCRIPT_(?:MEMORY|TIME))|TYPE_(?:INTEGER|FLOAT|STRING|KEY|VECTOR|ROTATION|INVALID)|(?:DEBUG|PUBLIC)_CHANNEL|ATTACH_(?:AVATAR_CENTER|CHEST|HEAD|BACK|PELVIS|MOUTH|CHIN|NECK|NOSE|BELLY|[LR](?:SHOULDER|HAND|FOOT|EAR|EYE|[UL](?:ARM|LEG)|HIP)|(?:LEFT|RIGHT)_PEC|HUD_(?:CENTER_[12]|TOP_(?:RIGHT|CENTER|LEFT)|BOTTOM(?:_(?:RIGHT|LEFT))?))|LAND_(?:LEVEL|RAISE|LOWER|SMOOTH|NOISE|REVERT)|DATA_(?:ONLINE|NAME|BORN|SIM_(?:POS|STATUS|RATING)|PAYINFO)|PAYMENT_INFO_(?:ON_FILE|USED)|REMOTE_DATA_(?:CHANNEL|REQUEST|REPLY)|PSYS_(?:PART_(?:BF_(?:ZERO|ONE(?:_MINUS_(?:DEST_COLOR|SOURCE_(ALPHA|COLOR)))?|DEST_COLOR|SOURCE_(ALPHA|COLOR))|BLEND_FUNC_(DEST|SOURCE)|FLAGS|(?:START|END)_(?:COLOR|ALPHA|SCALE|GLOW)|MAX_AGE|(?:RIBBON|WIND|INTERP_(?:COLOR|SCALE)|BOUNCE|FOLLOW_(?:SRC|VELOCITY)|TARGET_(?:POS|LINEAR)|EMISSIVE)_MASK)|SRC_(?:MAX_AGE|PATTERN|ANGLE_(?:BEGIN|END)|BURST_(?:RATE|PART_COUNT|RADIUS|SPEED_(?:MIN|MAX))|ACCEL|TEXTURE|TARGET_KEY|OMEGA|PATTERN_(?:DROP|EXPLODE|ANGLE(?:_CONE(?:_EMPTY)?)?)))|VEHICLE_(?:REFERENCE_FRAME|TYPE_(?:NONE|SLED|CAR|BOAT|AIRPLANE|BALLOON)|(?:LINEAR|ANGULAR)_(?:FRICTION_TIMESCALE|MOTOR_DIRECTION)|LINEAR_MOTOR_OFFSET|HOVER_(?:HEIGHT|EFFICIENCY|TIMESCALE)|BUOYANCY|(?:LINEAR|ANGULAR)_(?:DEFLECTION_(?:EFFICIENCY|TIMESCALE)|MOTOR_(?:DECAY_)?TIMESCALE)|VERTICAL_ATTRACTION_(?:EFFICIENCY|TIMESCALE)|BANKING_(?:EFFICIENCY|MIX|TIMESCALE)|FLAG_(?:NO_DEFLECTION_UP|LIMIT_(?:ROLL_ONLY|MOTOR_UP)|HOVER_(?:(?:WATER|TERRAIN|UP)_ONLY|GLOBAL_HEIGHT)|MOUSELOOK_(?:STEER|BANK)|CAMERA_DECOUPLED))|PRIM_(?:TYPE(?:_(?:BOX|CYLINDER|PRISM|SPHERE|TORUS|TUBE|RING|SCULPT))?|HOLE_(?:DEFAULT|CIRCLE|SQUARE|TRIANGLE)|MATERIAL(?:_(?:STONE|METAL|GLASS|WOOD|FLESH|PLASTIC|RUBBER))?|SHINY_(?:NONE|LOW|MEDIUM|HIGH)|BUMP_(?:NONE|BRIGHT|DARK|WOOD|BARK|BRICKS|CHECKER|CONCRETE|TILE|STONE|DISKS|GRAVEL|BLOBS|SIDING|LARGETILE|STUCCO|SUCTION|WEAVE)|TEXGEN_(?:DEFAULT|PLANAR)|SCULPT_(?:TYPE_(?:SPHERE|TORUS|PLANE|CYLINDER|MASK)|FLAG_(?:MIRROR|INVERT))|PHYSICS(?:_(?:SHAPE_(?:CONVEX|NONE|PRIM|TYPE)))?|(?:POS|ROT)_LOCAL|SLICE|TEXT|FLEXIBLE|POINT_LIGHT|TEMP_ON_REZ|PHANTOM|POSITION|SIZE|ROTATION|TEXTURE|NAME|OMEGA|DESC|LINK_TARGET|COLOR|BUMP_SHINY|FULLBRIGHT|TEXGEN|GLOW|MEDIA_(?:ALT_IMAGE_ENABLE|CONTROLS|(?:CURRENT|HOME)_URL|AUTO_(?:LOOP|PLAY|SCALE|ZOOM)|FIRST_CLICK_INTERACT|(?:WIDTH|HEIGHT)_PIXELS|WHITELIST(?:_ENABLE)?|PERMS_(?:INTERACT|CONTROL)|PARAM_MAX|CONTROLS_(?:STANDARD|MINI)|PERM_(?:NONE|OWNER|GROUP|ANYONE)|MAX_(?:URL_LENGTH|WHITELIST_(?:SIZE|COUNT)|(?:WIDTH|HEIGHT)_PIXELS)))|MASK_(?:BASE|OWNER|GROUP|EVERYONE|NEXT)|PERM_(?:TRANSFER|MODIFY|COPY|MOVE|ALL)|PARCEL_(?:MEDIA_COMMAND_(?:STOP|PAUSE|PLAY|LOOP|TEXTURE|URL|TIME|AGENT|UNLOAD|AUTO_ALIGN|TYPE|SIZE|DESC|LOOP_SET)|FLAG_(?:ALLOW_(?:FLY|(?:GROUP_)?SCRIPTS|LANDMARK|TERRAFORM|DAMAGE|CREATE_(?:GROUP_)?OBJECTS)|USE_(?:ACCESS_(?:GROUP|LIST)|BAN_LIST|LAND_PASS_LIST)|LOCAL_SOUND_ONLY|RESTRICT_PUSHOBJECT|ALLOW_(?:GROUP|ALL)_OBJECT_ENTRY)|COUNT_(?:TOTAL|OWNER|GROUP|OTHER|SELECTED|TEMP)|DETAILS_(?:NAME|DESC|OWNER|GROUP|AREA|ID|SEE_AVATARS))|LIST_STAT_(?:MAX|MIN|MEAN|MEDIAN|STD_DEV|SUM(?:_SQUARES)?|NUM_COUNT|GEOMETRIC_MEAN|RANGE)|PAY_(?:HIDE|DEFAULT)|REGION_FLAG_(?:ALLOW_DAMAGE|FIXED_SUN|BLOCK_TERRAFORM|SANDBOX|DISABLE_(?:COLLISIONS|PHYSICS)|BLOCK_FLY|ALLOW_DIRECT_TELEPORT|RESTRICT_PUSHOBJECT)|HTTP_(?:METHOD|MIMETYPE|BODY_(?:MAXLENGTH|TRUNCATED)|CUSTOM_HEADER|PRAGMA_NO_CACHE|VERBOSE_THROTTLE|VERIFY_CERT)|STRING_(?:TRIM(?:_(?:HEAD|TAIL))?)|CLICK_ACTION_(?:NONE|TOUCH|SIT|BUY|PAY|OPEN(?:_MEDIA)?|PLAY|ZOOM)|TOUCH_INVALID_FACE|PROFILE_(?:NONE|SCRIPT_MEMORY)|RC_(?:DATA_FLAGS|DETECT_PHANTOM|GET_(?:LINK_NUM|NORMAL|ROOT_KEY)|MAX_HITS|REJECT_(?:TYPES|AGENTS|(?:NON)?PHYSICAL|LAND))|RCERR_(?:CAST_TIME_EXCEEDED|SIM_PERF_LOW|UNKNOWN)|ESTATE_ACCESS_(?:ALLOWED_(?:AGENT|GROUP)_(?:ADD|REMOVE)|BANNED_AGENT_(?:ADD|REMOVE))|DENSITY|FRICTION|RESTITUTION|GRAVITY_MULTIPLIER|KFM_(?:COMMAND|CMD_(?:PLAY|STOP|PAUSE|SET_MODE)|MODE|FORWARD|LOOP|PING_PONG|REVERSE|DATA|ROTATION|TRANSLATION)|ERR_(?:GENERIC|PARCEL_PERMISSIONS|MALFORMED_PARAMS|RUNTIME_PERMISSIONS|THROTTLED)|CHARACTER_(?:CMD_(?:(?:SMOOTH_)?STOP|JUMP)|DESIRED_(?:TURN_)?SPEED|RADIUS|STAY_WITHIN_PARCEL|LENGTH|ORIENTATION|ACCOUNT_FOR_SKIPPED_FRAMES|AVOIDANCE_MODE|TYPE(?:_(?:[A-D]|NONE))?|MAX_(?:DECEL|TURN_RADIUS|(?:ACCEL|SPEED)))|PURSUIT_(?:OFFSET|FUZZ_FACTOR|GOAL_TOLERANCE|INTERCEPT)|REQUIRE_LINE_OF_SIGHT|FORCE_DIRECT_PATH|VERTICAL|HORIZONTAL|AVOID_(?:CHARACTERS|DYNAMIC_OBSTACLES|NONE)|PU_(?:EVADE_(?:HIDDEN|SPOTTED)|FAILURE_(?:DYNAMIC_PATHFINDING_DISABLED|INVALID_(?:GOAL|START)|NO_(?:NAVMESH|VALID_DESTINATION)|OTHER|TARGET_GONE|(?:PARCEL_)?UNREACHABLE)|(?:GOAL|SLOWDOWN_DISTANCE)_REACHED)|TRAVERSAL_TYPE(?:_(?:FAST|NONE|SLOW))?|CONTENT_TYPE_(?:ATOM|FORM|HTML|JSON|LLSD|RSS|TEXT|XHTML|XML)|GCNP_(?:RADIUS|STATIC)|(?:PATROL|WANDER)_PAUSE_AT_WAYPOINTS|OPT_(?:AVATAR|CHARACTER|EXCLUSION_VOLUME|LEGACY_LINKSET|MATERIAL_VOLUME|OTHER|STATIC_OBSTACLE|WALKABLE)|SIM_STAT_PCT_CHARS_STEPPED)\\b'$/;"	v	class:LSLLexer
lsl_constants_integer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    lsl_constants_integer = r'\\b(?:JSON_APPEND|STATUS_(?:PHYSICS|ROTATE_[XYZ]|PHANTOM|SANDBOX|BLOCK_GRAB(?:_OBJECT)?|(?:DIE|RETURN)_AT_EDGE|CAST_SHADOWS|OK|MALFORMED_PARAMS|TYPE_MISMATCH|BOUNDS_ERROR|NOT_(?:FOUND|SUPPORTED)|INTERNAL_ERROR|WHITELIST_FAILED)|AGENT(?:_(?:BY_(?:LEGACY_|USER)NAME|FLYING|ATTACHMENTS|SCRIPTED|MOUSELOOK|SITTING|ON_OBJECT|AWAY|WALKING|IN_AIR|TYPING|CROUCHING|BUSY|ALWAYS_RUN|AUTOPILOT|LIST_(?:PARCEL(?:_OWNER)?|REGION)))?|CAMERA_(?:PITCH|DISTANCE|BEHINDNESS_(?:ANGLE|LAG)|(?:FOCUS|POSITION)(?:_(?:THRESHOLD|LOCKED|LAG))?|FOCUS_OFFSET|ACTIVE)|ANIM_ON|LOOP|REVERSE|PING_PONG|SMOOTH|ROTATE|SCALE|ALL_SIDES|LINK_(?:ROOT|SET|ALL_(?:OTHERS|CHILDREN)|THIS)|ACTIVE|PASSIVE|SCRIPTED|CONTROL_(?:FWD|BACK|(?:ROT_)?(?:LEFT|RIGHT)|UP|DOWN|(?:ML_)?LBUTTON)|PERMISSION_(?:RETURN_OBJECTS|DEBIT|OVERRIDE_ANIMATIONS|SILENT_ESTATE_MANAGEMENT|TAKE_CONTROLS|TRIGGER_ANIMATION|ATTACH|CHANGE_LINKS|(?:CONTROL|TRACK)_CAMERA|TELEPORT)|INVENTORY_(?:TEXTURE|SOUND|OBJECT|SCRIPT|LANDMARK|CLOTHING|NOTECARD|BODYPART|ANIMATION|GESTURE|ALL|NONE)|CHANGED_(?:INVENTORY|COLOR|SHAPE|SCALE|TEXTURE|LINK|ALLOWED_DROP|OWNER|REGION(?:_START)?|TELEPORT|MEDIA)|OBJECT_(?:(?:PHYSICS|SERVER|STREAMING)_COST|UNKNOWN_DETAIL|CHARACTER_TIME|PHANTOM|PHYSICS|TEMP_ON_REZ|NAME|DESC|POS|PRIM_EQUIVALENCE|RETURN_(?:PARCEL(?:_OWNER)?|REGION)|ROO?T|VELOCITY|OWNER|GROUP|CREATOR|ATTACHED_POINT|RENDER_WEIGHT|PATHFINDING_TYPE|(?:RUNNING|TOTAL)_SCRIPT_COUNT|SCRIPT_(?:MEMORY|TIME))|TYPE_(?:INTEGER|FLOAT|STRING|KEY|VECTOR|ROTATION|INVALID)|(?:DEBUG|PUBLIC)_CHANNEL|ATTACH_(?:AVATAR_CENTER|CHEST|HEAD|BACK|PELVIS|MOUTH|CHIN|NECK|NOSE|BELLY|[LR](?:SHOULDER|HAND|FOOT|EAR|EYE|[UL](?:ARM|LEG)|HIP)|(?:LEFT|RIGHT)_PEC|HUD_(?:CENTER_[12]|TOP_(?:RIGHT|CENTER|LEFT)|BOTTOM(?:_(?:RIGHT|LEFT))?))|LAND_(?:LEVEL|RAISE|LOWER|SMOOTH|NOISE|REVERT)|DATA_(?:ONLINE|NAME|BORN|SIM_(?:POS|STATUS|RATING)|PAYINFO)|PAYMENT_INFO_(?:ON_FILE|USED)|REMOTE_DATA_(?:CHANNEL|REQUEST|REPLY)|PSYS_(?:PART_(?:BF_(?:ZERO|ONE(?:_MINUS_(?:DEST_COLOR|SOURCE_(ALPHA|COLOR)))?|DEST_COLOR|SOURCE_(ALPHA|COLOR))|BLEND_FUNC_(DEST|SOURCE)|FLAGS|(?:START|END)_(?:COLOR|ALPHA|SCALE|GLOW)|MAX_AGE|(?:RIBBON|WIND|INTERP_(?:COLOR|SCALE)|BOUNCE|FOLLOW_(?:SRC|VELOCITY)|TARGET_(?:POS|LINEAR)|EMISSIVE)_MASK)|SRC_(?:MAX_AGE|PATTERN|ANGLE_(?:BEGIN|END)|BURST_(?:RATE|PART_COUNT|RADIUS|SPEED_(?:MIN|MAX))|ACCEL|TEXTURE|TARGET_KEY|OMEGA|PATTERN_(?:DROP|EXPLODE|ANGLE(?:_CONE(?:_EMPTY)?)?)))|VEHICLE_(?:REFERENCE_FRAME|TYPE_(?:NONE|SLED|CAR|BOAT|AIRPLANE|BALLOON)|(?:LINEAR|ANGULAR)_(?:FRICTION_TIMESCALE|MOTOR_DIRECTION)|LINEAR_MOTOR_OFFSET|HOVER_(?:HEIGHT|EFFICIENCY|TIMESCALE)|BUOYANCY|(?:LINEAR|ANGULAR)_(?:DEFLECTION_(?:EFFICIENCY|TIMESCALE)|MOTOR_(?:DECAY_)?TIMESCALE)|VERTICAL_ATTRACTION_(?:EFFICIENCY|TIMESCALE)|BANKING_(?:EFFICIENCY|MIX|TIMESCALE)|FLAG_(?:NO_DEFLECTION_UP|LIMIT_(?:ROLL_ONLY|MOTOR_UP)|HOVER_(?:(?:WATER|TERRAIN|UP)_ONLY|GLOBAL_HEIGHT)|MOUSELOOK_(?:STEER|BANK)|CAMERA_DECOUPLED))|PRIM_(?:TYPE(?:_(?:BOX|CYLINDER|PRISM|SPHERE|TORUS|TUBE|RING|SCULPT))?|HOLE_(?:DEFAULT|CIRCLE|SQUARE|TRIANGLE)|MATERIAL(?:_(?:STONE|METAL|GLASS|WOOD|FLESH|PLASTIC|RUBBER))?|SHINY_(?:NONE|LOW|MEDIUM|HIGH)|BUMP_(?:NONE|BRIGHT|DARK|WOOD|BARK|BRICKS|CHECKER|CONCRETE|TILE|STONE|DISKS|GRAVEL|BLOBS|SIDING|LARGETILE|STUCCO|SUCTION|WEAVE)|TEXGEN_(?:DEFAULT|PLANAR)|SCULPT_(?:TYPE_(?:SPHERE|TORUS|PLANE|CYLINDER|MASK)|FLAG_(?:MIRROR|INVERT))|PHYSICS(?:_(?:SHAPE_(?:CONVEX|NONE|PRIM|TYPE)))?|(?:POS|ROT)_LOCAL|SLICE|TEXT|FLEXIBLE|POINT_LIGHT|TEMP_ON_REZ|PHANTOM|POSITION|SIZE|ROTATION|TEXTURE|NAME|OMEGA|DESC|LINK_TARGET|COLOR|BUMP_SHINY|FULLBRIGHT|TEXGEN|GLOW|MEDIA_(?:ALT_IMAGE_ENABLE|CONTROLS|(?:CURRENT|HOME)_URL|AUTO_(?:LOOP|PLAY|SCALE|ZOOM)|FIRST_CLICK_INTERACT|(?:WIDTH|HEIGHT)_PIXELS|WHITELIST(?:_ENABLE)?|PERMS_(?:INTERACT|CONTROL)|PARAM_MAX|CONTROLS_(?:STANDARD|MINI)|PERM_(?:NONE|OWNER|GROUP|ANYONE)|MAX_(?:URL_LENGTH|WHITELIST_(?:SIZE|COUNT)|(?:WIDTH|HEIGHT)_PIXELS)))|MASK_(?:BASE|OWNER|GROUP|EVERYONE|NEXT)|PERM_(?:TRANSFER|MODIFY|COPY|MOVE|ALL)|PARCEL_(?:MEDIA_COMMAND_(?:STOP|PAUSE|PLAY|LOOP|TEXTURE|URL|TIME|AGENT|UNLOAD|AUTO_ALIGN|TYPE|SIZE|DESC|LOOP_SET)|FLAG_(?:ALLOW_(?:FLY|(?:GROUP_)?SCRIPTS|LANDMARK|TERRAFORM|DAMAGE|CREATE_(?:GROUP_)?OBJECTS)|USE_(?:ACCESS_(?:GROUP|LIST)|BAN_LIST|LAND_PASS_LIST)|LOCAL_SOUND_ONLY|RESTRICT_PUSHOBJECT|ALLOW_(?:GROUP|ALL)_OBJECT_ENTRY)|COUNT_(?:TOTAL|OWNER|GROUP|OTHER|SELECTED|TEMP)|DETAILS_(?:NAME|DESC|OWNER|GROUP|AREA|ID|SEE_AVATARS))|LIST_STAT_(?:MAX|MIN|MEAN|MEDIAN|STD_DEV|SUM(?:_SQUARES)?|NUM_COUNT|GEOMETRIC_MEAN|RANGE)|PAY_(?:HIDE|DEFAULT)|REGION_FLAG_(?:ALLOW_DAMAGE|FIXED_SUN|BLOCK_TERRAFORM|SANDBOX|DISABLE_(?:COLLISIONS|PHYSICS)|BLOCK_FLY|ALLOW_DIRECT_TELEPORT|RESTRICT_PUSHOBJECT)|HTTP_(?:METHOD|MIMETYPE|BODY_(?:MAXLENGTH|TRUNCATED)|CUSTOM_HEADER|PRAGMA_NO_CACHE|VERBOSE_THROTTLE|VERIFY_CERT)|STRING_(?:TRIM(?:_(?:HEAD|TAIL))?)|CLICK_ACTION_(?:NONE|TOUCH|SIT|BUY|PAY|OPEN(?:_MEDIA)?|PLAY|ZOOM)|TOUCH_INVALID_FACE|PROFILE_(?:NONE|SCRIPT_MEMORY)|RC_(?:DATA_FLAGS|DETECT_PHANTOM|GET_(?:LINK_NUM|NORMAL|ROOT_KEY)|MAX_HITS|REJECT_(?:TYPES|AGENTS|(?:NON)?PHYSICAL|LAND))|RCERR_(?:CAST_TIME_EXCEEDED|SIM_PERF_LOW|UNKNOWN)|ESTATE_ACCESS_(?:ALLOWED_(?:AGENT|GROUP)_(?:ADD|REMOVE)|BANNED_AGENT_(?:ADD|REMOVE))|DENSITY|FRICTION|RESTITUTION|GRAVITY_MULTIPLIER|KFM_(?:COMMAND|CMD_(?:PLAY|STOP|PAUSE|SET_MODE)|MODE|FORWARD|LOOP|PING_PONG|REVERSE|DATA|ROTATION|TRANSLATION)|ERR_(?:GENERIC|PARCEL_PERMISSIONS|MALFORMED_PARAMS|RUNTIME_PERMISSIONS|THROTTLED)|CHARACTER_(?:CMD_(?:(?:SMOOTH_)?STOP|JUMP)|DESIRED_(?:TURN_)?SPEED|RADIUS|STAY_WITHIN_PARCEL|LENGTH|ORIENTATION|ACCOUNT_FOR_SKIPPED_FRAMES|AVOIDANCE_MODE|TYPE(?:_(?:[A-D]|NONE))?|MAX_(?:DECEL|TURN_RADIUS|(?:ACCEL|SPEED)))|PURSUIT_(?:OFFSET|FUZZ_FACTOR|GOAL_TOLERANCE|INTERCEPT)|REQUIRE_LINE_OF_SIGHT|FORCE_DIRECT_PATH|VERTICAL|HORIZONTAL|AVOID_(?:CHARACTERS|DYNAMIC_OBSTACLES|NONE)|PU_(?:EVADE_(?:HIDDEN|SPOTTED)|FAILURE_(?:DYNAMIC_PATHFINDING_DISABLED|INVALID_(?:GOAL|START)|NO_(?:NAVMESH|VALID_DESTINATION)|OTHER|TARGET_GONE|(?:PARCEL_)?UNREACHABLE)|(?:GOAL|SLOWDOWN_DISTANCE)_REACHED)|TRAVERSAL_TYPE(?:_(?:FAST|NONE|SLOW))?|CONTENT_TYPE_(?:ATOM|FORM|HTML|JSON|LLSD|RSS|TEXT|XHTML|XML)|GCNP_(?:RADIUS|STATIC)|(?:PATROL|WANDER)_PAUSE_AT_WAYPOINTS|OPT_(?:AVATAR|CHARACTER|EXCLUSION_VOLUME|LEGACY_LINKSET|MATERIAL_VOLUME|OTHER|STATIC_OBSTACLE|WALKABLE)|SIM_STAT_PCT_CHARS_STEPPED)\\b'$/;"	v	class:LSLLexer
lsl_constants_integer_boolean	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    lsl_constants_integer_boolean = r'\\b(?:FALSE|TRUE)\\b'$/;"	v	class:LSLLexer
lsl_constants_integer_boolean	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    lsl_constants_integer_boolean = r'\\b(?:FALSE|TRUE)\\b'$/;"	v	class:LSLLexer
lsl_constants_rotation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    lsl_constants_rotation = r'\\b(?:ZERO_ROTATION)\\b'$/;"	v	class:LSLLexer
lsl_constants_rotation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    lsl_constants_rotation = r'\\b(?:ZERO_ROTATION)\\b'$/;"	v	class:LSLLexer
lsl_constants_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    lsl_constants_string = r'\\b(?:EOF|JSON_(?:ARRAY|DELETE|FALSE|INVALID|NULL|NUMBER|OBJECT|STRING|TRUE)|NULL_KEY|TEXTURE_(?:BLANK|DEFAULT|MEDIA|PLYWOOD|TRANSPARENT)|URL_REQUEST_(?:GRANTED|DENIED))\\b'$/;"	v	class:LSLLexer
lsl_constants_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    lsl_constants_string = r'\\b(?:EOF|JSON_(?:ARRAY|DELETE|FALSE|INVALID|NULL|NUMBER|OBJECT|STRING|TRUE)|NULL_KEY|TEXTURE_(?:BLANK|DEFAULT|MEDIA|PLYWOOD|TRANSPARENT)|URL_REQUEST_(?:GRANTED|DENIED))\\b'$/;"	v	class:LSLLexer
lsl_constants_vector	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    lsl_constants_vector = r'\\b(?:TOUCH_INVALID_(?:TEXCOORD|VECTOR)|ZERO_VECTOR)\\b'$/;"	v	class:LSLLexer
lsl_constants_vector	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    lsl_constants_vector = r'\\b(?:TOUCH_INVALID_(?:TEXCOORD|VECTOR)|ZERO_VECTOR)\\b'$/;"	v	class:LSLLexer
lsl_events	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    lsl_events = r'\\b(?:state_(?:entry|exit)|touch(?:_(?:start|end))?|(?:land_)?collision(?:_(?:start|end))?|timer|listen|(?:no_)?sensor|control|(?:not_)?at_(?:rot_)?target|money|email|run_time_permissions|changed|attach|dataserver|moving_(?:start|end)|link_message|(?:on|object)_rez|remote_data|http_re(?:sponse|quest)|path_update|transaction_result)\\b'$/;"	v	class:LSLLexer
lsl_events	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    lsl_events = r'\\b(?:state_(?:entry|exit)|touch(?:_(?:start|end))?|(?:land_)?collision(?:_(?:start|end))?|timer|listen|(?:no_)?sensor|control|(?:not_)?at_(?:rot_)?target|money|email|run_time_permissions|changed|attach|dataserver|moving_(?:start|end)|link_message|(?:on|object)_rez|remote_data|http_re(?:sponse|quest)|path_update|transaction_result)\\b'$/;"	v	class:LSLLexer
lsl_functions_builtin	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    lsl_functions_builtin = r'\\b(?:ll(?:ReturnObjectsBy(?:ID|Owner)|Json(?:2List|[GS]etValue|ValueType)|Sin|Cos|Tan|Atan2|Sqrt|Pow|Abs|Fabs|Frand|Floor|Ceil|Round|Vec(?:Mag|Norm|Dist)|Rot(?:Between|2(?:Euler|Fwd|Left|Up))|(?:Euler|Axes)2Rot|Whisper|(?:Region|Owner)?Say|Shout|Listen(?:Control|Remove)?|Sensor(?:Repeat|Remove)?|Detected(?:Name|Key|Owner|Type|Pos|Vel|Grab|Rot|Group|LinkNumber)|Die|Ground|Wind|(?:[GS]et)(?:AnimationOverride|MemoryLimit|PrimMediaParams|ParcelMusicURL|Object(?:Desc|Name)|PhysicsMaterial|Status|Scale|Color|Alpha|Texture|Pos|Rot|Force|Torque)|ResetAnimationOverride|(?:Scale|Offset|Rotate)Texture|(?:Rot)?Target(?:Remove)?|(?:Stop)?MoveToTarget|Apply(?:Rotational)?Impulse|Set(?:KeyframedMotion|ContentType|RegionPos|(?:Angular)?Velocity|Buoyancy|HoverHeight|ForceAndTorque|TimerEvent|ScriptState|Damage|TextureAnim|Sound(?:Queueing|Radius)|Vehicle(?:Type|(?:Float|Vector|Rotation)Param)|(?:Touch|Sit)?Text|Camera(?:Eye|At)Offset|PrimitiveParams|ClickAction|Link(?:Alpha|Color|PrimitiveParams(?:Fast)?|Texture(?:Anim)?|Camera|Media)|RemoteScriptAccessPin|PayPrice|LocalRot)|ScaleByFactor|Get(?:(?:Max|Min)ScaleFactor|ClosestNavPoint|StaticPath|SimStats|Env|PrimitiveParams|Link(?:PrimitiveParams|Number(?:OfSides)?|Key|Name|Media)|HTTPHeader|FreeURLs|Object(?:Details|PermMask|PrimCount)|Parcel(?:MaxPrims|Details|Prim(?:Count|Owners))|Attached|(?:SPMax|Free|Used)Memory|Region(?:Name|TimeDilation|FPS|Corner|AgentCount)|Root(?:Position|Rotation)|UnixTime|(?:Parcel|Region)Flags|(?:Wall|GMT)clock|SimulatorHostname|BoundingBox|GeometricCenter|Creator|NumberOf(?:Prims|NotecardLines|Sides)|Animation(?:List)?|(?:Camera|Local)(?:Pos|Rot)|Vel|Accel|Omega|Time(?:stamp|OfDay)|(?:Object|CenterOf)?Mass|MassMKS|Energy|Owner|(?:Owner)?Key|SunDirection|Texture(?:Offset|Scale|Rot)|Inventory(?:Number|Name|Key|Type|Creator|PermMask)|Permissions(?:Key)?|StartParameter|List(?:Length|EntryType)|Date|Agent(?:Size|Info|Language|List)|LandOwnerAt|NotecardLine|Script(?:Name|State))|(?:Get|Reset|GetAndReset)Time|PlaySound(?:Slave)?|LoopSound(?:Master|Slave)?|(?:Trigger|Stop|Preload)Sound|(?:(?:Get|Delete)Sub|Insert)String|To(?:Upper|Lower)|Give(?:InventoryList|Money)|RezObject|(?:Stop)?LookAt|Sleep|CollisionFilter|(?:Take|Release)Controls|DetachFromAvatar|AttachToAvatar(?:Temp)?|InstantMessage|(?:GetNext)?Email|StopHover|MinEventDelay|RotLookAt|String(?:Length|Trim)|(?:Start|Stop)Animation|TargetOmega|RequestPermissions|(?:Create|Break)Link|BreakAllLinks|(?:Give|Remove)Inventory|Water|PassTouches|Request(?:Agent|Inventory)Data|TeleportAgent(?:Home|GlobalCoords)?|ModifyLand|CollisionSound|ResetScript|MessageLinked|PushObject|PassCollisions|AxisAngle2Rot|Rot2(?:Axis|Angle)|A(?:cos|sin)|AngleBetween|AllowInventoryDrop|SubStringIndex|List2(?:CSV|Integer|Json|Float|String|Key|Vector|Rot|List(?:Strided)?)|DeleteSubList|List(?:Statistics|Sort|Randomize|(?:Insert|Find|Replace)List)|EdgeOfWorld|AdjustSoundVolume|Key2Name|TriggerSoundLimited|EjectFromLand|(?:CSV|ParseString)2List|OverMyLand|SameGroup|UnSit|Ground(?:Slope|Normal|Contour)|GroundRepel|(?:Set|Remove)VehicleFlags|(?:AvatarOn)?(?:Link)?SitTarget|Script(?:Danger|Profiler)|Dialog|VolumeDetect|ResetOtherScript|RemoteLoadScriptPin|(?:Open|Close)RemoteDataChannel|SendRemoteData|RemoteDataReply|(?:Integer|String)ToBase64|XorBase64|Log(?:10)?|Base64To(?:String|Integer)|ParseStringKeepNulls|RezAtRoot|RequestSimulatorData|ForceMouselook|(?:Load|Release|(?:E|Une)scape)URL|ParcelMedia(?:CommandList|Query)|ModPow|MapDestination|(?:RemoveFrom|AddTo|Reset)Land(?:Pass|Ban)List|(?:Set|Clear)CameraParams|HTTP(?:Request|Response)|TextBox|DetectedTouch(?:UV|Face|Pos|(?:N|Bin)ormal|ST)|(?:MD5|SHA1|DumpList2)String|Request(?:Secure)?URL|Clear(?:Prim|Link)Media|(?:Link)?ParticleSystem|(?:Get|Request)(?:Username|DisplayName)|RegionSayTo|CastRay|GenerateKey|TransferLindenDollars|ManageEstateAccess|(?:Create|Delete)Character|ExecCharacterCmd|Evade|FleeFrom|NavigateTo|PatrolPoints|Pursue|UpdateCharacter|WanderWithin))\\b'$/;"	v	class:LSLLexer
lsl_functions_builtin	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    lsl_functions_builtin = r'\\b(?:ll(?:ReturnObjectsBy(?:ID|Owner)|Json(?:2List|[GS]etValue|ValueType)|Sin|Cos|Tan|Atan2|Sqrt|Pow|Abs|Fabs|Frand|Floor|Ceil|Round|Vec(?:Mag|Norm|Dist)|Rot(?:Between|2(?:Euler|Fwd|Left|Up))|(?:Euler|Axes)2Rot|Whisper|(?:Region|Owner)?Say|Shout|Listen(?:Control|Remove)?|Sensor(?:Repeat|Remove)?|Detected(?:Name|Key|Owner|Type|Pos|Vel|Grab|Rot|Group|LinkNumber)|Die|Ground|Wind|(?:[GS]et)(?:AnimationOverride|MemoryLimit|PrimMediaParams|ParcelMusicURL|Object(?:Desc|Name)|PhysicsMaterial|Status|Scale|Color|Alpha|Texture|Pos|Rot|Force|Torque)|ResetAnimationOverride|(?:Scale|Offset|Rotate)Texture|(?:Rot)?Target(?:Remove)?|(?:Stop)?MoveToTarget|Apply(?:Rotational)?Impulse|Set(?:KeyframedMotion|ContentType|RegionPos|(?:Angular)?Velocity|Buoyancy|HoverHeight|ForceAndTorque|TimerEvent|ScriptState|Damage|TextureAnim|Sound(?:Queueing|Radius)|Vehicle(?:Type|(?:Float|Vector|Rotation)Param)|(?:Touch|Sit)?Text|Camera(?:Eye|At)Offset|PrimitiveParams|ClickAction|Link(?:Alpha|Color|PrimitiveParams(?:Fast)?|Texture(?:Anim)?|Camera|Media)|RemoteScriptAccessPin|PayPrice|LocalRot)|ScaleByFactor|Get(?:(?:Max|Min)ScaleFactor|ClosestNavPoint|StaticPath|SimStats|Env|PrimitiveParams|Link(?:PrimitiveParams|Number(?:OfSides)?|Key|Name|Media)|HTTPHeader|FreeURLs|Object(?:Details|PermMask|PrimCount)|Parcel(?:MaxPrims|Details|Prim(?:Count|Owners))|Attached|(?:SPMax|Free|Used)Memory|Region(?:Name|TimeDilation|FPS|Corner|AgentCount)|Root(?:Position|Rotation)|UnixTime|(?:Parcel|Region)Flags|(?:Wall|GMT)clock|SimulatorHostname|BoundingBox|GeometricCenter|Creator|NumberOf(?:Prims|NotecardLines|Sides)|Animation(?:List)?|(?:Camera|Local)(?:Pos|Rot)|Vel|Accel|Omega|Time(?:stamp|OfDay)|(?:Object|CenterOf)?Mass|MassMKS|Energy|Owner|(?:Owner)?Key|SunDirection|Texture(?:Offset|Scale|Rot)|Inventory(?:Number|Name|Key|Type|Creator|PermMask)|Permissions(?:Key)?|StartParameter|List(?:Length|EntryType)|Date|Agent(?:Size|Info|Language|List)|LandOwnerAt|NotecardLine|Script(?:Name|State))|(?:Get|Reset|GetAndReset)Time|PlaySound(?:Slave)?|LoopSound(?:Master|Slave)?|(?:Trigger|Stop|Preload)Sound|(?:(?:Get|Delete)Sub|Insert)String|To(?:Upper|Lower)|Give(?:InventoryList|Money)|RezObject|(?:Stop)?LookAt|Sleep|CollisionFilter|(?:Take|Release)Controls|DetachFromAvatar|AttachToAvatar(?:Temp)?|InstantMessage|(?:GetNext)?Email|StopHover|MinEventDelay|RotLookAt|String(?:Length|Trim)|(?:Start|Stop)Animation|TargetOmega|RequestPermissions|(?:Create|Break)Link|BreakAllLinks|(?:Give|Remove)Inventory|Water|PassTouches|Request(?:Agent|Inventory)Data|TeleportAgent(?:Home|GlobalCoords)?|ModifyLand|CollisionSound|ResetScript|MessageLinked|PushObject|PassCollisions|AxisAngle2Rot|Rot2(?:Axis|Angle)|A(?:cos|sin)|AngleBetween|AllowInventoryDrop|SubStringIndex|List2(?:CSV|Integer|Json|Float|String|Key|Vector|Rot|List(?:Strided)?)|DeleteSubList|List(?:Statistics|Sort|Randomize|(?:Insert|Find|Replace)List)|EdgeOfWorld|AdjustSoundVolume|Key2Name|TriggerSoundLimited|EjectFromLand|(?:CSV|ParseString)2List|OverMyLand|SameGroup|UnSit|Ground(?:Slope|Normal|Contour)|GroundRepel|(?:Set|Remove)VehicleFlags|(?:AvatarOn)?(?:Link)?SitTarget|Script(?:Danger|Profiler)|Dialog|VolumeDetect|ResetOtherScript|RemoteLoadScriptPin|(?:Open|Close)RemoteDataChannel|SendRemoteData|RemoteDataReply|(?:Integer|String)ToBase64|XorBase64|Log(?:10)?|Base64To(?:String|Integer)|ParseStringKeepNulls|RezAtRoot|RequestSimulatorData|ForceMouselook|(?:Load|Release|(?:E|Une)scape)URL|ParcelMedia(?:CommandList|Query)|ModPow|MapDestination|(?:RemoveFrom|AddTo|Reset)Land(?:Pass|Ban)List|(?:Set|Clear)CameraParams|HTTP(?:Request|Response)|TextBox|DetectedTouch(?:UV|Face|Pos|(?:N|Bin)ormal|ST)|(?:MD5|SHA1|DumpList2)String|Request(?:Secure)?URL|Clear(?:Prim|Link)Media|(?:Link)?ParticleSystem|(?:Get|Request)(?:Username|DisplayName)|RegionSayTo|CastRay|GenerateKey|TransferLindenDollars|ManageEstateAccess|(?:Create|Delete)Character|ExecCharacterCmd|Evade|FleeFrom|NavigateTo|PatrolPoints|Pursue|UpdateCharacter|WanderWithin))\\b'$/;"	v	class:LSLLexer
lsl_invalid_broken	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    lsl_invalid_broken = r'\\b(?:LAND_(?:LARGE|MEDIUM|SMALL)_BRUSH)\\b'$/;"	v	class:LSLLexer
lsl_invalid_broken	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    lsl_invalid_broken = r'\\b(?:LAND_(?:LARGE|MEDIUM|SMALL)_BRUSH)\\b'$/;"	v	class:LSLLexer
lsl_invalid_deprecated	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    lsl_invalid_deprecated = r'\\b(?:ATTACH_[LR]PEC|DATA_RATING|OBJECT_ATTACHMENT_(?:GEOMETRY_BYTES|SURFACE_AREA)|PRIM_(?:CAST_SHADOWS|MATERIAL_LIGHT|TYPE_LEGACY)|PSYS_SRC_(?:INNER|OUTER)ANGLE|VEHICLE_FLAG_NO_FLY_UP|ll(?:Cloud|Make(?:Explosion|Fountain|Smoke|Fire)|RemoteDataSetRegion|Sound(?:Preload)?|XorBase64Strings(?:Correct)?))\\b'$/;"	v	class:LSLLexer
lsl_invalid_deprecated	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    lsl_invalid_deprecated = r'\\b(?:ATTACH_[LR]PEC|DATA_RATING|OBJECT_ATTACHMENT_(?:GEOMETRY_BYTES|SURFACE_AREA)|PRIM_(?:CAST_SHADOWS|MATERIAL_LIGHT|TYPE_LEGACY)|PSYS_SRC_(?:INNER|OUTER)ANGLE|VEHICLE_FLAG_NO_FLY_UP|ll(?:Cloud|Make(?:Explosion|Fountain|Smoke|Fire)|RemoteDataSetRegion|Sound(?:Preload)?|XorBase64Strings(?:Correct)?))\\b'$/;"	v	class:LSLLexer
lsl_invalid_illegal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    lsl_invalid_illegal = r'\\b(?:event)\\b'$/;"	v	class:LSLLexer
lsl_invalid_illegal	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    lsl_invalid_illegal = r'\\b(?:event)\\b'$/;"	v	class:LSLLexer
lsl_invalid_unimplemented	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    lsl_invalid_unimplemented = r'\\b(?:CHARACTER_(?:MAX_ANGULAR_(?:ACCEL|SPEED)|TURN_SPEED_MULTIPLIER)|PERMISSION_(?:CHANGE_(?:JOINTS|PERMISSIONS)|RELEASE_OWNERSHIP|REMAP_CONTROLS)|PRIM_PHYSICS_MATERIAL|PSYS_SRC_OBJ_REL_MASK|ll(?:CollisionSprite|(?:Stop)?PointAt|(?:(?:Refresh|Set)Prim)URL|(?:Take|Release)Camera|RemoteLoadScript))\\b'$/;"	v	class:LSLLexer
lsl_invalid_unimplemented	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    lsl_invalid_unimplemented = r'\\b(?:CHARACTER_(?:MAX_ANGULAR_(?:ACCEL|SPEED)|TURN_SPEED_MULTIPLIER)|PERMISSION_(?:CHANGE_(?:JOINTS|PERMISSIONS)|RELEASE_OWNERSHIP|REMAP_CONTROLS)|PRIM_PHYSICS_MATERIAL|PSYS_SRC_OBJ_REL_MASK|ll(?:CollisionSprite|(?:Stop)?PointAt|(?:(?:Refresh|Set)Prim)URL|(?:Take|Release)Camera|RemoteLoadScript))\\b'$/;"	v	class:LSLLexer
lsl_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    lsl_keywords = r'\\b(?:do|else|for|if|jump|return|while)\\b'$/;"	v	class:LSLLexer
lsl_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    lsl_keywords = r'\\b(?:do|else|for|if|jump|return|while)\\b'$/;"	v	class:LSLLexer
lsl_reserved_godmode	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    lsl_reserved_godmode = r'\\b(?:ll(?:GodLikeRezObject|Set(?:Inventory|Object)PermMask))\\b'$/;"	v	class:LSLLexer
lsl_reserved_godmode	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    lsl_reserved_godmode = r'\\b(?:ll(?:GodLikeRezObject|Set(?:Inventory|Object)PermMask))\\b'$/;"	v	class:LSLLexer
lsl_reserved_log	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    lsl_reserved_log = r'\\b(?:print)\\b'$/;"	v	class:LSLLexer
lsl_reserved_log	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    lsl_reserved_log = r'\\b(?:print)\\b'$/;"	v	class:LSLLexer
lsl_states	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    lsl_states = r'\\b(?:(?:state)\\s+\\w+|default)\\b'$/;"	v	class:LSLLexer
lsl_states	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    lsl_states = r'\\b(?:(?:state)\\s+\\w+|default)\\b'$/;"	v	class:LSLLexer
lsl_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    lsl_types = r'\\b(?:float|integer|key|list|quaternion|rotation|string|vector)\\b'$/;"	v	class:LSLLexer
lsl_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    lsl_types = r'\\b(?:float|integer|key|list|quaternion|rotation|string|vector)\\b'$/;"	v	class:LSLLexer
macCyrillic_CharToOrderMap	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langcyrillicmodel.py	/^macCyrillic_CharToOrderMap = ($/;"	v
macro_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    macro_re = r'(?:'+variable_re+r'|'+atom_re+r')'$/;"	v	class:ErlangLexer
macro_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    macro_re = r'(?:'+variable_re+r'|'+atom_re+r')'$/;"	v	class:ErlangLexer
macros_kw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_scilab_builtins.py	/^macros_kw = ($/;"	v
macros_kw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_scilab_builtins.py	/^macros_kw = ($/;"	v
main	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([File]) ->$/;"	f
main	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main(_) ->$/;"	f
main	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/__init__.py	/^    from pygments.cmdline import main$/;"	i
main	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^def main(args=sys.argv):$/;"	f
main	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/__init__.py	/^    from pygments.cmdline import main$/;"	i
main	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^def main(args=sys.argv):$/;"	f
main	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardetect.py	/^def main(argv=None):$/;"	f
main	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^def main():$/;"	f
main	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tool.py	/^def main():$/;"	f
main_syntax	plugged/css.vim/syntax/css.vim	/^  let main_syntax = 'css'$/;"	v
main_syntax	plugged/scss-syntax.vim/syntax/scss.vim	/^  let main_syntax = 'scss'$/;"	v
main_syntax	plugged/vim-go/syntax/gohtmltmpl.vim	/^    let main_syntax = 'html'$/;"	v
main_syntax	plugged/vim-haml/syntax/haml.vim	/^  let main_syntax = 'haml'$/;"	v
main_syntax	plugged/vim-jade/syntax/jade.vim	/^  let main_syntax = 'jade'$/;"	v
main_syntax	plugged/vim-javascript/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	plugged/vim-ruby/syntax/eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
mainloop	plugged/Nvim-R/R/synctex_evince_backward.py	/^import dbus.mainloop.glib, sys, os, signal$/;"	i
mainloop	plugged/Nvim-R/R/synctex_evince_forward.py	/^import dbus.mainloop.glib, sys, os$/;"	i
make_abbr	plugged/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:make_abbr(bufnr, flags) "{{{$/;"	f
make_aliases	plugged/unite.vim/autoload/unite/sources/alias.vim	/^function! s:make_aliases()$/;"	f
make_analysator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    make_analysator, text_type, add_metaclass, iteritems, Future, guess_decode$/;"	i
make_analysator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^def make_analysator(f):$/;"	f
make_analysator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    make_analysator, text_type, add_metaclass, iteritems, Future, guess_decode$/;"	i
make_analysator	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^def make_analysator(f):$/;"	f
make_cache_commands	plugged/unite.vim/autoload/unite/sources/command.vim	/^function! s:make_cache_commands() "{{{$/;"	f
make_charset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/regexopt.py	/^def make_charset(letters):$/;"	f
make_charset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/regexopt.py	/^def make_charset(letters):$/;"	f
make_default_description	plugged/unite.vim/autoload/unite/sources/alias.vim	/^function! s:make_default_description(source_name, args)$/;"	f
make_encoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^        from ._speedups import make_encoder$/;"	i
make_header_args	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! s:make_header_args(headdata, option, quote) abort$/;"	f
make_headers	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^from .util.request import make_headers$/;"	i
make_headers	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/__init__.py	/^from .request import make_headers$/;"	i
make_headers	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/request.py	/^def make_headers(keep_alive=None, accept_encoding=None, user_agent=None,$/;"	f
make_multipart	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/fields.py	/^    def make_multipart(self, content_disposition=None, content_type=None,$/;"	m	class:RequestField
make_scanner	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^from .scanner import make_scanner, JSONDecodeError$/;"	i
make_scanner	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/scanner.py	/^        from simplejson._speedups import make_scanner$/;"	i
make_scanner	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/scanner.py	/^make_scanner = c_make_scanner or py_make_scanner$/;"	v
make_word	plugged/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:make_word(bufnr) "{{{$/;"	f
makefile	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^    def makefile(self, mode, bufsize=-1):$/;"	m	class:WrappedSocket
map_accum	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
mapleader	configs/application.vim	/^let mapleader=" "                   " Change leader key to space$/;"	v
mapping	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_scilab_builtins.py	/^    mapping = {'variables': 'builtin'}$/;"	v
mapping	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_scilab_builtins.py	/^    mapping = {'variables': 'builtin'}$/;"	v
mapping_kw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    mapping_kw = ($/;"	v	class:OctaveLexer
mapping_kw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    mapping_kw = ($/;"	v	class:OctaveLexer
markers	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *markers;$/;"	m	struct:_PyEncoderObject	file:
match	plugged/syntastic/syntax_checkers/python/codec.py	/^        match = re.match(r"#\\s*coding\\s*:\\s*(?P<coding>\\w+)", text[0])$/;"	v
match_func	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^        def match_func(text, pos, endpos=sys.maxsize):$/;"	f	function:ProfilingRegexLexerMeta._process_regex
match_func	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^        def match_func(text, pos, endpos=sys.maxsize):$/;"	f	function:ProfilingRegexLexerMeta._process_regex
match_hostname	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^from .packages.ssl_match_hostname import match_hostname$/;"	i
match_hostname	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ssl_match_hostname/__init__.py	/^        from ._implementation import CertificateError, match_hostname$/;"	i
match_hostname	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ssl_match_hostname/__init__.py	/^        from backports.ssl_match_hostname import CertificateError, match_hostname$/;"	i
match_hostname	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ssl_match_hostname/__init__.py	/^    from ssl import CertificateError, match_hostname$/;"	i
match_hostname	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ssl_match_hostname/_implementation.py	/^def match_hostname(cert, hostname):$/;"	f
matcher.filter	plugged/unite.vim/autoload/unite/filters/matcher_context.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	plugged/unite.vim/autoload/unite/filters/matcher_default.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	plugged/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	plugged/unite.vim/autoload/unite/filters/matcher_glob.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	plugged/unite.vim/autoload/unite/filters/matcher_hide_current_file.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	plugged/unite.vim/autoload/unite/filters/matcher_hide_hidden_files.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	plugged/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	plugged/unite.vim/autoload/unite/filters/matcher_project_files.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	plugged/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	plugged/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.pattern	plugged/unite.vim/autoload/unite/filters/matcher_context.vim	/^function! s:matcher.pattern(input) "{{{$/;"	f
matcher.pattern	plugged/unite.vim/autoload/unite/filters/matcher_default.vim	/^function! s:matcher.pattern(input) "{{{$/;"	f
matcher.pattern	plugged/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^function! s:matcher.pattern(input) "{{{$/;"	f
matcher.pattern	plugged/unite.vim/autoload/unite/filters/matcher_glob.vim	/^function! s:matcher.pattern(input) "{{{$/;"	f
matcher.pattern	plugged/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! s:matcher.pattern(input) "{{{$/;"	f
matcher.pattern	plugged/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^function! s:matcher.pattern(input) "{{{$/;"	f
math	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_float.py	/^import math$/;"	i
max	plugged/vimproc.vim/tools/leak_check.vim	/^let max = 2048$/;"	v
max_by	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
max_long_size	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *max_long_size;$/;"	m	struct:_PyEncoderObject	file:
maybe_quote_bigint	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^maybe_quote_bigint(PyEncoderObject* s, PyObject *encoded, PyObject *obj)$/;"	f	file:
md5	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^from hashlib import md5, sha1, sha256$/;"	i
md5_utf8	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^            def md5_utf8(x):$/;"	f	function:HTTPDigestAuth.build_digest_header
memo	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *memo;$/;"	m	struct:_PyScannerObject	file:
memorized_datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^from pytz.tzinfo import memorized_datetime, memorized_timedelta$/;"	i
memorized_datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^def memorized_datetime(seconds):$/;"	f
memorized_datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^from pytz.tzinfo import memorized_datetime, memorized_timedelta$/;"	i
memorized_datetime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^def memorized_datetime(seconds):$/;"	f
memorized_timedelta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^from pytz.tzinfo import memorized_datetime, memorized_timedelta$/;"	i
memorized_timedelta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^def memorized_timedelta(seconds):$/;"	f
memorized_timedelta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^from pytz.tzinfo import memorized_datetime, memorized_timedelta$/;"	i
memorized_timedelta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^def memorized_timedelta(seconds):$/;"	f
memorized_ttinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^from pytz.tzinfo import StaticTzInfo, DstTzInfo, memorized_ttinfo$/;"	i
memorized_ttinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^def memorized_ttinfo(*args):$/;"	f
memorized_ttinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^from pytz.tzinfo import StaticTzInfo, DstTzInfo, memorized_ttinfo$/;"	i
memorized_ttinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^def memorized_ttinfo(*args):$/;"	f
merge_cookies	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^def merge_cookies(cookiejar, cookies):$/;"	f
merge_environment_settings	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def merge_environment_settings(self, url, proxies, stream, verify, cert):$/;"	m	class:Session
merge_hooks	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^def merge_hooks(request_hooks, session_hooks, dict_class=OrderedDict):$/;"	f
merge_setting	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^def merge_setting(request_setting, session_setting, dict_class=OrderedDict):$/;"	f
message	plugged/calendar.vim/autoload/calendar/message/default.vim	/^  function! s:message() abort$/;"	f
message_prefix	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:message_prefix() abort$/;"	f
metacommands	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    metacommands = ('$DYNAMIC', '$INCLUDE', '$STATIC')$/;"	v	class:QBasicLexer
metacommands	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    metacommands = ('$DYNAMIC', '$INCLUDE', '$STATIC')$/;"	v	class:QBasicLexer
method	plugged/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^            def method; end$/;"	f	class:OuterClass.InnerClass
method	plugged/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^          def method; end$/;"	f	class:OuterClass
method	plugged/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^          def method; end$/;"	f	class:OuterClass.InnerClass
method	plugged/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^        def method; end$/;"	f	class:OuterClass
mimetimes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    mimetimes = ['text\/xml', 'application\/xml']$/;"	v	class:MxmlLexer
mimetimes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    mimetimes = ['text\/xml', 'application\/xml']$/;"	v	class:MxmlLexer
mimetype	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/foxpro.py	/^    mimetype = []$/;"	v	class:FoxProLexer
mimetype	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    mimetype = ['application\/x-debian-sourceslist']$/;"	v	class:SourcesListLexer
mimetype	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/foxpro.py	/^    mimetype = []$/;"	v	class:FoxProLexer
mimetype	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    mimetype = ['application\/x-debian-sourceslist']$/;"	v	class:SourcesListLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    mimetypes = []$/;"	v	class:Lexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    mimetypes = ['application\/x-actionscript', 'text\/x-actionscript',$/;"	v	class:ActionScriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    mimetypes = ['application\/x-actionscript3', 'text\/x-actionscript3',$/;"	v	class:ActionScript3Lexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    mimetypes = ['application\/mathematica',$/;"	v	class:MathematicaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^    mimetypes = ['text\/x-ambienttalk']$/;"	v	class:AmbientTalkLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-c-objdump']$/;"	v	class:CObjdumpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-cpp-objdump']$/;"	v	class:CppObjdumpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-d-objdump']$/;"	v	class:DObjdumpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-gas']$/;"	v	class:GasLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-llvm']$/;"	v	class:LlvmLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-nasm']$/;"	v	class:NasmLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-nasm-objdump']$/;"	v	class:NasmObjdumpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-objdump']$/;"	v	class:ObjdumpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^    mimetypes = ['text\/x-autohotkey']$/;"	v	class:AutohotkeyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^    mimetypes = ['text\/x-autoit']$/;"	v	class:AutoItLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    mimetypes = ['text\/basic']$/;"	v	class:QBasicLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    mimetypes = ['text\/x-bb']$/;"	v	class:BlitzBasicLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    mimetypes = ['text\/x-bmx']$/;"	v	class:BlitzMaxLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    mimetypes = ['text\/x-monkey']$/;"	v	class:MonkeyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    mimetypes = ['text\/x-abap']$/;"	v	class:ABAPLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    mimetypes = ['text\/x-cobol']$/;"	v	class:CobolLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    mimetypes = ['text\/x-gooddata-cl']$/;"	v	class:GoodDataCLLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    mimetypes = ['text\/x-gooddata-maql', 'application\/x-gooddata-maql']$/;"	v	class:MaqlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    mimetypes = ['text\/x-openedge', 'application\/x-openedge']$/;"	v	class:OpenEdgeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    mimetypes = []$/;"	v	class:CobolFreeformatLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    mimetypes = ['text\/x-c++hdr', 'text\/x-c++src']$/;"	v	class:CppLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    mimetypes = ['text\/x-chdr', 'text\/x-csrc']$/;"	v	class:CLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    mimetypes = ['text\/swig']$/;"	v	class:SwigLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-clay']$/;"	v	class:ClayLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-cuda']$/;"	v	class:CudaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-echdr', 'text\/x-ecsrc']$/;"	v	class:ECLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-mql']$/;"	v	class:MqlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-nescsrc']$/;"	v	class:NesCLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-pike']$/;"	v	class:PikeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-vala']$/;"	v	class:ValaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-apacheconf']$/;"	v	class:ApacheConfLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-dockerfile-config']$/;"	v	class:DockerLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-ini']$/;"	v	class:IniLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-java-properties']$/;"	v	class:PropertiesLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-kconfig']$/;"	v	class:KconfigLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-lighttpd-conf']$/;"	v	class:LighttpdConfLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-nginx-conf']$/;"	v	class:NginxConfLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-squidconf']$/;"	v	class:SquidConfLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-windows-registry']$/;"	v	class:RegeditLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    mimetypes = []$/;"	v	class:Cfengine3Lexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^    mimetypes = ['application\/x-pypylog']$/;"	v	class:PyPyLogLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^    mimetypes = []$/;"	v	class:VCTreeStatusLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    mimetypes = ['text\/css']$/;"	v	class:CssLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    mimetypes = ['text\/x-sass']$/;"	v	class:SassLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    mimetypes = ['text\/x-scss']$/;"	v	class:ScssLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    mimetypes = ['text\/x-crocsrc']$/;"	v	class:CrocLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    mimetypes = ['text\/x-dsrc']$/;"	v	class:DLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    mimetypes = ['text\/x-minidsrc']$/;"	v	class:MiniDLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dalvik.py	/^    mimetypes = ['text\/smali']$/;"	v	class:SmaliLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    mimetypes = ['application\/json']$/;"	v	class:JsonLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    mimetypes = ['application\/ld+json']$/;"	v	class:JsonLdLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    mimetypes = ['text\/x-yaml']$/;"	v	class:YamlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^    mimetypes = ['text\/x-diff', 'text\/x-patch']$/;"	v	class:DiffLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    mimetypes = ['text\/x-boo']$/;"	v	class:BooLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    mimetypes = ['text\/x-csharp']  # inferred$/;"	v	class:CSharpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    mimetypes = ['text\/x-fsharp']$/;"	v	class:FSharpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    mimetypes = ['text\/x-nemerle']  # inferred$/;"	v	class:NemerleLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    mimetypes = ['text\/x-vbnet', 'text\/x-vba']  # (?)$/;"	v	class:VbNetLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    mimetypes = []$/;"	v	class:CSharpAspxLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    mimetypes = []$/;"	v	class:GenericAspxLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    mimetypes = []$/;"	v	class:VbNetAspxLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    mimetypes = ['text\/rsl']$/;"	v	class:RslLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    mimetypes = ['text\/x-alloy']$/;"	v	class:AlloyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    mimetypes = ['text\/x-dylan']$/;"	v	class:DylanLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    mimetypes = ['text\/x-dylan-console']$/;"	v	class:DylanConsoleLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    mimetypes = ['text\/x-dylan-lid']$/;"	v	class:DylanLidLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^    mimetypes = ['application\/x-ecl']$/;"	v	class:ECLLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/eiffel.py	/^    mimetypes = ['text\/x-eiffel']$/;"	v	class:EiffelLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    mimetypes = ['text\/x-elixir']$/;"	v	class:ElixirLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    mimetypes = ['text\/x-elixir-shellsession']$/;"	v	class:ElixirConsoleLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    mimetypes = ['text\/x-erl-shellsession']$/;"	v	class:ErlangShellLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    mimetypes = ['text\/x-erlang']$/;"	v	class:ErlangLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    mimetypes = ['application\/x-befunge']$/;"	v	class:BefungeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    mimetypes = ['application\/x-brainfuck']$/;"	v	class:BrainfuckLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^    mimetypes = ['text\/x-factor']$/;"	v	class:FactorLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    mimetypes = ['application\/x-fantom']$/;"	v	class:FantomLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    mimetypes = ['text\/x-felix']$/;"	v	class:FelixLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^    mimetypes = ['text\/x-fortran']$/;"	v	class:FortranLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^    mimetypes = ['text\/x-gosrc']$/;"	v	class:GoLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    mimetypes = ['application\/postscript']$/;"	v	class:PostScriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    mimetypes = ['text\/x-asymptote']$/;"	v	class:AsymptoteLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    mimetypes = ['text\/x-glslsrc']$/;"	v	class:GLShaderLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    mimetypes = ['text\/x-gnuplot']$/;"	v	class:GnuplotLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    mimetypes = ['text\/x-povray']$/;"	v	class:PovrayLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-agda']$/;"	v	class:AgdaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-cryptol']$/;"	v	class:CryptolLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-haskell']$/;"	v	class:HaskellLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-idris']$/;"	v	class:IdrisLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-koka']$/;"	v	class:KokaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-literate-agda']$/;"	v	class:LiterateAgdaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-literate-cryptol']$/;"	v	class:LiterateCryptolLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-literate-haskell']$/;"	v	class:LiterateHaskellLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-literate-idris']$/;"	v	class:LiterateIdrisLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    mimetypes = ['text\/haxe', 'text\/x-haxe', 'text\/x-hx']$/;"	v	class:HaxeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    mimetypes = ['text\/x-systemverilog']$/;"	v	class:SystemVerilogLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    mimetypes = ['text\/x-verilog']$/;"	v	class:VerilogLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    mimetypes = ['text\/x-vhdl']$/;"	v	class:VhdlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    mimetypes = ['application\/xml-dtd']$/;"	v	class:DtdLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    mimetypes = ['application\/xsl+xml', 'application\/xslt+xml']$/;"	v	class:XsltLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    mimetypes = ['text\/html', 'application\/xhtml+xml']$/;"	v	class:HtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    mimetypes = ['text\/x-haml']$/;"	v	class:HamlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    mimetypes = ['text\/x-jade']$/;"	v	class:JadeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    mimetypes = ['text\/x-scaml']$/;"	v	class:ScamlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    mimetypes = ['text\/xml', 'application\/xml', 'image\/svg+xml',$/;"	v	class:XmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/idl.py	/^    mimetypes = ['text\/idl']$/;"	v	class:IDLLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^    mimetypes = ['text\/ipf']$/;"	v	class:IgorLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^    mimetypes = ['text\/limbo']$/;"	v	class:LimboLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    mimetypes = ['text\/x-nsis']$/;"	v	class:NSISLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    mimetypes = ['text\/x-rpm-spec']$/;"	v	class:RPMSpecLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/iolang.py	/^    mimetypes = ['text\/x-iosrc']$/;"	v	class:IoLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    mimetypes = ['application\/javascript', 'application\/x-javascript',$/;"	v	class:JavascriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    mimetypes = ['text\/coffeescript']$/;"	v	class:CoffeeScriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    mimetypes = ['text\/kal', 'application\/kal']$/;"	v	class:KalLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    mimetypes = ['text\/livescript']$/;"	v	class:LiveScriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    mimetypes = ['text\/x-dart']$/;"	v	class:DartLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    mimetypes = ['text\/x-lasso']$/;"	v	class:LassoLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    mimetypes = ['text\/x-mask']$/;"	v	class:MaskLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    mimetypes = ['text\/x-objective-j']$/;"	v	class:ObjectiveJLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    mimetypes = ['text\/x-typescript']$/;"	v	class:TypeScriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^    mimetypes = ['text\/x-julia', 'application\/x-julia']$/;"	v	class:JuliaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-aspectj']$/;"	v	class:AspectJLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-ceylon']$/;"	v	class:CeylonLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-clojure', 'application\/x-clojure']$/;"	v	class:ClojureLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-clojurescript', 'application\/x-clojurescript']$/;"	v	class:ClojureScriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-gosu']$/;"	v	class:GosuLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-gosu-template']$/;"	v	class:GosuTemplateLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-groovy']$/;"	v	class:GroovyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-iokesrc']$/;"	v	class:IokeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-java']$/;"	v	class:JavaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-kotlin']$/;"	v	class:KotlinLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-pig']$/;"	v	class:PigLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-scala']$/;"	v	class:ScalaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-xtend']$/;"	v	class:XtendLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    mimetypes = ['text\/x-common-lisp']$/;"	v	class:CommonLispLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    mimetypes = ['text\/x-hy', 'application\/x-hy']$/;"	v	class:HyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    mimetypes = ['text\/x-newlisp', 'application\/x-newlisp']$/;"	v	class:NewLispLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    mimetypes = ['text\/x-racket', 'application\/x-racket']$/;"	v	class:RacketLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    mimetypes = ['text\/x-scheme', 'application\/x-scheme']$/;"	v	class:SchemeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    mimetypes = ['text\/x-cmake']$/;"	v	class:CMakeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    mimetypes = ['text\/x-makefile']$/;"	v	class:MakefileLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    mimetypes = []$/;"	v	class:BaseMakefileLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    mimetypes = ["text\/x-rst", "text\/prs.fallenstein.rst"]$/;"	v	class:RstLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    mimetypes = ['application\/x-troff', 'text\/troff']$/;"	v	class:GroffLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    mimetypes = ['text\/x-bbcode']$/;"	v	class:BBCodeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    mimetypes = ['text\/x-tex', 'text\/x-latex']$/;"	v	class:TexLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    mimetypes = ['text\/x-trac-wiki']$/;"	v	class:MoinWikiLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    mimetypes = []$/;"	v	class:MozPreprocCssLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    mimetypes = []$/;"	v	class:MozPreprocHashLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    mimetypes = []$/;"	v	class:MozPreprocJavascriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    mimetypes = []$/;"	v	class:MozPreprocPercentLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    mimetypes = []$/;"	v	class:MozPreprocXulLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    mimetypes = ['text\/matlab']$/;"	v	class:MatlabLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    mimetypes = ['text\/octave']$/;"	v	class:OctaveLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    mimetypes = ['text\/scilab']$/;"	v	class:ScilabLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    mimetypes = ['text\/x-ocaml']$/;"	v	class:OcamlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    mimetypes = ['text\/x-opa']$/;"	v	class:OpaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    mimetypes = ['text\/x-standardml', 'application\/x-standardml']$/;"	v	class:SMLLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    mimetypes = ['text\/x-modelica']$/;"	v	class:ModelicaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    mimetypes = ['text\/x-nimrod']$/;"	v	class:NimrodLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^    mimetypes = ['text\/x-nix']$/;"	v	class:NixLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    mimetypes = ['text\/x-logos']$/;"	v	class:LogosLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    mimetypes = ['text\/x-objective-c']$/;"	v	class:ObjectiveCLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    mimetypes = ['text\/x-objective-c++']$/;"	v	class:ObjectiveCppLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    mimetypes = ['text\/x-swift']$/;"	v	class:SwiftLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ooc.py	/^    mimetypes = ['text\/x-ooc']$/;"	v	class:OocLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    mimetypes = ['text\/x-ebnf']$/;"	v	class:EbnfLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    mimetypes = ['text\/x-ada']$/;"	v	class:AdaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    mimetypes = ['text\/x-modula2']$/;"	v	class:Modula2Lexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    mimetypes = ['text\/x-pascal']$/;"	v	class:DelphiLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    mimetypes = ['text\/x-pawn']$/;"	v	class:PawnLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    mimetypes = ['text\/x-sourcepawn']$/;"	v	class:SourcePawnLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    mimetypes = ['text\/x-perl', 'application\/x-perl']$/;"	v	class:PerlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    mimetypes = ['text\/x-perl6', 'application\/x-perl6']$/;"	v	class:Perl6Lexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    mimetypes = ['text\/x-php']$/;"	v	class:PhpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    mimetypes = ['text\/x-logtalk']$/;"	v	class:LogtalkLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    mimetypes = ['text\/x-prolog']$/;"	v	class:PrologLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    mimetypes = ['text\/x-cython', 'application\/x-cython']$/;"	v	class:CythonLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    mimetypes = ['text\/x-dg']$/;"	v	class:DgLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    mimetypes = ['text\/x-python', 'application\/x-python']$/;"	v	class:PythonLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    mimetypes = ['text\/x-python-doctest']$/;"	v	class:PythonConsoleLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    mimetypes = ['text\/x-python-traceback']$/;"	v	class:PythonTracebackLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    mimetypes = ['text\/x-python3', 'application\/x-python3']$/;"	v	class:Python3Lexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    mimetypes = ['text\/x-python3-traceback']$/;"	v	class:Python3TracebackLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    mimetypes = []$/;"	v	class:NumPyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    mimetypes = ['text\/S-plus', 'text\/S', 'text\/x-r-source', 'text\/x-r',$/;"	v	class:SLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    mimetypes = ['text\/x-r-doc']$/;"	v	class:RdLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^    mimetypes = ['application\/sparql-query']$/;"	v	class:SparqlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    mimetypes = ['text\/x-rebol']$/;"	v	class:RebolLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    mimetypes = ['text\/x-red', 'text\/x-red-system']$/;"	v	class:RedLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    mimetypes = ['text\/x-robotframework']$/;"	v	class:RobotFrameworkLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    mimetypes = ['text\/x-fancysrc']$/;"	v	class:FancyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    mimetypes = ['text\/x-ruby', 'application\/x-ruby']$/;"	v	class:RubyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    mimetypes = ['text\/x-ruby-shellsession']$/;"	v	class:RubyConsoleLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^    mimetypes = ['text\/x-rustsrc']$/;"	v	class:RustLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-chaiscript', 'application\/x-chaiscript']$/;"	v	class:ChaiscriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-hybris', 'application\/x-hybris']$/;"	v	class:HybrisLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-lsl']$/;"	v	class:LSLLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-lua', 'application\/x-lua']$/;"	v	class:LuaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-moocode']$/;"	v	class:MOOCodeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-moonscript', 'application\/x-moonscript']$/;"	v	class:MoonScriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-rexx']$/;"	v	class:RexxLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    mimetypes = ['application\/x-csh']$/;"	v	class:TcshLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    mimetypes = ['application\/x-dos-batch']$/;"	v	class:BatchLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    mimetypes = ['application\/x-sh', 'application\/x-shellscript']$/;"	v	class:BashLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    mimetypes = ['application\/x-sh-session']$/;"	v	class:ShellSessionLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    mimetypes = ['application\/x-shell-session']$/;"	v	class:BashSessionLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    mimetypes = ['text\/x-powershell']$/;"	v	class:PowerShellLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^    mimetypes = ['text\/x-newspeak']$/;"	v	class:NewspeakLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^    mimetypes = ['text\/x-smalltalk']$/;"	v	class:SmalltalkLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/snobol.py	/^    mimetypes = ['text\/x-snobol']$/;"	v	class:SnobolLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^    mimetypes = ['application\/x-pygments-tokens']$/;"	v	class:RawTokenLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^    mimetypes = ['text\/plain']$/;"	v	class:TextLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-mysql']$/;"	v	class:MySqlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-plpgsql']$/;"	v	class:PlPgsqlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-postgresql']$/;"	v	class:PostgresLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-postgresql-psql']$/;"	v	class:PostgresConsoleLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-rql']$/;"	v	class:RqlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-sql']$/;"	v	class:SqlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-sqlite3-console']$/;"	v	class:SqliteConsoleLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^    mimetypes = ['text\/x-tcl', 'text\/x-script.tcl', 'application\/x-tcl']$/;"	v	class:TclLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-cheetah', 'application\/x-spitfire']$/;"	v	class:CheetahLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-coldfusion']$/;"	v	class:ColdfusionHtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-django-templating', 'application\/x-jinja']$/;"	v	class:DjangoLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-evoque']$/;"	v	class:EvoqueLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-genshi', 'application\/x-kid']$/;"	v	class:GenshiLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-genshi-text', 'text\/x-genshi']$/;"	v	class:GenshiTextLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+cheetah',$/;"	v	class:CheetahJavascriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+django',$/;"	v	class:JavascriptDjangoLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+genshi',$/;"	v	class:JavascriptGenshiLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+lasso',$/;"	v	class:LassoJavascriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+mako',$/;"	v	class:MakoJavascriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+myghty',$/;"	v	class:MyghtyJavascriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+php',$/;"	v	class:JavascriptPhpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+ruby',$/;"	v	class:JavascriptErbLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+smarty',$/;"	v	class:JavascriptSmartyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-jsp']$/;"	v	class:JspLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-mako']$/;"	v	class:MakoLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-mason']$/;"	v	class:MasonLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-myghty']$/;"	v	class:MyghtyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-php',$/;"	v	class:HtmlPhpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-ruby-templating']$/;"	v	class:ErbLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-smarty']$/;"	v	class:SmartyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-ssp']$/;"	v	class:SspLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-twig']$/;"	v	class:TwigLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+cheetah', 'application\/xml+spitfire']$/;"	v	class:CheetahXmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+django', 'application\/xml+jinja']$/;"	v	class:XmlDjangoLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+evoque']$/;"	v	class:EvoqueXmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+lasso']$/;"	v	class:LassoXmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+mako']$/;"	v	class:MakoXmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+myghty']$/;"	v	class:MyghtyXmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+php']$/;"	v	class:XmlPhpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+ruby']$/;"	v	class:XmlErbLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+smarty']$/;"	v	class:XmlSmartyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+velocity']$/;"	v	class:VelocityXmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+django', 'text\/css+jinja']$/;"	v	class:CssDjangoLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+genshi']$/;"	v	class:CssGenshiLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+lasso']$/;"	v	class:LassoCssLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+mako']$/;"	v	class:MakoCssLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+myghty']$/;"	v	class:MyghtyCssLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+php']$/;"	v	class:CssPhpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+ruby']$/;"	v	class:CssErbLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+smarty']$/;"	v	class:CssSmartyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+cheetah', 'text\/html+spitfire']$/;"	v	class:CheetahHtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+django', 'text\/html+jinja']$/;"	v	class:HtmlDjangoLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+evoque']$/;"	v	class:EvoqueHtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+genshi']$/;"	v	class:HtmlGenshiLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+handlebars', 'text\/x-handlebars-template']$/;"	v	class:HandlebarsHtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+lasso',$/;"	v	class:LassoHtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+mako']$/;"	v	class:MakoHtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+myghty']$/;"	v	class:MyghtyHtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+ruby']$/;"	v	class:RhtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+smarty']$/;"	v	class:HtmlSmartyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+twig']$/;"	v	class:TwigHtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+velocity']$/;"	v	class:VelocityHtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/x-tea']$/;"	v	class:TeaTemplateLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = ['text\/x-yaml+jinja', 'text\/x-sls']$/;"	v	class:YamlJinjaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = []$/;"	v	class:ColdfusionCFCLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = []$/;"	v	class:ColdfusionLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    mimetypes = []$/;"	v	class:ColdfusionMarkupLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/testing.py	/^    mimetypes = ['text\/x-gherkin']$/;"	v	class:GherkinLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    mimetypes = ['application\/x-awk']$/;"	v	class:AwkLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    mimetypes = ['text\/x-vim']$/;"	v	class:VimLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    mimetypes = ['application\/x-gettext', 'text\/x-gettext', 'text\/gettext']$/;"	v	class:GettextLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    mimetypes = ['text\/x-irclog']$/;"	v	class:IrcLogsLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    mimetypes = ['text\/x-todo']$/;"	v	class:TodotxtLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    mimetypes = ['text\/x-coq']$/;"	v	class:CoqLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    mimetypes = ['text\/x-isabelle']$/;"	v	class:IsabelleLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    mimetypes = ['text\/x-lean']$/;"	v	class:LeanLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^    mimetypes = ['application\/x-urbiscript']$/;"	v	class:UrbiscriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    mimetypes = ['application\/x-qml']$/;"	v	class:QmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    mimetypes = ['text\/x-cirru']$/;"	v	class:CirruLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    mimetypes = ['text\/x-duel', 'text\/x-jbst']$/;"	v	class:DuelLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    mimetypes = ['text\/x-slim']$/;"	v	class:SlimLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    mimetypes = ['text\/xquery', 'application\/xquery']$/;"	v	class:XQueryLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    mimetypes = []$/;"	v	class:Lexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    mimetypes = ['application\/x-actionscript', 'text\/x-actionscript',$/;"	v	class:ActionScriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    mimetypes = ['application\/x-actionscript3', 'text\/x-actionscript3',$/;"	v	class:ActionScript3Lexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    mimetypes = ['application\/mathematica',$/;"	v	class:MathematicaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^    mimetypes = ['text\/x-ambienttalk']$/;"	v	class:AmbientTalkLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-c-objdump']$/;"	v	class:CObjdumpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-cpp-objdump']$/;"	v	class:CppObjdumpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-d-objdump']$/;"	v	class:DObjdumpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-gas']$/;"	v	class:GasLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-llvm']$/;"	v	class:LlvmLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-nasm']$/;"	v	class:NasmLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-nasm-objdump']$/;"	v	class:NasmObjdumpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-objdump']$/;"	v	class:ObjdumpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^    mimetypes = ['text\/x-autohotkey']$/;"	v	class:AutohotkeyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^    mimetypes = ['text\/x-autoit']$/;"	v	class:AutoItLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    mimetypes = ['text\/basic']$/;"	v	class:QBasicLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    mimetypes = ['text\/x-bb']$/;"	v	class:BlitzBasicLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    mimetypes = ['text\/x-bmx']$/;"	v	class:BlitzMaxLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    mimetypes = ['text\/x-monkey']$/;"	v	class:MonkeyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    mimetypes = ['text\/x-abap']$/;"	v	class:ABAPLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    mimetypes = ['text\/x-cobol']$/;"	v	class:CobolLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    mimetypes = ['text\/x-gooddata-cl']$/;"	v	class:GoodDataCLLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    mimetypes = ['text\/x-gooddata-maql', 'application\/x-gooddata-maql']$/;"	v	class:MaqlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    mimetypes = ['text\/x-openedge', 'application\/x-openedge']$/;"	v	class:OpenEdgeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    mimetypes = []$/;"	v	class:CobolFreeformatLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    mimetypes = ['text\/x-c++hdr', 'text\/x-c++src']$/;"	v	class:CppLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    mimetypes = ['text\/x-chdr', 'text\/x-csrc']$/;"	v	class:CLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    mimetypes = ['text\/swig']$/;"	v	class:SwigLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-clay']$/;"	v	class:ClayLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-cuda']$/;"	v	class:CudaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-echdr', 'text\/x-ecsrc']$/;"	v	class:ECLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-mql']$/;"	v	class:MqlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-nescsrc']$/;"	v	class:NesCLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-pike']$/;"	v	class:PikeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-vala']$/;"	v	class:ValaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-apacheconf']$/;"	v	class:ApacheConfLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-dockerfile-config']$/;"	v	class:DockerLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-ini']$/;"	v	class:IniLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-java-properties']$/;"	v	class:PropertiesLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-kconfig']$/;"	v	class:KconfigLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-lighttpd-conf']$/;"	v	class:LighttpdConfLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-nginx-conf']$/;"	v	class:NginxConfLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-squidconf']$/;"	v	class:SquidConfLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-windows-registry']$/;"	v	class:RegeditLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    mimetypes = []$/;"	v	class:Cfengine3Lexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^    mimetypes = ['application\/x-pypylog']$/;"	v	class:PyPyLogLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^    mimetypes = []$/;"	v	class:VCTreeStatusLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    mimetypes = ['text\/css']$/;"	v	class:CssLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    mimetypes = ['text\/x-sass']$/;"	v	class:SassLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    mimetypes = ['text\/x-scss']$/;"	v	class:ScssLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    mimetypes = ['text\/x-crocsrc']$/;"	v	class:CrocLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    mimetypes = ['text\/x-dsrc']$/;"	v	class:DLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    mimetypes = ['text\/x-minidsrc']$/;"	v	class:MiniDLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dalvik.py	/^    mimetypes = ['text\/smali']$/;"	v	class:SmaliLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    mimetypes = ['application\/json']$/;"	v	class:JsonLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    mimetypes = ['application\/ld+json']$/;"	v	class:JsonLdLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    mimetypes = ['text\/x-yaml']$/;"	v	class:YamlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^    mimetypes = ['text\/x-diff', 'text\/x-patch']$/;"	v	class:DiffLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    mimetypes = ['text\/x-boo']$/;"	v	class:BooLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    mimetypes = ['text\/x-csharp']  # inferred$/;"	v	class:CSharpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    mimetypes = ['text\/x-fsharp']$/;"	v	class:FSharpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    mimetypes = ['text\/x-nemerle']  # inferred$/;"	v	class:NemerleLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    mimetypes = ['text\/x-vbnet', 'text\/x-vba']  # (?)$/;"	v	class:VbNetLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    mimetypes = []$/;"	v	class:CSharpAspxLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    mimetypes = []$/;"	v	class:GenericAspxLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    mimetypes = []$/;"	v	class:VbNetAspxLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    mimetypes = ['text\/rsl']$/;"	v	class:RslLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    mimetypes = ['text\/x-alloy']$/;"	v	class:AlloyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    mimetypes = ['text\/x-dylan']$/;"	v	class:DylanLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    mimetypes = ['text\/x-dylan-console']$/;"	v	class:DylanConsoleLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    mimetypes = ['text\/x-dylan-lid']$/;"	v	class:DylanLidLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^    mimetypes = ['application\/x-ecl']$/;"	v	class:ECLLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/eiffel.py	/^    mimetypes = ['text\/x-eiffel']$/;"	v	class:EiffelLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    mimetypes = ['text\/x-elixir']$/;"	v	class:ElixirLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    mimetypes = ['text\/x-elixir-shellsession']$/;"	v	class:ElixirConsoleLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    mimetypes = ['text\/x-erl-shellsession']$/;"	v	class:ErlangShellLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    mimetypes = ['text\/x-erlang']$/;"	v	class:ErlangLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    mimetypes = ['application\/x-befunge']$/;"	v	class:BefungeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    mimetypes = ['application\/x-brainfuck']$/;"	v	class:BrainfuckLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^    mimetypes = ['text\/x-factor']$/;"	v	class:FactorLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    mimetypes = ['application\/x-fantom']$/;"	v	class:FantomLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    mimetypes = ['text\/x-felix']$/;"	v	class:FelixLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^    mimetypes = ['text\/x-fortran']$/;"	v	class:FortranLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^    mimetypes = ['text\/x-gosrc']$/;"	v	class:GoLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    mimetypes = ['application\/postscript']$/;"	v	class:PostScriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    mimetypes = ['text\/x-asymptote']$/;"	v	class:AsymptoteLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    mimetypes = ['text\/x-glslsrc']$/;"	v	class:GLShaderLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    mimetypes = ['text\/x-gnuplot']$/;"	v	class:GnuplotLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    mimetypes = ['text\/x-povray']$/;"	v	class:PovrayLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-agda']$/;"	v	class:AgdaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-cryptol']$/;"	v	class:CryptolLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-haskell']$/;"	v	class:HaskellLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-idris']$/;"	v	class:IdrisLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-koka']$/;"	v	class:KokaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-literate-agda']$/;"	v	class:LiterateAgdaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-literate-cryptol']$/;"	v	class:LiterateCryptolLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-literate-haskell']$/;"	v	class:LiterateHaskellLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-literate-idris']$/;"	v	class:LiterateIdrisLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    mimetypes = ['text\/haxe', 'text\/x-haxe', 'text\/x-hx']$/;"	v	class:HaxeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    mimetypes = ['text\/x-systemverilog']$/;"	v	class:SystemVerilogLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    mimetypes = ['text\/x-verilog']$/;"	v	class:VerilogLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    mimetypes = ['text\/x-vhdl']$/;"	v	class:VhdlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    mimetypes = ['application\/xml-dtd']$/;"	v	class:DtdLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    mimetypes = ['application\/xsl+xml', 'application\/xslt+xml']$/;"	v	class:XsltLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    mimetypes = ['text\/html', 'application\/xhtml+xml']$/;"	v	class:HtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    mimetypes = ['text\/x-haml']$/;"	v	class:HamlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    mimetypes = ['text\/x-jade']$/;"	v	class:JadeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    mimetypes = ['text\/x-scaml']$/;"	v	class:ScamlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    mimetypes = ['text\/xml', 'application\/xml', 'image\/svg+xml',$/;"	v	class:XmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/idl.py	/^    mimetypes = ['text\/idl']$/;"	v	class:IDLLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^    mimetypes = ['text\/ipf']$/;"	v	class:IgorLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^    mimetypes = ['text\/limbo']$/;"	v	class:LimboLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    mimetypes = ['text\/x-nsis']$/;"	v	class:NSISLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    mimetypes = ['text\/x-rpm-spec']$/;"	v	class:RPMSpecLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/iolang.py	/^    mimetypes = ['text\/x-iosrc']$/;"	v	class:IoLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    mimetypes = ['application\/javascript', 'application\/x-javascript',$/;"	v	class:JavascriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    mimetypes = ['text\/coffeescript']$/;"	v	class:CoffeeScriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    mimetypes = ['text\/kal', 'application\/kal']$/;"	v	class:KalLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    mimetypes = ['text\/livescript']$/;"	v	class:LiveScriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    mimetypes = ['text\/x-dart']$/;"	v	class:DartLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    mimetypes = ['text\/x-lasso']$/;"	v	class:LassoLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    mimetypes = ['text\/x-mask']$/;"	v	class:MaskLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    mimetypes = ['text\/x-objective-j']$/;"	v	class:ObjectiveJLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    mimetypes = ['text\/x-typescript']$/;"	v	class:TypeScriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^    mimetypes = ['text\/x-julia', 'application\/x-julia']$/;"	v	class:JuliaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-aspectj']$/;"	v	class:AspectJLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-ceylon']$/;"	v	class:CeylonLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-clojure', 'application\/x-clojure']$/;"	v	class:ClojureLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-clojurescript', 'application\/x-clojurescript']$/;"	v	class:ClojureScriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-gosu']$/;"	v	class:GosuLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-gosu-template']$/;"	v	class:GosuTemplateLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-groovy']$/;"	v	class:GroovyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-iokesrc']$/;"	v	class:IokeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-java']$/;"	v	class:JavaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-kotlin']$/;"	v	class:KotlinLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-pig']$/;"	v	class:PigLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-scala']$/;"	v	class:ScalaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-xtend']$/;"	v	class:XtendLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    mimetypes = ['text\/x-common-lisp']$/;"	v	class:CommonLispLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    mimetypes = ['text\/x-hy', 'application\/x-hy']$/;"	v	class:HyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    mimetypes = ['text\/x-newlisp', 'application\/x-newlisp']$/;"	v	class:NewLispLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    mimetypes = ['text\/x-racket', 'application\/x-racket']$/;"	v	class:RacketLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    mimetypes = ['text\/x-scheme', 'application\/x-scheme']$/;"	v	class:SchemeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    mimetypes = ['text\/x-cmake']$/;"	v	class:CMakeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    mimetypes = ['text\/x-makefile']$/;"	v	class:MakefileLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    mimetypes = []$/;"	v	class:BaseMakefileLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    mimetypes = ["text\/x-rst", "text\/prs.fallenstein.rst"]$/;"	v	class:RstLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    mimetypes = ['application\/x-troff', 'text\/troff']$/;"	v	class:GroffLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    mimetypes = ['text\/x-bbcode']$/;"	v	class:BBCodeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    mimetypes = ['text\/x-tex', 'text\/x-latex']$/;"	v	class:TexLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    mimetypes = ['text\/x-trac-wiki']$/;"	v	class:MoinWikiLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    mimetypes = []$/;"	v	class:MozPreprocCssLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    mimetypes = []$/;"	v	class:MozPreprocHashLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    mimetypes = []$/;"	v	class:MozPreprocJavascriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    mimetypes = []$/;"	v	class:MozPreprocPercentLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    mimetypes = []$/;"	v	class:MozPreprocXulLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    mimetypes = ['text\/matlab']$/;"	v	class:MatlabLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    mimetypes = ['text\/octave']$/;"	v	class:OctaveLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    mimetypes = ['text\/scilab']$/;"	v	class:ScilabLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    mimetypes = ['text\/x-ocaml']$/;"	v	class:OcamlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    mimetypes = ['text\/x-opa']$/;"	v	class:OpaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    mimetypes = ['text\/x-standardml', 'application\/x-standardml']$/;"	v	class:SMLLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    mimetypes = ['text\/x-modelica']$/;"	v	class:ModelicaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    mimetypes = ['text\/x-nimrod']$/;"	v	class:NimrodLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^    mimetypes = ['text\/x-nix']$/;"	v	class:NixLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    mimetypes = ['text\/x-logos']$/;"	v	class:LogosLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    mimetypes = ['text\/x-objective-c']$/;"	v	class:ObjectiveCLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    mimetypes = ['text\/x-objective-c++']$/;"	v	class:ObjectiveCppLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    mimetypes = ['text\/x-swift']$/;"	v	class:SwiftLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ooc.py	/^    mimetypes = ['text\/x-ooc']$/;"	v	class:OocLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    mimetypes = ['text\/x-ebnf']$/;"	v	class:EbnfLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    mimetypes = ['text\/x-ada']$/;"	v	class:AdaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    mimetypes = ['text\/x-modula2']$/;"	v	class:Modula2Lexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    mimetypes = ['text\/x-pascal']$/;"	v	class:DelphiLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    mimetypes = ['text\/x-pawn']$/;"	v	class:PawnLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    mimetypes = ['text\/x-sourcepawn']$/;"	v	class:SourcePawnLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    mimetypes = ['text\/x-perl', 'application\/x-perl']$/;"	v	class:PerlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    mimetypes = ['text\/x-perl6', 'application\/x-perl6']$/;"	v	class:Perl6Lexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    mimetypes = ['text\/x-php']$/;"	v	class:PhpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    mimetypes = ['text\/x-logtalk']$/;"	v	class:LogtalkLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    mimetypes = ['text\/x-prolog']$/;"	v	class:PrologLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    mimetypes = ['text\/x-cython', 'application\/x-cython']$/;"	v	class:CythonLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    mimetypes = ['text\/x-dg']$/;"	v	class:DgLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    mimetypes = ['text\/x-python', 'application\/x-python']$/;"	v	class:PythonLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    mimetypes = ['text\/x-python-doctest']$/;"	v	class:PythonConsoleLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    mimetypes = ['text\/x-python-traceback']$/;"	v	class:PythonTracebackLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    mimetypes = ['text\/x-python3', 'application\/x-python3']$/;"	v	class:Python3Lexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    mimetypes = ['text\/x-python3-traceback']$/;"	v	class:Python3TracebackLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    mimetypes = []$/;"	v	class:NumPyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    mimetypes = ['text\/S-plus', 'text\/S', 'text\/x-r-source', 'text\/x-r',$/;"	v	class:SLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    mimetypes = ['text\/x-r-doc']$/;"	v	class:RdLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^    mimetypes = ['application\/sparql-query']$/;"	v	class:SparqlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    mimetypes = ['text\/x-rebol']$/;"	v	class:RebolLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    mimetypes = ['text\/x-red', 'text\/x-red-system']$/;"	v	class:RedLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    mimetypes = ['text\/x-robotframework']$/;"	v	class:RobotFrameworkLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    mimetypes = ['text\/x-fancysrc']$/;"	v	class:FancyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    mimetypes = ['text\/x-ruby', 'application\/x-ruby']$/;"	v	class:RubyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    mimetypes = ['text\/x-ruby-shellsession']$/;"	v	class:RubyConsoleLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^    mimetypes = ['text\/x-rustsrc']$/;"	v	class:RustLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-chaiscript', 'application\/x-chaiscript']$/;"	v	class:ChaiscriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-hybris', 'application\/x-hybris']$/;"	v	class:HybrisLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-lsl']$/;"	v	class:LSLLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-lua', 'application\/x-lua']$/;"	v	class:LuaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-moocode']$/;"	v	class:MOOCodeLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-moonscript', 'application\/x-moonscript']$/;"	v	class:MoonScriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-rexx']$/;"	v	class:RexxLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    mimetypes = ['application\/x-csh']$/;"	v	class:TcshLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    mimetypes = ['application\/x-dos-batch']$/;"	v	class:BatchLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    mimetypes = ['application\/x-sh', 'application\/x-shellscript']$/;"	v	class:BashLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    mimetypes = ['application\/x-sh-session']$/;"	v	class:ShellSessionLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    mimetypes = ['application\/x-shell-session']$/;"	v	class:BashSessionLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    mimetypes = ['text\/x-powershell']$/;"	v	class:PowerShellLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^    mimetypes = ['text\/x-newspeak']$/;"	v	class:NewspeakLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^    mimetypes = ['text\/x-smalltalk']$/;"	v	class:SmalltalkLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/snobol.py	/^    mimetypes = ['text\/x-snobol']$/;"	v	class:SnobolLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^    mimetypes = ['application\/x-pygments-tokens']$/;"	v	class:RawTokenLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^    mimetypes = ['text\/plain']$/;"	v	class:TextLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-mysql']$/;"	v	class:MySqlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-plpgsql']$/;"	v	class:PlPgsqlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-postgresql']$/;"	v	class:PostgresLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-postgresql-psql']$/;"	v	class:PostgresConsoleLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-rql']$/;"	v	class:RqlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-sql']$/;"	v	class:SqlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-sqlite3-console']$/;"	v	class:SqliteConsoleLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^    mimetypes = ['text\/x-tcl', 'text\/x-script.tcl', 'application\/x-tcl']$/;"	v	class:TclLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-cheetah', 'application\/x-spitfire']$/;"	v	class:CheetahLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-coldfusion']$/;"	v	class:ColdfusionHtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-django-templating', 'application\/x-jinja']$/;"	v	class:DjangoLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-evoque']$/;"	v	class:EvoqueLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-genshi', 'application\/x-kid']$/;"	v	class:GenshiLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-genshi-text', 'text\/x-genshi']$/;"	v	class:GenshiTextLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+cheetah',$/;"	v	class:CheetahJavascriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+django',$/;"	v	class:JavascriptDjangoLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+genshi',$/;"	v	class:JavascriptGenshiLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+lasso',$/;"	v	class:LassoJavascriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+mako',$/;"	v	class:MakoJavascriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+myghty',$/;"	v	class:MyghtyJavascriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+php',$/;"	v	class:JavascriptPhpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+ruby',$/;"	v	class:JavascriptErbLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+smarty',$/;"	v	class:JavascriptSmartyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-jsp']$/;"	v	class:JspLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-mako']$/;"	v	class:MakoLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-mason']$/;"	v	class:MasonLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-myghty']$/;"	v	class:MyghtyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-php',$/;"	v	class:HtmlPhpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-ruby-templating']$/;"	v	class:ErbLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-smarty']$/;"	v	class:SmartyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-ssp']$/;"	v	class:SspLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-twig']$/;"	v	class:TwigLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+cheetah', 'application\/xml+spitfire']$/;"	v	class:CheetahXmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+django', 'application\/xml+jinja']$/;"	v	class:XmlDjangoLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+evoque']$/;"	v	class:EvoqueXmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+lasso']$/;"	v	class:LassoXmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+mako']$/;"	v	class:MakoXmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+myghty']$/;"	v	class:MyghtyXmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+php']$/;"	v	class:XmlPhpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+ruby']$/;"	v	class:XmlErbLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+smarty']$/;"	v	class:XmlSmartyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+velocity']$/;"	v	class:VelocityXmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+django', 'text\/css+jinja']$/;"	v	class:CssDjangoLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+genshi']$/;"	v	class:CssGenshiLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+lasso']$/;"	v	class:LassoCssLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+mako']$/;"	v	class:MakoCssLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+myghty']$/;"	v	class:MyghtyCssLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+php']$/;"	v	class:CssPhpLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+ruby']$/;"	v	class:CssErbLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+smarty']$/;"	v	class:CssSmartyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+cheetah', 'text\/html+spitfire']$/;"	v	class:CheetahHtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+django', 'text\/html+jinja']$/;"	v	class:HtmlDjangoLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+evoque']$/;"	v	class:EvoqueHtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+genshi']$/;"	v	class:HtmlGenshiLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+handlebars', 'text\/x-handlebars-template']$/;"	v	class:HandlebarsHtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+lasso',$/;"	v	class:LassoHtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+mako']$/;"	v	class:MakoHtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+myghty']$/;"	v	class:MyghtyHtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+ruby']$/;"	v	class:RhtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+smarty']$/;"	v	class:HtmlSmartyLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+twig']$/;"	v	class:TwigHtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+velocity']$/;"	v	class:VelocityHtmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/x-tea']$/;"	v	class:TeaTemplateLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = ['text\/x-yaml+jinja', 'text\/x-sls']$/;"	v	class:YamlJinjaLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = []$/;"	v	class:ColdfusionCFCLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = []$/;"	v	class:ColdfusionLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    mimetypes = []$/;"	v	class:ColdfusionMarkupLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/testing.py	/^    mimetypes = ['text\/x-gherkin']$/;"	v	class:GherkinLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    mimetypes = ['application\/x-awk']$/;"	v	class:AwkLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    mimetypes = ['text\/x-vim']$/;"	v	class:VimLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    mimetypes = ['application\/x-gettext', 'text\/x-gettext', 'text\/gettext']$/;"	v	class:GettextLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    mimetypes = ['text\/x-irclog']$/;"	v	class:IrcLogsLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    mimetypes = ['text\/x-todo']$/;"	v	class:TodotxtLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    mimetypes = ['text\/x-coq']$/;"	v	class:CoqLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    mimetypes = ['text\/x-isabelle']$/;"	v	class:IsabelleLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    mimetypes = ['text\/x-lean']$/;"	v	class:LeanLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^    mimetypes = ['application\/x-urbiscript']$/;"	v	class:UrbiscriptLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    mimetypes = ['application\/x-qml']$/;"	v	class:QmlLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    mimetypes = ['text\/x-cirru']$/;"	v	class:CirruLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    mimetypes = ['text\/x-duel', 'text\/x-jbst']$/;"	v	class:DuelLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    mimetypes = ['text\/x-slim']$/;"	v	class:SlimLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    mimetypes = ['text\/xquery', 'application\/xquery']$/;"	v	class:XQueryLexer
mimetypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/fields.py	/^import mimetypes$/;"	i
min_by	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
min_long_size	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *min_long_size;$/;"	m	struct:_PyEncoderObject	file:
mkdir_nothrow	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^function! s:mkdir_nothrow(...) abort "{{{$/;"	f
modifiers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    modifiers = ('A', 'B', 'AB', 'BA', 'F', 'X', 'I')$/;"	v	class:RedcodeLexer
modifiers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    modifiers = ('A', 'B', 'AB', 'BA', 'F', 'X', 'I')$/;"	v	class:RedcodeLexer
modname_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    modname_re = r'[A-Z]%(alnum)s*(?:\\.[A-Z]%(alnum)s*)*' % {'alnum': alnum}$/;"	v	class:ElixirLexer
modname_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    modname_re = r'[A-Z]%(alnum)s*(?:\\.[A-Z]%(alnum)s*)*' % {'alnum': alnum}$/;"	v	class:ElixirLexer
module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/_mapping.py	/^                module = __import__(module_name, None, None, [''])$/;"	v
module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_mapping.py	/^                module = __import__(module_name, None, None, [''])$/;"	v
module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/_mapping.py	/^                module = __import__(module_name, None, None, [''])$/;"	v
module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_mapping.py	/^                module = __import__(module_name, None, None, [''])$/;"	v
module_callbacks	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^    def module_callbacks():$/;"	f
module_callbacks	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^    def module_callbacks():$/;"	f
module_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/_mapping.py	/^                module_name = 'pygments.formatters%s.%s' % ($/;"	v
module_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_mapping.py	/^                module_name = 'pygments.lexers%s.%s' % ($/;"	v
module_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/_mapping.py	/^                module_name = 'pygments.formatters%s.%s' % ($/;"	v
module_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_mapping.py	/^                module_name = 'pygments.lexers%s.%s' % ($/;"	v
moduledef	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^static struct PyModuleDef moduledef = {$/;"	v	typeref:struct:PyModuleDef	file:
moduleinit	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^moduleinit(void)$/;"	f	file:
moon_event	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! s:moon_event(events) abort$/;"	f
morsel_to_cookie	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^def morsel_to_cookie(morsel):$/;"	f
mount	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def mount(self, prefix, adapter):$/;"	m	class:Session
move	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^function! s:move(src, dest) abort "{{{$/;"	f
move_exe	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:move_exe() abort$/;"	f
move_exe	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:move_exe(src, dest) abort$/;"	f
move_to_other_drive	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:move_to_other_drive(candidate, filename) "{{{$/;"	f
move_vim	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^function! s:move_vim(src, dest) abort "{{{$/;"	f
move_vimfiler_cursor	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:move_vimfiler_cursor(candidate) "{{{$/;"	f
msg	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    TerminalFormatter  # pylint:disable-msg=E0611$/;"	i
msg	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    TerminalFormatter  # pylint:disable-msg=E0611$/;"	i
msg2list	plugged/unite.vim/autoload/unite/view.vim	/^function! s:msg2list(expr) "{{{$/;"	f
multi	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^from .mbcsgroupprober import MBCSGroupProber  # multi-byte character sets$/;"	i
multiple_domains	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def multiple_domains(self):$/;"	m	class:RequestsCookieJar
myBufNr	plugged/vim-instant-markdown/after/ftplugin/markdown/instant-markdown.vim	/^fu! s:myBufNr()$/;"	f
n	configs/keybindings.vim	/^nnoremap n nzz$/;"	m
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatter.py	/^    name = None$/;"	v	class:Formatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/bbcode.py	/^    name = 'BBCode'$/;"	v	class:BBCodeFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    name = 'HTML'$/;"	v	class:HtmlFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    name = 'img'$/;"	v	class:ImageFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    name = 'img_bmp'$/;"	v	class:BmpImageFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    name = 'img_gif'$/;"	v	class:GifImageFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    name = 'img_jpg'$/;"	v	class:JpgImageFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^    name = 'LaTeX'$/;"	v	class:LatexFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^    name = 'Raw tokens'$/;"	v	class:RawTokenFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^    name = 'Testcase'$/;"	v	class:TestcaseFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^    name = 'Text only'$/;"	v	class:NullFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/rtf.py	/^    name = 'RTF'$/;"	v	class:RtfFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/svg.py	/^    name = 'SVG'$/;"	v	class:SvgFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^    name = 'Terminal'$/;"	v	class:TerminalFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal256.py	/^    name = 'Terminal256'$/;"	v	class:Terminal256Formatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    name = None$/;"	v	class:Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    name = 'ActionScript 3'$/;"	v	class:ActionScript3Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    name = 'ActionScript'$/;"	v	class:ActionScriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    name = 'MXML'$/;"	v	class:MxmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    name = 'GAP'$/;"	v	class:GAPLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    name = 'Mathematica'$/;"	v	class:MathematicaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    name = 'MuPAD'$/;"	v	class:MuPADLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^    name = 'AmbientTalk'$/;"	v	class:AmbientTalkLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/apl.py	/^    name = 'APL'$/;"	v	class:APLLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    name = 'GAS'$/;"	v	class:GasLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    name = 'LLVM'$/;"	v	class:LlvmLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    name = 'NASM'$/;"	v	class:NasmLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    name = 'c-objdump'$/;"	v	class:CObjdumpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    name = 'ca65 assembler'$/;"	v	class:Ca65Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    name = 'cpp-objdump'$/;"	v	class:CppObjdumpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    name = 'd-objdump'$/;"	v	class:DObjdumpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    name = 'objdump'$/;"	v	class:ObjdumpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    name = 'objdump-nasm'$/;"	v	class:NasmObjdumpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^    name = 'AutoIt'$/;"	v	class:AutoItLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^    name = 'autohotkey'$/;"	v	class:AutohotkeyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    name = 'BlitzBasic'$/;"	v	class:BlitzBasicLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    name = 'BlitzMax'$/;"	v	class:BlitzMaxLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    name = 'CBM BASIC V2'$/;"	v	class:CbmBasicV2Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    name = 'Monkey'$/;"	v	class:MonkeyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    name = 'QBasic'$/;"	v	class:QBasicLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    name = 'ABAP'$/;"	v	class:ABAPLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    name = 'COBOL'$/;"	v	class:CobolLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    name = 'COBOLFree'$/;"	v	class:CobolFreeformatLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    name = 'GoodData-CL'$/;"	v	class:GoodDataCLLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    name = 'MAQL'$/;"	v	class:MaqlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    name = 'OpenEdge ABL'$/;"	v	class:OpenEdgeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    name = 'C'$/;"	v	class:CLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    name = 'C++'$/;"	v	class:CppLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    name = 'CUDA'$/;"	v	class:CudaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    name = 'Clay'$/;"	v	class:ClayLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    name = 'MQL'$/;"	v	class:MqlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    name = 'Pike'$/;"	v	class:PikeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    name = 'SWIG'$/;"	v	class:SwigLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    name = 'Vala'$/;"	v	class:ValaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    name = 'eC'$/;"	v	class:ECLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    name = 'nesC'$/;"	v	class:NesCLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/chapel.py	/^    name = 'Chapel'$/;"	v	class:ChapelLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    name = 'ApacheConf'$/;"	v	class:ApacheConfLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    name = 'CFEngine3'$/;"	v	class:Cfengine3Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    name = 'Docker'$/;"	v	class:DockerLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    name = 'INI'$/;"	v	class:IniLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    name = 'Kconfig'$/;"	v	class:KconfigLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    name = 'Lighttpd configuration file'$/;"	v	class:LighttpdConfLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    name = 'Nginx configuration file'$/;"	v	class:NginxConfLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    name = 'Properties'$/;"	v	class:PropertiesLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    name = 'SquidConf'$/;"	v	class:SquidConfLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    name = 'reg'$/;"	v	class:RegeditLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^    name = "PyPy Log"$/;"	v	class:PyPyLogLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^    name = 'VCTreeStatus'$/;"	v	class:VCTreeStatusLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    name = 'CSS'$/;"	v	class:CssLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    name = 'SCSS'$/;"	v	class:ScssLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    name = 'Sass'$/;"	v	class:SassLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    name = 'Croc'$/;"	v	class:CrocLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    name = 'D'$/;"	v	class:DLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    name = 'MiniD'$/;"	v	class:MiniDLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dalvik.py	/^    name = 'Smali'$/;"	v	class:SmaliLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    name = 'JSON'$/;"	v	class:JsonLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    name = 'JSON-LD'$/;"	v	class:JsonLdLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    name = 'YAML'$/;"	v	class:YamlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^    name = 'Darcs Patch'$/;"	v	class:DarcsPatchLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^    name = 'Diff'$/;"	v	class:DiffLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    name = 'Boo'$/;"	v	class:BooLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    name = 'C#'$/;"	v	class:CSharpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    name = 'FSharp'$/;"	v	class:FSharpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    name = 'Nemerle'$/;"	v	class:NemerleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    name = 'VB.net'$/;"	v	class:VbNetLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    name = 'aspx-cs'$/;"	v	class:CSharpAspxLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    name = 'aspx-gen'$/;"	v	class:GenericAspxLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    name = 'aspx-vb'$/;"	v	class:VbNetAspxLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    name = 'Alloy'$/;"	v	class:AlloyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    name = 'Bro'$/;"	v	class:BroLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    name = 'Mscgen'$/;"	v	class:MscgenLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    name = 'Pan'$/;"	v	class:PanLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    name = 'Protocol Buffer'$/;"	v	class:ProtoBufLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    name = 'Puppet'$/;"	v	class:PuppetLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    name = 'RSL'$/;"	v	class:RslLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    name = 'VGL'$/;"	v	class:VGLLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    name = 'Dylan session'$/;"	v	class:DylanConsoleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    name = 'Dylan'$/;"	v	class:DylanLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    name = 'DylanLID'$/;"	v	class:DylanLidLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^    name = 'ECL'$/;"	v	class:ECLLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/eiffel.py	/^    name = 'Eiffel'$/;"	v	class:EiffelLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    name = 'Elixir iex session'$/;"	v	class:ElixirConsoleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    name = 'Elixir'$/;"	v	class:ElixirLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    name = 'Erlang erl session'$/;"	v	class:ErlangShellLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    name = 'Erlang'$/;"	v	class:ErlangLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    name = 'Befunge'$/;"	v	class:BefungeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    name = 'Brainfuck'$/;"	v	class:BrainfuckLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    name = 'Redcode'$/;"	v	class:RedcodeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^    name = 'Factor'$/;"	v	class:FactorLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    name = 'Fantom'$/;"	v	class:FantomLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    name = 'Felix'$/;"	v	class:FelixLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^    name = 'Fortran'$/;"	v	class:FortranLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/foxpro.py	/^    name = 'FoxPro'$/;"	v	class:FoxProLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^    name = 'Go'$/;"	v	class:GoLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^    name = 'Cypher'$/;"	v	class:CypherLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    name = 'Asymptote'$/;"	v	class:AsymptoteLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    name = 'GLSL'$/;"	v	class:GLShaderLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    name = 'Gnuplot'$/;"	v	class:GnuplotLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    name = 'POVRay'$/;"	v	class:PovrayLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    name = 'PostScript'$/;"	v	class:PostScriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    name = 'Agda'$/;"	v	class:AgdaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    name = 'Cryptol'$/;"	v	class:CryptolLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    name = 'Haskell'$/;"	v	class:HaskellLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    name = 'Idris'$/;"	v	class:IdrisLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    name = 'Koka'$/;"	v	class:KokaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    name = 'Literate Agda'$/;"	v	class:LiterateAgdaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    name = 'Literate Cryptol'$/;"	v	class:LiterateCryptolLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    name = 'Literate Haskell'$/;"	v	class:LiterateHaskellLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    name = 'Literate Idris'$/;"	v	class:LiterateIdrisLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    name = 'Haxe'$/;"	v	class:HaxeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    name = 'Hxml'$/;"	v	class:HxmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    name = 'systemverilog'$/;"	v	class:SystemVerilogLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    name = 'verilog'$/;"	v	class:VerilogLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    name = 'vhdl'$/;"	v	class:VhdlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    name = 'DTD'$/;"	v	class:DtdLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    name = 'HTML'$/;"	v	class:HtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    name = 'Haml'$/;"	v	class:HamlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    name = 'Jade'$/;"	v	class:JadeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    name = 'Scaml'$/;"	v	class:ScamlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    name = 'XML'$/;"	v	class:XmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    name = 'XSLT'$/;"	v	class:XsltLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/idl.py	/^    name = 'IDL'$/;"	v	class:IDLLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^    name = 'Igor'$/;"	v	class:IgorLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^    name = 'Limbo'$/;"	v	class:LimboLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    name = 'Debian Control file'$/;"	v	class:DebianControlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    name = 'Debian Sourcelist'$/;"	v	class:SourcesListLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    name = 'NSIS'$/;"	v	class:NSISLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    name = 'RPMSpec'$/;"	v	class:RPMSpecLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    name = 'Inform 6 template'$/;"	v	class:Inform6TemplateLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    name = 'Inform 6'$/;"	v	class:Inform6Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    name = 'Inform 7'$/;"	v	class:Inform7Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    name = 'TADS 3'$/;"	v	class:Tads3Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/iolang.py	/^    name = 'Io'$/;"	v	class:IoLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    name = 'CoffeeScript'$/;"	v	class:CoffeeScriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    name = 'Dart'$/;"	v	class:DartLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    name = 'JavaScript'$/;"	v	class:JavascriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    name = 'Kal'$/;"	v	class:KalLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    name = 'Lasso'$/;"	v	class:LassoLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    name = 'LiveScript'$/;"	v	class:LiveScriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    name = 'Mask'$/;"	v	class:MaskLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    name = 'Objective-J'$/;"	v	class:ObjectiveJLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    name = 'TypeScript'$/;"	v	class:TypeScriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^    name = 'Julia console'$/;"	v	class:JuliaConsoleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^    name = 'Julia'$/;"	v	class:JuliaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    name = 'AspectJ'$/;"	v	class:AspectJLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    name = 'Ceylon'$/;"	v	class:CeylonLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    name = 'Clojure'$/;"	v	class:ClojureLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    name = 'ClojureScript'$/;"	v	class:ClojureScriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    name = 'Golo'$/;"	v	class:GoloLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    name = 'Gosu Template'$/;"	v	class:GosuTemplateLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    name = 'Gosu'$/;"	v	class:GosuLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    name = 'Groovy'$/;"	v	class:GroovyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    name = 'Ioke'$/;"	v	class:IokeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    name = 'Jasmin'$/;"	v	class:JasminLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    name = 'Java'$/;"	v	class:JavaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    name = 'Kotlin'$/;"	v	class:KotlinLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    name = 'Pig'$/;"	v	class:PigLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    name = 'Scala'$/;"	v	class:ScalaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    name = 'Xtend'$/;"	v	class:XtendLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    name = 'Common Lisp'$/;"	v	class:CommonLispLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    name = 'Hy'$/;"	v	class:HyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    name = 'NewLisp'$/;"	v	class:NewLispLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    name = 'Racket'$/;"	v	class:RacketLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    name = 'Scheme'$/;"	v	class:SchemeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    name = 'Base Makefile'$/;"	v	class:BaseMakefileLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    name = 'CMake'$/;"	v	class:CMakeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    name = 'Makefile'$/;"	v	class:MakefileLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    name = "CSS+mozpreproc"$/;"	v	class:MozPreprocCssLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    name = "Javascript+mozpreproc"$/;"	v	class:MozPreprocJavascriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    name = "XUL+mozpreproc"$/;"	v	class:MozPreprocXulLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    name = 'BBCode'$/;"	v	class:BBCodeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    name = 'Groff'$/;"	v	class:GroffLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    name = 'MoinMoin\/Trac Wiki markup'$/;"	v	class:MoinWikiLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    name = 'TeX'$/;"	v	class:TexLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    name = 'mozhashpreproc'$/;"	v	class:MozPreprocHashLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    name = 'mozpercentpreproc'$/;"	v	class:MozPreprocPercentLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    name = 'reStructuredText'$/;"	v	class:RstLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    name = 'Matlab session'$/;"	v	class:MatlabSessionLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    name = 'Matlab'$/;"	v	class:MatlabLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    name = 'Octave'$/;"	v	class:OctaveLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    name = 'Scilab'$/;"	v	class:ScilabLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    name = 'OCaml'$/;"	v	class:OcamlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    name = 'Opa'$/;"	v	class:OpaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    name = 'Standard ML'$/;"	v	class:SMLLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    name = 'BUGS'$/;"	v	class:BugsLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    name = 'JAGS'$/;"	v	class:JagsLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    name = 'Modelica'$/;"	v	class:ModelicaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    name = 'Stan'$/;"	v	class:StanLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    name = 'Nimrod'$/;"	v	class:NimrodLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nit.py	/^    name = 'Nit'$/;"	v	class:NitLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^    name = 'Nix'$/;"	v	class:NixLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    name = 'Logos'$/;"	v	class:LogosLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    name = 'Objective-C'$/;"	v	class:ObjectiveCLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    name = 'Objective-C++'$/;"	v	class:ObjectiveCppLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    name = 'Swift'$/;"	v	class:SwiftLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ooc.py	/^    name = 'Ooc'$/;"	v	class:OocLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    name = 'ANTLR With ActionScript Target'$/;"	v	class:AntlrActionScriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    name = 'ANTLR With C# Target'$/;"	v	class:AntlrCSharpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    name = 'ANTLR With CPP Target'$/;"	v	class:AntlrCppLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    name = 'ANTLR With Java Target'$/;"	v	class:AntlrJavaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    name = 'ANTLR With ObjectiveC Target'$/;"	v	class:AntlrObjectiveCLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    name = 'ANTLR With Perl Target'$/;"	v	class:AntlrPerlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    name = 'ANTLR With Python Target'$/;"	v	class:AntlrPythonLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    name = 'ANTLR With Ruby Target'$/;"	v	class:AntlrRubyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    name = 'ANTLR'$/;"	v	class:AntlrLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    name = 'EBNF'$/;"	v	class:EbnfLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    name = 'Embedded Ragel'$/;"	v	class:RagelEmbeddedLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    name = 'Ragel in C Host'$/;"	v	class:RagelCLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    name = 'Ragel in CPP Host'$/;"	v	class:RagelCppLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    name = 'Ragel in D Host'$/;"	v	class:RagelDLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    name = 'Ragel in Java Host'$/;"	v	class:RagelJavaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    name = 'Ragel in Objective C Host'$/;"	v	class:RagelObjectiveCLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    name = 'Ragel in Ruby Host'$/;"	v	class:RagelRubyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    name = 'Ragel'$/;"	v	class:RagelLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    name = 'Treetop'$/;"	v	class:TreetopLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    name = 'Ada'$/;"	v	class:AdaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    name = 'Delphi'$/;"	v	class:DelphiLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    name = 'Modula-2'$/;"	v	class:Modula2Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    name = 'Pawn'$/;"	v	class:PawnLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    name = 'SourcePawn'$/;"	v	class:SourcePawnLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    name = 'Perl'$/;"	v	class:PerlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    name = 'Perl6'$/;"	v	class:Perl6Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    name = 'PHP'$/;"	v	class:PhpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    name = 'Zephir'$/;"	v	class:ZephirLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    name = 'Logtalk'$/;"	v	class:LogtalkLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    name = 'Prolog'$/;"	v	class:PrologLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    name = 'Cython'$/;"	v	class:CythonLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    name = 'NumPy'$/;"	v	class:NumPyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    name = 'Python 3'$/;"	v	class:Python3Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    name = 'Python 3.0 Traceback'$/;"	v	class:Python3TracebackLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    name = 'Python Traceback'$/;"	v	class:PythonTracebackLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    name = 'Python console session'$/;"	v	class:PythonConsoleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    name = 'Python'$/;"	v	class:PythonLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    name = 'dg'$/;"	v	class:DgLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    name = 'RConsole'$/;"	v	class:RConsoleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    name = 'Rd'$/;"	v	class:RdLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    name = 'S'$/;"	v	class:SLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^    name = 'SPARQL'$/;"	v	class:SparqlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    name = 'REBOL'$/;"	v	class:RebolLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    name = 'Red'$/;"	v	class:RedLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^    name = 'ResourceBundle'$/;"	v	class:ResourceLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    name = 'RobotFramework'$/;"	v	class:RobotFrameworkLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    name = 'Fancy'$/;"	v	class:FancyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    name = 'Ruby irb session'$/;"	v	class:RubyConsoleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    name = 'Ruby'$/;"	v	class:RubyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^    name = 'Rust'$/;"	v	class:RustLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    name = "MoonScript"$/;"	v	class:MoonScriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    name = 'AppleScript'$/;"	v	class:AppleScriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    name = 'ChaiScript'$/;"	v	class:ChaiscriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    name = 'Hybris'$/;"	v	class:HybrisLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    name = 'LSL'$/;"	v	class:LSLLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    name = 'Lua'$/;"	v	class:LuaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    name = 'MOOCode'$/;"	v	class:MOOCodeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    name = 'Rexx'$/;"	v	class:RexxLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    name = 'Bash Session'$/;"	v	class:BashSessionLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    name = 'Bash'$/;"	v	class:BashLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    name = 'Batchfile'$/;"	v	class:BatchLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    name = 'PowerShell'$/;"	v	class:PowerShellLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    name = 'Shell Session'$/;"	v	class:ShellSessionLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    name = 'Tcsh'$/;"	v	class:TcshLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^    name = 'Newspeak'$/;"	v	class:NewspeakLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^    name = 'Smalltalk'$/;"	v	class:SmalltalkLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/snobol.py	/^    name = "Snobol"$/;"	v	class:SnobolLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^    name = 'Raw token data'$/;"	v	class:RawTokenLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^    name = 'Text only'$/;"	v	class:TextLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    name = 'MySQL'$/;"	v	class:MySqlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    name = 'PL\/pgSQL'$/;"	v	class:PlPgsqlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    name = 'PostgreSQL SQL dialect'$/;"	v	class:PostgresLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    name = 'PostgreSQL console (psql)'$/;"	v	class:PostgresConsoleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    name = 'PostgreSQL console - regexp based lexer'$/;"	v	class:PsqlRegexLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    name = 'RQL'$/;"	v	class:RqlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    name = 'SQL'$/;"	v	class:SqlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    name = 'sqlite3con'$/;"	v	class:SqliteConsoleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^    name = 'Tcl'$/;"	v	class:TclLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = "HTML+Handlebars"$/;"	v	class:HandlebarsHtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = "HTML+Twig"$/;"	v	class:TwigHtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = "Handlebars"$/;"	v	class:HandlebarsLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'CSS+Django\/Jinja'$/;"	v	class:CssDjangoLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'CSS+Genshi Text'$/;"	v	class:CssGenshiLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'CSS+Lasso'$/;"	v	class:LassoCssLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'CSS+Mako'$/;"	v	class:MakoCssLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'CSS+Myghty'$/;"	v	class:MyghtyCssLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'CSS+PHP'$/;"	v	class:CssPhpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'CSS+Ruby'$/;"	v	class:CssErbLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'CSS+Smarty'$/;"	v	class:CssSmartyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'Cheetah'$/;"	v	class:CheetahLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'Coldfusion CFC'$/;"	v	class:ColdfusionCFCLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'Coldfusion HTML'$/;"	v	class:ColdfusionHtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'Coldfusion'$/;"	v	class:ColdfusionMarkupLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'Django\/Jinja'$/;"	v	class:DjangoLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'ERB'$/;"	v	class:ErbLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'Evoque'$/;"	v	class:EvoqueLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'Genshi Text'$/;"	v	class:GenshiTextLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'Genshi'$/;"	v	class:GenshiLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'HTML+Cheetah'$/;"	v	class:CheetahHtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'HTML+Django\/Jinja'$/;"	v	class:HtmlDjangoLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'HTML+Evoque'$/;"	v	class:EvoqueHtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'HTML+Genshi'$/;"	v	class:HtmlGenshiLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'HTML+Lasso'$/;"	v	class:LassoHtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'HTML+Mako'$/;"	v	class:MakoHtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'HTML+Myghty'$/;"	v	class:MyghtyHtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'HTML+PHP'$/;"	v	class:HtmlPhpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'HTML+Smarty'$/;"	v	class:HtmlSmartyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'HTML+Velocity'$/;"	v	class:VelocityHtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'Java Server Page'$/;"	v	class:JspLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'JavaScript+Cheetah'$/;"	v	class:CheetahJavascriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'JavaScript+Django\/Jinja'$/;"	v	class:JavascriptDjangoLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'JavaScript+Genshi Text'$/;"	v	class:JavascriptGenshiLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'JavaScript+Lasso'$/;"	v	class:LassoJavascriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'JavaScript+Mako'$/;"	v	class:MakoJavascriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'JavaScript+Myghty'$/;"	v	class:MyghtyJavascriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'JavaScript+PHP'$/;"	v	class:JavascriptPhpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'JavaScript+Ruby'$/;"	v	class:JavascriptErbLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'JavaScript+Smarty'$/;"	v	class:JavascriptSmartyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'Mako'$/;"	v	class:MakoLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'Mason'$/;"	v	class:MasonLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'Myghty'$/;"	v	class:MyghtyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'RHTML'$/;"	v	class:RhtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'Scalate Server Page'$/;"	v	class:SspLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'Smarty'$/;"	v	class:SmartyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'Tea'$/;"	v	class:TeaTemplateLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'Twig'$/;"	v	class:TwigLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'Velocity'$/;"	v	class:VelocityLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'XML+Cheetah'$/;"	v	class:CheetahXmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'XML+Django\/Jinja'$/;"	v	class:XmlDjangoLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'XML+Evoque'$/;"	v	class:EvoqueXmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'XML+Lasso'$/;"	v	class:LassoXmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'XML+Mako'$/;"	v	class:MakoXmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'XML+Myghty'$/;"	v	class:MyghtyXmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'XML+PHP'$/;"	v	class:XmlPhpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'XML+Ruby'$/;"	v	class:XmlErbLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'XML+Smarty'$/;"	v	class:XmlSmartyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'XML+Velocity'$/;"	v	class:VelocityXmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'YAML+Jinja'$/;"	v	class:YamlJinjaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'cfstatement'$/;"	v	class:ColdfusionLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    name = 'liquid'$/;"	v	class:LiquidLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/testing.py	/^    name = 'Gherkin'$/;"	v	class:GherkinLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    name = 'Awk'$/;"	v	class:AwkLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    name = 'VimL'$/;"	v	class:VimLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    name = 'Gettext Catalog'$/;"	v	class:GettextLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    name = 'HTTP'$/;"	v	class:HttpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    name = 'IRC logs'$/;"	v	class:IrcLogsLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    name = 'Todotxt'$/;"	v	class:TodotxtLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    name = 'Coq'$/;"	v	class:CoqLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    name = 'Isabelle'$/;"	v	class:IsabelleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    name = 'Lean'$/;"	v	class:LeanLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^    name = 'UrbiScript'$/;"	v	class:UrbiscriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    name = 'Cirru'$/;"	v	class:CirruLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    name = 'Duel'$/;"	v	class:DuelLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    name = 'QML'$/;"	v	class:QmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    name = 'Slim'$/;"	v	class:SlimLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    name = 'XQuery'$/;"	v	class:XQueryLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatter.py	/^    name = None$/;"	v	class:Formatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/bbcode.py	/^    name = 'BBCode'$/;"	v	class:BBCodeFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    name = 'HTML'$/;"	v	class:HtmlFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    name = 'img'$/;"	v	class:ImageFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    name = 'img_bmp'$/;"	v	class:BmpImageFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    name = 'img_gif'$/;"	v	class:GifImageFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    name = 'img_jpg'$/;"	v	class:JpgImageFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^    name = 'LaTeX'$/;"	v	class:LatexFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^    name = 'Raw tokens'$/;"	v	class:RawTokenFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^    name = 'Testcase'$/;"	v	class:TestcaseFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^    name = 'Text only'$/;"	v	class:NullFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/rtf.py	/^    name = 'RTF'$/;"	v	class:RtfFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/svg.py	/^    name = 'SVG'$/;"	v	class:SvgFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^    name = 'Terminal'$/;"	v	class:TerminalFormatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal256.py	/^    name = 'Terminal256'$/;"	v	class:Terminal256Formatter
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    name = None$/;"	v	class:Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    name = 'ActionScript 3'$/;"	v	class:ActionScript3Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    name = 'ActionScript'$/;"	v	class:ActionScriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    name = 'MXML'$/;"	v	class:MxmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    name = 'GAP'$/;"	v	class:GAPLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    name = 'Mathematica'$/;"	v	class:MathematicaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    name = 'MuPAD'$/;"	v	class:MuPADLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^    name = 'AmbientTalk'$/;"	v	class:AmbientTalkLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/apl.py	/^    name = 'APL'$/;"	v	class:APLLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    name = 'GAS'$/;"	v	class:GasLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    name = 'LLVM'$/;"	v	class:LlvmLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    name = 'NASM'$/;"	v	class:NasmLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    name = 'c-objdump'$/;"	v	class:CObjdumpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    name = 'ca65 assembler'$/;"	v	class:Ca65Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    name = 'cpp-objdump'$/;"	v	class:CppObjdumpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    name = 'd-objdump'$/;"	v	class:DObjdumpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    name = 'objdump'$/;"	v	class:ObjdumpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    name = 'objdump-nasm'$/;"	v	class:NasmObjdumpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^    name = 'AutoIt'$/;"	v	class:AutoItLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^    name = 'autohotkey'$/;"	v	class:AutohotkeyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    name = 'BlitzBasic'$/;"	v	class:BlitzBasicLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    name = 'BlitzMax'$/;"	v	class:BlitzMaxLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    name = 'CBM BASIC V2'$/;"	v	class:CbmBasicV2Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    name = 'Monkey'$/;"	v	class:MonkeyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    name = 'QBasic'$/;"	v	class:QBasicLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    name = 'ABAP'$/;"	v	class:ABAPLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    name = 'COBOL'$/;"	v	class:CobolLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    name = 'COBOLFree'$/;"	v	class:CobolFreeformatLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    name = 'GoodData-CL'$/;"	v	class:GoodDataCLLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    name = 'MAQL'$/;"	v	class:MaqlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    name = 'OpenEdge ABL'$/;"	v	class:OpenEdgeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    name = 'C'$/;"	v	class:CLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    name = 'C++'$/;"	v	class:CppLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    name = 'CUDA'$/;"	v	class:CudaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    name = 'Clay'$/;"	v	class:ClayLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    name = 'MQL'$/;"	v	class:MqlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    name = 'Pike'$/;"	v	class:PikeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    name = 'SWIG'$/;"	v	class:SwigLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    name = 'Vala'$/;"	v	class:ValaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    name = 'eC'$/;"	v	class:ECLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    name = 'nesC'$/;"	v	class:NesCLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/chapel.py	/^    name = 'Chapel'$/;"	v	class:ChapelLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    name = 'ApacheConf'$/;"	v	class:ApacheConfLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    name = 'CFEngine3'$/;"	v	class:Cfengine3Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    name = 'Docker'$/;"	v	class:DockerLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    name = 'INI'$/;"	v	class:IniLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    name = 'Kconfig'$/;"	v	class:KconfigLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    name = 'Lighttpd configuration file'$/;"	v	class:LighttpdConfLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    name = 'Nginx configuration file'$/;"	v	class:NginxConfLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    name = 'Properties'$/;"	v	class:PropertiesLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    name = 'SquidConf'$/;"	v	class:SquidConfLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    name = 'reg'$/;"	v	class:RegeditLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^    name = "PyPy Log"$/;"	v	class:PyPyLogLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^    name = 'VCTreeStatus'$/;"	v	class:VCTreeStatusLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    name = 'CSS'$/;"	v	class:CssLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    name = 'SCSS'$/;"	v	class:ScssLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    name = 'Sass'$/;"	v	class:SassLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    name = 'Croc'$/;"	v	class:CrocLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    name = 'D'$/;"	v	class:DLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    name = 'MiniD'$/;"	v	class:MiniDLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dalvik.py	/^    name = 'Smali'$/;"	v	class:SmaliLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    name = 'JSON'$/;"	v	class:JsonLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    name = 'JSON-LD'$/;"	v	class:JsonLdLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    name = 'YAML'$/;"	v	class:YamlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^    name = 'Darcs Patch'$/;"	v	class:DarcsPatchLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^    name = 'Diff'$/;"	v	class:DiffLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    name = 'Boo'$/;"	v	class:BooLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    name = 'C#'$/;"	v	class:CSharpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    name = 'FSharp'$/;"	v	class:FSharpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    name = 'Nemerle'$/;"	v	class:NemerleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    name = 'VB.net'$/;"	v	class:VbNetLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    name = 'aspx-cs'$/;"	v	class:CSharpAspxLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    name = 'aspx-gen'$/;"	v	class:GenericAspxLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    name = 'aspx-vb'$/;"	v	class:VbNetAspxLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    name = 'Alloy'$/;"	v	class:AlloyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    name = 'Bro'$/;"	v	class:BroLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    name = 'Mscgen'$/;"	v	class:MscgenLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    name = 'Pan'$/;"	v	class:PanLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    name = 'Protocol Buffer'$/;"	v	class:ProtoBufLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    name = 'Puppet'$/;"	v	class:PuppetLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    name = 'RSL'$/;"	v	class:RslLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    name = 'VGL'$/;"	v	class:VGLLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    name = 'Dylan session'$/;"	v	class:DylanConsoleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    name = 'Dylan'$/;"	v	class:DylanLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    name = 'DylanLID'$/;"	v	class:DylanLidLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^    name = 'ECL'$/;"	v	class:ECLLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/eiffel.py	/^    name = 'Eiffel'$/;"	v	class:EiffelLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    name = 'Elixir iex session'$/;"	v	class:ElixirConsoleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    name = 'Elixir'$/;"	v	class:ElixirLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    name = 'Erlang erl session'$/;"	v	class:ErlangShellLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    name = 'Erlang'$/;"	v	class:ErlangLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    name = 'Befunge'$/;"	v	class:BefungeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    name = 'Brainfuck'$/;"	v	class:BrainfuckLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    name = 'Redcode'$/;"	v	class:RedcodeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^    name = 'Factor'$/;"	v	class:FactorLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    name = 'Fantom'$/;"	v	class:FantomLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    name = 'Felix'$/;"	v	class:FelixLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^    name = 'Fortran'$/;"	v	class:FortranLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/foxpro.py	/^    name = 'FoxPro'$/;"	v	class:FoxProLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^    name = 'Go'$/;"	v	class:GoLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^    name = 'Cypher'$/;"	v	class:CypherLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    name = 'Asymptote'$/;"	v	class:AsymptoteLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    name = 'GLSL'$/;"	v	class:GLShaderLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    name = 'Gnuplot'$/;"	v	class:GnuplotLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    name = 'POVRay'$/;"	v	class:PovrayLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    name = 'PostScript'$/;"	v	class:PostScriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    name = 'Agda'$/;"	v	class:AgdaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    name = 'Cryptol'$/;"	v	class:CryptolLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    name = 'Haskell'$/;"	v	class:HaskellLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    name = 'Idris'$/;"	v	class:IdrisLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    name = 'Koka'$/;"	v	class:KokaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    name = 'Literate Agda'$/;"	v	class:LiterateAgdaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    name = 'Literate Cryptol'$/;"	v	class:LiterateCryptolLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    name = 'Literate Haskell'$/;"	v	class:LiterateHaskellLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    name = 'Literate Idris'$/;"	v	class:LiterateIdrisLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    name = 'Haxe'$/;"	v	class:HaxeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    name = 'Hxml'$/;"	v	class:HxmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    name = 'systemverilog'$/;"	v	class:SystemVerilogLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    name = 'verilog'$/;"	v	class:VerilogLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    name = 'vhdl'$/;"	v	class:VhdlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    name = 'DTD'$/;"	v	class:DtdLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    name = 'HTML'$/;"	v	class:HtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    name = 'Haml'$/;"	v	class:HamlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    name = 'Jade'$/;"	v	class:JadeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    name = 'Scaml'$/;"	v	class:ScamlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    name = 'XML'$/;"	v	class:XmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    name = 'XSLT'$/;"	v	class:XsltLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/idl.py	/^    name = 'IDL'$/;"	v	class:IDLLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^    name = 'Igor'$/;"	v	class:IgorLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^    name = 'Limbo'$/;"	v	class:LimboLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    name = 'Debian Control file'$/;"	v	class:DebianControlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    name = 'Debian Sourcelist'$/;"	v	class:SourcesListLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    name = 'NSIS'$/;"	v	class:NSISLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    name = 'RPMSpec'$/;"	v	class:RPMSpecLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    name = 'Inform 6 template'$/;"	v	class:Inform6TemplateLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    name = 'Inform 6'$/;"	v	class:Inform6Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    name = 'Inform 7'$/;"	v	class:Inform7Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    name = 'TADS 3'$/;"	v	class:Tads3Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/iolang.py	/^    name = 'Io'$/;"	v	class:IoLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    name = 'CoffeeScript'$/;"	v	class:CoffeeScriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    name = 'Dart'$/;"	v	class:DartLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    name = 'JavaScript'$/;"	v	class:JavascriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    name = 'Kal'$/;"	v	class:KalLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    name = 'Lasso'$/;"	v	class:LassoLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    name = 'LiveScript'$/;"	v	class:LiveScriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    name = 'Mask'$/;"	v	class:MaskLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    name = 'Objective-J'$/;"	v	class:ObjectiveJLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    name = 'TypeScript'$/;"	v	class:TypeScriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^    name = 'Julia console'$/;"	v	class:JuliaConsoleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^    name = 'Julia'$/;"	v	class:JuliaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    name = 'AspectJ'$/;"	v	class:AspectJLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    name = 'Ceylon'$/;"	v	class:CeylonLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    name = 'Clojure'$/;"	v	class:ClojureLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    name = 'ClojureScript'$/;"	v	class:ClojureScriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    name = 'Golo'$/;"	v	class:GoloLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    name = 'Gosu Template'$/;"	v	class:GosuTemplateLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    name = 'Gosu'$/;"	v	class:GosuLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    name = 'Groovy'$/;"	v	class:GroovyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    name = 'Ioke'$/;"	v	class:IokeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    name = 'Jasmin'$/;"	v	class:JasminLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    name = 'Java'$/;"	v	class:JavaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    name = 'Kotlin'$/;"	v	class:KotlinLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    name = 'Pig'$/;"	v	class:PigLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    name = 'Scala'$/;"	v	class:ScalaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    name = 'Xtend'$/;"	v	class:XtendLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    name = 'Common Lisp'$/;"	v	class:CommonLispLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    name = 'Hy'$/;"	v	class:HyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    name = 'NewLisp'$/;"	v	class:NewLispLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    name = 'Racket'$/;"	v	class:RacketLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    name = 'Scheme'$/;"	v	class:SchemeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    name = 'Base Makefile'$/;"	v	class:BaseMakefileLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    name = 'CMake'$/;"	v	class:CMakeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    name = 'Makefile'$/;"	v	class:MakefileLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    name = "CSS+mozpreproc"$/;"	v	class:MozPreprocCssLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    name = "Javascript+mozpreproc"$/;"	v	class:MozPreprocJavascriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    name = "XUL+mozpreproc"$/;"	v	class:MozPreprocXulLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    name = 'BBCode'$/;"	v	class:BBCodeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    name = 'Groff'$/;"	v	class:GroffLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    name = 'MoinMoin\/Trac Wiki markup'$/;"	v	class:MoinWikiLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    name = 'TeX'$/;"	v	class:TexLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    name = 'mozhashpreproc'$/;"	v	class:MozPreprocHashLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    name = 'mozpercentpreproc'$/;"	v	class:MozPreprocPercentLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    name = 'reStructuredText'$/;"	v	class:RstLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    name = 'Matlab session'$/;"	v	class:MatlabSessionLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    name = 'Matlab'$/;"	v	class:MatlabLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    name = 'Octave'$/;"	v	class:OctaveLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    name = 'Scilab'$/;"	v	class:ScilabLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    name = 'OCaml'$/;"	v	class:OcamlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    name = 'Opa'$/;"	v	class:OpaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    name = 'Standard ML'$/;"	v	class:SMLLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    name = 'BUGS'$/;"	v	class:BugsLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    name = 'JAGS'$/;"	v	class:JagsLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    name = 'Modelica'$/;"	v	class:ModelicaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    name = 'Stan'$/;"	v	class:StanLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    name = 'Nimrod'$/;"	v	class:NimrodLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nit.py	/^    name = 'Nit'$/;"	v	class:NitLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^    name = 'Nix'$/;"	v	class:NixLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    name = 'Logos'$/;"	v	class:LogosLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    name = 'Objective-C'$/;"	v	class:ObjectiveCLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    name = 'Objective-C++'$/;"	v	class:ObjectiveCppLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    name = 'Swift'$/;"	v	class:SwiftLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ooc.py	/^    name = 'Ooc'$/;"	v	class:OocLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    name = 'ANTLR With ActionScript Target'$/;"	v	class:AntlrActionScriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    name = 'ANTLR With C# Target'$/;"	v	class:AntlrCSharpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    name = 'ANTLR With CPP Target'$/;"	v	class:AntlrCppLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    name = 'ANTLR With Java Target'$/;"	v	class:AntlrJavaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    name = 'ANTLR With ObjectiveC Target'$/;"	v	class:AntlrObjectiveCLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    name = 'ANTLR With Perl Target'$/;"	v	class:AntlrPerlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    name = 'ANTLR With Python Target'$/;"	v	class:AntlrPythonLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    name = 'ANTLR With Ruby Target'$/;"	v	class:AntlrRubyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    name = 'ANTLR'$/;"	v	class:AntlrLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    name = 'EBNF'$/;"	v	class:EbnfLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    name = 'Embedded Ragel'$/;"	v	class:RagelEmbeddedLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    name = 'Ragel in C Host'$/;"	v	class:RagelCLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    name = 'Ragel in CPP Host'$/;"	v	class:RagelCppLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    name = 'Ragel in D Host'$/;"	v	class:RagelDLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    name = 'Ragel in Java Host'$/;"	v	class:RagelJavaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    name = 'Ragel in Objective C Host'$/;"	v	class:RagelObjectiveCLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    name = 'Ragel in Ruby Host'$/;"	v	class:RagelRubyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    name = 'Ragel'$/;"	v	class:RagelLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    name = 'Treetop'$/;"	v	class:TreetopLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    name = 'Ada'$/;"	v	class:AdaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    name = 'Delphi'$/;"	v	class:DelphiLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    name = 'Modula-2'$/;"	v	class:Modula2Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    name = 'Pawn'$/;"	v	class:PawnLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    name = 'SourcePawn'$/;"	v	class:SourcePawnLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    name = 'Perl'$/;"	v	class:PerlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    name = 'Perl6'$/;"	v	class:Perl6Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    name = 'PHP'$/;"	v	class:PhpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    name = 'Zephir'$/;"	v	class:ZephirLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    name = 'Logtalk'$/;"	v	class:LogtalkLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    name = 'Prolog'$/;"	v	class:PrologLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    name = 'Cython'$/;"	v	class:CythonLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    name = 'NumPy'$/;"	v	class:NumPyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    name = 'Python 3'$/;"	v	class:Python3Lexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    name = 'Python 3.0 Traceback'$/;"	v	class:Python3TracebackLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    name = 'Python Traceback'$/;"	v	class:PythonTracebackLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    name = 'Python console session'$/;"	v	class:PythonConsoleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    name = 'Python'$/;"	v	class:PythonLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    name = 'dg'$/;"	v	class:DgLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    name = 'RConsole'$/;"	v	class:RConsoleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    name = 'Rd'$/;"	v	class:RdLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    name = 'S'$/;"	v	class:SLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^    name = 'SPARQL'$/;"	v	class:SparqlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    name = 'REBOL'$/;"	v	class:RebolLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    name = 'Red'$/;"	v	class:RedLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^    name = 'ResourceBundle'$/;"	v	class:ResourceLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    name = 'RobotFramework'$/;"	v	class:RobotFrameworkLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    name = 'Fancy'$/;"	v	class:FancyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    name = 'Ruby irb session'$/;"	v	class:RubyConsoleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    name = 'Ruby'$/;"	v	class:RubyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^    name = 'Rust'$/;"	v	class:RustLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    name = "MoonScript"$/;"	v	class:MoonScriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    name = 'AppleScript'$/;"	v	class:AppleScriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    name = 'ChaiScript'$/;"	v	class:ChaiscriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    name = 'Hybris'$/;"	v	class:HybrisLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    name = 'LSL'$/;"	v	class:LSLLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    name = 'Lua'$/;"	v	class:LuaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    name = 'MOOCode'$/;"	v	class:MOOCodeLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    name = 'Rexx'$/;"	v	class:RexxLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    name = 'Bash Session'$/;"	v	class:BashSessionLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    name = 'Bash'$/;"	v	class:BashLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    name = 'Batchfile'$/;"	v	class:BatchLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    name = 'PowerShell'$/;"	v	class:PowerShellLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    name = 'Shell Session'$/;"	v	class:ShellSessionLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    name = 'Tcsh'$/;"	v	class:TcshLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^    name = 'Newspeak'$/;"	v	class:NewspeakLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^    name = 'Smalltalk'$/;"	v	class:SmalltalkLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/snobol.py	/^    name = "Snobol"$/;"	v	class:SnobolLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^    name = 'Raw token data'$/;"	v	class:RawTokenLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^    name = 'Text only'$/;"	v	class:TextLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    name = 'MySQL'$/;"	v	class:MySqlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    name = 'PL\/pgSQL'$/;"	v	class:PlPgsqlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    name = 'PostgreSQL SQL dialect'$/;"	v	class:PostgresLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    name = 'PostgreSQL console (psql)'$/;"	v	class:PostgresConsoleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    name = 'PostgreSQL console - regexp based lexer'$/;"	v	class:PsqlRegexLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    name = 'RQL'$/;"	v	class:RqlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    name = 'SQL'$/;"	v	class:SqlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    name = 'sqlite3con'$/;"	v	class:SqliteConsoleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^    name = 'Tcl'$/;"	v	class:TclLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = "HTML+Handlebars"$/;"	v	class:HandlebarsHtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = "HTML+Twig"$/;"	v	class:TwigHtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = "Handlebars"$/;"	v	class:HandlebarsLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'CSS+Django\/Jinja'$/;"	v	class:CssDjangoLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'CSS+Genshi Text'$/;"	v	class:CssGenshiLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'CSS+Lasso'$/;"	v	class:LassoCssLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'CSS+Mako'$/;"	v	class:MakoCssLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'CSS+Myghty'$/;"	v	class:MyghtyCssLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'CSS+PHP'$/;"	v	class:CssPhpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'CSS+Ruby'$/;"	v	class:CssErbLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'CSS+Smarty'$/;"	v	class:CssSmartyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'Cheetah'$/;"	v	class:CheetahLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'Coldfusion CFC'$/;"	v	class:ColdfusionCFCLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'Coldfusion HTML'$/;"	v	class:ColdfusionHtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'Coldfusion'$/;"	v	class:ColdfusionMarkupLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'Django\/Jinja'$/;"	v	class:DjangoLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'ERB'$/;"	v	class:ErbLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'Evoque'$/;"	v	class:EvoqueLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'Genshi Text'$/;"	v	class:GenshiTextLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'Genshi'$/;"	v	class:GenshiLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'HTML+Cheetah'$/;"	v	class:CheetahHtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'HTML+Django\/Jinja'$/;"	v	class:HtmlDjangoLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'HTML+Evoque'$/;"	v	class:EvoqueHtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'HTML+Genshi'$/;"	v	class:HtmlGenshiLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'HTML+Lasso'$/;"	v	class:LassoHtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'HTML+Mako'$/;"	v	class:MakoHtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'HTML+Myghty'$/;"	v	class:MyghtyHtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'HTML+PHP'$/;"	v	class:HtmlPhpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'HTML+Smarty'$/;"	v	class:HtmlSmartyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'HTML+Velocity'$/;"	v	class:VelocityHtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'Java Server Page'$/;"	v	class:JspLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'JavaScript+Cheetah'$/;"	v	class:CheetahJavascriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'JavaScript+Django\/Jinja'$/;"	v	class:JavascriptDjangoLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'JavaScript+Genshi Text'$/;"	v	class:JavascriptGenshiLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'JavaScript+Lasso'$/;"	v	class:LassoJavascriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'JavaScript+Mako'$/;"	v	class:MakoJavascriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'JavaScript+Myghty'$/;"	v	class:MyghtyJavascriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'JavaScript+PHP'$/;"	v	class:JavascriptPhpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'JavaScript+Ruby'$/;"	v	class:JavascriptErbLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'JavaScript+Smarty'$/;"	v	class:JavascriptSmartyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'Mako'$/;"	v	class:MakoLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'Mason'$/;"	v	class:MasonLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'Myghty'$/;"	v	class:MyghtyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'RHTML'$/;"	v	class:RhtmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'Scalate Server Page'$/;"	v	class:SspLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'Smarty'$/;"	v	class:SmartyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'Tea'$/;"	v	class:TeaTemplateLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'Twig'$/;"	v	class:TwigLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'Velocity'$/;"	v	class:VelocityLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'XML+Cheetah'$/;"	v	class:CheetahXmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'XML+Django\/Jinja'$/;"	v	class:XmlDjangoLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'XML+Evoque'$/;"	v	class:EvoqueXmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'XML+Lasso'$/;"	v	class:LassoXmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'XML+Mako'$/;"	v	class:MakoXmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'XML+Myghty'$/;"	v	class:MyghtyXmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'XML+PHP'$/;"	v	class:XmlPhpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'XML+Ruby'$/;"	v	class:XmlErbLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'XML+Smarty'$/;"	v	class:XmlSmartyLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'XML+Velocity'$/;"	v	class:VelocityXmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'YAML+Jinja'$/;"	v	class:YamlJinjaLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'cfstatement'$/;"	v	class:ColdfusionLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    name = 'liquid'$/;"	v	class:LiquidLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/testing.py	/^    name = 'Gherkin'$/;"	v	class:GherkinLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    name = 'Awk'$/;"	v	class:AwkLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    name = 'VimL'$/;"	v	class:VimLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    name = 'Gettext Catalog'$/;"	v	class:GettextLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    name = 'HTTP'$/;"	v	class:HttpLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    name = 'IRC logs'$/;"	v	class:IrcLogsLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    name = 'Todotxt'$/;"	v	class:TodotxtLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    name = 'Coq'$/;"	v	class:CoqLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    name = 'Isabelle'$/;"	v	class:IsabelleLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    name = 'Lean'$/;"	v	class:LeanLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^    name = 'UrbiScript'$/;"	v	class:UrbiscriptLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    name = 'Cirru'$/;"	v	class:CirruLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    name = 'Duel'$/;"	v	class:DuelLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    name = 'QML'$/;"	v	class:QmlLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    name = 'Slim'$/;"	v	class:SlimLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    name = 'XQuery'$/;"	v	class:XQueryLexer
name	plugged/vim-wakatime/plugin/packages/wakatime/projects/base.py	/^    def name(self):$/;"	m	class:BaseProject
name	plugged/vim-wakatime/plugin/packages/wakatime/projects/git.py	/^    def name(self):$/;"	m	class:Git
name	plugged/vim-wakatime/plugin/packages/wakatime/projects/mercurial.py	/^    def name(self):$/;"	m	class:Mercurial
name	plugged/vim-wakatime/plugin/packages/wakatime/projects/projectmap.py	/^    def name(self):$/;"	m	class:ProjectMap
name	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^    def name(self):$/;"	m	class:Subversion
name	plugged/vim-wakatime/plugin/packages/wakatime/projects/wakatime_project_file.py	/^    def name(self):$/;"	m	class:WakaTimeProjectFile
name_builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    name_builtins = ($/;"	v	class:FelixLexer
name_builtins	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    name_builtins = ($/;"	v	class:FelixLexer
name_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    name_class = r'[A-Z]\\w*'$/;"	v	class:MonkeyLexer
name_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    name_class = r'[A-Z]\\w*'$/;"	v	class:MonkeyLexer
name_constant	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    name_constant = r'[A-Z_][A-Z0-9_]*'$/;"	v	class:MonkeyLexer
name_constant	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    name_constant = r'[A-Z_][A-Z0-9_]*'$/;"	v	class:MonkeyLexer
name_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    name_function = r'[A-Z]\\w*'$/;"	v	class:MonkeyLexer
name_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    name_function = r'[A-Z]\\w*'$/;"	v	class:MonkeyLexer
name_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    name_module = r'[a-z0-9_]*'$/;"	v	class:MonkeyLexer
name_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    name_module = r'[a-z0-9_]*'$/;"	v	class:MonkeyLexer
name_pseudo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    name_pseudo = ($/;"	v	class:FelixLexer
name_pseudo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    name_pseudo = ($/;"	v	class:FelixLexer
name_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    name_re = r'(?:\\.\\.\\.|[a-z_]%s*[!?]?)' % alnum$/;"	v	class:ElixirLexer
name_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    name_re = r'(?:\\.\\.\\.|[a-z_]%s*[!?]?)' % alnum$/;"	v	class:ElixirLexer
name_variable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    name_variable = r'[a-z_]\\w*'$/;"	v	class:MonkeyLexer
name_variable	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    name_variable = r'[a-z_]\\w*'$/;"	v	class:MonkeyLexer
namedtuple	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/url.py	/^from collections import namedtuple$/;"	i
namedtuple	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^    from collections import namedtuple$/;"	i
namedtuple_as_object	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    int namedtuple_as_object;$/;"	m	struct:_PyEncoderObject	file:
names	autoload/plug.vim	/^function! s:names(...)$/;"	f
narrowing_dot	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:narrowing_dot() "{{{$/;"	f
narrowing_input_history	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:narrowing_input_history() "{{{$/;"	f
ncname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    ncname = "(?:%s+%s*)" % (ncnamestartchar, ncnamechar)$/;"	v	class:XQueryLexer
ncname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    ncname = "(?:%s+%s*)" % (ncnamestartchar, ncnamechar)$/;"	v	class:XQueryLexer
ncnamechar	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    ncnamechar = r"(?:" + ncnamestartchar + r"|-|\\.|[0-9])"$/;"	v	class:XQueryLexer
ncnamechar	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    ncnamechar = r"(?:" + ncnamestartchar + r"|-|\\.|[0-9])"$/;"	v	class:XQueryLexer
ncnamestartchar	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    ncnamestartchar = r"(?:[A-Z]|_|[a-z])"$/;"	v	class:XQueryLexer
ncnamestartchar	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    ncnamestartchar = r"(?:[A-Z]|_|[a-z])"$/;"	v	class:XQueryLexer
nerdtree#checkForBrowse	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#compareBookmarks	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareBookmarks(first, second)$/;"	f
nerdtree#compareNodes	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#compareNodesBySortKey	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodesBySortKey(n1, n2)$/;"	f
nerdtree#completeBookmarks	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#deprecated	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#echo	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#exec	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f
nerdtree#has_opt	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#loadClassFiles	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#postSourceActions	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#renderView	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#runningWindows	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#ui_glue#bookmarkNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...)$/;"	f
nerdtree#ui_glue#chRootCwd	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd()$/;"	f
nerdtree#ui_glue#clearBookmarks	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks)$/;"	f
nerdtree#ui_glue#createDefaultBindings	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings()$/;"	f
nerdtree#ui_glue#invokeKeyMap	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key)$/;"	f
nerdtree#ui_glue#openBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name)$/;"	f
nerdtree#ui_glue#revealBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name)$/;"	f
nerdtree#ui_glue#setupCommands	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands()$/;"	f
nerdtree#ui_glue#upDir	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(keepState)$/;"	f
nerdtree#version	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version()$/;"	f
nested_app_ebins	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^nested_app_ebins() ->$/;"	f
nested_parse_with_titles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^from sphinx.util.nodes import nested_parse_with_titles$/;"	i
nested_parse_with_titles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^from sphinx.util.nodes import nested_parse_with_titles$/;"	i
netloc	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/url.py	/^    def netloc(self):$/;"	m	class:Url
netrc	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^        from netrc import netrc, NetrcParseError$/;"	i
new	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/retry.py	/^    def new(self, **kw):$/;"	m	class:Retry
new_data	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_scilab_builtins.py	/^    new_data = {}$/;"	v
new_data	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_scilab_builtins.py	/^    new_data = {}$/;"	v
new_window	autoload/plug.vim	/^function! s:new_window()$/;"	f
newid	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! s:newid(data) abort$/;"	f
newid	plugged/calendar.vim/autoload/calendar/google/task.vim	/^function! s:newid(data) abort$/;"	f
newmod	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^newmod = _automodule(__name__)$/;"	v
newmod	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^newmod = _automodule(__name__)$/;"	v
newmod	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^newmod = _automodule(__name__)$/;"	v
newmod	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^newmod = _automodule(__name__)$/;"	v
next	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    next = __next__$/;"	v	class:lookahead
next	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    next = __next__$/;"	v	class:lookahead
next	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^        def next(self):$/;"	m	class:.Iterator
next	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^next = advance_iterator$/;"	v
next_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/codingstatemachine.py	/^    def next_state(self, c):$/;"	m	class:CodingStateMachine
nextpairs	plugged/smartpairs.vim/spec/support/vim.rb	/^    def nextpairs$/;"	f	class:Support.Vim
no_testCreateLocaltime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def no_testCreateLocaltime(self):$/;"	m	class:LocalTestCase
no_testCreateLocaltime	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def no_testCreateLocaltime(self):$/;"	m	class:LocalTestCase
nocover	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^    from .packages import simplejson as json  # pragma: nocover$/;"	i
nocover	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^    from .packages.ordereddict import OrderedDict  # pragma: nocover$/;"	i
nocover	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^    from collections import OrderedDict  # pragma: nocover$/;"	i
nocover	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^    from .packages import simplejson as json  # pragma: nocover$/;"	i
nocover	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^    from .packages import tzlocal  # pragma: nocover$/;"	i
nocover	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^    from .packages import tzlocal3 as tzlocal  # pragma: nocover$/;"	i
nocover	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^    import json  # pragma: nocover$/;"	i
nocover	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^    from ..packages.ordereddict import OrderedDict  # pragma: nocover$/;"	i
nodes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^from docutils import nodes$/;"	i
nodes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^from docutils import nodes$/;"	i
nonid_reserved	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    nonid_reserved = set(('(', ')', '[', ']', '{', '}', ',', ';', '...', '_'))$/;"	v	class:SMLLexer
nonid_reserved	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    nonid_reserved = set(('(', ')', '[', ']', '{', '}', ',', ';', '...', '_'))$/;"	v	class:SMLLexer
nonpackage	plugged/vim-wakatime/plugin/packages/wakatime/languages/python.py	/^    nonpackage = False$/;"	v	class:PythonParser
normalize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^def normalize(string, remove=''):$/;"	f
normalize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^def normalize(string, remove=''):$/;"	f
normalize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def normalize(self, dt, is_dst=False):$/;"	m	class:UTC
normalize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def normalize(self, dt, is_dst=False):$/;"	m	class:_FixedOffset
normalize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    def normalize(self, dt):$/;"	m	class:DstTzInfo
normalize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    def normalize(self, dt, is_dst=False):$/;"	m	class:StaticTzInfo
normalize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def normalize(self, dt, is_dst=False):$/;"	m	class:UTC
normalize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def normalize(self, dt, is_dst=False):$/;"	m	class:_FixedOffset
normalize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    def normalize(self, dt):$/;"	m	class:DstTzInfo
normalize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    def normalize(self, dt, is_dst=False):$/;"	m	class:StaticTzInfo
normalize_string	plugged/smartpairs.vim/spec/support/vim.rb	/^    def normalize_string(string)$/;"	f	class:Support
nowait_expr	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:nowait_expr(map) "{{{$/;"	f
nowait_map	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:nowait_map(mode) "{{{$/;"	f
nr	plugged/calendar.vim/autoload/calendar/color.vim	/^function! s:nr(x) abort$/;"	f
nr	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:nr(x) abort$/;"	f
nr2byte	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2byte	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2enc_char	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2enc_char	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2hex	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
nsplit	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
ntlm	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/ntlmpool.py	/^from ntlm import ntlm$/;"	i
number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    number = r'(?:0[xX][a-zA-Z0-9]+|\\d+)'$/;"	v	class:GasLexer
number	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    number = r'(?:0[xX][a-zA-Z0-9]+|\\d+)'$/;"	v	class:GasLexer
number_lines_in_file	plugged/vim-wakatime/plugin/packages/wakatime/stats.py	/^def number_lines_in_file(file_name):$/;"	f
numeric_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    numeric_types = (int, float)$/;"	v
numeric_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    numeric_types = (int, long, float)$/;"	v
numpy	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^            and ('import numpy' in text or 'from numpy import' in text)$/;"	i
numpy	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^            and ('import numpy' in text or 'from numpy import' in text)$/;"	i
objbrplace	plugged/Nvim-R/R/common_global.vim	/^let objbrplace = split(g:R_objbr_place, ",")$/;"	v
object_hook	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *object_hook;$/;"	m	struct:_PyScannerObject	file:
object_pairs_hook	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^                               object_pairs_hook=None)$/;"	v
objective	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^def objective(baselexer):$/;"	f
objective	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^def objective(baselexer):$/;"	f
objm2_pervasives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    objm2_pervasives = [$/;"	v	class:Modula2Lexer
objm2_pervasives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    objm2_pervasives = [$/;"	v	class:Modula2Lexer
objm2_reserved_words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    objm2_reserved_words = [$/;"	v	class:Modula2Lexer
objm2_reserved_words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    objm2_reserved_words = [$/;"	v	class:Modula2Lexer
obpllen	plugged/Nvim-R/R/common_global.vim	/^let obpllen = len(objbrplace) - 1$/;"	v
octn	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    octn = r'[0-7]+q'$/;"	v	class:NasmLexer
octn	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    octn = r'[0-7]+q'$/;"	v	class:NasmLexer
ok	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def ok(self):$/;"	m	class:Response
oldmod	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^oldmod = sys.modules[__name__]$/;"	v
oldmod	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^oldmod = sys.modules[__name__]$/;"	v
oldmod	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^oldmod = sys.modules[__name__]$/;"	v
oldmod	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^oldmod = sys.modules[__name__]$/;"	v
on_gather_candidates	plugged/unite.vim/autoload/unite/sources/line.vim	/^function! s:on_gather_candidates(direction, context, start, max) "{{{$/;"	f
on_init	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:on_init(args, context) "{{{$/;"	f
on_sync_source	plugged/Nvim-R/R/synctex_evince_backward.py	/^    def on_sync_source(self, input_file, source_link, timestamp):$/;"	m	class:EvinceWindowProxy
on_window_close	plugged/Nvim-R/R/synctex_evince_backward.py	/^    def on_window_close(self):$/;"	m	class:EvinceWindowProxy
one	plugged/vim-ruby/spec/indent/basic_spec.rb	/^      def one$/;"	f
op	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    op = (u'[-~\\\\^\\\\*!%&\\\\\\\\<>\\\\|+=:\/?@\\u00a6-\\u00a7\\u00a9\\u00ac\\u00ae\\u00b0-\\u00b1'$/;"	v	class:ScalaLexer
op	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    op = (u'[-~\\\\^\\\\*!%&\\\\\\\\<>\\\\|+=:\/?@\\u00a6-\\u00a7\\u00a9\\u00ac\\u00ae\\u00b0-\\u00b1'$/;"	v	class:ScalaLexer
op1_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    op1_re = "|".join(re.escape(s) for s in OPERATORS1)$/;"	v	class:ElixirLexer
op1_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    op1_re = "|".join(re.escape(s) for s in OPERATORS1)$/;"	v	class:ElixirLexer
op2_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    op2_re = "|".join(re.escape(s) for s in OPERATORS2)$/;"	v	class:ElixirLexer
op2_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    op2_re = "|".join(re.escape(s) for s in OPERATORS2)$/;"	v	class:ElixirLexer
op3_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    op3_re = "|".join(re.escape(s) for s in OPERATORS3)$/;"	v	class:ElixirLexer
op3_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    op3_re = "|".join(re.escape(s) for s in OPERATORS3)$/;"	v	class:ElixirLexer
opWords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    opWords = [$/;"	v	class:NimrodLexer
opWords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    opWords = [$/;"	v	class:NimrodLexer
opcodes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    opcodes = ('DAT', 'MOV', 'ADD', 'SUB', 'MUL', 'DIV', 'MOD',$/;"	v	class:RedcodeLexer
opcodes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    opcodes = ('DAT', 'MOV', 'ADD', 'SUB', 'MUL', 'DIV', 'MOD',$/;"	v	class:RedcodeLexer
open	plugged/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:open(candidate) "{{{$/;"	f
open	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^function! s:open(filename) abort "{{{$/;"	f
open	plugged/vim-wakatime/plugin/packages/wakatime/compat.py	/^    open = codecs.open$/;"	v
open	plugged/vim-wakatime/plugin/packages/wakatime/compat.py	/^    open = open$/;"	v
open	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^from ..compat import u, open, import_module$/;"	i
open	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^from .compat import u, open, is_py3$/;"	i
open	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardetect.py	/^from io import open$/;"	i
open	plugged/vim-wakatime/plugin/packages/wakatime/projects/git.py	/^from ..compat import u, open$/;"	i
open	plugged/vim-wakatime/plugin/packages/wakatime/projects/mercurial.py	/^from ..compat import u, open$/;"	i
open	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^from ..compat import u, open$/;"	i
open	plugged/vim-wakatime/plugin/packages/wakatime/projects/wakatime_project_file.py	/^from ..compat import u, open$/;"	i
open	plugged/vim-wakatime/plugin/packages/wakatime/stats.py	/^from .compat import u, open$/;"	i
open	plugged/vimproc.vim/autoload/proc_w32.c	/^#define open /;"	d	file:
openExplorer	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node)$/;"	f
openHSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target)$/;"	f
openInNewTab	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target)$/;"	f
openInNewTabSilent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target)$/;"	f
openNodeRecursively	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node)$/;"	f
openVSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target)$/;"	f
open_current_line	plugged/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:open_current_line(is_highlight) "{{{$/;"	f
open_resource	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^def open_resource(name):$/;"	f
open_resource	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^def open_resource(name):$/;"	f
opener	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_sourcemod_builtins.py	/^    opener = Opener()$/;"	v
opener	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_sourcemod_builtins.py	/^    opener = Opener()$/;"	v
opening_brace_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    def opening_brace_callback(lexer, match, context):$/;"	m	class:Perl6Lexer
opening_brace_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    def opening_brace_callback(lexer, match, context):$/;"	m	class:Perl6Lexer
openpty	plugged/vimproc.vim/autoload/ptytty.c	/^openpty(int *amaster, int *aslave, char *name,$/;"	f
operations	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^    operations = ($/;"	v	class:IgorLexer
operations	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^    operations = ($/;"	v	class:IgorLexer
operator	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^import operator$/;"	i
operator_root_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def operator_root_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
operator_root_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def operator_root_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
operator_words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    operator_words = ($/;"	v	class:FelixLexer
operator_words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    operator_words = ($/;"	v	class:FelixLexer
operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    operators = ($/;"	v	class:MathematicaLexer
operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    operators = ('AND', 'EQV', 'IMP', 'NOT', 'OR', 'XOR')$/;"	v	class:QBasicLexer
operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    operators = set(($/;"	v	class:DylanLexer
operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    operators = r'(\\+\\+?|--?|\\*|\/|<|>|\/=|=:=|=\/=|=<|>=|==?|<-|!|\\?)'$/;"	v	class:ErlangLexer
operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    operators = ($/;"	v	class:PowerShellLexer
operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    operators = ($/;"	v	class:IsabelleLexer
operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    operators = ($/;"	v	class:LeanLexer
operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    operators = ($/;"	v	class:MathematicaLexer
operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    operators = ('AND', 'EQV', 'IMP', 'NOT', 'OR', 'XOR')$/;"	v	class:QBasicLexer
operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    operators = set(($/;"	v	class:DylanLexer
operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    operators = r'(\\+\\+?|--?|\\*|\/|<|>|\/=|=:=|=\/=|=<|>=|==?|<-|!|\\?)'$/;"	v	class:ErlangLexer
operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    operators = ($/;"	v	class:PowerShellLexer
operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    operators = ($/;"	v	class:IsabelleLexer
operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    operators = ($/;"	v	class:LeanLexer
opfunc	plugged/vim-surround/plugin/surround.vim	/^function! s:opfunc(type,...) " {{{1$/;"	f
opfunc2	plugged/vim-surround/plugin/surround.vim	/^function! s:opfunc2(arg)$/;"	f
ops_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    ops_re = r'(?:%s|%s|%s)' % (op3_re, op2_re, op1_re)$/;"	v	class:ElixirLexer
ops_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    ops_re = r'(?:%s|%s|%s)' % (op3_re, op2_re, op1_re)$/;"	v	class:ElixirLexer
option	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_vim_builtins.py	/^option = _getoption()$/;"	v
option	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^        from pygments.lexers._vim_builtins import command, option, auto$/;"	i
option	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_vim_builtins.py	/^option = _getoption()$/;"	v
option	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^        from pygments.lexers._vim_builtins import command, option, auto$/;"	i
option_init	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:option_init(name, default) "{{{$/;"	f
option_spec	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^    option_spec = {}$/;"	v	class:PygmentsDoc
option_spec	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^    option_spec = {}$/;"	v	class:PygmentsDoc
optional_arguments	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^    optional_arguments = 0$/;"	v	class:PygmentsDoc
optional_arguments	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^    optional_arguments = 0$/;"	v	class:PygmentsDoc
options	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^from .api import request, get, head, post, patch, put, delete, options$/;"	i
options	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/api.py	/^def options(url, **kwargs):$/;"	f
options	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def options(self, url, **kwargs):$/;"	m	class:Session
options	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_bigint_as_string.py	/^    options = ($/;"	v	class:TestBigintAsString
opts	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    opts = ($/;"	v	class:SquidConfLexer
opts	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    opts = ($/;"	v	class:SquidConfLexer
or	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:or(xs) abort$/;"	f
ordered_dict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^        from . import ordered_dict$/;"	i
orig_connection_ssl_wrap_socket	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^orig_connection_ssl_wrap_socket = connection.ssl_wrap_socket$/;"	v
orig_util_HAS_SNI	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^orig_util_HAS_SNI = util.HAS_SNI$/;"	v
origin_req_host	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def origin_req_host(self):$/;"	m	class:MockRequest
os	plugged/Nvim-R/R/synctex_evince_backward.py	/^import dbus.mainloop.glib, sys, os, signal$/;"	i
os	plugged/Nvim-R/R/synctex_evince_forward.py	/^import dbus.mainloop.glib, sys, os$/;"	i
os	plugged/syntastic/syntax_checkers/python/codec.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/cli.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/languages/data.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/languages/unknown.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/offlinequeue.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/_mapping.py	/^    import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^import os.path$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^    import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_mapping.py	/^    import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_php_builtins.py	/^    import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/_mapping.py	/^    import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^import os.path$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^    import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_mapping.py	/^    import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_php_builtins.py	/^    import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    import doctest, os, sys$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^import sys, datetime, os.path, gettext$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_docs.py	/^import unittest, os, os.path, sys$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^import sys, os, os.path$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^    import os.path$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    import doctest, os, sys$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^import sys, datetime, os.path, gettext$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_docs.py	/^import unittest, os, os.path, sys$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^import sys, os, os.path$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^    import os.path$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/certs.py	/^import os.path$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^    import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tool.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/tests.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/unix.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/tests.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/unix.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/projects/git.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/projects/mercurial.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/projects/projectmap.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/projects/wakatime_project_file.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/session_cache.py	/^import os$/;"	i
os	plugged/vim-wakatime/plugin/packages/wakatime/stats.py	/^import os$/;"	i
os	plugged/vimproc.vim/tools/fork.py	/^import os$/;"	i
output2	plugged/delimitMate/test/autoclose_matchpairs.vim	/^    let output2 = substitute(output, '(', s:l, 'g')$/;"	v
output2	plugged/delimitMate/test/autoclose_matchpairs.vim	/^    let output2 = substitute(output2, ')', s:r, 'g')$/;"	v
output_q	plugged/delimitMate/test/autoclose_quotes.vim	/^    let output_q = substitute(output,"'" , escape(escape(quote, '"'), '\\'), 'g')$/;"	v
over	plugged/calendar.vim/autoload/calendar/text.vim	/^fu! s:over(j, v, u) abort$/;"	f
package_folder	plugged/vim-wakatime/plugin/packages/wakatime/cli.py	/^    package_folder = os.path.dirname(os.path.dirname(os.path.abspath(sys.argv[0])))$/;"	v
package_folder	plugged/vim-wakatime/plugin/packages/wakatime/cli.py	/^package_folder = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))$/;"	v
pad_between_letters	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
pad_both_sides	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
pad_left	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
pad_right	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
padding_by_displaywidth	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
pairs_hook	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *pairs_hook;$/;"	m	struct:_PyScannerObject	file:
parens	plugged/vim-wakatime/plugin/packages/wakatime/languages/php.py	/^    parens = 0$/;"	v	class:PhpParser
parens	plugged/vim-wakatime/plugin/packages/wakatime/languages/python.py	/^    parens = 0$/;"	v	class:PythonParser
parent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^    parent = None$/;"	v	class:_TokenType
parent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^    parent = None$/;"	v	class:_TokenType
parse	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^    def parse(self):$/;"	m	class:DependencyParser
parse	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^    def parse(self, tokens=[]):$/;"	m	class:TokenParser
parse	plugged/vim-wakatime/plugin/packages/wakatime/languages/c_cpp.py	/^    def parse(self, tokens=[]):$/;"	m	class:CppParser
parse	plugged/vim-wakatime/plugin/packages/wakatime/languages/data.py	/^    def parse(self, tokens=[]):$/;"	m	class:JsonParser
parse	plugged/vim-wakatime/plugin/packages/wakatime/languages/dotnet.py	/^    def parse(self, tokens=[]):$/;"	m	class:CSharpParser
parse	plugged/vim-wakatime/plugin/packages/wakatime/languages/jvm.py	/^    def parse(self, tokens=[]):$/;"	m	class:JavaParser
parse	plugged/vim-wakatime/plugin/packages/wakatime/languages/php.py	/^    def parse(self, tokens=[]):$/;"	m	class:PhpParser
parse	plugged/vim-wakatime/plugin/packages/wakatime/languages/python.py	/^    def parse(self, tokens=[]):$/;"	m	class:PythonParser
parse	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^    def parse(self, tokens=[]):$/;"	m	class:HtmlDjangoParser
parse	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^    def parse(self, tokens=[]):$/;"	m	class:LassoJavascriptParser
parse	plugged/vim-wakatime/plugin/packages/wakatime/languages/unknown.py	/^    def parse(self, tokens=[]):$/;"	m	class:UnknownParser
parseArguments	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^def parseArguments():$/;"	f
parseConfigFile	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^def parseConfigFile(configFile=None):$/;"	f
parse_args	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def parse_args(self, args=None, namespace=None):$/;"	m	class:ArgumentParser
parse_back_quote	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_back_quote(script, i) "{{{$/;"	f
parse_block	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_block(script) "{{{$/;"	f
parse_block_scalar_empty_line	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    def parse_block_scalar_empty_line(indent_token_class, content_token_class):$/;"	m	class:YamlLexer
parse_block_scalar_empty_line	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    def parse_block_scalar_empty_line(indent_token_class, content_token_class):$/;"	m	class:YamlLexer
parse_block_scalar_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    def parse_block_scalar_indent(token_class):$/;"	m	class:YamlLexer
parse_block_scalar_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    def parse_block_scalar_indent(token_class):$/;"	m	class:YamlLexer
parse_cmdline	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_cmdline(cmdline) "{{{$/;"	f
parse_constant	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *parse_constant;$/;"	m	struct:_PyScannerObject	file:
parse_datatypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_postgres_builtins.py	/^    def parse_datatypes(f):$/;"	f
parse_datatypes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_postgres_builtins.py	/^    def parse_datatypes(f):$/;"	f
parse_dict_header	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^from .utils import parse_dict_header, to_native_string$/;"	i
parse_dict_header	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def parse_dict_header(value):$/;"	f
parse_double_quote	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_double_quote(script, i) "{{{$/;"	f
parse_equal	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_equal(script) "{{{$/;"	f
parse_float	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *parse_float;$/;"	m	struct:_PyScannerObject	file:
parse_header_links	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def parse_header_links(value):$/;"	f
parse_http_list	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib.request import parse_http_list, getproxies, proxy_bypass$/;"	i
parse_http_list	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib2 import parse_http_list$/;"	i
parse_ignore_file	plugged/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^function! s:parse_ignore_file(file, prefix) "{{{$/;"	f
parse_int	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *parse_int;$/;"	m	struct:_PyScannerObject	file:
parse_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_postgres_builtins.py	/^    def parse_keywords(f):$/;"	f
parse_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_postgres_builtins.py	/^    def parse_keywords(f):$/;"	f
parse_known_args	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def parse_known_args(self, args=None, namespace=None):$/;"	m	class:ArgumentParser
parse_list_header	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def parse_list_header(value):$/;"	f
parse_options	autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
parse_path	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! s:parse_path(args) "{{{$/;"	f
parse_plain_scalar_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    def parse_plain_scalar_indent(token_class):$/;"	m	class:YamlLexer
parse_plain_scalar_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    def parse_plain_scalar_indent(token_class):$/;"	m	class:YamlLexer
parse_pseudos	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_postgres_builtins.py	/^    def parse_pseudos(f):$/;"	f
parse_pseudos	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_postgres_builtins.py	/^    def parse_pseudos(f):$/;"	f
parse_redirection	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_redirection(script) "{{{$/;"	f
parse_single_quote	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_single_quote(script, i) "{{{$/;"	f
parse_tilde	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_tilde(script) "{{{$/;"	f
parse_title	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! s:parse_title(title, ...) abort$/;"	f
parse_title	plugged/calendar.vim/autoload/calendar/view/task.vim	/^function! s:parse_title(title) abort$/;"	f
parse_url	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^from .packages.urllib3.util import parse_url$/;"	i
parse_url	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^from .util.url import parse_url$/;"	i
parse_url	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/url.py	/^def parse_url(url):$/;"	f
parse_variables	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_variables(script) "{{{$/;"	f
parse_wildcard	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_wildcard(script) "{{{$/;"	f
parser	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^    parser = None$/;"	v	class:DependencyParser
partition	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
passed	plugged/delimitMate/test/autoclose_matchpairs.vim	/^    let passed = line == eval(output2)$/;"	v
passed	plugged/delimitMate/test/expand_cr.vim	/^  let passed = lines == expected$/;"	v
passed	plugged/delimitMate/test/expand_space.vim	/^  let passed = lines == expected$/;"	v
paste	plugged/unite.vim/autoload/unite/kinds/common.vim	/^function! s:paste(word, command, opt) "{{{$/;"	f
patch	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^from .api import request, get, head, post, patch, put, delete, options$/;"	i
patch	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/api.py	/^def patch(url, data=None, **kwargs):$/;"	f
patch	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def patch(self, url, data=None, **kwargs):$/;"	m	class:Session
path	autoload/plug.vim	/^  function! s:path(path)$/;"	f
path	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^import os.path$/;"	i
path	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^import os.path$/;"	i
path	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^import sys, datetime, os.path, gettext$/;"	i
path	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_docs.py	/^import unittest, os, os.path, sys$/;"	i
path	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^import sys, os, os.path$/;"	i
path	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^    import os.path$/;"	i
path	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^import sys, datetime, os.path, gettext$/;"	i
path	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_docs.py	/^import unittest, os, os.path, sys$/;"	i
path	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^import sys, os, os.path$/;"	i
path	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^    import os.path$/;"	i
path	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/certs.py	/^import os.path$/;"	i
path2directory	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2project_directory	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
path_extensions	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:path_extensions()$/;"	f
path_input	plugged/Nvim-R/R/synctex_evince_forward.py	/^path_input = os.getcwd() + '\/' + sys.argv[3]$/;"	v
path_output	plugged/Nvim-R/R/synctex_evince_backward.py	/^path_output = os.getcwd() + '\/' + sys.argv[1]$/;"	v
path_output	plugged/Nvim-R/R/synctex_evince_backward.py	/^path_output = path_output.replace(" ", "%20")$/;"	v
path_output	plugged/Nvim-R/R/synctex_evince_forward.py	/^path_output = os.getcwd() + '\/' + sys.argv[1]$/;"	v
path_output	plugged/Nvim-R/R/synctex_evince_forward.py	/^path_output = path_output.replace(" ", "%20")$/;"	v
path_separator	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:path_separator()$/;"	f
path_url	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def path_url(self):$/;"	m	class:RequestEncodingMixin
permutations	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
pgroup_open	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:pgroup_open(statements, is_pty, npipe) "{{{$/;"	f
pickle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    import cPickle as pickle$/;"	i
pickle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    import pickle$/;"	i
pickle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    import pickle as pickle$/;"	i
pickle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    import pickle$/;"	i
pickle	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_errors.py	/^import sys, pickle$/;"	i
pickle	plugged/vim-wakatime/plugin/packages/wakatime/session_cache.py	/^import pickle$/;"	i
pid	plugged/vimproc.vim/tools/fork.py	/^pid = os.fork()$/;"	v
pil_available	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    pil_available = False$/;"	v
pil_available	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    pil_available = True$/;"	v
pil_available	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    pil_available = False$/;"	v
pil_available	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    pil_available = True$/;"	v
pim_pervasives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    pim_pervasives = [$/;"	v	class:Modula2Lexer
pim_pervasives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    pim_pervasives = [$/;"	v	class:Modula2Lexer
pim_reserved_words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    pim_reserved_words = [$/;"	v	class:Modula2Lexer
pim_reserved_words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    pim_reserved_words = [$/;"	v	class:Modula2Lexer
pitarget	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    pitarget = "%s+%s*" % (pitarget_namestartchar, pitarget_namechar)$/;"	v	class:XQueryLexer
pitarget	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    pitarget = "%s+%s*" % (pitarget_namestartchar, pitarget_namechar)$/;"	v	class:XQueryLexer
pitarget_namechar	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    pitarget_namechar = r"(?:" + pitarget_namestartchar + r"|-|\\.|[0-9])"$/;"	v	class:XQueryLexer
pitarget_namechar	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    pitarget_namechar = r"(?:" + pitarget_namestartchar + r"|-|\\.|[0-9])"$/;"	v	class:XQueryLexer
pitarget_namestartchar	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    pitarget_namestartchar = r"(?:[A-KN-WYZ]|_|:|[a-kn-wyz])"$/;"	v	class:XQueryLexer
pitarget_namestartchar	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    pitarget_namestartchar = r"(?:[A-KN-WYZ]|_|:|[a-kn-wyz])"$/;"	v	class:XQueryLexer
pkg_resources	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/plugin.py	/^    import pkg_resources$/;"	i
pkg_resources	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/plugin.py	/^    pkg_resources = None$/;"	v
pkg_resources	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/plugin.py	/^    import pkg_resources$/;"	i
pkg_resources	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/plugin.py	/^    pkg_resources = None$/;"	v
platform	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^import platform$/;"	i
platform	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^import platform$/;"	i
platform	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^import platform$/;"	i
plineopen	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:plineopen(npipe, commands, is_pty) "{{{$/;"	f
plug#begin	autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	autoload/plug.vim	/^function! plug#load(...)$/;"	f
plug_window_exists	autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
plugin	plugged/unite.vim/autoload/unite.vim	/^augroup plugin-unite$/;"	a
plugin	plugged/unite.vim/plugin/unite/buffer.vim	/^augroup plugin-unite-source-buffer$/;"	a
plugin	plugged/unite.vim/plugin/unite/history_yank.vim	/^  augroup plugin-unite-history-yank$/;"	a
plugin	plugged/unite.vim/plugin/unite/window.vim	/^augroup plugin-unite-source-window$/;"	a
poll	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/connection.py	/^    from select import poll, POLLIN$/;"	i
poll	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/connection.py	/^    poll = False$/;"	v
poll	plugged/vimproc.vim/autoload/fakepoll.h	/^int poll(struct pollfd *pollSet, int pollCount, int pollTimeout)$/;"	f
pollfd	plugged/vimproc.vim/autoload/fakepoll.h	/^typedef struct pollfd {$/;"	s
pollfd_t	plugged/vimproc.vim/autoload/fakepoll.h	/^} pollfd_t;$/;"	t	typeref:struct:pollfd
pool_classes_by_scheme	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^pool_classes_by_scheme = {$/;"	v
pop	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:pop(list) abort$/;"	f
pop	plugged/vim-wakatime/plugin/packages/wakatime/offlinequeue.py	/^    def pop(self):$/;"	m	class:Queue
pop	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    pop = DictMixin.pop$/;"	v	class:OrderedDict
pop	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    def pop(self, key, default=__marker):$/;"	m	class:HTTPHeaderDict
pop	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def pop(self, key, default=__marker):$/;"	m	class:OrderedDict
pop	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    pop = DictMixin.pop$/;"	v	class:OrderedDict
popBuffer	plugged/vim-instant-markdown/after/ftplugin/markdown/instant-markdown.vim	/^function! s:popBuffer(bufnr)$/;"	f
popMarkdown	plugged/vim-instant-markdown/after/ftplugin/markdown/instant-markdown.vim	/^fu! s:popMarkdown()$/;"	f
popitem	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    def popitem(self, last=True):$/;"	m	class:OrderedDict
popitem	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def popitem(self, last=True):$/;"	m	class:OrderedDict
popitem	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def popitem(self, last=True):$/;"	m	class:OrderedDict
popstate_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def popstate_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
popstate_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def popstate_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
popstate_kindtest_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def popstate_kindtest_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
popstate_kindtest_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def popstate_kindtest_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
popstate_tag_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def popstate_tag_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
popstate_tag_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def popstate_tag_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
popstate_xmlcomment_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def popstate_xmlcomment_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
popstate_xmlcomment_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def popstate_xmlcomment_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
port_by_scheme	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^port_by_scheme = {$/;"	v
port_by_scheme	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^from .connectionpool import port_by_scheme$/;"	i
post	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^from .api import request, get, head, post, patch, put, delete, options$/;"	i
post	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/api.py	/^def post(url, data=None, json=None, **kwargs):$/;"	f
post	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def post(self, url, data=None, json=None, **kwargs):$/;"	m	class:Session
postdata	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! s:postdata(data) abort$/;"	f
pprint	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^    import pprint$/;"	i
pprint	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_php_builtins.py	/^    import pprint$/;"	i
pprint	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^    import pprint$/;"	i
pprint	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_php_builtins.py	/^    import pprint$/;"	i
pprint	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^    from pprint import pprint$/;"	i
pprint	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^    from pprint import pprint$/;"	i
pragma	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^    from .packages import simplejson as json  # pragma: nocover$/;"	i
pragma	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^    from .packages.ordereddict import OrderedDict  # pragma: nocover$/;"	i
pragma	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^    from collections import OrderedDict  # pragma: nocover$/;"	i
pragma	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^    from .packages import simplejson as json  # pragma: nocover$/;"	i
pragma	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^    from .packages import tzlocal  # pragma: nocover$/;"	i
pragma	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^    from .packages import tzlocal3 as tzlocal  # pragma: nocover$/;"	i
pragma	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^    import json  # pragma: nocover$/;"	i
pragma	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^    from ..packages.ordereddict import OrderedDict  # pragma: nocover$/;"	i
prefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^        def prefix(cls):$/;"	f	function:HtmlFormatter.get_style_defs
prefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^                     prefix=r'(?i)(^|(?<=[^0-9a-z_\\-]))',$/;"	v	class:OpenEdgeLexer
prefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^                prefix=r'(^|(?<=[^0-9a-z_\\-]))', suffix=r'\\s*($|(?=[^0-9a-z_\\-]))'),$/;"	v	class:CobolLexer
prefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^                prefix='(?i)', suffix=r'\\b'),$/;"	v	class:Inform6Lexer
prefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^                prefix=r'(?<!\\.)', suffix=r'\\b'),$/;"	v	class:PythonLexer
prefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^            prefix=r'(?<!\\.)', suffix=r'\\b'),$/;"	v	class:Python3Lexer
prefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^        def prefix(cls):$/;"	f	function:HtmlFormatter.get_style_defs
prefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^                     prefix=r'(?i)(^|(?<=[^0-9a-z_\\-]))',$/;"	v	class:OpenEdgeLexer
prefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^                prefix=r'(^|(?<=[^0-9a-z_\\-]))', suffix=r'\\s*($|(?=[^0-9a-z_\\-]))'),$/;"	v	class:CobolLexer
prefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^                prefix='(?i)', suffix=r'\\b'),$/;"	v	class:Inform6Lexer
prefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^                prefix=r'(?<!\\.)', suffix=r'\\b'),$/;"	v	class:PythonLexer
prefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^            prefix=r'(?<!\\.)', suffix=r'\\b'),$/;"	v	class:Python3Lexer
prefix_syms	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    prefix_syms = r'[!?~]'$/;"	v	class:FSharpLexer
prefix_syms	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    prefix_syms = r'[!?~]'$/;"	v	class:OcamlLexer
prefix_syms	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    prefix_syms = r'[!?~]'$/;"	v	class:CoqLexer
prefix_syms	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    prefix_syms = r'[!?~]'$/;"	v	class:FSharpLexer
prefix_syms	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    prefix_syms = r'[!?~]'$/;"	v	class:OcamlLexer
prefix_syms	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    prefix_syms = r'[!?~]'$/;"	v	class:CoqLexer
prefixedname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    prefixedname = "%s:%s" % (ncname, ncname)$/;"	v	class:XQueryLexer
prefixedname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    prefixedname = "%s:%s" % (ncname, ncname)$/;"	v	class:XQueryLexer
prepare	autoload/plug.vim	/^function! s:prepare()$/;"	f
prepare	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def prepare(self):$/;"	m	class:Request
prepare	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def prepare(self, method=None, url=None, headers=None, files=None,$/;"	m	class:PreparedRequest
prepare_auth	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def prepare_auth(self, auth, url=''):$/;"	m	class:PreparedRequest
prepare_body	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def prepare_body(self, data, files, json=None):$/;"	m	class:PreparedRequest
prepare_content_length	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def prepare_content_length(self, body):$/;"	m	class:PreparedRequest
prepare_cookies	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def prepare_cookies(self, cookies):$/;"	m	class:PreparedRequest
prepare_headers	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def prepare_headers(self, headers):$/;"	m	class:PreparedRequest
prepare_hooks	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def prepare_hooks(self, hooks):$/;"	m	class:PreparedRequest
prepare_method	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def prepare_method(self, method):$/;"	m	class:PreparedRequest
prepare_request	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def prepare_request(self, request):$/;"	m	class:Session
prepare_url	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def prepare_url(self, url, params):$/;"	m	class:PreparedRequest
prepend_scheme_if_needed	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def prepend_scheme_if_needed(url, new_scheme):$/;"	f
preproc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    preproc = ($/;"	v	class:FelixLexer
preproc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    preproc = ($/;"	v	class:FelixLexer
preproc_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    def preproc_callback(self, match, ctx):$/;"	m	class:HaxeLexer
preproc_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    def preproc_callback(self, match, ctx):$/;"	m	class:HaxeLexer
preproc_stack	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    preproc_stack = []$/;"	v	class:HaxeLexer
preproc_stack	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    preproc_stack = []$/;"	v	class:HaxeLexer
prettydt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^def prettydt(dt):$/;"	f
prettydt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^def prettydt(dt):$/;"	f
previewMarkdown	plugged/vim-instant-markdown/after/ftplugin/markdown/instant-markdown.vim	/^fu! s:previewMarkdown()$/;"	f
previewNodeCurrent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node)$/;"	f
previewNodeHSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node)$/;"	f
previewNodeVSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node)$/;"	f
preview_commit	autoload/plug.vim	/^function! s:preview_commit()$/;"	f
primitives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    primitives = [$/;"	v	class:FSharpLexer
primitives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    primitives = ('unit', 'int', 'float', 'bool', 'string', 'char', 'list', 'array')$/;"	v	class:OcamlLexer
primitives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    primitives = ('unit', 'int', 'bool', 'string', 'char', 'list',$/;"	v	class:LeanLexer
primitives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    primitives = ('unit', 'int', 'float', 'bool', 'string', 'char', 'list',$/;"	v	class:CoqLexer
primitives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    primitives = [$/;"	v	class:FSharpLexer
primitives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    primitives = ('unit', 'int', 'float', 'bool', 'string', 'char', 'list', 'array')$/;"	v	class:OcamlLexer
primitives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    primitives = ('unit', 'int', 'bool', 'string', 'char', 'list',$/;"	v	class:LeanLexer
primitives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    primitives = ('unit', 'int', 'float', 'bool', 'string', 'char', 'list',$/;"	v	class:CoqLexer
print_	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    def print_(*args, **kwargs):$/;"	f
print_	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    print_ = getattr(builtins, "print")$/;"	v
print_candidate	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:print_candidate() "{{{$/;"	f
print_error	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:print_error(string)$/;"	f
print_function	plugged/syntastic/syntax_checkers/python/codec.py	/^from __future__ import print_function$/;"	i
print_function	plugged/syntastic/syntax_checkers/python/compile.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/_mapping.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_mapping.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_php_builtins.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_sourcemod_builtins.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/_mapping.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_mapping.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_php_builtins.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_sourcemod_builtins.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardetect.py	/^from __future__ import absolute_import, print_function, unicode_literals$/;"	i
print_help	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def print_help(self, file=None):$/;"	m	class:ArgumentParser
print_message_log	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:print_message_log() "{{{$/;"	f
print_usage	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def print_usage(self, file=None):$/;"	m	class:ArgumentParser
print_version	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def print_version(self, file=None):$/;"	m	class:ArgumentParser
priority	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    priority = 0$/;"	v	class:Lexer
priority	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    priority = 0.1$/;"	v	class:CLexer
priority	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    priority = 0.1$/;"	v	class:CppLexer
priority	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    priority = 0.04  # Lower than C\/C++ and Objective C\/C++$/;"	v	class:SwigLexer
priority	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    priority = 0.05    # Lower than C$/;"	v	class:ObjectiveCLexer
priority	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    priority = 0.05    # Lower than C++$/;"	v	class:ObjectiveCppLexer
priority	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    priority = 0.25$/;"	v	class:LogosLexer
priority	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    priority = 0$/;"	v	class:Lexer
priority	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    priority = 0.1$/;"	v	class:CLexer
priority	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    priority = 0.1$/;"	v	class:CppLexer
priority	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    priority = 0.04  # Lower than C\/C++ and Objective C\/C++$/;"	v	class:SwigLexer
priority	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    priority = 0.05    # Lower than C$/;"	v	class:ObjectiveCLexer
priority	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    priority = 0.05    # Lower than C++$/;"	v	class:ObjectiveCppLexer
priority	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    priority = 0.25$/;"	v	class:LogosLexer
priority_date_regex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    priority_date_regex = r'(' + priority_regex + r')( )(' + date_regex + r')'$/;"	v	class:TodotxtLexer
priority_date_regex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    priority_date_regex = r'(' + priority_regex + r')( )(' + date_regex + r')'$/;"	v	class:TodotxtLexer
priority_regex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    priority_regex = r'\\([A-Z]\\)'$/;"	v	class:TodotxtLexer
priority_regex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    priority_regex = r'\\([A-Z]\\)'$/;"	v	class:TodotxtLexer
process	plugged/vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
process	plugged/vim-wakatime/plugin/packages/wakatime/projects/base.py	/^    def process(self):$/;"	m	class:BaseProject
process	plugged/vim-wakatime/plugin/packages/wakatime/projects/git.py	/^    def process(self):$/;"	m	class:Git
process	plugged/vim-wakatime/plugin/packages/wakatime/projects/mercurial.py	/^    def process(self):$/;"	m	class:Mercurial
process	plugged/vim-wakatime/plugin/packages/wakatime/projects/projectmap.py	/^    def process(self):$/;"	m	class:ProjectMap
process	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^    def process(self):$/;"	m	class:Subversion
process	plugged/vim-wakatime/plugin/packages/wakatime/projects/wakatime_project_file.py	/^    def process(self):$/;"	m	class:WakaTimeProjectFile
process	plugged/vimproc.vim/tools/leak_check.vim	/^  let process = vimproc#pgroup_open('ls')$/;"	v
process	plugged/vimproc.vim/tools/leak_check2.vim	/^let process = vimproc#pgroup_open('ls && ls')$/;"	v
process	plugged/vimproc.vim/tools/leak_check2.vim	/^let process = vimproc#pgroup_open('python ' . pwd . '\/fork.py')$/;"	v
process_tokendef	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def process_tokendef(cls, name, tokendefs=None):$/;"	m	class:RegexLexerMeta
process_tokendef	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def process_tokendef(cls, name, tokendefs=None):$/;"	m	class:RegexLexerMeta
product	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:product(lists) abort$/;"	f
progress_bar	autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
progress_opt	autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
project_regex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    project_regex = r'\\+\\S+'$/;"	v	class:TodotxtLexer
project_regex	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    project_regex = r'\\+\\S+'$/;"	v	class:TodotxtLexer
promptToDelBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToRenameBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToRenameBuffer(bufnum, msg, newFileName)$/;"	f
proof_operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    proof_operators = ('{', '}', '.', '..')$/;"	v	class:IsabelleLexer
proof_operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    proof_operators = ('{', '}', '.', '..')$/;"	v	class:IsabelleLexer
proxy	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^    proxy = None$/;"	v	class:PoolManager
proxy_bypass	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib import quote, unquote, quote_plus, unquote_plus, urlencode, getproxies, proxy_bypass$/;"	i
proxy_bypass	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib.request import parse_http_list, getproxies, proxy_bypass$/;"	i
proxy_from_url	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .packages.urllib3.poolmanager import PoolManager, proxy_from_url$/;"	i
proxy_from_url	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^from .poolmanager import PoolManager, ProxyManager, proxy_from_url$/;"	i
proxy_from_url	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^def proxy_from_url(url, **kw):$/;"	f
proxy_headers	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^    def proxy_headers(self, proxy):$/;"	m	class:HTTPAdapter
proxy_manager_for	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^    def proxy_manager_for(self, proxy, **proxy_kwargs):$/;"	m	class:HTTPAdapter
ptsname_compat	plugged/vimproc.vim/autoload/ptytty.c	/^ptsname_compat(int fd, char **buf)$/;"	f	file:
punc_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    punc_re = r'[()\\[\\],;|]'  # '{' and '}' are treated elsewhere$/;"	v	class:OpaLexer
punc_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    punc_re = r'[()\\[\\],;|]'  # '{' and '}' are treated elsewhere$/;"	v	class:OpaLexer
punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    punctuation = (",", ";", "(", ")", "[", "]", "{", "}")$/;"	v	class:MathematicaLexer
punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    punctuation = ('(', ')', ':', '{', '}', '[', ']', u'⦃', u'⦄', ':=', ',')$/;"	v	class:LeanLexer
punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    punctuation = (",", ";", "(", ")", "[", "]", "{", "}")$/;"	v	class:MathematicaLexer
punctuation	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    punctuation = ('(', ')', ':', '{', '}', '[', ']', u'⦃', u'⦄', ':=', ',')$/;"	v	class:LeanLexer
punctuation_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    punctuation_re = "|".join(re.escape(s) for s in PUNCTUATION)$/;"	v	class:ElixirLexer
punctuation_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    punctuation_re = "|".join(re.escape(s) for s in PUNCTUATION)$/;"	v	class:ElixirLexer
punctuation_root_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def punctuation_root_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
punctuation_root_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def punctuation_root_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
punctuations	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^    punctuations = ["(", ")", "[", "]", ";", "{", "}", ":", ",", "@"]$/;"	v	class:NixLexer
punctuations	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^    punctuations = ["(", ")", "[", "]", ";", "{", "}", ":", ",", "@"]$/;"	v	class:NixLexer
push	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
push	plugged/vim-wakatime/plugin/packages/wakatime/offlinequeue.py	/^    def push(self, data, stats, plugin, misc=None):$/;"	m	class:Queue
pushBuffer	plugged/vim-instant-markdown/after/ftplugin/markdown/instant-markdown.vim	/^function! s:pushBuffer(bufnr)$/;"	f
pushMarkdown	plugged/vim-instant-markdown/after/ftplugin/markdown/instant-markdown.vim	/^fu! s:pushMarkdown()$/;"	f
pushstate_cdata_section_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_cdata_section_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_cdata_section_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_cdata_section_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_element_content_cdata_section_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_element_content_cdata_section_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_element_content_cdata_section_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_element_content_cdata_section_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_element_content_processing_instruction_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_element_content_processing_instruction_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_element_content_processing_instruction_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_element_content_processing_instruction_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_element_content_starttag_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_element_content_starttag_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_element_content_starttag_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_element_content_starttag_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_element_content_xmlcomment_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_element_content_xmlcomment_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_element_content_xmlcomment_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_element_content_xmlcomment_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_kindtest_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_kindtest_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_kindtest_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_kindtest_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_occurrenceindicator_kindtest_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_occurrenceindicator_kindtest_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_occurrenceindicator_kindtest_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_occurrenceindicator_kindtest_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_attribute_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_operator_attribute_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_attribute_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_operator_attribute_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_operator_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_operator_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_cdata_section_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_operator_cdata_section_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_cdata_section_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_operator_cdata_section_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_kindtest_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_operator_kindtest_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_kindtest_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_operator_kindtest_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_kindtestforpi_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_operator_kindtestforpi_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_kindtestforpi_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_operator_kindtestforpi_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_order_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_operator_order_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_order_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_operator_order_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_processing_instruction_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_operator_processing_instruction_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_processing_instruction_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_operator_processing_instruction_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_root_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_operator_root_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_root_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_operator_root_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_root_construct_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_operator_root_construct_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_root_construct_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_operator_root_construct_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_root_validate	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_operator_root_validate(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_root_validate	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_operator_root_validate(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_root_validate_withmode	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_operator_root_validate_withmode(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_root_validate_withmode	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_operator_root_validate_withmode(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_starttag_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_operator_starttag_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_starttag_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_operator_starttag_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_xmlcomment_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_operator_xmlcomment_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_xmlcomment_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_operator_xmlcomment_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_root_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_root_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_root_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_root_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_starttag_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    def pushstate_starttag_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_starttag_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    def pushstate_starttag_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
put	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^from .api import request, get, head, post, patch, put, delete, options$/;"	i
put	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/api.py	/^def put(url, data=None, **kwargs):$/;"	f
put	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def put(self, url, data=None, **kwargs):$/;"	m	class:Session
pwd	plugged/vimproc.vim/tools/leak_check2.vim	/^let pwd = fnamemodify(expand('<sfile>'), ':p:h')$/;"	v
py_encode_basestring_ascii	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^py_encode_basestring_ascii(PyObject* self UNUSED, PyObject *pystr)$/;"	f	file:
py_encode_basestring_ascii	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^def py_encode_basestring_ascii(s, _PY3=PY3):$/;"	f
py_make_scanner	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/scanner.py	/^def py_make_scanner(context):$/;"	f
py_scanstring	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^py_scanstring(PyObject* self UNUSED, PyObject *args)$/;"	f	file:
py_scanstring	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^def py_scanstring(s, end, encoding=None, strict=True,$/;"	f
pygments	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^import pygments.unistring as uni$/;"	i
pygments	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^import pygments.unistring as uni$/;"	i
pylint	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    TerminalFormatter  # pylint:disable-msg=E0611$/;"	i
pylint	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    TerminalFormatter  # pylint:disable-msg=E0611$/;"	i
pyopenssl	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^    from .packages.urllib3.contrib import pyopenssl$/;"	i
pytz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    import pytz$/;"	i
pytz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^import pytz$/;"	i
pytz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^import pytz$/;"	i
pytz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    import pytz$/;"	i
pytz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^import pytz$/;"	i
pytz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^import pytz$/;"	i
pytz	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/tests.py	/^import pytz$/;"	i
pytz	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/unix.py	/^import pytz$/;"	i
pytz	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/win32.py	/^import pytz$/;"	i
pytz	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/tests.py	/^import pytz3 as pytz$/;"	i
pytz	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/unix.py	/^import pytz3 as pytz$/;"	i
pytz	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/win32.py	/^import pytz3 as pytz$/;"	i
q	plugged/Nvim-R/ftplugin/rdoc.vim	/^nmap <buffer><silent> q :q<CR>$/;"	m
qflist	plugged/vim-go/autoload/go/oracle.vim	/^func! s:qflist(output)$/;"	f
qflistSecond	plugged/vim-go/autoload/go/oracle.vim	/^func! s:qflistSecond(output)$/;"	f
qname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    qname = "(?:%s|%s)" % (prefixedname, unprefixedname)$/;"	v	class:XQueryLexer
qname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    qname = "(?:%s|%s)" % (prefixedname, unprefixedname)$/;"	v	class:XQueryLexer
query_path	plugged/vim-ruby/ftplugin/ruby.vim	/^function! s:query_path(root)$/;"	f
quick_help	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:quick_help() "{{{$/;"	f
quotattrcontentchar	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    quotattrcontentchar = r'[A-Za-z]|\\s|\\d|[!#$%()*+,\\-.\/:;=?@\\[\\\\\\]^_\\'`|~]'$/;"	v	class:XQueryLexer
quotattrcontentchar	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    quotattrcontentchar = r'[A-Za-z]|\\s|\\d|[!#$%()*+,\\-.\/:;=?@\\[\\\\\\]^_\\'`|~]'$/;"	v	class:XQueryLexer
quote	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib import quote, unquote, quote_plus, unquote_plus, urlencode, getproxies, proxy_bypass$/;"	i
quote	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib.parse import urlparse, urlunparse, urljoin, urlsplit, urlencode, quote, unquote, quote_plus, unquote_plus, urldefrag$/;"	i
quote	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^from .compat import (quote, urlparse, bytes, str, OrderedDict, unquote, is_py2,$/;"	i
quote_arg	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:quote_arg(arg)$/;"	f
quote_plus	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib import quote, unquote, quote_plus, unquote_plus, urlencode, getproxies, proxy_bypass$/;"	i
quote_plus	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib.parse import urlparse, urlunparse, urljoin, urlsplit, urlencode, quote, unquote, quote_plus, unquote_plus, urldefrag$/;"	i
quotes	plugged/delimitMate/test/autoclose_quotes.vim	/^  let quotes = split(g:delimitMate_quotes, '\\s')$/;"	v
r_comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    r_comment = re.compile(r'^\\s*@?#')$/;"	v	class:MakefileLexer
r_comment	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    r_comment = re.compile(r'^\\s*@?#')$/;"	v	class:MakefileLexer
r_special	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    r_special = re.compile($/;"	v	class:MakefileLexer
r_special	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    r_special = re.compile($/;"	v	class:MakefileLexer
rainbow_parentheses#activate	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^func! rainbow_parentheses#activate()$/;"	f
rainbow_parentheses#clear	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^func! rainbow_parentheses#clear()$/;"	f
rainbow_parentheses#load	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^func! rainbow_parentheses#load(...)$/;"	f
rainbow_parentheses#toggle	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^func! rainbow_parentheses#toggle()$/;"	f
rainbow_parentheses#toggleall	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^func! rainbow_parentheses#toggleall()$/;"	f
raise_errmsg	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^raise_errmsg(char *msg, PyObject *s, Py_ssize_t end)$/;"	f	file:
raise_for_status	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def raise_for_status(self):$/;"	m	class:Response
random	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    from random import random$/;"	i
random	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    from random import random$/;"	i
raw_decode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^    def raw_decode(self, s, idx=0, _w=WHITESPACE.match, _PY3=PY3):$/;"	m	class:JSONDecoder
rdoc_maxlines	plugged/Nvim-R/syntax/rdoc.vim	/^    let rdoc_maxlines = 2 * rdoc_minlines$/;"	v
rdoc_minlines	plugged/Nvim-R/syntax/rdoc.vim	/^    let rdoc_minlines = 200$/;"	v
re	plugged/syntastic/syntax_checkers/python/codec.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^    import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^    import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_php_builtins.py	/^    import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_postgres_builtins.py	/^    import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_sourcemod_builtins.py	/^    import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dalvik.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/foxpro.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/idl.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/modeline.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/regexopt.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/scanner.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^    import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^    import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_php_builtins.py	/^    import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_postgres_builtins.py	/^    import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_sourcemod_builtins.py	/^    import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dalvik.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/foxpro.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/idl.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/modeline.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/regexopt.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/scanner.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetprober.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ssl_match_hostname/_implementation.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/scanner.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tool.py	/^        import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/unix.py	/^import re$/;"	i
re	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/unix.py	/^import re$/;"	i
re_end_command	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^re_end_command = re.compile(r';\\s*(--.*?)?$')$/;"	v
re_end_command	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^re_end_command = re.compile(r';\\s*(--.*?)?$')$/;"	v
re_error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^re_error = re.compile(r'(ERROR|FATAL):')$/;"	v
re_error	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^re_error = re.compile(r'(ERROR|FATAL):')$/;"	v
re_message	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^re_message = re.compile($/;"	v
re_message	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^re_message = re.compile($/;"	v
re_prompt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^re_prompt = re.compile(r'^(\\S.*?)??[=\\-\\(\\$\\'\\"][#>]')$/;"	v
re_prompt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^re_prompt = re.compile(r'^(\\S.*?)??[=\\-\\(\\$\\'\\"][#>]')$/;"	v
re_psql_command	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^re_psql_command = re.compile(r'(\\s*)(\\\\.+?)(\\s+)$')$/;"	v
re_psql_command	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^re_psql_command = re.compile(r'\\s*\\\\')$/;"	v
re_psql_command	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^re_psql_command = re.compile(r'(\\s*)(\\\\.+?)(\\s+)$')$/;"	v
re_psql_command	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^re_psql_command = re.compile(r'\\s*\\\\')$/;"	v
read	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def read(self, amt=None, decode_content=None, cache_content=False):$/;"	m	class:HTTPResponse
read	plugged/vimproc.vim/autoload/proc_w32.c	/^#define read /;"	d	file:
read	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:read(...) dict "{{{$/;"	f
read	plugged/vimproc.vim/plugin/vimproc.vim	/^function! s:read(cmdline) "{{{$/;"	f
read_chunked	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def read_chunked(self, amt=None, decode_content=None):$/;"	m	class:HTTPResponse
read_line	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:read_line(...) dict "{{{$/;"	f
read_lines	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:read_lines(...) dict "{{{$/;"	f
read_pgroup	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:read_pgroup(...) dict "{{{$/;"	f
read_pipes	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:read_pipes(...) dict "{{{$/;"	f
read_timeout	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/timeout.py	/^    def read_timeout(self):$/;"	m	class:Timeout
readable	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def readable(self):$/;"	m	class:HTTPResponse
reader.read	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:reader.read()$/;"	f
reader.unread	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:reader.unread()$/;"	f
readfile	plugged/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:readfile(cache_dir, filename) abort$/;"	f
readinto	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def readinto(self, b):$/;"	m	class:HTTPResponse
reap	autoload/plug.vim	/^function! s:reap(name)$/;"	f
rebar_file	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^rebar_file(Dir) ->$/;"	f
rebar_opts	plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^rebar_opts(RebarFile) ->$/;"	f
rebuild_auth	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def rebuild_auth(self, prepared_request, response):$/;"	m	class:SessionRedirectMixin
rebuild_proxies	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def rebuild_proxies(self, prepared_request, proxies):$/;"	m	class:SessionRedirectMixin
recache_candidates_loop	plugged/unite.vim/autoload/unite/candidates.vim	/^function! s:recache_candidates_loop(context, is_force) "{{{$/;"	f
recall	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:recall() abort$/;"	f
recurse	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_recursion.py	/^    recurse = False$/;"	v	class:RecursiveJSONEncoder
recv	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^    def recv(self, *args, **kwargs):$/;"	m	class:WrappedSocket
redraw	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:redraw() "{{{$/;"	f
redraw	plugged/vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
reference	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^from pytz import reference$/;"	i
reference	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^from pytz import reference$/;"	i
refreshCurrent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node)$/;"	f
refreshRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot()$/;"	f
refreshView	plugged/vim-instant-markdown/after/ftplugin/markdown/instant-markdown.vim	/^function! s:refreshView()$/;"	f
regenerate	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^    def regenerate(filename, modules):$/;"	f
regenerate	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_php_builtins.py	/^    def regenerate(filename, modules):$/;"	f
regenerate	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_sourcemod_builtins.py	/^    def regenerate(filename, natives):$/;"	f
regenerate	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^    def regenerate(filename, modules):$/;"	f
regenerate	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_php_builtins.py	/^    def regenerate(filename, modules):$/;"	f
regenerate	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_sourcemod_builtins.py	/^    def regenerate(filename, natives):$/;"	f
regex_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^from pygments.regexopt import regex_opt$/;"	i
regex_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/regexopt.py	/^def regex_opt(strings, prefix='', suffix=''):$/;"	f
regex_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^from pygments.regexopt import regex_opt$/;"	i
regex_opt	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/regexopt.py	/^def regex_opt(strings, prefix='', suffix=''):$/;"	f
regex_opt_inner	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/regexopt.py	/^def regex_opt_inner(strings, open_paren):$/;"	f
regex_opt_inner	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/regexopt.py	/^def regex_opt_inner(strings, open_paren):$/;"	f
register	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def register(self, registry_name, value, object):$/;"	m	class:_ActionsContainer
register	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    register = (r'r[0-9][0-5]?[bwd]|'$/;"	v	class:NasmLexer
register	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    register = (r'r[0-9][0-5]?[bwd]|'$/;"	v	class:NasmLexer
register_hook	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def register_hook(self, event, hook):$/;"	m	class:RequestHooksMixin
reindent	plugged/vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
release_conn	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def release_conn(self):$/;"	m	class:HTTPResponse
release_winsock	plugged/vimproc.vim/autoload/proc_w32.c	/^release_winsock()$/;"	f	file:
reload	autoload/plug.vim	/^function! s:reload()$/;"	f
reload	plugged/delimitMate/test/autoclose_matchpairs.vim	/^    let reload = 0$/;"	v
reload	plugged/delimitMate/test/autoclose_matchpairs.vim	/^    let reload = 1$/;"	v
reload	plugged/delimitMate/test/autoclose_matchpairs.vim	/^let reload = 1$/;"	v
reload	plugged/delimitMate/test/autoclose_quotes.vim	/^    let reload = 0$/;"	v
reload	plugged/delimitMate/test/autoclose_quotes.vim	/^    let reload = 1$/;"	v
reload	plugged/delimitMate/test/autoclose_quotes.vim	/^let reload = 1$/;"	v
reload	plugged/emmet-vim/unittest.vim	/^function! s:reload(d)$/;"	f
reload_localzone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/__init__.py	/^    from tzlocal.unix import get_localzone, reload_localzone$/;"	i
reload_localzone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/__init__.py	/^    from tzlocal.win32 import get_localzone, reload_localzone$/;"	i
reload_localzone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/unix.py	/^def reload_localzone():$/;"	f
reload_localzone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/win32.py	/^def reload_localzone():$/;"	f
reload_localzone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/__init__.py	/^    from tzlocal.unix import get_localzone, reload_localzone$/;"	i
reload_localzone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/__init__.py	/^    from tzlocal.win32 import get_localzone, reload_localzone$/;"	i
reload_localzone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/unix.py	/^def reload_localzone():$/;"	f
reload_localzone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/win32.py	/^def reload_localzone():$/;"	f
reload_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^        from imp import reload as reload_module$/;"	i
reload_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    reload_module = reload$/;"	v
reload_module	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decimal.py	/^from simplejson.compat import StringIO, reload_module$/;"	i
remove_cookie_by_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^def remove_cookie_by_name(cookiejar, name, domain=None, path=None):$/;"	f
remove_last_separator	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:remove_last_separator(path)$/;"	f
remove_move	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^def remove_move(name):$/;"	f
remove_rtp	autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
remove_triggers	autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
render_headers	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/fields.py	/^    def render_headers(self):$/;"	m	class:RequestField
reorg_rtp	autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
repeat#invalidate	plugged/repeat.vim/autoload/repeat.vim	/^function! repeat#invalidate()$/;"	f
repeat#run	plugged/repeat.vim/autoload/repeat.vim	/^function! repeat#run(count)$/;"	f
repeat#set	plugged/repeat.vim/autoload/repeat.vim	/^function! repeat#set(sequence,...)$/;"	f
repeat#setreg	plugged/repeat.vim/autoload/repeat.vim	/^function! repeat#setreg(sequence,register)$/;"	f
repeat#wrap	plugged/repeat.vim/autoload/repeat.vim	/^function! repeat#wrap(command,count)$/;"	f
repeatPlugin	plugged/repeat.vim/autoload/repeat.vim	/^augroup repeatPlugin$/;"	a
replace	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
replace	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^    def replace(match):$/;"	f	function:encode_basestring
replace	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^    def replace(match):$/;"	f	function:py_encode_basestring_ascii
replace_first	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
replacefunc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^            def replacefunc(wschar):$/;"	f	function:VisibleWhitespaceFilter.filter
replacefunc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^            def replacefunc(wschar):$/;"	f	function:VisibleWhitespaceFilter.filter
repo	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_dir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_head_ref	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
request	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! s:request(method, url, param, body) abort$/;"	f
request	plugged/calendar.vim/autoload/calendar/webapi.vim	/^function! s:request(json, async, url, ...) abort$/;"	f
request	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^from .api import request, get, head, post, patch, put, delete, options$/;"	i
request	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/api.py	/^def request(method, url, **kwargs):$/;"	f
request	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/request.py	/^    def request(self, method, url, fields=None, headers=None, **urlopen_kw):$/;"	m	class:RequestMethods
request	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def request(self, method, url,$/;"	m	class:Session
request_async	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! s:request_async(id, cb, method, url, param, body) abort$/;"	f
request_async_use_api_key	plugged/calendar.vim/autoload/calendar/google/client.vim	/^function! s:request_async_use_api_key(id, cb, method, url, param, body) abort$/;"	f
request_encode_body	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/request.py	/^    def request_encode_body(self, method, url, fields=None, headers=None,$/;"	m	class:RequestMethods
request_encode_url	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/request.py	/^    def request_encode_url(self, method, url, fields=None, **urlopen_kw):$/;"	m	class:RequestMethods
request_uri	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/url.py	/^    def request_uri(self):$/;"	m	class:Url
request_url	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^    def request_url(self, request, proxies):$/;"	m	class:HTTPAdapter
requests	plugged/vim-wakatime/plugin/packages/wakatime/session_cache.py	/^from .packages import requests$/;"	i
required_arguments	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^    required_arguments = 1$/;"	v	class:PygmentsDoc
required_arguments	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^    required_arguments = 1$/;"	v	class:PygmentsDoc
requote_uri	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def requote_uri(uri):$/;"	f
reraise	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    def reraise(tp, value, tb=None):$/;"	f
res	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^            res = re.findall('(?<=@interface )\\w+', content)$/;"	v
res	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^            res = re.findall('(?<=@protocol )\\w+', content)$/;"	v
res	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^            res = re.findall('(?<=typedef const struct )\\w+', content)$/;"	v
res	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^            res = re.findall('(?<=typedef enum )\\w+', content)$/;"	v
res	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_cocoa_builtins.py	/^            res = re.findall('(?<=typedef struct )\\w+', content)$/;"	v
res	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^            res = re.findall('(?<=@interface )\\w+', content)$/;"	v
res	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^            res = re.findall('(?<=@protocol )\\w+', content)$/;"	v
res	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^            res = re.findall('(?<=typedef const struct )\\w+', content)$/;"	v
res	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^            res = re.findall('(?<=typedef enum )\\w+', content)$/;"	v
res	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_cocoa_builtins.py	/^            res = re.findall('(?<=typedef struct )\\w+', content)$/;"	v
reserved	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    reserved = ('Arith', 'Bit', 'Cmp', 'False', 'Inf', 'True', 'else',$/;"	v	class:CryptolLexer
reserved	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    reserved = ('case', 'class', 'data', 'default', 'deriving', 'do', 'else',$/;"	v	class:HaskellLexer
reserved	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    reserved = ('case', 'class', 'data', 'default', 'using', 'do', 'else',$/;"	v	class:IdrisLexer
reserved	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    reserved = ['abstract', 'codata', 'coinductive', 'constructor', 'data',$/;"	v	class:AgdaLexer
reserved	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    reserved = ('Arith', 'Bit', 'Cmp', 'False', 'Inf', 'True', 'else',$/;"	v	class:CryptolLexer
reserved	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    reserved = ('case', 'class', 'data', 'default', 'deriving', 'do', 'else',$/;"	v	class:HaskellLexer
reserved	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    reserved = ('case', 'class', 'data', 'default', 'using', 'do', 'else',$/;"	v	class:IdrisLexer
reserved	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    reserved = ['abstract', 'codata', 'coinductive', 'constructor', 'data',$/;"	v	class:AgdaLexer
reset	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^    def reset(self):$/;"	m	class:CharDistributionAnalysis
reset	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetgroupprober.py	/^    def reset(self):$/;"	m	class:CharSetGroupProber
reset	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetprober.py	/^    def reset(self):$/;"	m	class:CharSetProber
reset	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/codingstatemachine.py	/^    def reset(self):$/;"	m	class:CodingStateMachine
reset	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escprober.py	/^    def reset(self):$/;"	m	class:EscCharSetProber
reset	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/eucjpprober.py	/^    def reset(self):$/;"	m	class:EUCJPProber
reset	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^    def reset(self):$/;"	m	class:HebrewProber
reset	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^    def reset(self):$/;"	m	class:JapaneseContextAnalysis
reset	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^    def reset(self):$/;"	m	class:Latin1Prober
reset	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcharsetprober.py	/^    def reset(self):$/;"	m	class:MultiByteCharSetProber
reset	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcharsetprober.py	/^    def reset(self):$/;"	m	class:SingleByteCharSetProber
reset	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sjisprober.py	/^    def reset(self):$/;"	m	class:SJISProber
reset	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^    def reset(self):$/;"	m	class:UniversalDetector
reset	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/utf8prober.py	/^    def reset(self):$/;"	m	class:UTF8Prober
reset_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/console.py	/^def reset_color():$/;"	f
reset_color	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/console.py	/^def reset_color():$/;"	f
reset_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    def reset_indent(token_class):$/;"	m	class:YamlLexer
reset_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    def reset_indent(token_class):$/;"	m	class:YamlLexer
reset_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal256.py	/^    def reset_string(self):$/;"	m	class:EscapeSequence
reset_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal256.py	/^    def reset_string(self):$/;"	m	class:EscapeSequence
resolve	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:resolve(file) "{{{$/;"	f
resolve_cert_reqs	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^def resolve_cert_reqs(candidate):$/;"	f
resolve_redirects	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def resolve_redirects(self, resp, req, stream=False, timeout=None,$/;"	m	class:SessionRedirectMixin
resolve_ssl_version	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^def resolve_ssl_version(candidate):$/;"	f
resource_exists	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^def resource_exists(name):$/;"	f
resource_exists	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^def resource_exists(name):$/;"	f
resource_stream	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    from pkg_resources import resource_stream$/;"	i
resource_stream	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    resource_stream = None$/;"	v
resource_stream	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    from pkg_resources import resource_stream$/;"	i
resource_stream	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    resource_stream = None$/;"	v
restart	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:restart() "{{{$/;"	f
restore_statusline	plugged/unite.vim/autoload/unite/handlers.vim	/^function! s:restore_statusline()  "{{{$/;"	f
retry	autoload/plug.vim	/^function! s:retry()$/;"	f
revents	plugged/vimproc.vim/autoload/fakepoll.h	/^    short revents;                  \/* events that occurred on fd *\/$/;"	m	struct:pollfd
reverse	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
revert	autoload/plug.vim	/^function! s:revert()$/;"	f
rgb	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:rgb(r, g, b) abort$/;"	f
rgbcolor	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^        def rgbcolor(col):$/;"	f	function:LatexFormatter._create_stylesheet
rgbcolor	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^        def rgbcolor(col):$/;"	f	function:LatexFormatter._create_stylesheet
rip	plugged/Nvim-R/R/windows.vim	/^    let rip = filter(split(system(g:rplugin_tmpdir . "\/run_cmd.bat"), "\\n"), 'v:val =~ ".*InstallPath.*REG_SZ"')$/;"	v
rm_rf	autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
rmdir	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:rmdir(...) abort$/;"	f
rmdir	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:rmdir(path, ...) abort$/;"	f
rotate_source	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:rotate_source(is_next) "{{{$/;"	f
rquote	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:rquote(char) "{{{$/;"	f
rtp	autoload/plug.vim	/^  function! s:rtp(spec)$/;"	f
ruby_minlines	plugged/vim-ruby/syntax/ruby.vim	/^    let ruby_minlines = 500$/;"	v
rubycomplete#Complete	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Init	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
run	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^    def run():$/;"	f
run	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_php_builtins.py	/^    def run():$/;"	f
run	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_sourcemod_builtins.py	/^    def run():$/;"	f
run	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^    def run(self):$/;"	m	class:PygmentsDoc
run	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^    def run():$/;"	f
run	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_php_builtins.py	/^    def run():$/;"	f
run	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_sourcemod_builtins.py	/^    def run():$/;"	f
run	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^    def run(self):$/;"	m	class:PygmentsDoc
run	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^    def run(self, result):$/;"	m	class:NoExtensionTestSuite
runTest	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^    def runTest(self):$/;"	m	class:TestMissingSpeedups
runTool	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tool.py	/^    def runTool(self, args=None, data=None):$/;"	m	class:TestTool
runVimTests	plugged/delimitMate/test/_setup.vim	/^let runVimTests = expand('<sfile>:p:h').'\/build\/runVimTests'$/;"	v
s	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    def s(str):$/;"	m	class:FantomLexer
s	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    def s(str):$/;"	m	class:FantomLexer
s:BEGIN_BLOCK	plugged/vim-coffee-script/indent/coffee.vim	/^let s:BEGIN_BLOCK = s:BEGIN_BLOCK_KEYWORD . '\\|' . s:COMPOUND_EXPRESSION$/;"	v
s:BEGIN_BLOCK_KEYWORD	plugged/vim-coffee-script/indent/coffee.vim	/^let s:BEGIN_BLOCK_KEYWORD = '\\C^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:BEGIN_BLOCK_OP	plugged/vim-coffee-script/indent/coffee.vim	/^let s:BEGIN_BLOCK_OP = '[([{:=]$'$/;"	v
s:BLOCKLEVEL_TAGS	plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:BLOCKLEVEL_TAGS = [$/;"	v
s:BRACKET_CONTINUATION	plugged/vim-coffee-script/indent/coffee.vim	/^let s:BRACKET_CONTINUATION = '^\\s*[}\\])]\\s*' . s:CONTINUATION_OP$/;"	v
s:BRACKET_PAIRS	plugged/vim-coffee-script/indent/coffee.vim	/^let s:BRACKET_PAIRS = {']': '\\[', '}': '{', ')': '('}$/;"	v
s:BREAK_BLOCK_OP	plugged/vim-coffee-script/indent/coffee.vim	/^let s:BREAK_BLOCK_OP = '\\C^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:Bookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:COMPOUND_EXPRESSION	plugged/vim-coffee-script/indent/coffee.vim	/^let s:COMPOUND_EXPRESSION = '\\C\\%([^-]-\\|[^+]+\\|[^\/]\/\\|[:=*%&|^<>]\\)\\s*'$/;"	v
s:CONTAINED_THEN	plugged/vim-coffee-script/indent/coffee.vim	/^let s:CONTAINED_THEN = '\\C[(\\[].\\{-}\\<then\\>.\\{-\\}[)\\]]'$/;"	v
s:CONTINUATION	plugged/vim-coffee-script/indent/coffee.vim	/^let s:CONTINUATION = s:CONTINUATION_OP . '\\|' . s:BEGIN_BLOCK_OP$/;"	v
s:CONTINUATION_OP	plugged/vim-coffee-script/indent/coffee.vim	/^let s:CONTINUATION_OP = '\\C\\%(\\<\\%(is\\|isnt\\|and\\|or\\)\\>\\|'$/;"	v
s:Cache	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:Cache = unite#util#get_vital().import('System.Cache')$/;"	v
s:CmdwinMappings	plugged/ingo-library/autoload/ingo/window/cmdwin.vim	/^let s:CmdwinMappings = {}$/;"	v
s:Creator	plugged/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:DEFAULT_LEVEL	plugged/vim-coffee-script/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = '-1'$/;"	v
s:DEFAULT_LEVEL	plugged/vim-coffee-script/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = 'indent(prevnlnum)'$/;"	v
s:DOT_ACCESS	plugged/vim-coffee-script/indent/coffee.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:ELSE_COND	plugged/vim-coffee-script/indent/coffee.vim	/^let s:ELSE_COND = '\\C^\\s*else\\s\\+\\<\\%(if\\|unless\\)\\>'$/;"	v
s:EMPTY_TAGS	plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:EMPTY_TAGS = [$/;"	v
s:Event	plugged/nerdtree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:FUNCTION	plugged/vim-coffee-script/indent/coffee.vim	/^let s:FUNCTION = '[-=]>$'$/;"	v
s:FlagSet	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:IGNORE_ERRORS	plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:IGNORE_ERRORS = [$/;"	v
s:INLINE_TAGS	plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:INLINE_TAGS = [$/;"	v
s:KEYWORD_PAIRS	plugged/vim-coffee-script/indent/coffee.vim	/^let s:KEYWORD_PAIRS = [$/;"	v
s:KeyMap	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:MAX_LOOKBACK	plugged/vim-coffee-script/indent/coffee.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MenuController	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:NERDTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:NERDTreeSortStarIndex	plugged/nerdtree/lib/nerdtree/path.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NewTabCreated	plugged/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^let s:NewTabCreated = 0$/;"	v
s:Notifier	plugged/nerdtree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:Opener	plugged/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:POSTFIX_CONDITION	plugged/vim-coffee-script/indent/coffee.vim	/^let s:POSTFIX_CONDITION = '\\C\\S\\s\\+\\zs\\<\\%(if\\|unless\\|when\\|while\\|until\\)\\>'$/;"	v
s:PREFIX	plugged/unite.vim/autoload/unite/exrename.vim	/^let s:PREFIX = unite#util#is_windows() ? '[exrename]' : '*exrename*'$/;"	v
s:Path	plugged/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:R	plugged/calendar.vim/autoload/calendar/text.vim	/^let s:R = function('calendar#string#truncate_reverse')$/;"	v
s:SINGLE_LINE_ELSE	plugged/vim-coffee-script/indent/coffee.vim	/^let s:SINGLE_LINE_ELSE = '\\C^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SYNTAX_COMMENT	plugged/vim-coffee-script/indent/coffee.vim	/^let s:SYNTAX_COMMENT = 'coffee\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_STRING	plugged/vim-coffee-script/indent/coffee.vim	/^let s:SYNTAX_STRING = 'coffee\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_STRING_COMMENT	plugged/vim-coffee-script/indent/coffee.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
s:ShiftWidth	plugged/vim-coffee-script/indent/coffee.vim	/^  let s:ShiftWidth = function('shiftwidth')$/;"	v
s:Strlen	plugged/tabular/autoload/tabular.vim	/^  let s:Strlen = function("strdisplaywidth")$/;"	v
s:System	plugged/unite.vim/autoload/unite/kinds/file.vim	/^let s:System = unite#util#get_vital().import('System.File')$/;"	v
s:System	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:System = unite#util#get_vital().import('System.File')$/;"	v
s:System	plugged/unite.vim/autoload/unite/kinds/uri.vim	/^let s:System = unite#util#get_vital().import('System.File')$/;"	v
s:T	plugged/calendar.vim/autoload/calendar/text.vim	/^let s:T = function('calendar#string#truncate')$/;"	v
s:TYPE	autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:TYPE_DICT	plugged/unite.vim/autoload/vital/_unite/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_LIST	plugged/unite.vim/autoload/vital/_unite/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_STRING	plugged/unite.vim/autoload/vital/_unite/Process.vim	/^let s:TYPE_STRING = type("")$/;"	v
s:TabularCommands	plugged/tabular/plugin/Tabular.vim	/^let s:TabularCommands = {}$/;"	v
s:TreeDirNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:UI	plugged/nerdtree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:VERSION	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:VERSION = '0.1.0'$/;"	v
s:VERSION	plugged/vim-wakatime/plugin/wakatime.vim	/^let s:VERSION = '4.0.5'$/;"	v
s:VOID	plugged/unite.vim/autoload/unite/exrename.vim	/^let s:VOID = function('s:void')$/;"	v
s:W	plugged/calendar.vim/autoload/calendar/text.vim	/^let s:W = function((exists('*strdisplaywidth') ? '' : 'calendar#string#') . 'strdisplaywidth')$/;"	v
s:_	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^let s:_ = {}$/;"	v
s:_	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^let s:_ = {}$/;"	v
s:_	plugged/lightline.vim/autoload/lightline.vim	/^let s:_ = 1$/;"	v
s:_DEBUG_DUMP_OPTIONS	plugged/syntastic/plugin/syntastic.vim	/^let s:_DEBUG_DUMP_OPTIONS = [$/;"	v
s:_DEFAULT_CHECKERS	plugged/syntastic/plugin/syntastic/registry.vim	/^let s:_DEFAULT_CHECKERS = {$/;"	v
s:_DEFAULT_FILETYPE_MAP	plugged/syntastic/plugin/syntastic/registry.vim	/^let s:_DEFAULT_FILETYPE_MAP = {$/;"	v
s:_ECLIM_TYPES	plugged/syntastic/plugin/syntastic/registry.vim	/^let s:_ECLIM_TYPES = [$/;"	v
s:_NOTIFIER_TYPES	plugged/syntastic/plugin/syntastic/notifiers.vim	/^let s:_NOTIFIER_TYPES = ['signs', 'balloons', 'highlighting', 'cursor', 'autoloclist']$/;"	v
s:_PERSISTENT_NOTIFIERS	plugged/syntastic/plugin/syntastic/notifiers.vim	/^let s:_PERSISTENT_NOTIFIERS = ['signs', 'balloons']$/;"	v
s:_YCM_TYPES	plugged/syntastic/plugin/syntastic/registry.vim	/^let s:_YCM_TYPES = [$/;"	v
s:_calendar	plugged/calendar.vim/autoload/calendar.vim	/^let s:_calendar = {}$/;"	v
s:_isDebugEnabled	plugged/syntastic/autoload/syntastic/log.vim	/^let s:_isDebugEnabled = function(exists('*and') ? 's:_isDebugEnabled_smart' : 's:_isDebugEnabled_dumb')$/;"	v
s:_running_windows	plugged/syntastic/plugin/syntastic.vim	/^let s:_running_windows = syntastic#util#isRunningWindows()$/;"	v
s:_select_color	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:_select_color = {}$/;"	v
s:_unify_path_cache	plugged/unite.vim/autoload/vital/_unite.vim	/^let s:_unify_path_cache = {}$/;"	v
s:_vital_files_cache	plugged/unite.vim/autoload/vital/_unite.vim	/^let s:_vital_files_cache = []$/;"	v
s:_vital_files_cache_runtimepath	plugged/unite.vim/autoload/vital/_unite.vim	/^let s:_vital_files_cache_runtimepath = ''$/;"	v
s:_width	plugged/syntastic/autoload/syntastic/util.vim	/^let s:_width = function(exists('*strwidth') ? 'strwidth' : 'strlen')$/;"	v
s:abstract_prototype	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:acceleratorPattern	plugged/ingo-library/autoload/ingo/query/confirm.vim	/^let s:acceleratorPattern = '[[:alnum:]]'$/;"	v
s:access_modifier_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:access_modifier_regex = '\\C^\\s*\\%(public\\|protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:access_token_check	plugged/calendar.vim/autoload/calendar/google/client.vim	/^let s:access_token_check = 0$/;"	v
s:all_marks	plugged/Nvim-R/R/common_global.vim	/^let s:all_marks = "abcdefghijklmnopqrstuvwxyz"$/;"	v
s:all_novalue_options	plugged/calendar.vim/autoload/calendar/argument.vim	/^let s:all_novalue_options = [$/;"	v
s:all_options	plugged/calendar.vim/autoload/calendar/argument.vim	/^let s:all_options = copy(s:novalue_options)$/;"	v
s:all_targets	plugged/smartpairs.vim/plugin/smartpairs.vim	/^let s:all_targets = keys(s:targets) + values(s:targets)$/;"	v
s:all_value_options	plugged/calendar.vim/autoload/calendar/argument.vim	/^let s:all_value_options = {$/;"	v
s:alternative_bold_items	plugged/vim-lucius/colors/lucius.vim	/^let s:alternative_bold_items = ["Identifier", "PreProc", "Statement",$/;"	v
s:assert	plugged/unite.vim/test/matcher.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/unite.vim/test/sorter.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/unite.vim/test/source.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vimproc.vim/test/fopen.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vimproc.vim/test/functions.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vimproc.vim/test/lexer.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vimproc.vim/test/parser.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vimproc.vim/test/popen.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vimproc.vim/test/socket.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vimproc.vim/test/system.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:attributes	plugged/vim-haml/indent/haml.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:attributes	plugged/vim-jade/indent/jade.vim	/^let s:attributes = '\\%((.\\{-\\})\\)'$/;"	v
s:auth_url	plugged/calendar.vim/autoload/calendar/google/client.vim	/^let s:auth_url = 'https:\/\/accounts.google.com\/o\/oauth2\/auth'$/;"	v
s:autocmdCnt	plugged/ingo-library/autoload/ingo/ftplugin/onbufwinenter.vim	/^let s:autocmdCnt = 0$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base0 = [ '#0000ff', 12 ]$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base0 = '#666666'$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base0 = '#909090'$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base0 = '#ffffff'$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base0 = '#949494'$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base0 = '#777777'$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:base0 = [ '#839496', s:cuicolors.base0[s:cuiindex] ]$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:base0 = [ '#839496', s:cuicolors.base0[s:cuiindex] ]$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base0 = [ '#808080', 244 ]$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base00 = [ '#ffff00', 11  ]$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base00 = '#808080'$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base00 = '#6060df'$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base00 = '#767676'$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:base00 = [ '#657b83', s:cuicolors.base00[s:cuiindex] ]$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:base00 = [ '#657b83', s:cuicolors.base00[s:cuiindex] ]$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base00 = [ '#666666', 242  ]$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base01 = [ '#00ff00', 10 ]$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base01 = '#b4b4b4'$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base01 = '#6060af'$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base01 = '#606060'$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:base01 = [ '#586e75', s:cuicolors.base01[s:cuiindex] ]$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:base01 = [ '#586e75', s:cuicolors.base01[s:cuiindex] ]$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base01 = [ '#585858', 240 ]$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base02 = [ '#000000', 0 ]$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base02 = '#c8c8c8'$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base02 = '#434343'$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base02 = '#606087'$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base02 = '#4e4e4e'$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base02 = '#444444'$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base02 = [ '#30302c ', 236 ]$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:base02 = [ '#073642', s:cuicolors.base02[s:cuiindex] ]$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:base02 = [ '#073642', s:cuicolors.base02[s:cuiindex] ]$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base02 = [ '#444444 ', 238 ]$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base023 = '#dfdfdf'$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base023 = '#303030'$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base023 = '#202087'$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base023 = '#262626'$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base023 = '#333333'$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base023 = [ '#353535 ', 236 ]$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base03 = [ '#808080', 8 ]$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base03 = '#fafafa'$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base03 = '#1d1f21'$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base03 = '#002451'$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base03 = '#12124c'$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base03 = '#2d2d2d'$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:base03 = [ '#002b36', s:cuicolors.base03[s:cuiindex] ]$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:base03 = [ '#002b36', s:cuicolors.base03[s:cuiindex] ]$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base03 = [ '#242424', 235 ]$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base1 = [ '#00ffff', 14 ]$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base1 = '#555555'$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base1 = '#a0a0a0'$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base1 = '#ffffff'$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base1 = '#b2b2b2'$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base1 = '#999999'$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:base1 = [ '#93a1a1', s:cuicolors.base1[s:cuiindex] ]$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:base1 = [ '#93a1a1', s:cuicolors.base1[s:cuiindex] ]$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base1 = [ '#969696', 247 ]$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base2 = [ '#c0c0c0', 7 ]$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base2 = '#4f4f4f'$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base2 = '#bababa'$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base2 = '#ffffff'$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base2 = '#c6c6c6'$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base2 = '#aaaaaa'$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:base2 = [ '#eee8d5', s:cuicolors.base2[s:cuiindex] ]$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:base2 = [ '#eee8d5', s:cuicolors.base2[s:cuiindex] ]$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base2 = [ '#a8a8a8', 248 ]$/;"	v
s:base23	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base23 = '#ffffff'$/;"	v
s:base23	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base23 = '#d0d0d0'$/;"	v
s:base23	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base23 = '#bbbbbb'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base3 = [ '#ffffff', 15 ]$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base3 = '#4d4d4c'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base3 = '#c5c8c6'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base3 = '#ffffff'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base3 = '#eaeaea'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base3 = '#cccccc'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:base3 = [ '#fdf6e3', s:cuicolors.base3[s:cuiindex] ]$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:base3 = [ '#fdf6e3', s:cuicolors.base3[s:cuiindex] ]$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base3 = [ '#d0d0d0', 252 ]$/;"	v
s:base_path	plugged/syntastic/syntax_checkers/python/python.vim	/^let s:base_path = expand('<sfile>:p:h', 1) . syntastic#util#Slash()$/;"	v
s:base_spec	autoload/plug.vim	/^let s:base_spec = { 'branch': 'master', 'frozen': 0 }$/;"	v
s:bg_color	plugged/calendar.vim/syntax/calendar.vim	/^let s:bg_color = calendar#color#normal_bg_color()$/;"	v
s:bg_processes	plugged/vimproc.vim/autoload/vimproc.vim	/^let s:bg_processes = {}$/;"	v
s:block_continuation_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_regex	plugged/vim-javascript/indent/javascript.vim	/^let s:block_regex = '\\%([{[]\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\)\\=' . s:line_term$/;"	v
s:block_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:block_regex =$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:blue = [ '#000080', 4 ]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:blue = '#4271ae'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:blue = '#81a2be'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:blue = '#bbdaff'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:blue = '#7aa6da'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:blue = '#99cccc'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:blue = [ '#8197bf', 103 ]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:blue = [ '#268bd2', s:cuicolors.blue[s:cuiindex] ]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:blue = [ '#268bd2', s:cuicolors.blue[s:cuiindex] ]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:blue = [ '#8ac6f2', 117 ]$/;"	v
s:bold_items	plugged/vim-lucius/colors/lucius.vim	/^let s:bold_items = [$/;"	v
s:bookmarks	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:bookmarks = {}$/;"	v
s:bracket_continuation_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bracket_switch_continuation_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:bracket_switch_continuation_regex = '^\\([^(]\\+\\zs).\\+\\)\\+'.s:continuation_regex$/;"	v
s:browsefilter	plugged/vim-haml/ftplugin/haml.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-haml/ftplugin/haml.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	plugged/vim-haml/ftplugin/haml.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	plugged/vim-jade/ftplugin/jade.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-jade/ftplugin/jade.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	plugged/vim-ruby/ftplugin/eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-ruby/ftplugin/eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	plugged/vim-ruby/ftplugin/eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:buf_nr	plugged/vim-go/autoload/go/doc.vim	/^let s:buf_nr = -1$/;"	v
s:buf_nr	plugged/vim-go/autoload/go/ui.vim	/^let s:buf_nr = -1$/;"	v
s:buffer_bookmark_action	plugged/unite.vim/plugin/unite/bookmark.vim	/^let s:buffer_bookmark_action = {$/;"	v
s:buffer_list	plugged/unite.vim/autoload/unite/sources/buffer/variables.vim	/^let s:buffer_list = {}$/;"	v
s:buffer_prototype	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:builtInCommandCommands	plugged/ingo-library/autoload/ingo/cmdargs/commandcommands.vim	/^let s:builtInCommandCommands = 'h\\%[elp] com\\%[mand] verb\\%[ose] debug sil\\%[ent] redi\\%[r] vert\\%[ical] lefta\\%[bove] abo\\%[veleft] rightb\\%[elow] bel\\%[owright] to\\%[pleft] bo\\%[tright] argdo bufdo tab tabd\\%[o] windo'$/;"	v
s:builtInCommandCommandsExpr	plugged/ingo-library/autoload/ingo/cmdargs/commandcommands.vim	/^let s:builtInCommandCommandsExpr = '\\%(' .$/;"	v
s:c	plugged/calendar.vim/autoload/calendar/setting.vim	/^let s:c = expand('~\/.cache\/calendar.vim\/')$/;"	v
s:c	plugged/calendar.vim/autoload/calendar/string.vim	/^let s:c = calendar#countcache#new('string.vim')$/;"	v
s:c1	plugged/calendar.vim/autoload/calendar/string.vim	/^  let s:c1 = {}$/;"	v
s:c2	plugged/calendar.vim/autoload/calendar/string.vim	/^  let s:c2 = {}$/;"	v
s:cache	plugged/calendar.vim/autoload/calendar/countcache.vim	/^let s:cache = calendar#cache#new('countcache')$/;"	v
s:cache	plugged/calendar.vim/autoload/calendar/event/local.vim	/^let s:cache = calendar#cache#new('local')$/;"	v
s:cache	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^let s:cache = calendar#cache#new('google')$/;"	v
s:cache	plugged/calendar.vim/autoload/calendar/google/client.vim	/^let s:cache = calendar#cache#new('google')$/;"	v
s:cache	plugged/calendar.vim/autoload/calendar/google/task.vim	/^let s:cache = calendar#cache#new('google')$/;"	v
s:cache	plugged/calendar.vim/autoload/calendar/task/local.vim	/^let s:cache = calendar#cache#new('local')$/;"	v
s:cache	plugged/calendar.vim/autoload/calendar/timestamp.vim	/^let s:cache = calendar#cache#new('timestamp')$/;"	v
s:cache	plugged/calendar.vim/autoload/calendar/webapi.vim	/^let s:cache = calendar#cache#new('download')$/;"	v
s:cache_files	plugged/unite.vim/autoload/unite/sources/file.vim	/^let s:cache_files = {}$/;"	v
s:cache_ignore_files	plugged/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^let s:cache_ignore_files = {}$/;"	v
s:cache_module_path	plugged/unite.vim/autoload/vital/_unite.vim	/^let s:cache_module_path = {}$/;"	v
s:cache_sid	plugged/unite.vim/autoload/vital/_unite.vim	/^let s:cache_sid = {}$/;"	v
s:cached_result	plugged/unite.vim/autoload/unite/sources/change.vim	/^let s:cached_result = []$/;"	v
s:cached_result	plugged/unite.vim/autoload/unite/sources/command.vim	/^let s:cached_result = []$/;"	v
s:cached_result	plugged/unite.vim/autoload/unite/sources/function.vim	/^let s:cached_result = []$/;"	v
s:cached_result	plugged/unite.vim/autoload/unite/sources/jump.vim	/^let s:cached_result = []$/;"	v
s:cached_result	plugged/unite.vim/autoload/unite/sources/launcher.vim	/^let s:cached_result = {}$/;"	v
s:cached_result	plugged/unite.vim/autoload/unite/sources/mapping.vim	/^let s:cached_result = []$/;"	v
s:caches	plugged/calendar.vim/autoload/calendar/countcache.vim	/^let s:caches = []$/;"	v
s:calendar	plugged/calendar.vim/autoload/calendar.vim	/^let s:calendar = {}$/;"	v
s:calendars	plugged/calendar.vim/autoload/calendar/argument.vim	/^let s:calendars = filter(map(split(globpath(&rtp, 'autoload\/calendar\/day\/**.vim'), '\\n'),$/;"	v
s:callback_datalen	plugged/calendar.vim/autoload/calendar/webapi.vim	/^let s:callback_datalen = {}$/;"	v
s:cdable_action_file	plugged/unite.vim/autoload/unite/sources/file.vim	/^let s:cdable_action_file = {$/;"	v
s:cdable_action_rec	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec = {$/;"	v
s:cdable_action_rec_async	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_async = {$/;"	v
s:cdable_action_rec_parent	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_parent = {$/;"	v
s:cdable_action_rec_parent_async	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_parent_async = {$/;"	v
s:cdable_action_rec_project	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_project = {$/;"	v
s:cdable_action_rec_project_async	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_project_async = {$/;"	v
s:check_file	plugged/syntastic/syntax_checkers/erlang/escript.vim	/^let s:check_file = syntastic#util#shescape(expand('<sfile>:p:h', 1) . syntastic#util#Slash() . 'erlang_check_file.erl')$/;"	v
s:clearpath	plugged/calendar.vim/autoload/calendar/cache.vim	/^let s:clearpath = []$/;"	v
s:cli_location	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:cli_location = expand("<sfile>:p:h") . '\/packages\/wakatime\/cli.py'$/;"	v
s:cmd	plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^let s:cmd = {}$/;"	v
s:cmdDelimiterExpr	plugged/ingo-library/autoload/ingo/cmdargs/command.vim	/^let s:cmdDelimiterExpr = '\\V\\C\\%(' .$/;"	v
s:coffeeIndentExpr	plugged/vim-coffee-script/after/indent/html.vim	/^let s:coffeeIndentExpr = &l:indentexpr$/;"	v
s:color_map	plugged/vim-lucius/colors/lucius.vim	/^let s:color_map = {$/;"	v
s:colorcolumn	plugged/calendar.vim/autoload/calendar/setlocal.vim	/^let s:colorcolumn = exists('&colorcolumn')$/;"	v
s:comma_first	plugged/vim-javascript/indent/javascript.vim	/^let s:comma_first = '^\\s*,'$/;"	v
s:comma_last	plugged/vim-javascript/indent/javascript.vim	/^let s:comma_last = ',\\s*$'$/;"	v
s:commands	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:comment_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^let s:comment_fg_color = calendar#color#comment_fg_color()$/;"	v
s:common_efm	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:common_efm = ''$/;"	v
s:completeFuncCnt	plugged/ingo-library/autoload/ingo/plugin/cmdcomplete.vim	/^let s:completeFuncCnt = 0$/;"	v
s:config_file	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:config_file = expand("$HOME\/.wakatime.cfg")$/;"	v
s:config_file_already_setup	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:config_file_already_setup = 0$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^let s:constructor = {}$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/austria.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1583, 10, 16)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/austriastyria.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1583, 12, 25)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/british.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1752, 9, 14)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/bulgaria.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1916, 4, 14)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/canada.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1752, 9, 14)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/default.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1582, 10, 15)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/estonia.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1918, 2, 14)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/france.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1582, 12, 20)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/germany.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1583, 1, 11)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/germanyprussia.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1610, 9, 2)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/greece.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1923, 3, 1)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^let s:constructor = calendar#constructor#day#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/holland.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1583, 1, 1)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/hungary.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1587, 11, 1)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/italy.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1582, 10, 15)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/japan.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1873, 1, 1)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^let s:constructor = calendar#constructor#day#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/poland.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1582, 10, 15)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/portugal.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1582, 10, 15)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/russia.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1918, 2, 14)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/spain.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1582, 10, 15)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/turkey.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1927, 1, 1)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/day/us.vim	/^let s:constructor = calendar#constructor#day_hybrid#new(1752, 9, 14)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^let s:constructor = calendar#constructor#view#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^let s:constructor = calendar#constructor#view#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/clock_date.vim	/^let s:constructor = calendar#constructor#view_clock#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday.vim	/^let s:constructor = calendar#constructor#view_clock#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday_time.vim	/^let s:constructor = calendar#constructor#view_clock#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/clock_date_time.vim	/^let s:constructor = calendar#constructor#view_clock#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/clock_time.vim	/^let s:constructor = calendar#constructor#view_clock#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/clock_time_hourmin.vim	/^let s:constructor = calendar#constructor#view_clock#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/day.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/day_1.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/day_2.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/day_3.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/day_4.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/day_5.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/day_6.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/day_7.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/event.vim	/^let s:constructor = calendar#constructor#view_textbox#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/help.vim	/^let s:constructor = calendar#constructor#view_textbox#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month.vim	/^let s:constructor = calendar#constructor#view#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_1x1.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_1x3.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_2x6.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_3x1.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_3x3.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_3x4.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_4x1.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_4x2.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_4x3.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_5x1.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/month_6x2.vim	/^let s:constructor = calendar#constructor#view_months#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/task.vim	/^let s:constructor = calendar#constructor#view_textbox#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/week.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/weekday.vim	/^let s:constructor = calendar#constructor#view_days#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/year.vim	/^let s:constructor = calendar#constructor#view#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^let s:constructor = calendar#constructor#view#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/ymd_daymonthyear.vim	/^let s:constructor = calendar#constructor#view_ymd#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/ymd_monthdayyear.vim	/^let s:constructor = calendar#constructor#view_ymd#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/ymd_monthyear.vim	/^let s:constructor = calendar#constructor#view_ymd#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/ymd_year.vim	/^let s:constructor = calendar#constructor#view_ymd#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonth.vim	/^let s:constructor = calendar#constructor#view_ymd#new(s:self)$/;"	v
s:constructor	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonthday.vim	/^let s:constructor = calendar#constructor#view_ymd#new(s:self)$/;"	v
s:contents	plugged/vimproc.vim/test/fopen.vim	/^let s:contents = ['foo', 'bar']$/;"	v
s:continuable_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:continuable_regex =$/;"	v
s:continuation	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:continuation = { 'directory' : {}, 'file' : {} }$/;"	v
s:continuation_regex	plugged/vim-javascript/indent/javascript.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\|[^=]=[^=].*,\\)' . s:line_term$/;"	v
s:continuation_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:continuation_regex =$/;"	v
s:contrast	plugged/vim-lucius/colors/lucius.vim	/^    let s:contrast = "normal"$/;"	v
s:contrast	plugged/vim-lucius/colors/lucius.vim	/^    let s:contrast = g:lucius_contrast$/;"	v
s:contrast_bg	plugged/vim-lucius/colors/lucius.vim	/^    let s:contrast_bg = "normal"$/;"	v
s:contrast_bg	plugged/vim-lucius/colors/lucius.vim	/^    let s:contrast_bg = g:lucius_contrast_bg$/;"	v
s:converter	plugged/unite.vim/autoload/unite/filters/converter_default.vim	/^let s:converter = {$/;"	v
s:converter	plugged/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^let s:converter = {$/;"	v
s:converter	plugged/unite.vim/autoload/unite/filters/converter_full_path.vim	/^let s:converter = {$/;"	v
s:converter	plugged/unite.vim/autoload/unite/filters/converter_nothing.vim	/^let s:converter = {$/;"	v
s:converter	plugged/unite.vim/autoload/unite/filters/converter_relative_abbr.vim	/^let s:converter = {$/;"	v
s:converter	plugged/unite.vim/autoload/unite/filters/converter_relative_word.vim	/^let s:converter = {$/;"	v
s:converter	plugged/unite.vim/autoload/unite/filters/converter_smart_path.vim	/^let s:converter = {$/;"	v
s:converter	plugged/unite.vim/autoload/unite/filters/converter_tail.vim	/^let s:converter = {$/;"	v
s:converter	plugged/unite.vim/autoload/unite/filters/converter_tail_abbr.vim	/^let s:converter = {$/;"	v
s:count	plugged/calendar.vim/autoload/calendar/countcache.vim	/^let s:count = 0$/;"	v
s:cpo_save	autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/Nvim-R/ftplugin/rbrowser.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/Nvim-R/ftplugin/rdoc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/css.vim/syntax/css.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-haml/compiler/haml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-haml/compiler/sass.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-javascript/indent/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-ruby/compiler/eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-ruby/compiler/rake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-ruby/compiler/rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-ruby/compiler/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-ruby/compiler/rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-ruby/ftplugin/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-ruby/indent/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cuicolor	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:cuicolor = {$/;"	v
s:cuicolors	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:cuicolors = {$/;"	v
s:cuicolors	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:cuicolors = {$/;"	v
s:cuiindex	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^  let s:cuiindex = 0$/;"	v
s:cuiindex	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^  let s:cuiindex = 1$/;"	v
s:cuiindex	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^  let s:cuiindex = 2$/;"	v
s:cuiindex	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^  let s:cuiindex = 0$/;"	v
s:cuiindex	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^  let s:cuiindex = 1$/;"	v
s:cuiindex	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^  let s:cuiindex = 2$/;"	v
s:current_fileencodings	plugged/vim-go/ftdetect/gofiletype.vim	/^let s:current_fileencodings = ''$/;"	v
s:current_fileformats	plugged/vim-go/ftdetect/gofiletype.vim	/^let s:current_fileformats = ''$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:cyan = [ '#008080', 6 ]$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:cyan = '#3e999f'$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:cyan = '#8abeb7'$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:cyan = '#99ffff'$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:cyan = '#70c0b1'$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:cyan = '#009999'$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:cyan = [ '#8fbfdc', 110 ]$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:cyan = [ '#2aa198', s:cuicolors.cyan[s:cuiindex] ]$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:cyan = [ '#2aa198', s:cuicolors.cyan[s:cuiindex] ]$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:cyan = s:blue$/;"	v
s:datetime_cache	plugged/calendar.vim/autoload/calendar/time.vim	/^let s:datetime_cache = {}$/;"	v
s:days	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^let s:days = { '1': 31, '2': 28, '3': 31, '4': 30, '5': 31, '6': 30, '7': 31, '8': 31, '9': 30, '10': 31, '11': 30, '12': 31 }$/;"	v
s:default_converters	plugged/unite.vim/autoload/unite/filters/converter_default.vim	/^let s:default_converters = ['converter_nothing']$/;"	v
s:default_includes	plugged/syntastic/autoload/syntastic/c.vim	/^let s:default_includes = [$/;"	v
s:default_matchers	plugged/unite.vim/autoload/unite/filters/matcher_default.vim	/^let s:default_matchers = ['matcher_context']$/;"	v
s:default_sorters	plugged/unite.vim/autoload/unite/filters/sorter_default.vim	/^let s:default_sorters = ['sorter_nothing']$/;"	v
s:dir	plugged/calendar.vim/autoload/calendar/pixel.vim	/^let s:dir = expand('<sfile>:p:h') . '\/pixel\/'$/;"	v
s:dir_for_worktree	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:dll_handle	plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:dll_handle = s:vp_dlopen(g:vimproc#dll_path)$/;"	v
s:dummy_sign_id	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:dummy_sign_id = s:first_sign_id - 1$/;"	v
s:emmet_settings	plugged/emmet-vim/autoload/emmet.vim	/^let s:emmet_settings = {$/;"	v
s:end_end_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_middle_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\|when\\|elsif\\):\\@!\\>'$/;"	v
s:end_skip_expr	plugged/vim-ruby/indent/ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_start_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:end_start_regex =$/;"	v
s:english_message	plugged/calendar.vim/autoload/calendar/message/default.vim	/^let s:english_message = deepcopy(calendar#message#en#get())$/;"	v
s:envstring	plugged/Nvim-R/ftplugin/rbrowser.vim	/^let s:envstring = tolower($LC_MESSAGES . $LC_ALL . $LANG)$/;"	v
s:errmsg	plugged/ingo-library/autoload/ingo/err.vim	/^let s:errmsg = ''$/;"	v
s:event_cache	plugged/calendar.vim/autoload/calendar/event/local.vim	/^let s:event_cache = s:cache.new('event')$/;"	v
s:event_cache	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^let s:event_cache = s:cache.new('event')$/;"	v
s:event_download	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^let s:event_download = {}$/;"	v
s:exists	plugged/emmet-vim/autoload/emmet/lang.vim	/^let s:exists = {}$/;"	v
s:exit_code	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:exit_code = 0$/;"	v
s:extend	plugged/vim-haml/indent/sass.vim	/^let s:extend = '^\\s*\\%(@extend\\|@include\\|+\\)'$/;"	v
s:externalLaunch	plugged/ingo-library/autoload/ingo/external.vim	/^let s:externalLaunch = (ingo#os#IsWindows() ? 'silent !start' : 'silent !')$/;"	v
s:f	plugged/calendar.vim/autoload/calendar/setting.vim	/^let s:f = {}$/;"	v
s:fg_color	plugged/calendar.vim/syntax/calendar.vim	/^let s:fg_color = calendar#color#normal_fg_color()$/;"	v
s:file	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:file = ''$/;"	v
s:file_bookmark_action	plugged/unite.vim/plugin/unite/bookmark.vim	/^let s:file_bookmark_action = {$/;"	v
s:filelines	plugged/Nvim-R/R/common_global.vim	/^    let s:filelines = readfile(g:rplugin_compldir . "\/nvimcom_bin_dir")$/;"	v
s:filename	plugged/vimproc.vim/test/fopen.vim	/^let s:filename = 'test.txt'$/;"	v
s:filtermx	plugged/emmet-vim/autoload/emmet.vim	/^let s:filtermx = '|\\(\\%(bem\\|html\\|haml\\|slim\\|e\\|c\\|s\\|fc\\|xsl\\|t\\|\\\/[^ ]\\+\\)\\s*,\\{0,1}\\s*\\)*$'$/;"	v
s:first_rtp	autoload/plug.vim	/^let s:first_rtp = s:escrtp(get(s:split_rtp(), 0, ''))$/;"	v
s:first_sign_id	plugged/syntastic/plugin/syntastic/signs.vim	/^let s:first_sign_id = 5000$/;"	v
s:first_sign_id	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:first_sign_id = 3000$/;"	v
s:formatelempat	plugged/tabular/autoload/tabular.vim	/^let s:formatelempat = '\\%([lrc]\\d\\+\\)'$/;"	v
s:ghc_mod_new	plugged/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let s:ghc_mod_new = -1$/;"	v
s:git_versions	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:globpath_third_arg	plugged/unite.vim/autoload/vital/_unite.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:glsl_extensions	plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^let s:glsl_extensions = {$/;"	v
s:goarch	plugged/vim-go/autoload/go/package.vim	/^        let s:goarch = '*'$/;"	v
s:goarch	plugged/vim-go/autoload/go/package.vim	/^        let s:goarch = g:golang_goarch$/;"	v
s:goarch	plugged/vim-go/autoload/go/package.vim	/^let s:goarch = $GOARCH$/;"	v
s:goos	plugged/vim-go/autoload/go/package.vim	/^        let s:goos = '*'$/;"	v
s:goos	plugged/vim-go/autoload/go/package.vim	/^        let s:goos = 'darwin'$/;"	v
s:goos	plugged/vim-go/autoload/go/package.vim	/^        let s:goos = 'windows'$/;"	v
s:goos	plugged/vim-go/autoload/go/package.vim	/^        let s:goos = g:golang_goos$/;"	v
s:goos	plugged/vim-go/autoload/go/package.vim	/^let s:goos = $GOOS$/;"	v
s:got_fmt_error	plugged/vim-go/autoload/go/fmt.vim	/^let s:got_fmt_error = 0$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:green = [ '#008000', 2 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:green = '#718c00'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:green = '#b5bd68'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:green = '#d1f1a9'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:green = '#b9ca4a'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:green = '#99cc99'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:green = [ '#99ad6a', 107 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:green = [ '#859900', s:cuicolors.green[s:cuiindex] ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:green = [ '#859900', s:cuicolors.green[s:cuiindex] ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:green = [ '#95e454', 119 ]$/;"	v
s:grep_available	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:grep_available = executable('grep')$/;"	v
s:grep_command	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^    let s:grep_command .= ' --color=never'$/;"	v
s:grep_command	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^  let s:grep_command .= ' -e '.gitgutter#utility#shellescape('^@@ ')$/;"	v
s:grep_command	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^  let s:grep_command = ' | '.(g:gitgutter_escape_grep ? '\\grep' : 'grep')$/;"	v
s:grep_help	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^  let s:grep_help = gitgutter#utility#system('grep --help')$/;"	v
s:guicolor	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:guicolor = {$/;"	v
s:has_highlighting	plugged/syntastic/plugin/syntastic/highlighting.vim	/^let s:has_highlighting = v:version > 701 || (v:version == 701 && has('patch040'))$/;"	v
s:has_key	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^                let s:has_key = 1$/;"	v
s:has_key	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^        let s:has_key = 0$/;"	v
s:has_maven	plugged/syntastic/syntax_checkers/java/javac.vim	/^let s:has_maven = 0$/;"	v
s:hash_colors	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:htmlIndentExpr	plugged/vim-coffee-script/after/indent/html.vim	/^let s:htmlIndentExpr = &l:indentexpr$/;"	v
s:hunk_re	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:hunk_re = '^@@ -\\(\\d\\+\\),\\?\\(\\d*\\) +\\(\\d\\+\\),\\?\\(\\d*\\) @@'$/;"	v
s:hunks	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:hunks = []$/;"	v
s:i	plugged/calendar.vim/autoload/calendar/argument.vim	/^    let s:i = index(s:novalue_options, '-' . s:k)$/;"	v
s:i	plugged/calendar.vim/autoload/calendar/argument.vim	/^    let s:i = index(s:novalue_options, s:k)$/;"	v
s:id	plugged/calendar.vim/autoload/calendar/util.vim	/^let s:id = 0$/;"	v
s:id_data	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^let s:id_data = {}$/;"	v
s:id_data	plugged/calendar.vim/autoload/calendar/google/task.vim	/^let s:id_data = {}$/;"	v
s:imaplist	plugged/Nvim-R/R/common_global.vim	/^let s:imaplist = []$/;"	v
s:imports	plugged/syntastic/syntax_checkers/sass/sass.vim	/^    let s:imports = '--compass'$/;"	v
s:imports	plugged/syntastic/syntax_checkers/sass/sass.vim	/^let s:imports = ''$/;"	v
s:indent_access_modifier_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:indent_access_modifier_regex = '\\C^\\s*\\%(protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:initial_download	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^let s:initial_download = {}$/;"	v
s:initial_go_path	plugged/vim-go/autoload/go/path.vim	/^let s:initial_go_path = ""$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance._colnum = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.colnum = 1$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.diffs = []$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.len = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.letters = []$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.offsetx_start = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.prevscale = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.smaller = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.str = ''$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.syntax = []$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.winheight = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:instance.winwidth = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance.__key = []$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance._current_contents = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance._current_group_id = ''$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance._key = []$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance._next_contents = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance._nocontents = 1$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance._prev_contents = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance._prevprev_contents = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance._select_title = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance._texts = []$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance.length = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance.noindex = []$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance.select = 0$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:instance.syntax = []$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^let s:instance = {}$/;"	v
s:instance	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^let s:instance = {}$/;"	v
s:is_case_tolerant	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:is_case_tolerant = filereadable(expand('<sfile>:r') . '.VIM')$/;"	v
s:is_cterm	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:is_cterm = !s:is_gui$/;"	v
s:is_cygwin	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	plugged/vimproc.vim/autoload/vimproc/util.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_dark	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:is_dark = &background ==# 'dark'$/;"	v
s:is_dark	plugged/calendar.vim/syntax/calendar.vim	/^let s:is_dark = &background ==# 'dark'$/;"	v
s:is_gui	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:is_gui = has('gui_running')$/;"	v
s:is_mac	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	plugged/vimproc.vim/autoload/vimproc/util.vim	/^let s:is_mac = !s:is_windows$/;"	v
s:is_unix	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	plugged/unite.vim/autoload/vital/_unite/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_win	autoload/plug.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win32cui	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:is_win32cui = (has('win32') || has('win64')) && !has('gui_running')$/;"	v
s:is_win32cui	plugged/calendar.vim/syntax/calendar.vim	/^let s:is_win32cui = (has('win32') || has('win64')) && !has('gui_running')$/;"	v
s:is_windows	plugged/unite.vim/autoload/unite/sources/directory.vim	/^let s:is_windows = unite#util#is_windows()$/;"	v
s:is_windows	plugged/unite.vim/autoload/unite/sources/file.vim	/^let s:is_windows = unite#util#is_windows()$/;"	v
s:is_windows	plugged/unite.vim/autoload/unite/util.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:is_windows	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	plugged/unite.vim/autoload/vital/_unite/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:is_windows	plugged/vimproc.vim/autoload/vimproc/util.vim	/^let s:is_windows = has('win32')$/;"	v
s:iskblist	plugged/Nvim-R/R/common_global.vim	/^let s:iskblist = split(s:ikblist, "\\n")$/;"	v
s:isutf8	plugged/Nvim-R/ftplugin/rbrowser.vim	/^    let s:isutf8 = 0$/;"	v
s:isutf8	plugged/Nvim-R/ftplugin/rbrowser.vim	/^    let s:isutf8 = 1$/;"	v
s:job_info	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:job_info = {}$/;"	v
s:js_keywords	plugged/vim-javascript/indent/javascript.vim	/^let s:js_keywords = '^\\s*\\(break\\|case\\|catch\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|finally\\|for\\|function\\|if\\|in\\|instanceof\\|new\\|return\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\)'$/;"	v
s:key_list	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^        let s:key_list = keys(g:rplugin_zathura_pid)$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.delete = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.fdelete = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.goto = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.open = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.rename = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.unload = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.wipeout = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.cd = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.lcd = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.narrow = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.project_cd = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.tabnew_cd = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.tabnew_lcd = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.tabvimfiler = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.tabvimshell = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.vimfiler = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.vimshell = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec'] =$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec\/async'] =$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec_parent'] =$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec_parent\/async'] =$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec_project'] =$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec_project\/async'] =$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/command.vim	/^let s:kind = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/command.vim	/^let s:kind.action_table.edit = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/command.vim	/^let s:kind.action_table.execute = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.append = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.echo = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.ex = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.insert = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.insert_directory = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.nop = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.yank = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.yank_escape = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/completion.vim	/^let s:kind = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/completion.vim	/^let s:kind.action_table.insert = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/completion.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/directory.vim	/^let s:kind = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.backup = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.diff = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.dirdiff = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.exrename = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.find = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.grep = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.mkdir = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.open = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.read = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.rename = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.vimgrep = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.wunix = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.copy = deepcopy(s:kind.action_table.vimfiler__copy)$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.copy.is_listed = 1$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.move =$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.move.is_listed = 1$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.unite__new_candidate =$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__copy = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__delete = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__execute = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__external_filer = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__mkdir = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__move = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__newfile = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__rename = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__shell = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__shellcmd = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__write = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/guicmd.vim	/^let s:kind = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/guicmd.vim	/^let s:kind.action_table.edit = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/guicmd.vim	/^let s:kind.action_table.execute = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.above = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.below = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.choose = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.left = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.persist_open = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.right = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.split = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.splitswitch = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.switch = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.tabopen = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.tabsplit = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.tabswitch = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.vsplit = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.vsplitswitch = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/source.vim	/^let s:kind = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/source.vim	/^let s:kind.action_table.edit = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/source.vim	/^let s:kind.action_table.start = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/tab.vim	/^  let s:kind.action_table.rename = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/tab.vim	/^  let s:kind.parents = ['cdable']$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind.action_table.delete = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind.action_table.open = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind.action_table.unite__new_candidate = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/uri.vim	/^let s:kind = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/uri.vim	/^let s:kind.action_table.start = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind.action_table.delete = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind.action_table.only = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind.action_table.open = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	plugged/unite.vim/autoload/unite/kinds/word.vim	/^let s:kind = {$/;"	v
s:last_errmsg	plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:last_errmsg = ''$/;"	v
s:last_rtp	autoload/plug.vim	/^let s:last_rtp  = s:escrtp(get(s:split_rtp(), -1, ''))$/;"	v
s:last_status	plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:last_status = 0$/;"	v
s:lasterr	plugged/vimproc.vim/autoload/vimproc.vim	/^let s:lasterr = []$/;"	v
s:leading_operator_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:leading_operator_regex = '^\\s*[.]'$/;"	v
s:lexer	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^let s:lexer = {}$/;"	v
s:line_term	plugged/vim-javascript/indent/javascript.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:lines	plugged/vim-ruby/ftplugin/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	plugged/vim-ruby/syntax/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:loaded	autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:loaded	plugged/unite.vim/autoload/vital/_unite.vim	/^let s:loaded = {}$/;"	v
s:loaded_delimitMate	plugged/delimitMate/plugin/delimitMate.vim	/^let s:loaded_delimitMate = 1$/;"	v
s:loadtgl	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^let s:loadtgl = exists('g:rbpt_loadcmd_toggle') ? g:rbpt_loadcmd_toggle : 0$/;"	v
s:mac_gui	autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:magenta = [ '#800080', 5 ]$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:magenta = '#8959a8'$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:magenta = '#b294bb'$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:magenta = '#ebbbff'$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:magenta = '#c397d8'$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:magenta = '#cc99cc'$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:magenta = [ '#f0a0c0', 217 ]$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:magenta = [ '#d33682', s:cuicolors.magenta[s:cuiindex] ]$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:magenta = [ '#d33682', s:cuicolors.magenta[s:cuiindex] ]$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:magenta = [ '#f2c68a', 216 ]$/;"	v
s:magicAtomsExpr	plugged/ingo-library/autoload/ingo/regexp/magic.vim	/^let s:magicAtomsExpr = '\\%(\\%(^\\|[^\\\\]\\)\\%(\\\\\\\\\\)*\\\\\\)\\@<!\\\\[vmMV]'$/;"	v
s:match_words	plugged/vim-haml/ftplugin/haml.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	plugged/vim-haml/ftplugin/haml.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-haml/ftplugin/haml.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-jade/ftplugin/jade.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-jade/ftplugin/jade.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-ruby/ftplugin/eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	plugged/vim-ruby/ftplugin/eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-ruby/ftplugin/eruby.vim	/^let s:match_words = ""$/;"	v
s:matcher	plugged/unite.vim/autoload/unite/filters/matcher_context.vim	/^let s:matcher = {$/;"	v
s:matcher	plugged/unite.vim/autoload/unite/filters/matcher_default.vim	/^let s:matcher = {$/;"	v
s:matcher	plugged/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^let s:matcher = {$/;"	v
s:matcher	plugged/unite.vim/autoload/unite/filters/matcher_glob.vim	/^let s:matcher = {$/;"	v
s:matcher	plugged/unite.vim/autoload/unite/filters/matcher_hide_current_file.vim	/^let s:matcher = {$/;"	v
s:matcher	plugged/unite.vim/autoload/unite/filters/matcher_hide_hidden_files.vim	/^let s:matcher = {$/;"	v
s:matcher	plugged/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^let s:matcher = {$/;"	v
s:matcher	plugged/unite.vim/autoload/unite/filters/matcher_project_files.vim	/^let s:matcher = {$/;"	v
s:matcher	plugged/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^let s:matcher = {$/;"	v
s:matcher	plugged/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^let s:matcher = {$/;"	v
s:max	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^let s:max = exists('g:rbpt_max') ? g:rbpt_max : max([len(s:pairs), 16])$/;"	v
s:me	autoload/plug.vim	/^let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:memoizedI	plugged/ingo-library/autoload/ingo/collections/memoized.vim	/^let s:memoizedI = {}$/;"	v
s:memoizedTime	plugged/ingo-library/autoload/ingo/collections/memoized.vim	/^let s:memoizedTime = -1$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message = {}$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.access_url_input_code = 'Access %s and paste the code'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.cache_file_unwritable = 'The cache file is not writable'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.cache_write_fail = 'Could not write the cache file'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.clear_completed_task = 'Clear all the completed tasks? (cannot be undone) y\/N: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.curl_wget_not_found = 'curl and wget not found'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.day_name = [ 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat' ]$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.day_name_long = [ 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday' ]$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.end_date_time = 'Ending date and time: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.google_access_token_fail = 'Fail in authorization to Google'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.help = {$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.hit_any_key = '[Hit any key]'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.input_calendar_index = 'Input the index of the calendar: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.input_calendar_name = 'Input the name of a new calendar: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.input_code = 'CODE: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.input_event = 'EVENT: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.input_task = 'TASK: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.mark_not_set = 'Mark not set: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.mkdir_fail = 'Could not create the directory for cache files'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.month_name = [ 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec' ]$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.month_name_long = [ 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December' ]$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.multiple_argument = 'There are multiple possible arguments'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.start_date_time = 'Starting date and time: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.task = {$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:message.today = 'today'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message = {}$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.access_url_input_code = '%s にアクセスして、コードを入力して下さい'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.cache_file_unwritable = 'キャッシュファイルの書き込みが許されていません'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.cache_write_fail = 'キャッシュファイルの書き込みに失敗しました'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.clear_completed_task = '完了したタスクを全て削除しますか？ (この操作は元に戻せません) y\/N: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.curl_wget_not_found = 'curl または wget が必要です'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.day_name = [ '日', '月', '火', '水', '木', '金', '土' ]$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.day_name_long = [ '日曜日', '月曜日', '火曜日', '水曜日', '木曜日', '金曜日', '土曜日' ]$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.end_date_time = '終了日時: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.google_access_token_fail = 'Googleへの認証に失敗しました'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.help = {$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.hit_any_key = '[キーを押して下さい]'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.input_calendar_index = 'カレンダーの番号を指定して下さい: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.input_calendar_name = '新しいカレンダーの名前を入力して下さい: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.input_code = 'コード: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.input_event = 'イベント: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.input_task = 'タスク: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.mark_not_set = 'マークが設定されていません: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.mkdir_fail = 'キャッシュ用のディレクトリーの作成に失敗しました'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.month_name = [ '1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月' ]$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.month_name_long = s:message.month_name$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.multiple_argument = '複数の引数候補があります'$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.start_date_time = '開始日時: '$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.task = {$/;"	v
s:message	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:message.today = '今日'$/;"	v
s:mode	plugged/lightline.vim/autoload/lightline.vim	/^let s:mode = ''$/;"	v
s:modemap	plugged/syntastic/plugin/syntastic.vim	/^let s:modemap = g:SyntasticModeMap.Instance()$/;"	v
s:msl_regex	plugged/vim-javascript/indent/javascript.vim	/^let s:msl_regex = s:continuation_regex$/;"	v
s:mx	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^let s:mx = '\\([+>]\\|[<^]\\+\\)\\{-}\\s*'$/;"	v
s:need_trans	plugged/unite.vim/autoload/vital/_unite/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:need_trans	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:next_sign_id	plugged/syntastic/plugin/syntastic/signs.vim	/^let s:next_sign_id = s:first_sign_id$/;"	v
s:next_sign_id	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:next_sign_id  = s:first_sign_id$/;"	v
s:nmaplist	plugged/Nvim-R/R/common_global.vim	/^let s:nmaplist = []$/;"	v
s:nmapping_order	plugged/calendar.vim/autoload/calendar/view/help.vim	/^let s:nmapping_order =$/;"	v
s:no_term_bg	plugged/vim-lucius/colors/lucius.vim	/^    let s:no_term_bg = 0$/;"	v
s:no_term_bg	plugged/vim-lucius/colors/lucius.vim	/^    let s:no_term_bg = g:lucius_no_term_bg$/;"	v
s:node_file	plugged/syntastic/syntax_checkers/less/lessc.vim	/^let s:node_file = 'node ' . syntastic#util#shescape(expand('<sfile>:p:h', 1) . syntastic#util#Slash() . 'less-lint.js')$/;"	v
s:non_bracket_continuation_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:non_bracket_continuation_regex = '\\%([\\\\.,:*\/%+]\\|\\<and\\|\\<or\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:normal_items	plugged/vim-lucius/colors/lucius.vim	/^let s:normal_items = [$/;"	v
s:notPathSeparatorPattern	plugged/ingo-library/autoload/ingo/regexp/fromwildcard.vim	/^    let s:notPathSeparatorPattern = '\\\\[^\/\\\\\\\\]'$/;"	v
s:notPathSeparatorPattern	plugged/ingo-library/autoload/ingo/regexp/fromwildcard.vim	/^    let s:notPathSeparatorPattern = '\\\\[^\/]'$/;"	v
s:notifiers	plugged/syntastic/plugin/syntastic.vim	/^let s:notifiers = g:SyntasticNotifiers.Instance()$/;"	v
s:novalue_options	plugged/calendar.vim/autoload/calendar/argument.vim	/^let s:novalue_options = deepcopy(s:all_novalue_options)$/;"	v
s:nskblist	plugged/Nvim-R/R/common_global.vim	/^let s:nskblist = split(s:nkblist, "\\n")$/;"	v
s:null_device	plugged/vimproc.vim/autoload/vimproc.vim	/^let s:null_device = vimproc#util#is_windows() ? 'NUL' : '\/dev\/null'$/;"	v
s:num	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:num = 0$/;"	v
s:nums	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:nums = {}$/;"	v
s:nvim	autoload/plug.vim	/^let s:nvim = has('nvim') && exists('*jobwait') && !s:is_win$/;"	v
s:ocamlpp	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp='camlp4o'$/;"	v
s:ocamlpp	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp='camlp4r'$/;"	v
s:old_cpo	plugged/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:old_cpo	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:old_cpo = &cpo$/;"	v
s:one_line_scope_regex	plugged/vim-javascript/indent/javascript.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:one_time_notices_issued	plugged/syntastic/autoload/syntastic/log.vim	/^let s:one_time_notices_issued = []$/;"	v
s:options	plugged/calendar.vim/autoload/calendar/argument.vim	/^let s:options = copy(s:novalue_options) + map(keys(deepcopy(s:value_options)), 'v:val . "="')$/;"	v
s:options	plugged/delimitMate/autoload/delimitMate.vim	/^  let s:options = {}$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:orange = [ '#ff0000', 9 ]$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:orange = '#f5871f'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:orange = '#de935f'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:orange = '#ffc58f'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:orange = '#e78c45'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:orange = '#f99157'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:orange = [ '#fad07a', 222 ]$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:orange = [ '#cb4b16', s:cuicolors.orange[s:cuiindex] ]$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:orange = [ '#cb4b16', s:cuicolors.orange[s:cuiindex] ]$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:orange = [ '#e5786d', 173 ]$/;"	v
s:othermonth_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^      let s:othermonth_fg_color = 7$/;"	v
s:othermonth_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^      let s:othermonth_fg_color = 8$/;"	v
s:othermonth_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:othermonth_fg_color = calendar#color#gen_color(s:fg_color, s:bg_color, 3, 4)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.right = [ [ s:base02, s:base01 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.insert.left = [ [ s:base3, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.error = [ [ s:base2, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.left = [ [ s:base3, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.warning = [ [ s:base02, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.replace.left = [ [ s:base3, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.visual.left = [ [ s:base3, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.error = [ [ s:red, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base0 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base0 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.replace.left = [ [ s:base02, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.middle = [ [ '#303030', '#121212', 236, 233 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.right = [ [ '#121212', '#606060', 233, 241 ], [ '#121212', '#3a3a3a', 233, 237 ], [ '#121212', '#262626', 233, 235 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.insert.left =  [ ['#005f00', '#ffffff', 22, 231, 'bold' ], [ '#ffffff', '#005f00', 231, 22 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.error = [ [ '#d0d0d0', '#ff0000', 252, 196 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.left = [ ['#0000ff', '#ffffff', 21, 231, 'bold' ], [ '#ffffff', '#0000ff', 231, 21 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.middle = [ [ '#8a8a8a', '#303030', 245, 236 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.right = [ [ '#303030', '#d0d0d0', 236, 252 ], [ '#303030', '#8a8a8a', 236, 245 ], [ '#bcbcbc', '#585858', 250, 240 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.warning = [ [ '#262626', '#ffff00', 235, 226 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.replace.left = [ [ '#af0000', '#ffffff', 124, 231, 'bold' ], [ '#ffffff', '#af0000', 231, 124 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.left = [ [ '#dadada', '#606060', 253, 241 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.middle = [ [ '#3a3a3a', '#b2b2b2', 237, 249 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.right = [ [ '#dadada', '#606060', 253, 241 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.tabsel = [ [ '#dadada', '#121212', 253, 233 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.visual.left = [ [ '#5f00ff', '#ffffff', 57, 231, 'bold' ], [ '#ffffff', '#5f00ff', 231, 57 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.right = [ ['gray1', 'gray5'], ['gray4', 'gray1'], ['gray4', 'gray0'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.left = [ ['darkestcyan', 'white', 'bold'], ['white', 'darkblue'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.middle = [ [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.right = [ [ 'darkestcyan', 'mediumcyan' ], [ 'mediumcyan', 'darkblue' ], [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.error = [ [ 'gray9', 'brightestred' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.left = [ ['darkestgreen', 'brightgreen', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.middle = [ [ 'gray7', 'gray2' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.right = [ ['gray5', 'gray10'], ['gray9', 'gray4'], ['gray8', 'gray2'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.warning = [ [ 'gray1', 'yellow' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.left = [ ['white', 'brightred', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.right = s:p.normal.right$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.left = [ [ 'gray9', 'gray4' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.middle = [ [ 'gray2', 'gray8' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.right = [ [ 'gray9', 'gray3' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.tabsel = [ [ 'gray9', 'gray1' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.visual.left = [ ['darkred', 'brightorange', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.inactive.right = [ [ s:base02, s:base01 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.insert.left = [ [ s:base3, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.normal.error = [ [ s:base2, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.normal.left = [ [ s:base3, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.normal.warning = [ [ s:base02, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.replace.left = [ [ s:base3, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.visual.left = [ [ s:base3, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.inactive.right = [ [ s:base02, s:base01 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.insert.left = [ [ s:base3, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.normal.error = [ [ s:base02, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.normal.error = [ [ s:red, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.normal.left = [ [ s:base3, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.normal.warning = [ [ s:base2, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.replace.left = [ [ s:base3, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.visual.left = [ [ s:base3, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base02 ], [ s:base00, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.right = [ [ s:base023, s:base01 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.middle = [ [ s:base02, s:base1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.right = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:packages	plugged/vim-go/plugin/go.vim	/^let s:packages = [$/;"	v
s:pairPattern	plugged/ingo-library/autoload/ingo/subst/pairs.vim	/^let s:pairPattern = '\\(^[^=]\\+\\)=\\(.*$\\)'$/;"	v
s:pairs	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^let s:pairs = [$/;"	v
s:pairs	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^let s:pairs = exists('g:rbpt_colorpairs') ? g:rbpt_colorpairs : s:pairs$/;"	v
s:pat	plugged/vim-coffee-script/compiler/coffee.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:pathSeparator	plugged/ingo-library/autoload/ingo/regexp/fromwildcard.vim	/^    let s:pathSeparator = '\/'$/;"	v
s:pathSeparator	plugged/ingo-library/autoload/ingo/regexp/fromwildcard.vim	/^    let s:pathSeparator = '\\'$/;"	v
s:path_sep_pattern	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:path_sep_pattern = (exists('+shellslash') ? '[\\\\\/]' : '\/') . '\\+'$/;"	v
s:path_separator	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:path_separator = s:is_windows ? ';' : ':'$/;"	v
s:pixel	plugged/calendar.vim/autoload/calendar/pixel.vim	/^let s:pixel = { ' ': [ '..', '..', '..', '..', '..'] }$/;"	v
s:plug_buf	autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_src	autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:pre_less_cur_syn	plugged/vim-less/after/syntax/html.vim	/^   let s:pre_less_cur_syn = b:current_syntax$/;"	v
s:prev_registers	plugged/unite.vim/autoload/unite/sources/history_yank.vim	/^let s:prev_registers = {}$/;"	v
s:property	plugged/vim-haml/indent/sass.vim	/^let s:property = '^\\s*:\\|^\\s*[[:alnum:]#{}-]\\+\\%(:\\|\\s*=\\)'$/;"	v
s:py2	autoload/plug.vim	/^let s:py2 = has('python') && !has('nvim') && !s:is_win && !has('win32unix')$/;"	v
s:pylint_new	plugged/syntastic/syntax_checkers/python/pylint.vim	/^let s:pylint_new = -1$/;"	v
s:quiet_warnings	plugged/syntastic/plugin/syntastic.vim	/^            let s:quiet_warnings = [s:quiet_warnings]$/;"	v
s:quiet_warnings	plugged/syntastic/plugin/syntastic.vim	/^        let s:quiet_warnings = get(g:syntastic_quiet_messages, 'type', [])$/;"	v
s:r	plugged/calendar.vim/autoload/calendar/string.vim	/^let s:r = '^[\\x20-\\x7e]*$'$/;"	v
s:rangeExpr	plugged/ingo-library/autoload/ingo/cmdargs/range.vim	/^let s:rangeExpr = s:singleRangeExpr . '\\%([,;]' . s:singleRangeExpr . '\\)\\?'$/;"	v
s:read_timeout	plugged/vimproc.vim/autoload/vimproc.vim	/^let s:read_timeout = 100$/;"	v
s:reader	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^let s:reader = {}$/;"	v
s:readme	plugged/Nvim-R/R/setcompldir.vim	/^    let s:readme = ['The omnils_ and fun_ files in this directory are generated by Nvim-R',$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:red = [ '#800000', 1 ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:red = '#c82829'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:red = '#cc6666'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:red = '#ff9da4'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:red = '#d54e53'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:red = '#f2777a'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:red = [ '#cf6a4c', 167 ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:red = [ '#dc322f', s:cuicolors.red[s:cuiindex] ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:red = [ '#dc322f', s:cuicolors.red[s:cuiindex] ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:red = [ '#e5786d', 203 ]$/;"	v
s:registry	plugged/syntastic/plugin/syntastic.vim	/^let s:registry = g:SyntasticRegistry.Instance()$/;"	v
s:relativenumber	plugged/calendar.vim/autoload/calendar/setlocal.vim	/^let s:relativenumber = exists('&relativenumber')$/;"	v
s:repo_prototype	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:rinstallpath	plugged/Nvim-R/R/windows.vim	/^        let s:rinstallpath = substitute(rip[0], '.*InstallPath.*REG_SZ\\s*', '', '')$/;"	v
s:rinstallpath	plugged/Nvim-R/R/windows.vim	/^        let s:rinstallpath = substitute(s:rinstallpath, '\\n', '', 'g')$/;"	v
s:rinstallpath	plugged/Nvim-R/R/windows.vim	/^        let s:rinstallpath = substitute(s:rinstallpath, '\\s*$', '', 'g')$/;"	v
s:rst2pseudoxml	plugged/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:rst2pseudoxml = (executable('rst2pseudoxml.py') && !syntastic#util#isRunningWindows()) ? 'rst2pseudoxml.py' : 'rst2pseudoxml'$/;"	v
s:ruby	autoload/plug.vim	/^let s:ruby = has('ruby') && !has('nvim') && (v:version >= 703 || v:version == 702 && has('patch374'))$/;"	v
s:ruby_deindent_keywords	plugged/vim-ruby/indent/ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_indent_keywords	plugged/vim-ruby/indent/ruby.vim	/^let s:ruby_indent_keywords =$/;"	v
s:ruby_path	plugged/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_path = s:build_path(s:ruby_paths)$/;"	v
s:ruby_path	plugged/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_path = type(g:ruby_path) == type([]) ? join(g:ruby_path, ',') : g:ruby_path$/;"	v
s:ruby_paths	plugged/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_default_path$/;"	v
s:ruby_paths	plugged/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_version_paths[b:ruby_version]$/;"	v
s:rubycomplete_debug	plugged/vim-ruby/autoload/rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rubycomplete_rails_loaded	plugged/vim-ruby/autoload/rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
s:sass_cache_location	plugged/syntastic/syntax_checkers/sass/sass.vim	/^let s:sass_cache_location = syntastic#util#tmpdir()$/;"	v
s:saturday_bg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:saturday_bg_color = 9$/;"	v
s:saturday_bg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:saturday_bg_color = calendar#color#gen_color(s:saturday_fg_color, s:bg_color, 1, 4)$/;"	v
s:saturday_bg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:saturday_bg_color = calendar#color#select_rgb(s:fg_color, 2, 5)$/;"	v
s:saturday_bg_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:saturday_bg_color = calendar#color#gen_color(s:saturday_fg_color, s:is_dark ? s:fg_color : s:bg_color, 1, 3)$/;"	v
s:saturday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:saturday_fg_color = 0$/;"	v
s:saturday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:saturday_fg_color = calendar#color#gen_color(s:saturday_bg_color, s:bg_color, 1, 7)$/;"	v
s:saturday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:saturday_fg_color = calendar#color#select_rgb(s:bg_color, 2, 6)$/;"	v
s:saturday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:saturday_fg_color = calendar#color#select_rgb(s:is_dark ? s:fg_color : s:bg_color, 4)$/;"	v
s:saturday_title_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:saturday_title_fg_color = s:saturday_fg_color$/;"	v
s:saturday_title_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:saturday_title_fg_color = calendar#color#gen_color(s:saturday_fg_color, s:saturday_bg_color, 3, 1)$/;"	v
s:save_cpo	plugged/AdvancedSorters/autoload/AdvancedSorters/Ranges.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/AdvancedSorters/plugin/AdvancedSorters.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/argument.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/async.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/autocmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/cipher.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/day.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/month.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/view.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/constructor/year.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/controller.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/countcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/austria.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/austriastyria.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/british.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/bulgaria.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/canada.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/default.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/estonia.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/france.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/germany.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/germanyprussia.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/greece.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/holland.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/hungary.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/italy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/japan.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/poland.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/portugal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/russia.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/spain.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/turkey.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/day/us.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/echo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/event.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/event/google.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/event/local.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/google/client.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/google/task.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/google/url_shortener.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/mapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/mark.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/message/default.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/message/en.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/message/ja.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/mjd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/model.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/pixel.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/setlocal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/setting.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/string.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/task.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/task/google.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/task/local.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/text.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/time.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/timestamp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/agenda.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/clock_date.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday_time.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/clock_date_time.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/clock_time.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/clock_time_hourmin.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/day.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/day_1.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/day_2.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/day_3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/day_4.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/day_5.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/day_6.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/day_7.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/event.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/help.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_1x1.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_1x3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_2x6.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_3x1.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_3x3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_3x4.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_4x1.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_4x2.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_4x3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_5x1.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/month_6x2.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/task.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/week.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/weekday.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/year.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/ymd_daymonthyear.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/ymd_monthdayyear.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/ymd_monthyear.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/ymd_year.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonth.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonthday.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/webapi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/autoload/calendar/week.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/plugin/calendar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/calendar.vim/syntax/calendar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/emmet-vim/autoload/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugged/emmet-vim/plugin/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugged/ingo-library/autoload/ingo/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ingo-library/autoload/ingo/cmdargs/command.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ingo-library/autoload/ingo/cmdargs/commandcommands.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ingo-library/autoload/ingo/cmdargs/range.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ingo-library/autoload/ingo/ftplugin/windowsettings.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ingo-library/autoload/ingo/motion/omap.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ingo-library/autoload/ingo/plugin/cmdcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ingo-library/autoload/ingo/query.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ingo-library/autoload/ingo/query/confirm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ingo-library/autoload/ingo/query/fromlist.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ingo-library/autoload/ingo/query/get.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ingo-library/autoload/ingo/regexp/virtcols.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ingo-library/autoload/ingo/smartcase.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ingo-library/autoload/ingo/str/frompattern.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ingo-library/autoload/ingo/tabstops.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ingo-library/autoload/ingo/window/preview.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/lightline.vim/autoload/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/lightline.vim/autoload/lightline/colortable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/lightline.vim/autoload/lightline/tab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/lightline.vim/plugin/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/autoload/syntastic/c.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/autoload/syntastic/log.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/autoload/syntastic/postprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/autoload/syntastic/preprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/autoload/syntastic/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ada/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/apiblueprint/snowcrash.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/applescript/osacompile.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/asm/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/bro/bro.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/avrgcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/clang_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/clang_tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/cppcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/make.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/oclint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/pc_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/sparse.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/c/splint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cabal/cabal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/chef/foodcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/co/coco.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/coffee/coffee.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/coq/coqtop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cpp/cpplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cpp/verapp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cs/mcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/css/csslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/css/prettycss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/cuda/nvcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/d/dmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/docbk/igor.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/dustjs/swiffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/elixir/elixir.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/erlang/escript.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/eruby/ruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/go/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/go/gofmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/go/golint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/go/gotype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/go/govet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haml/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haml/haml_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/handlebars/handlebars.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haskell/hlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haskell/scan.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/haxe/haxe.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/hss/hss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/html/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/html/validator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/html/w3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/java/javac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/flow.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/gjslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/jscs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/jsl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/jslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/jsxhint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/javascript/standard.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/json/jsonlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/json/jsonval.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/less/lessc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/less/recess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/lex/flex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/limbo/limbo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/lisp/clisp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/llvm/llvm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/lua/luac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/lua/luacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/markdown/mdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/matlab/mlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/mercury/mmc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/nasm/nasm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/nroff/mandoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/objc/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/perl/perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/perl/perlcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/php/php.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/php/phpcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/php/phplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/php/phpmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/po/msgfmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/pod/podchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/puppet/puppet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/flake8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/frosted.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/mypy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/pep257.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/pep8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/prospector.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/py3kwarn.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/pyflakes.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/pylama.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/pylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/python/python.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/r/lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/r/svtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/racket/racket.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/rnc/rnv.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/rst/rstcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/jruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/macruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/mri.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/reek.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/rubocop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/ruby/rubylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sass/sass.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sass/sassc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/scala/fsc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/scala/scalac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/scss/scss_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sh/bashate.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sh/sh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sh/shellcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/slim/slimrb.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/sml/smlnj.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/spec/rpmlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/tex/chktex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/tex/lacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/text/atdtool.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/text/language_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/twig/twiglint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/typescript/tsc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/vala/valac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/vim/vint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/xml/plutil.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/xml/xmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/yacc/bison.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/zpt/zptlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/syntastic/syntax_checkers/zsh/zsh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/tabular/after/plugin/TabularMaps.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/action.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/candidates.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/custom.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/converter_default.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/converter_full_path.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/converter_nothing.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/converter_relative_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/converter_relative_word.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/converter_smart_path.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/converter_tail.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/converter_tail_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/matcher_context.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/matcher_default.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/matcher_glob.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/matcher_hide_current_file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/matcher_hide_hidden_files.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/matcher_project_files.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/sorter_default.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/sorter_ftime.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/sorter_length.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/sorter_nothing.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/sorter_rank.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/sorter_reverse.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/filters/sorter_word.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/handlers.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/kinds/command.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/kinds/common.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/kinds/completion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/kinds/directory.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/kinds/file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/kinds/guicmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/kinds/jump_list.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/kinds/source.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/kinds/tab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/kinds/uri.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/kinds/window.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/kinds/word.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/mappings.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/action.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/alias.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/buffer/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/change.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/command.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/directory.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/file_list.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/file_point.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/function.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/history_input.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/history_unite.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/history_yank.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/interactive.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/jump.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/jump_point.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/launcher.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/mapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/menu.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/output.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/register.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/resume.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/runtimepath.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/source.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/tab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/window.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/sources/window_gui.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/start.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/unite/view.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/vital/_unite/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/vital/_unite/System/Cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/vital/_unite/System/File.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/autoload/vital/_unite/Vim/Message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/plugin/unite.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/plugin/unite/bookmark.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/plugin/unite/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/plugin/unite/history_yank.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/plugin/unite/window.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/unite.vim/syntax/unite.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-go/compiler/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-haml/ftplugin/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-jade/ftplugin/jade.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-ruby/ftplugin/eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vimproc.vim/autoload/vimproc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vimproc.vim/autoload/vimproc/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vimproc.vim/plugin/vimproc.vim	/^let s:save_cpo = &cpo$/;"	v
s:savecpo	plugged/tabular/autoload/tabular.vim	/^let s:savecpo = &cpo$/;"	v
s:savecpo	plugged/tabular/plugin/Tabular.vim	/^let s:savecpo = &cpo$/;"	v
s:saveflag	plugged/calendar.vim/autoload/calendar/countcache.vim	/^let s:saveflag = {}$/;"	v
s:seed	plugged/emmet-vim/autoload/emmet/util.vim	/^let s:seed = localtime()$/;"	v
s:select_color	plugged/calendar.vim/syntax/calendar.vim	/^      let s:select_color = 7$/;"	v
s:select_color	plugged/calendar.vim/syntax/calendar.vim	/^      let s:select_color = 8$/;"	v
s:select_color	plugged/calendar.vim/syntax/calendar.vim	/^let s:select_color = calendar#color#gen_color(s:fg_color, s:bg_color, 1, 4)$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/cache.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/controller.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/controller.vim	/^let s:self.action_name = ''$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/controller.vim	/^let s:self.cursor_pos = [0, 0]$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/controller.vim	/^let s:self.defaultsyntaxnames = ['Select', 'Sunday', 'Saturday',$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/controller.vim	/^let s:self.mode = ''$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/controller.vim	/^let s:self.pos = [0, 0]$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/countcache.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event.vim	/^let s:self.__events = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event.vim	/^let s:self._holidays = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event.vim	/^let s:self._updated = 0$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event/google.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event/google.vim	/^let s:self._events = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event/google.vim	/^let s:self._key = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event/local.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event/local.vim	/^let s:self._events = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/event/local.vim	/^let s:self._key = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/google/url_shortener.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/mark.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/mjd.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/model.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/task.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/task.vim	/^let s:self._updated = 0$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/task/google.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/task/local.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/text.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/time.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self._event = 0$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self._event_order = []$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self._height = 0$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self._help = 0$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self._help_order = []$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self._task = 0$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self.calendar_views = ['year', 'month', 'week', 'day_4', 'day_1', 'clock']$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self.index = 0$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self.index_max = len(s:self.calendar_views) - 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view.vim	/^let s:self.updated = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^let s:self.views = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^let s:self.y_height = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date.vim	/^let s:self.colnum = 2$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date.vim	/^let s:self.smaller = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date.vim	/^let s:self.y_height = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday.vim	/^let s:self.colnum = 2$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday.vim	/^let s:self.smaller = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday.vim	/^let s:self.y_height = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday_time.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday_time.vim	/^let s:self.smaller = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday_time.vim	/^let s:self.y_height = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_time.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_time.vim	/^let s:self.smaller = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_date_time.vim	/^let s:self.y_height = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_time.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_time.vim	/^let s:self.colnum = 2$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_time.vim	/^let s:self.y_height = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_time_hourmin.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_time_hourmin.vim	/^let s:self.colnum = 2$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/clock_time_hourmin.vim	/^let s:self.y_height = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day.vim	/^let s:self.daynum = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_1.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_1.vim	/^let s:self.daynum = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_2.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_2.vim	/^let s:self.daynum = 2$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_3.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_3.vim	/^let s:self.daynum = 3$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_4.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_4.vim	/^let s:self.daynum = 4$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_5.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_5.vim	/^let s:self.daynum = 5$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_6.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_6.vim	/^let s:self.daynum = 6$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_7.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/day_7.vim	/^let s:self.daynum = 7$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/event.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/event.vim	/^let s:self._select_line = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/help.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/help.vim	/^let s:self._contents_cache = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/help.vim	/^let s:self._select_line = 0$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/help.vim	/^let s:self._select_title = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_1x1.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_1x1.vim	/^let s:self.x_months = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_1x1.vim	/^let s:self.y_months = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_1x3.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_1x3.vim	/^let s:self.x_months = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_1x3.vim	/^let s:self.y_months = 3$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_2x6.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_2x6.vim	/^let s:self.x_months = 6$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_2x6.vim	/^let s:self.y_months = 2$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_3x1.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_3x1.vim	/^let s:self.x_months = 3$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_3x1.vim	/^let s:self.y_months = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_3x3.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_3x3.vim	/^let s:self.x_months = 3$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_3x3.vim	/^let s:self.y_months = 3$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_3x4.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_3x4.vim	/^let s:self.x_months = 3$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_3x4.vim	/^let s:self.y_months = 4$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_4x1.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_4x1.vim	/^let s:self.x_months = 4$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_4x1.vim	/^let s:self.y_months = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_4x2.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_4x2.vim	/^let s:self.x_months = 4$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_4x2.vim	/^let s:self.y_months = 2$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_4x3.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_4x3.vim	/^let s:self.x_months = 4$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_4x3.vim	/^let s:self.y_months = 3$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_5x1.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_5x1.vim	/^let s:self.x_months = 5$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_5x1.vim	/^let s:self.y_months = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_6x2.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_6x2.vim	/^let s:self.x_months = 2$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/month_6x2.vim	/^let s:self.y_months = 6$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/task.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/task.vim	/^let s:self._select_line = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/week.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/week.vim	/^let s:self.daynum = 7$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/week.vim	/^let s:self.stopend = 1$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/weekday.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/weekday.vim	/^let s:self.daynum = 5$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/year.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^let s:self.views = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_daymonthyear.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_daymonthyear.vim	/^let s:self.ymd = [ 'day', 'month', 'year' ]$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_monthdayyear.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_monthdayyear.vim	/^let s:self.ymd = [ 'month', 'day', 'year' ]$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_monthyear.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_monthyear.vim	/^let s:self.ymd = [ 'month', 'year' ]$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_year.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_year.vim	/^let s:self.ymd = [ 'year' ]$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonth.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonth.vim	/^let s:self.ymd = [ 'year', 'month' ]$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonthday.vim	/^let s:self = {}$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/view/ymd_yearmonthday.vim	/^let s:self.ymd = [ 'year', 'month', 'day' ]$/;"	v
s:self	plugged/calendar.vim/autoload/calendar/week.vim	/^let s:self = {}$/;"	v
s:self_file	plugged/unite.vim/autoload/vital/_unite.vim	/^let s:self_file = expand('<sfile>')$/;"	v
s:self_version	plugged/unite.vim/autoload/vital/_unite.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:setup_done	plugged/syntastic/plugin/syntastic/highlighting.vim	/^let s:setup_done = 0$/;"	v
s:setup_done	plugged/syntastic/plugin/syntastic/signs.vim	/^let s:setup_done = 0$/;"	v
s:sfile	plugged/emmet-vim/unittest.vim	/^let s:sfile = expand('<sfile>')$/;"	v
s:shortener	plugged/calendar.vim/autoload/calendar/google/client.vim	/^let s:shortener = calendar#google#url_shortener#new()$/;"	v
s:singleRangeExpr	plugged/ingo-library/autoload/ingo/cmdargs/range.vim	/^let s:singleRangeExpr = '\\%(\\d*\\|[.$*%]\\|''\\S\\|\\\\[\/?&]\\|\/.\\{-}\/\\|?.\\{-}?\\)\\%([+-]\\d*\\)\\?'$/;"	v
s:skip_expr	plugged/vim-javascript/indent/javascript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:skip_expr	plugged/vim-ruby/indent/ruby.vim	/^let s:skip_expr =$/;"	v
s:sleeptime	plugged/Nvim-R/R/windows.vim	/^let s:sleeptime = str2nr(s:sleeptimestr)$/;"	v
s:solarized_termcolors	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:solarized_termcolors = get(g:, 'solarized_termcolors', 256)$/;"	v
s:solarized_termcolors	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:solarized_termcolors = get(g:, 'solarized_termcolors', 256)$/;"	v
s:sortFlagsExpr	plugged/AdvancedSorters/autoload/AdvancedSorters/Ranges.vim	/^let s:sortFlagsExpr = '[iurnxo[:space:]]'$/;"	v
s:sortKeyFormat	plugged/nerdtree/lib/nerdtree/path.vim	/^let s:sortKeyFormat = "%0" . float2nr(ceil(log10(len(g:NERDTreeSortOrder)))) . "d"$/;"	v
s:sorter	plugged/unite.vim/autoload/unite/filters/sorter_default.vim	/^let s:sorter = {$/;"	v
s:sorter	plugged/unite.vim/autoload/unite/filters/sorter_ftime.vim	/^let s:sorter = {$/;"	v
s:sorter	plugged/unite.vim/autoload/unite/filters/sorter_length.vim	/^let s:sorter = {$/;"	v
s:sorter	plugged/unite.vim/autoload/unite/filters/sorter_nothing.vim	/^let s:sorter = {$/;"	v
s:sorter	plugged/unite.vim/autoload/unite/filters/sorter_rank.vim	/^let s:sorter = {$/;"	v
s:sorter	plugged/unite.vim/autoload/unite/filters/sorter_reverse.vim	/^let s:sorter = {$/;"	v
s:sorter	plugged/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^let s:sorter = {$/;"	v
s:sorter	plugged/unite.vim/autoload/unite/filters/sorter_word.vim	/^let s:sorter = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/action.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/action.vim	/^let s:source.action_table.do = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:source.action_table.unite__new_candidate = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/change.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/command.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/command.vim	/^let s:source.action_table.preview = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/file_list.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/file_point.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/find.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/function.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/function.vim	/^let s:source.action_table.call = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/function.vim	/^let s:source.action_table.edit = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/function.vim	/^let s:source.action_table.preview = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/grep.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/history_input.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/history_input.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/history_input.vim	/^let s:source.action_table.narrow = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/history_unite.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/history_unite.vim	/^let s:source.action_table.start = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/history_yank.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/history_yank.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/interactive.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/interactive.vim	/^let s:source.action_table.narrow = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/jump.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/jump_point.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/launcher.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/mapping.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/mapping.vim	/^let s:source.action_table.preview = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/menu.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/output.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/process.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/process.vim	/^let s:source.action_table.sigint = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/process.vim	/^let s:source.action_table.sigkill = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/process.vim	/^let s:source.action_table.sigterm = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/process.vim	/^let s:source.action_table.unite__new_candidate = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/register.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/register.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/register.vim	/^let s:source.action_table.edit = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/resume.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/runtimepath.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/runtimepath.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/script.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/source.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/tab.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/vimgrep.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/window.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/window_gui.vim	/^let s:source = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/window_gui.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/window_gui.vim	/^let s:source.action_table.open = {$/;"	v
s:source	plugged/unite.vim/autoload/unite/sources/window_gui.vim	/^let s:source.action_table.rename = {$/;"	v
s:source_buffer_all	plugged/unite.vim/autoload/unite/sources/buffer.vim	/^let s:source_buffer_all = {$/;"	v
s:source_buffer_tab	plugged/unite.vim/autoload/unite/sources/buffer.vim	/^let s:source_buffer_tab = deepcopy(s:source_buffer_all)$/;"	v
s:source_buffer_tab	plugged/unite.vim/autoload/unite/sources/buffer.vim	/^let s:source_buffer_tab.description =$/;"	v
s:source_buffer_tab	plugged/unite.vim/autoload/unite/sources/buffer.vim	/^let s:source_buffer_tab.name = 'buffer_tab'$/;"	v
s:source_directory	plugged/unite.vim/autoload/unite/sources/directory.vim	/^let s:source_directory = {$/;"	v
s:source_directory_async	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_async = deepcopy(s:source_file_async)$/;"	v
s:source_directory_async	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_async.default_kind = 'directory'$/;"	v
s:source_directory_async	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_async.description =$/;"	v
s:source_directory_async	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_async.name = 'directory_rec\/async'$/;"	v
s:source_directory_new	plugged/unite.vim/autoload/unite/sources/directory.vim	/^let s:source_directory_new = {$/;"	v
s:source_directory_rec	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_rec = deepcopy(s:source_file_rec)$/;"	v
s:source_directory_rec	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_rec.default_kind = 'directory'$/;"	v
s:source_directory_rec	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_rec.description =$/;"	v
s:source_directory_rec	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_rec.name = 'directory_rec'$/;"	v
s:source_file	plugged/unite.vim/autoload/unite/sources/file.vim	/^let s:source_file = {$/;"	v
s:source_file_async	plugged/unite.vim/autoload/unite/sources/file.vim	/^let s:source_file_async = deepcopy(s:source_file)$/;"	v
s:source_file_async	plugged/unite.vim/autoload/unite/sources/file.vim	/^let s:source_file_async.description = 'asynchronous candidates from file list'$/;"	v
s:source_file_async	plugged/unite.vim/autoload/unite/sources/file.vim	/^let s:source_file_async.name = 'file\/async'$/;"	v
s:source_file_async	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_async = deepcopy(s:source_file_rec)$/;"	v
s:source_file_async	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_async.description =$/;"	v
s:source_file_async	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_async.name = 'file_rec\/async'$/;"	v
s:source_file_git	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_git = deepcopy(s:source_file_async)$/;"	v
s:source_file_git	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_git.description =$/;"	v
s:source_file_git	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_git.name = 'file_rec\/git'$/;"	v
s:source_file_neovim	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_neovim = deepcopy(s:source_file_rec)$/;"	v
s:source_file_neovim	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_neovim.description =$/;"	v
s:source_file_neovim	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_neovim.name = 'file_rec\/neovim'$/;"	v
s:source_file_new	plugged/unite.vim/autoload/unite/sources/file.vim	/^let s:source_file_new = {$/;"	v
s:source_file_rec	plugged/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_rec = {$/;"	v
s:source_line	plugged/unite.vim/autoload/unite/sources/line.vim	/^let s:source_line = {$/;"	v
s:source_line	plugged/unite.vim/autoload/unite/sources/line.vim	/^let s:source_line.converters = [s:source_line.source__converter]$/;"	v
s:specialSearchCharacterExpressions	plugged/ingo-library/autoload/ingo/regexp/magic.vim	/^let s:specialSearchCharacterExpressions = {$/;"	v
s:splat_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:splat_regex = '[[,(]\\s*\\*\\s*\\%(#.*\\)\\=$'$/;"	v
s:style	plugged/vim-lucius/colors/lucius.vim	/^    let s:style = &background$/;"	v
s:style	plugged/vim-lucius/colors/lucius.vim	/^    let s:style = g:lucius_style$/;"	v
s:suite	plugged/unite.vim/test/matcher.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	plugged/unite.vim/test/sorter.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	plugged/unite.vim/test/source.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	plugged/vimproc.vim/test/fopen.vim	/^let s:suite = themis#suite('fopen')$/;"	v
s:suite	plugged/vimproc.vim/test/functions.vim	/^let s:suite = themis#suite('functions')$/;"	v
s:suite	plugged/vimproc.vim/test/lexer.vim	/^let s:suite = themis#suite('lexer')$/;"	v
s:suite	plugged/vimproc.vim/test/parser.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	plugged/vimproc.vim/test/popen.vim	/^let s:suite = themis#suite('popen')$/;"	v
s:suite	plugged/vimproc.vim/test/socket.vim	/^let s:suite = themis#suite('socket')$/;"	v
s:suite	plugged/vimproc.vim/test/system.vim	/^let s:suite = themis#suite('system')$/;"	v
s:summary	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:summary = [0, 0, 0]$/;"	v
s:sunday_bg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:sunday_bg_color = 12$/;"	v
s:sunday_bg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:sunday_bg_color = calendar#color#gen_color(s:sunday_fg_color, s:bg_color, 1, 4)$/;"	v
s:sunday_bg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:sunday_bg_color = calendar#color#select_rgb(s:fg_color, 0, 5)$/;"	v
s:sunday_bg_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:sunday_bg_color = calendar#color#gen_color(s:sunday_fg_color, s:is_dark ? s:fg_color : s:bg_color, 1, 3)$/;"	v
s:sunday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:sunday_fg_color = 0$/;"	v
s:sunday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:sunday_fg_color = calendar#color#gen_color(s:sunday_bg_color, s:bg_color, 1, 7)$/;"	v
s:sunday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:sunday_fg_color = calendar#color#select_rgb(s:bg_color, 0, 6)$/;"	v
s:sunday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:sunday_fg_color = calendar#color#select_rgb(s:is_dark ? s:fg_color : s:bg_color, 1)$/;"	v
s:sunday_title_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:sunday_title_fg_color = s:sunday_fg_color$/;"	v
s:sunday_title_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:sunday_title_fg_color = calendar#color#gen_color(s:sunday_fg_color, s:sunday_bg_color, 3, 1)$/;"	v
s:super_constructor	plugged/calendar.vim/autoload/calendar/constructor/day_hybrid.vim	/^let s:super_constructor = calendar#constructor#day#new(s:instance)$/;"	v
s:super_constructor	plugged/calendar.vim/autoload/calendar/constructor/view_clock.vim	/^let s:super_constructor = calendar#constructor#view#new(s:instance)$/;"	v
s:super_constructor	plugged/calendar.vim/autoload/calendar/constructor/view_days.vim	/^let s:super_constructor = calendar#constructor#view#new(s:instance)$/;"	v
s:super_constructor	plugged/calendar.vim/autoload/calendar/constructor/view_months.vim	/^let s:super_constructor = calendar#constructor#view#new(s:instance)$/;"	v
s:super_constructor	plugged/calendar.vim/autoload/calendar/constructor/view_textbox.vim	/^let s:super_constructor = calendar#constructor#view#new(s:instance)$/;"	v
s:super_constructor	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^let s:super_constructor = calendar#constructor#view#new(s:instance)$/;"	v
s:supported_search_direction	plugged/unite.vim/autoload/unite/sources/line.vim	/^let s:supported_search_direction =$/;"	v
s:supports_star	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:supports_star = v:version > 703 || (v:version == 703 && has("patch596"))$/;"	v
s:syng_linecom	plugged/vim-javascript/indent/javascript.vim	/^let s:syng_linecom = 'linecomment\\c'$/;"	v
s:syng_multiline	plugged/vim-javascript/indent/javascript.vim	/^let s:syng_multiline = 'comment\\c'$/;"	v
s:syng_strcom	plugged/vim-javascript/indent/javascript.vim	/^let s:syng_strcom = 'string\\|regex\\|comment\\c'$/;"	v
s:syng_strcom	plugged/vim-ruby/indent/ruby.vim	/^let s:syng_strcom = '\\<ruby\\%(Regexp\\|RegexpDelimiter\\|RegexpEscape' .$/;"	v
s:syng_string	plugged/vim-javascript/indent/javascript.vim	/^let s:syng_string = 'regex\\c'$/;"	v
s:syng_string	plugged/vim-ruby/indent/ruby.vim	/^let s:syng_string =$/;"	v
s:syng_stringdoc	plugged/vim-ruby/indent/ruby.vim	/^let s:syng_stringdoc =$/;"	v
s:t	plugged/calendar.vim/autoload/calendar/setting.vim	/^let s:t = strftime('%z')$/;"	v
s:table	plugged/lightline.vim/autoload/lightline/colortable.vim	/^let s:table = s:load()$/;"	v
s:tag	plugged/vim-haml/indent/haml.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	plugged/vim-jade/indent/jade.vim	/^let s:tag = '\\([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:targets	plugged/smartpairs.vim/plugin/smartpairs.vim	/^let s:targets = { $/;"	v
s:task	plugged/calendar.vim/autoload/calendar/google/task.vim	/^let s:task = []$/;"	v
s:task_cache	plugged/calendar.vim/autoload/calendar/google/task.vim	/^let s:task_cache = s:cache.new('task')$/;"	v
s:task_cache	plugged/calendar.vim/autoload/calendar/task/local.vim	/^let s:task_cache = s:cache.new('task')$/;"	v
s:tempBufNr	plugged/ingo-library/autoload/ingo/buffer/temp.vim	/^let s:tempBufNr = 0$/;"	v
s:temp_files	plugged/vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:term	plugged/calendar.vim/autoload/calendar/color.vim	/^let s:term = has('gui_running') ? 'gui' : 'cterm'$/;"	v
s:terminals	plugged/Nvim-R/R/external_term.vim	/^    let s:terminals = ['gnome-terminal', 'konsole', 'xfce4-terminal', 'terminal', 'Eterm',$/;"	v
s:ternary	plugged/vim-javascript/indent/javascript.vim	/^let s:ternary = '^\\s\\+[?|:]'$/;"	v
s:ternary_q	plugged/vim-javascript/indent/javascript.vim	/^let s:ternary_q = '^\\s\\+?'$/;"	v
s:this_master	plugged/Nvim-R/ftplugin/rnoweb_nvimr.vim	/^        let s:this_master = SyncTeX_GetMaster()[0]$/;"	v
s:time_cache	plugged/calendar.vim/autoload/calendar/time.vim	/^let s:time_cache = {}$/;"	v
s:time_zone_cache	plugged/calendar.vim/autoload/calendar/time.vim	/^let s:time_zone_cache = {}$/;"	v
s:tll	plugged/Nvim-R/R/gui_running.vim	/^    let s:tll = '<Tab>' . g:maplocalleader$/;"	v
s:tll	plugged/Nvim-R/R/gui_running.vim	/^    let s:tll = '<Tab>\\\\'$/;"	v
s:tmuxversion	plugged/Nvim-R/R/common_global.vim	/^        let s:tmuxversion = "1.0"$/;"	v
s:tmuxversion	plugged/Nvim-R/R/common_global.vim	/^    let s:tmuxversion = substitute(s:tmuxversion, '.*tmux \\([0-9]\\.[0-9]\\).*', '\\1', '')$/;"	v
s:tmuxversion	plugged/Nvim-R/R/common_global.vim	/^    let s:tmuxversion = system("tmux -V")$/;"	v
s:tnr	plugged/Nvim-R/R/common_buffer.vim	/^let s:tnr = tabpagenr()$/;"	v
s:today_color	plugged/calendar.vim/syntax/calendar.vim	/^      let s:today_color = 10$/;"	v
s:today_color	plugged/calendar.vim/syntax/calendar.vim	/^      let s:today_color = 2$/;"	v
s:today_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:today_color = calendar#color#gen_color(s:today_fg_color, s:bg_color, 1, 3)$/;"	v
s:today_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:today_color = calendar#color#select_rgb(s:fg_color, 1, 5)$/;"	v
s:today_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:today_color = calendar#color#gen_color(s:today_fg_color, s:is_dark ? s:fg_color : s:bg_color, 1, 3)$/;"	v
s:today_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^      let s:today_fg_color = 0$/;"	v
s:today_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^      let s:today_fg_color = 15$/;"	v
s:today_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:today_fg_color = calendar#color#gen_color(calendar#color#select_rgb(s:fg_color, 1, 6), s:fg_color, 4, 3)$/;"	v
s:today_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:today_fg_color = calendar#color#gen_color(s:today_color, s:bg_color, 1, 5)$/;"	v
s:today_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:today_fg_color = calendar#color#gen_color(calendar#color#select_rgb(s:is_dark ? s:fg_color : s:bg_color, 2), s:is_dark ? s:bg_color : s:fg_color, 4, 3)$/;"	v
s:token_url	plugged/calendar.vim/autoload/calendar/google/client.vim	/^let s:token_url = 'https:\/\/accounts.google.com\/o\/oauth2\/token'$/;"	v
s:tree_up_dir_line	plugged/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:triggers	autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:type_map	plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^let s:type_map = {}$/;"	v
s:types	plugged/rainbow_parentheses.vim/autoload/rainbow_parentheses.vim	/^let s:types = [['(',')'],['\\[','\\]'],['{','}'],['<','>']]$/;"	v
s:undercurl_items	plugged/vim-lucius/colors/lucius.vim	/^let s:undercurl_items = [$/;"	v
s:underline_items	plugged/vim-lucius/colors/lucius.vim	/^let s:underline_items = [$/;"	v
s:undo_ftplugin	plugged/vim-haml/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-haml/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-haml/ftplugin/haml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-jade/ftplugin/jade.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-jade/ftplugin/jade.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-ruby/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-ruby/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-ruby/ftplugin/eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undolevels	plugged/calendar.vim/autoload/calendar/setlocal.vim	/^let s:undolevels = v:version > 704 || v:version == 704 && has('patch073')$/;"	v
s:unite_histories	plugged/unite.vim/autoload/unite/sources/history_unite.vim	/^let s:unite_histories = []$/;"	v
s:unite_histories_file_mtime	plugged/unite.vim/autoload/unite/sources/history_unite.vim	/^let s:unite_histories_file_mtime = 0$/;"	v
s:use_bold	plugged/vim-lucius/colors/lucius.vim	/^    let s:use_bold = 1$/;"	v
s:use_bold	plugged/vim-lucius/colors/lucius.vim	/^    let s:use_bold = g:lucius_use_bold$/;"	v
s:use_current_unite	plugged/unite.vim/autoload/unite/variables.vim	/^  let s:use_current_unite = 1$/;"	v
s:use_underline	plugged/vim-lucius/colors/lucius.vim	/^    let s:use_underline = 1$/;"	v
s:use_underline	plugged/vim-lucius/colors/lucius.vim	/^    let s:use_underline = g:lucius_use_underline$/;"	v
s:using_xolox_shell	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:using_xolox_shell = -1$/;"	v
s:value_options	plugged/calendar.vim/autoload/calendar/argument.vim	/^let s:value_options = deepcopy(s:all_value_options)$/;"	v
s:var_stmt	plugged/vim-javascript/indent/javascript.vim	/^let s:var_stmt = '^\\s*var'$/;"	v
s:version_file	plugged/vim-ruby/ftplugin/ruby.vim	/^  let s:version_file = findfile('.ruby-version', '.;')$/;"	v
s:vim_system	plugged/vim-go/autoload/go/complete.vim	/^    let s:vim_system = get(g:, 'gocomplete#system_function', 'system')$/;"	v
s:vim_system	plugged/vim-go/autoload/go/complete.vim	/^    let s:vim_system = get(g:, 'gocomplete#system_function', 'vimproc#system2')$/;"	v
s:vimproc_dll_basename	plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_cygwin.dll'$/;"	v
s:vimproc_dll_basename	plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_linux32.so'$/;"	v
s:vimproc_dll_basename	plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_linux64.so'$/;"	v
s:vimproc_dll_basename	plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_mac.so'$/;"	v
s:vimproc_dll_basename	plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_unix.so'$/;"	v
s:vimproc_dll_basename	plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = has('win64') ?$/;"	v
s:violet	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:violet = [ '#ff00ff', 13 ]$/;"	v
s:violet	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:violet = [ '#6c71c4', s:cuicolors.violet[s:cuiindex] ]$/;"	v
s:violet	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:violet = [ '#6c71c4', s:cuicolors.violet[s:cuiindex] ]$/;"	v
s:vmaplist	plugged/Nvim-R/R/common_global.vim	/^let s:vmaplist = []$/;"	v
s:vskblist	plugged/Nvim-R/R/common_global.vim	/^let s:vskblist = split(s:vkblist, "\\n")$/;"	v
s:weekday_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:weekday_color = 8$/;"	v
s:weekday_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:weekday_color = calendar#color#gen_color(s:fg_color, s:bg_color, 1, 5)$/;"	v
s:weekday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^    let s:weekday_fg_color = 0$/;"	v
s:weekday_fg_color	plugged/calendar.vim/syntax/calendar.vim	/^  let s:weekday_fg_color = calendar#color#gen_color(s:fg_color, s:bg_color, 3, 2)$/;"	v
s:weeks	plugged/calendar.vim/autoload/calendar/week.vim	/^let s:weeks = [ 'sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday' ]$/;"	v
s:worktree_for_dir	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
s:writableRegisterExpr	plugged/ingo-library/autoload/ingo/cmdargs/register.vim	/^let s:writableRegisterExpr = '\\([-a-zA-Z0-9"*+_\/]\\)'$/;"	v
s:write_timeout	plugged/vimproc.vim/autoload/vimproc.vim	/^let s:write_timeout = 100$/;"	v
s:yank_histories	plugged/unite.vim/autoload/unite/sources/history_yank.vim	/^let s:yank_histories = []$/;"	v
s:yank_histories_file_mtime	plugged/unite.vim/autoload/unite/sources/history_yank.vim	/^let s:yank_histories_file_mtime = 0$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:yellow = [ '#808000', 3 ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:yellow = '#eab700'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:yellow = '#f0c674'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:yellow = '#ffeead'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:yellow = '#e7c547'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:yellow = '#ffcc66'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:yellow = [ '#ffb964', 215 ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:yellow = [ '#b58900', s:cuicolors.yellow[s:cuiindex] ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:yellow = [ '#b58900', s:cuicolors.yellow[s:cuiindex] ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:yellow = [ '#cae682', 180 ]$/;"	v
save	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:save(filename, bookmark)  "{{{$/;"	f
save	plugged/unite.vim/autoload/unite/sources/history_yank.vim	/^function! s:save()  "{{{$/;"	f
save	plugged/vim-wakatime/plugin/packages/wakatime/session_cache.py	/^    def save(self, session):$/;"	m	class:SessionCache
save_cpo	plugged/delimitMate/plugin/delimitMate.vim	/^let save_cpo = &cpo$/;"	v
save_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    def save_indent(token_class, start=False):$/;"	m	class:YamlLexer
save_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    def save_indent(token_class, start=False):$/;"	m	class:YamlLexer
sboundary	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    sboundary = '(?!'+symbols+')'$/;"	v	class:KokaLexer
sboundary	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    sboundary = '(?!'+symbols+')'$/;"	v	class:KokaLexer
scan	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
scan	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/scanner.py	/^    def scan(self, pattern):$/;"	m	class:Scanner
scan	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/scanner.py	/^    def scan(self, pattern):$/;"	m	class:Scanner
scan	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^    from . import scanner as scan$/;"	i
scan_once	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/scanner.py	/^    def scan_once(string, idx):$/;"	f	function:py_make_scanner
scan_once_str	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^scan_once_str(PyScannerObject *s, PyObject *pystr, Py_ssize_t idx, Py_ssize_t *next_idx_ptr)$/;"	f	file:
scan_once_unicode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^scan_once_unicode(PyScannerObject *s, PyObject *pystr, Py_ssize_t idx, Py_ssize_t *next_idx_ptr)$/;"	f	file:
scanner	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_speedups.py	/^from simplejson import encoder, scanner$/;"	i
scanner_call	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^scanner_call(PyObject *self, PyObject *args, PyObject *kwds)$/;"	f	file:
scanner_clear	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^scanner_clear(PyObject *self)$/;"	f	file:
scanner_dealloc	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^scanner_dealloc(PyObject *self)$/;"	f	file:
scanner_init	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^scanner_init(PyObject *self, PyObject *args, PyObject *kwds)$/;"	f	file:
scanner_members	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^static PyMemberDef scanner_members[] = {$/;"	v	file:
scanner_new	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^scanner_new(PyTypeObject *type, PyObject *args, PyObject *kwds)$/;"	f	file:
scanner_traverse	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^scanner_traverse(PyObject *self, visitproc visit, void *arg)$/;"	f	file:
scanstring	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^        from ._speedups import scanstring$/;"	i
scanstring	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^scanstring = c_scanstring or py_scanstring$/;"	v
scanstring_str	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^scanstring_str(PyObject *pystr, Py_ssize_t end, char *encoding, int strict, Py_ssize_t *next_end_ptr)$/;"	f	file:
scanstring_unicode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^scanstring_unicode(PyObject *pystr, Py_ssize_t end, int strict, Py_ssize_t *next_end_ptr)$/;"	f	file:
scheme	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    scheme = 'http'$/;"	v	class:HTTPConnectionPool
scheme	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    scheme = 'https'$/;"	v	class:HTTPSConnectionPool
scheme	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    scheme = None$/;"	v	class:ConnectionPool
scheme	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/ntlmpool.py	/^    scheme = 'https'$/;"	v	class:NTLMConnectionPool
scss_indent#GetIndent	plugged/scss-syntax.vim/autoload/scss_indent.vim	/^fun! scss_indent#GetIndent(lnum)$/;"	f
search	plugged/unite.vim/autoload/vital/_unite.vim	/^function! s:search(pattern) abort$/;"	f
search_buffer	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:search_buffer(candidate) "{{{$/;"	f
search_cursor	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:search_cursor(filename, dest_dir, candidate) "{{{$/;"	f
search_dict	plugged/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! s:search_dict()$/;"	f
search_dict2	plugged/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! s:search_dict2(name)$/;"	f
searchsyn	plugged/vim-ruby/ftplugin/ruby.vim	/^function! s:searchsyn(pattern,syn,flags,mode)$/;"	f
section	autoload/plug.vim	/^function! s:section(flags)$/;"	f
seen	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_scilab_builtins.py	/^    seen = set()  # only keep first type for a given word$/;"	v
seen	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_scilab_builtins.py	/^    seen = set()  # only keep first type for a given word$/;"	v
select	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^import select$/;"	i
select	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/connection.py	/^        from select import select$/;"	i
select	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/connection.py	/^        select = False$/;"	v
select_color	plugged/calendar.vim/autoload/calendar/color.vim	/^function! s:select_color() abort$/;"	f
self._start_visual	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self._start_visual(mode) dict abort$/;"	f
self.action	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.action(action) dict abort$/;"	f
self.action	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.action(action) dict abort$/;"	f
self.action	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.action(action) dict abort$/;"	f
self.action	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.action(action) dict abort$/;"	f
self.action	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! s:self.action(action) dict abort$/;"	f
self.action	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.action(action) dict abort$/;"	f
self.action	plugged/calendar.vim/autoload/calendar/view/task.vim	/^function! s:self.action(action) dict abort$/;"	f
self.action	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! s:self.action(action) dict abort$/;"	f
self.action	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^function! s:self.action(action) dict abort$/;"	f
self.add	plugged/calendar.vim/autoload/calendar/mjd.vim	/^function! s:self.add(diff) dict abort$/;"	f
self.add	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.add(time) dict abort$/;"	f
self.add	plugged/calendar.vim/autoload/calendar/week.vim	/^function! s:self.add(diff) dict abort$/;"	f
self.add_hour	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.add_hour(diff) dict abort$/;"	f
self.add_minute	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.add_minute(diff) dict abort$/;"	f
self.add_second	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.add_second(diff) dict abort$/;"	f
self.add_syntax	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.add_syntax(x, y, l, syn, ...) dict abort$/;"	f
self.calendarList	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.calendarList() dict abort$/;"	f
self.calendarList	plugged/calendar.vim/autoload/calendar/event/google.vim	/^function! s:self.calendarList() dict abort$/;"	f
self.calendarList	plugged/calendar.vim/autoload/calendar/event/local.vim	/^function! s:self.calendarList() dict abort$/;"	f
self.change_index	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.change_index(diff) dict abort$/;"	f
self.check_dir	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:self.check_dir(...) dict abort$/;"	f
self.clear	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.clear() dict abort$/;"	f
self.clear_cache	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.clear_cache() dict abort$/;"	f
self.clear_completed	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.clear_completed(listid) dict abort$/;"	f
self.clear_completed	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! s:self.clear_completed(listid) dict abort$/;"	f
self.clear_completed	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.clear_completed(listid) dict abort$/;"	f
self.complete	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.complete(listid, taskid) dict abort$/;"	f
self.complete	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! s:self.complete(listid, taskid) dict abort$/;"	f
self.complete	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.complete(listid, taskid) dict abort$/;"	f
self.concat	plugged/calendar.vim/autoload/calendar/text.vim	/^fu! s:self.concat(t) dict abort$/;"	f
self.contents	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.contents() dict abort$/;"	f
self.contents	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.contents() dict abort$/;"	f
self.contents	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.contents() dict abort$/;"	f
self.contents	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! s:self.contents() dict abort$/;"	f
self.contents	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^function! s:self.contents() dict abort$/;"	f
self.createCalendar	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.createCalendar() dict abort$/;"	f
self.createCalendar	plugged/calendar.vim/autoload/calendar/event/google.vim	/^function! s:self.createCalendar() dict abort$/;"	f
self.createCalendar	plugged/calendar.vim/autoload/calendar/event/local.vim	/^function! s:self.createCalendar() dict abort$/;"	f
self.current_view	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.current_view() dict abort$/;"	f
self.current_view_index	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.current_view_index() dict abort$/;"	f
self.cursor	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.cursor() dict abort$/;"	f
self.cursor_moved	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.cursor_moved() dict abort$/;"	f
self.day	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.day() dict abort$/;"	f
self.day	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.day() dict abort$/;"	f
self.delete	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:self.delete(key) dict abort$/;"	f
self.delete	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.delete(calendarId, eventId, year, month) dict abort$/;"	f
self.delete	plugged/calendar.vim/autoload/calendar/event/google.vim	/^function! s:self.delete(calendarId, eventId, year, month) dict abort$/;"	f
self.delete	plugged/calendar.vim/autoload/calendar/event/local.vim	/^function! s:self.delete(calendarId, eventId, year, month) dict abort$/;"	f
self.delete	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.delete(listid, taskid) dict abort$/;"	f
self.delete	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! s:self.delete(listid, taskid) dict abort$/;"	f
self.delete	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.delete(listid, taskid) dict abort$/;"	f
self.delmarks	plugged/calendar.vim/autoload/calendar/mark.vim	/^function! s:self.delmarks(...) dict abort$/;"	f
self.dir	plugged/calendar.vim/autoload/calendar/cache.vim	/^  function! s:self.dir() dict abort$/;"	f
self.eq	plugged/calendar.vim/autoload/calendar/mjd.vim	/^function! s:self.eq(mjd) dict abort$/;"	f
self.escape	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:self.escape(key) dict abort$/;"	f
self.event_view	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.event_view() dict abort$/;"	f
self.exit_visual	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.exit_visual() dict abort$/;"	f
self.exit_visual	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.exit_visual() dict abort$/;"	f
self.gather	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.gather(...) dict abort$/;"	f
self.get	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:self.get(key) dict abort$/;"	f
self.get	plugged/calendar.vim/autoload/calendar/countcache.vim	/^function! s:self.get(k) dict abort$/;"	f
self.get	plugged/calendar.vim/autoload/calendar/mark.vim	/^function! s:self.get(mark) dict abort$/;"	f
self.get	plugged/calendar.vim/autoload/calendar/mjd.vim	/^function! s:self.get() dict abort$/;"	f
self.get	plugged/calendar.vim/autoload/calendar/week.vim	/^function! s:self.get() dict abort$/;"	f
self.get_calendar	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^function! s:self.get_calendar() dict abort$/;"	f
self.get_calendar	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^function! s:self.get_calendar() dict abort$/;"	f
self.get_calendar_views	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.get_calendar_views() dict abort$/;"	f
self.get_days	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.get_days() dict abort$/;"	f
self.get_days	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.get_days() dict abort$/;"	f
self.get_events	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.get_events(year, month) dict abort$/;"	f
self.get_events_one_month	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.get_events_one_month(year, month, ...) dict abort$/;"	f
self.get_events_one_month	plugged/calendar.vim/autoload/calendar/event/google.vim	/^function! s:self.get_events_one_month(year, month, ...) dict abort$/;"	f
self.get_events_one_month	plugged/calendar.vim/autoload/calendar/event/local.vim	/^function! s:self.get_events_one_month(year, month, ...) dict abort$/;"	f
self.get_hms	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.get_hms() dict abort$/;"	f
self.get_holidays	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.get_holidays(year, month) dict abort$/;"	f
self.get_index	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.get_index(listindex, id) dict abort$/;"	f
self.get_key	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! s:self.get_key() dict abort$/;"	f
self.get_key	plugged/calendar.vim/autoload/calendar/view/task.vim	/^function! s:self.get_key() dict abort$/;"	f
self.get_letter	plugged/calendar.vim/autoload/calendar/view/clock_date.vim	/^function! s:self.get_letter() dict abort$/;"	f
self.get_letter	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday.vim	/^function! s:self.get_letter() dict abort$/;"	f
self.get_letter	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday_time.vim	/^function! s:self.get_letter() dict abort$/;"	f
self.get_letter	plugged/calendar.vim/autoload/calendar/view/clock_date_time.vim	/^function! s:self.get_letter() dict abort$/;"	f
self.get_letter	plugged/calendar.vim/autoload/calendar/view/clock_time.vim	/^function! s:self.get_letter() dict abort$/;"	f
self.get_letter	plugged/calendar.vim/autoload/calendar/view/clock_time_hourmin.vim	/^function! s:self.get_letter() dict abort$/;"	f
self.get_mapping	plugged/calendar.vim/autoload/calendar/view/help.vim	/^function! s:self.get_mapping(mode) dict abort$/;"	f
self.get_min_day	plugged/calendar.vim/autoload/calendar/view/week.vim	/^function! s:self.get_min_day() dict abort$/;"	f
self.get_min_day	plugged/calendar.vim/autoload/calendar/view/weekday.vim	/^function! s:self.get_min_day() dict abort$/;"	f
self.get_overlap	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.get_overlap() dict abort$/;"	f
self.get_padding	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.get_padding() dict abort$/;"	f
self.get_raw	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:self.get_raw(key) dict abort$/;"	f
self.get_raw_contents	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! s:self.get_raw_contents() dict abort$/;"	f
self.get_raw_contents	plugged/calendar.vim/autoload/calendar/view/help.vim	/^function! s:self.get_raw_contents() dict abort$/;"	f
self.get_raw_contents	plugged/calendar.vim/autoload/calendar/view/task.vim	/^function! s:self.get_raw_contents() dict abort$/;"	f
self.get_task	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.get_task() dict abort$/;"	f
self.get_task	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! s:self.get_task() dict abort$/;"	f
self.get_task	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.get_task() dict abort$/;"	f
self.get_taskList	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.get_taskList() dict abort$/;"	f
self.get_taskList	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! s:self.get_taskList() dict abort$/;"	f
self.get_taskList	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.get_taskList() dict abort$/;"	f
self.get_tasklist_index	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.get_tasklist_index(id) dict abort$/;"	f
self.get_url	plugged/calendar.vim/autoload/calendar/google/url_shortener.vim	/^function! s:self.get_url() dict abort$/;"	f
self.get_ymd	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^function! s:self.get_ymd() dict abort$/;"	f
self.get_ymd	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^function! s:self.get_ymd() dict abort$/;"	f
self.go	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.go(day) dict abort$/;"	f
self.has_key	plugged/calendar.vim/autoload/calendar/countcache.vim	/^function! s:self.has_key(k) dict abort$/;"	f
self.height	plugged/calendar.vim/autoload/calendar/text.vim	/^fu! s:self.height(h) dict abort$/;"	f
self.height	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.height() dict abort$/;"	f
self.height	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.height() dict abort$/;"	f
self.height	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.height() dict abort$/;"	f
self.height	plugged/calendar.vim/autoload/calendar/view/weekday.vim	/^function! s:self.height() dict abort$/;"	f
self.height	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! s:self.height() dict abort$/;"	f
self.height	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^function! s:self.height() dict abort$/;"	f
self.hour	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.hour() dict abort$/;"	f
self.hour	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.hour() dict abort$/;"	f
self.hour	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.hour() dict abort$/;"	f
self.insert	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.insert(calendarId, title, start, end, year, month, ...) dict abort$/;"	f
self.insert	plugged/calendar.vim/autoload/calendar/event/google.vim	/^function! s:self.insert(calendarId, title, start, end, year, month, ...) dict abort$/;"	f
self.insert	plugged/calendar.vim/autoload/calendar/event/local.vim	/^function! s:self.insert(calendarId, title, start, end, year, month, ...) dict abort$/;"	f
self.insert	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.insert(listid, previous, title, ...) dict abort$/;"	f
self.insert	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! s:self.insert(listid, previous, title, ...) dict abort$/;"	f
self.insert	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.insert(listid, previous, title, ...) dict abort$/;"	f
self.insert_new_event	plugged/calendar.vim/autoload/calendar/view/event.vim	/^function! s:self.insert_new_event(action, ...) dict abort$/;"	f
self.is_block_visual	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.is_block_visual() dict abort$/;"	f
self.is_block_visual	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.is_block_visual() dict abort$/;"	f
self.is_friday	plugged/calendar.vim/autoload/calendar/mjd.vim	/^function! s:self.is_friday() dict abort$/;"	f
self.is_gregorian	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^function! s:self.is_gregorian() dict abort$/;"	f
self.is_gregorian	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^function! s:self.is_gregorian() dict abort$/;"	f
self.is_line_visual	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.is_line_visual() dict abort$/;"	f
self.is_line_visual	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.is_line_visual() dict abort$/;"	f
self.is_monday	plugged/calendar.vim/autoload/calendar/mjd.vim	/^function! s:self.is_monday() dict abort$/;"	f
self.is_saturday	plugged/calendar.vim/autoload/calendar/mjd.vim	/^function! s:self.is_saturday() dict abort$/;"	f
self.is_selected	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.is_selected() dict abort$/;"	f
self.is_selected	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.is_selected() dict abort$/;"	f
self.is_selected	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! s:self.is_selected() dict abort$/;"	f
self.is_selected	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^function! s:self.is_selected() dict abort$/;"	f
self.is_sunday	plugged/calendar.vim/autoload/calendar/mjd.vim	/^function! s:self.is_sunday() dict abort$/;"	f
self.is_thursday	plugged/calendar.vim/autoload/calendar/mjd.vim	/^function! s:self.is_thursday() dict abort$/;"	f
self.is_tuesday	plugged/calendar.vim/autoload/calendar/mjd.vim	/^function! s:self.is_tuesday() dict abort$/;"	f
self.is_visual	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.is_visual() dict abort$/;"	f
self.is_visual	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.is_visual() dict abort$/;"	f
self.is_wednesday	plugged/calendar.vim/autoload/calendar/mjd.vim	/^function! s:self.is_wednesday() dict abort$/;"	f
self.max_letter	plugged/calendar.vim/autoload/calendar/view/clock_date.vim	/^function! s:self.max_letter() dict abort$/;"	f
self.max_letter	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday.vim	/^function! s:self.max_letter() dict abort$/;"	f
self.max_letter	plugged/calendar.vim/autoload/calendar/view/clock_date_monthday_time.vim	/^function! s:self.max_letter() dict abort$/;"	f
self.max_letter	plugged/calendar.vim/autoload/calendar/view/clock_date_time.vim	/^function! s:self.max_letter() dict abort$/;"	f
self.max_letter	plugged/calendar.vim/autoload/calendar/view/clock_time.vim	/^function! s:self.max_letter() dict abort$/;"	f
self.max_letter	plugged/calendar.vim/autoload/calendar/view/clock_time_hourmin.vim	/^function! s:self.max_letter() dict abort$/;"	f
self.minute	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.minute() dict abort$/;"	f
self.minute	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.minute() dict abort$/;"	f
self.minute	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.minute() dict abort$/;"	f
self.month	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.month() dict abort$/;"	f
self.month	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.month() dict abort$/;"	f
self.move	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.move(listid, taskid, previous) dict abort$/;"	f
self.move	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! s:self.move(listid, taskid, previous) dict abort$/;"	f
self.move	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.move(listid, taskid, previous) dict abort$/;"	f
self.move	plugged/calendar.vim/autoload/calendar/text.vim	/^fu! s:self.move(x, y) dict abort$/;"	f
self.move_day	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.move_day(diff) dict abort$/;"	f
self.move_day	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.move_day(diff) dict abort$/;"	f
self.move_hour	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.move_hour(diff) dict abort$/;"	f
self.move_hour	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.move_hour(diff) dict abort$/;"	f
self.move_minute	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.move_minute(diff) dict abort$/;"	f
self.move_minute	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.move_minute(diff) dict abort$/;"	f
self.move_month	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.move_month(diff) dict abort$/;"	f
self.move_month	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.move_month(diff) dict abort$/;"	f
self.move_second	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.move_second(diff) dict abort$/;"	f
self.move_second	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.move_second(diff) dict abort$/;"	f
self.move_year	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.move_year(diff) dict abort$/;"	f
self.move_year	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.move_year(diff) dict abort$/;"	f
self.new	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:self.new(...) dict abort$/;"	f
self.new	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^function! s:self.new(y, m, d) dict abort$/;"	f
self.new	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^function! s:self.new(y, m, d) dict abort$/;"	f
self.new	plugged/calendar.vim/autoload/calendar/mjd.vim	/^function! s:self.new(mjd) dict abort$/;"	f
self.new	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.new(h, m, s) dict abort$/;"	f
self.new	plugged/calendar.vim/autoload/calendar/week.vim	/^function! s:self.new(week, default) dict abort$/;"	f
self.new_index	plugged/calendar.vim/autoload/calendar/week.vim	/^function! s:self.new_index(index) dict abort$/;"	f
self.new_mjd	plugged/calendar.vim/autoload/calendar/day/gregorian.vim	/^function! s:self.new_mjd(mjd) dict abort$/;"	f
self.new_mjd	plugged/calendar.vim/autoload/calendar/day/julian.vim	/^function! s:self.new_mjd(mjd) dict abort$/;"	f
self.on_resize	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.on_resize() dict abort$/;"	f
self.on_resize	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.on_resize() dict abort$/;"	f
self.on_resize	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.on_resize() dict abort$/;"	f
self.on_resize	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! s:self.on_resize() dict abort$/;"	f
self.on_resize	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^function! s:self.on_resize() dict abort$/;"	f
self.over	plugged/calendar.vim/autoload/calendar/text.vim	/^fu! s:self.over(t) dict abort$/;"	f
self.path	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:self.path(key) dict abort$/;"	f
self.prepare	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.prepare() dict abort$/;"	f
self.redraw	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.redraw(...) dict abort$/;"	f
self.rmdir_on_exit	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:self.rmdir_on_exit() dict abort$/;"	f
self.save	plugged/calendar.vim/autoload/calendar/cache.vim	/^function! s:self.save(key, val) dict abort$/;"	f
self.save	plugged/calendar.vim/autoload/calendar/countcache.vim	/^function! s:self.save(k, v) dict abort$/;"	f
self.save	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.save() dict abort$/;"	f
self.second	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.second() dict abort$/;"	f
self.second	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.second() dict abort$/;"	f
self.second	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.second() dict abort$/;"	f
self.seconds	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.seconds() dict abort$/;"	f
self.select_index	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.select_index() dict abort$/;"	f
self.set	plugged/calendar.vim/autoload/calendar/mark.vim	/^function! s:self.set(mark) dict abort$/;"	f
self.set_calendar_views	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.set_calendar_views(views) dict abort$/;"	f
self.set_contents	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.set_contents() dict abort$/;"	f
self.set_day	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.set_day(day) dict abort$/;"	f
self.set_day	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.set_day(day) dict abort$/;"	f
self.set_day_name	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.set_day_name() dict abort$/;"	f
self.set_index	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.set_index(view) dict abort$/;"	f
self.set_month	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.set_month() dict abort$/;"	f
self.set_month	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.set_month(month) dict abort$/;"	f
self.set_month_from_day	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.set_month_from_day() dict abort$/;"	f
self.set_selected	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.set_selected(selected) dict abort$/;"	f
self.set_selected	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.set_selected(selected) dict abort$/;"	f
self.set_selected	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! s:self.set_selected(selected) dict abort$/;"	f
self.set_selected	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^function! s:self.set_selected(selected) dict abort$/;"	f
self.set_size	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.set_size() dict abort$/;"	f
self.set_size	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.set_size() dict abort$/;"	f
self.set_size	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! s:self.set_size() dict abort$/;"	f
self.set_size	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^function! s:self.set_size() dict abort$/;"	f
self.set_task_visibility	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.set_task_visibility(_task) dict abort$/;"	f
self.set_time	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.set_time(time) dict abort$/;"	f
self.set_time	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.set_time(time) dict abort$/;"	f
self.set_view_source	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.set_view_source(source) dict abort$/;"	f
self.shorten	plugged/calendar.vim/autoload/calendar/google/url_shortener.vim	/^function! s:self.shorten(url) dict abort$/;"	f
self.showmarks	plugged/calendar.vim/autoload/calendar/mark.vim	/^function! s:self.showmarks() dict abort$/;"	f
self.split	plugged/calendar.vim/autoload/calendar/text.vim	/^fu! s:self.split() dict abort$/;"	f
self.split_message	plugged/calendar.vim/autoload/calendar/view/help.vim	/^function! s:self.split_message(message) dict abort$/;"	f
self.start_block_visual	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.start_block_visual() dict abort$/;"	f
self.start_block_visual	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.start_block_visual() dict abort$/;"	f
self.start_line_visual	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.start_line_visual() dict abort$/;"	f
self.start_line_visual	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.start_line_visual() dict abort$/;"	f
self.start_visual	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.start_visual() dict abort$/;"	f
self.start_visual	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.start_visual() dict abort$/;"	f
self.sub	plugged/calendar.vim/autoload/calendar/mjd.vim	/^function! s:self.sub(mjd) dict abort$/;"	f
self.sub	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.sub(time) dict abort$/;"	f
self.subtract	plugged/calendar.vim/autoload/calendar/time.vim	/^function! s:self.subtract(time) dict abort$/;"	f
self.task_visible	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.task_visible() dict abort$/;"	f
self.time	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.time() dict abort$/;"	f
self.time	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.time() dict abort$/;"	f
self.timerange	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.timerange() dict abort$/;"	f
self.timerange	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.timerange() dict abort$/;"	f
self.uncomplete	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.uncomplete(listid, taskid) dict abort$/;"	f
self.uncomplete	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! s:self.uncomplete(listid, taskid) dict abort$/;"	f
self.uncomplete	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.uncomplete(listid, taskid) dict abort$/;"	f
self.update	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.update() dict abort$/;"	f
self.update	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.update(calendarId, eventId, title, year, month, ...) dict abort$/;"	f
self.update	plugged/calendar.vim/autoload/calendar/event/google.vim	/^function! s:self.update(calendarId, eventId, title, year, month, ...) dict abort$/;"	f
self.update	plugged/calendar.vim/autoload/calendar/event/local.vim	/^function! s:self.update(calendarId, eventId, title, year, month, ...) dict abort$/;"	f
self.update	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.update(listid, taskid, title, ...) dict abort$/;"	f
self.update	plugged/calendar.vim/autoload/calendar/task/google.vim	/^function! s:self.update(listid, taskid, title, ...) dict abort$/;"	f
self.update	plugged/calendar.vim/autoload/calendar/task/local.vim	/^function! s:self.update(listid, taskid, title, ...) dict abort$/;"	f
self.update_force	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.update_force() dict abort$/;"	f
self.update_force_redraw	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.update_force_redraw() dict abort$/;"	f
self.update_if_resized	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.update_if_resized() dict abort$/;"	f
self.updated	plugged/calendar.vim/autoload/calendar/event.vim	/^function! s:self.updated() dict abort$/;"	f
self.updated	plugged/calendar.vim/autoload/calendar/task.vim	/^function! s:self.updated() dict abort$/;"	f
self.updated	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.updated() dict abort$/;"	f
self.updated	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.updated() dict abort$/;"	f
self.updated	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! s:self.updated() dict abort$/;"	f
self.view_count	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.view_count() dict abort$/;"	f
self.visible_num	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.visible_num() dict abort$/;"	f
self.visual_mode	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.visual_mode() dict abort$/;"	f
self.visual_mode	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.visual_mode() dict abort$/;"	f
self.visual_start_day	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.visual_start_day() dict abort$/;"	f
self.visual_start_day	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.visual_start_day() dict abort$/;"	f
self.visual_start_time	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.visual_start_time() dict abort$/;"	f
self.visual_start_time	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.visual_start_time() dict abort$/;"	f
self.week	plugged/calendar.vim/autoload/calendar/mjd.vim	/^function! s:self.week() dict abort$/;"	f
self.width	plugged/calendar.vim/autoload/calendar/view/calendar.vim	/^function! s:self.width() dict abort$/;"	f
self.width	plugged/calendar.vim/autoload/calendar/view/clock.vim	/^function! s:self.width() dict abort$/;"	f
self.width	plugged/calendar.vim/autoload/calendar/view/month.vim	/^function! s:self.width() dict abort$/;"	f
self.width	plugged/calendar.vim/autoload/calendar/view/year.vim	/^function! s:self.width() dict abort$/;"	f
self.width	plugged/calendar.vim/autoload/calendar/view/ymd.vim	/^function! s:self.width() dict abort$/;"	f
self.year	plugged/calendar.vim/autoload/calendar/controller.vim	/^function! s:self.year() dict abort$/;"	f
self.year	plugged/calendar.vim/autoload/calendar/model.vim	/^function! s:self.year() dict abort$/;"	f
self.ymax	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:self.ymax() dict abort$/;"	f
send	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    def send(self, i):$/;"	m	class:lookahead
send	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    def send(self, i):$/;"	m	class:lookahead
send	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^    def send(self):$/;"	m	class:BaseAdapter
send	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^    def send(self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None):$/;"	m	class:HTTPAdapter
send	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^    def send(self, request, **kwargs):$/;"	m	class:Session
send_heartbeat	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^def send_heartbeat(project=None, branch=None, hostname=None, stats={}, key=None, entity=None,$/;"	f
sendall	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^    def sendall(self, data):$/;"	m	class:WrappedSocket
separator	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:separator()$/;"	f
session	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^from .sessions import session, Session$/;"	i
session	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^def session():$/;"	f
sessions	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/api.py	/^from . import sessions$/;"	i
set	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:set(name, value, ...) "{{{$/;"	f
set	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:set(...) " {{{$/;"	f
set	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:set(var, default)$/;"	f
set	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    from sets import Set as set$/;"	i
set	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    from sets import Set as set$/;"	i
set	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    from sets import Set as set$/;"	i
set	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def set(self, name, value, **kwargs):$/;"	m	class:RequestsCookieJar
setUp	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_encode_for_html.py	/^    def setUp(self):$/;"	m	class:TestEncodeForHTML
set_block_scalar_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    def set_block_scalar_indent(token_class):$/;"	m	class:YamlLexer
set_block_scalar_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    def set_block_scalar_indent(token_class):$/;"	m	class:YamlLexer
set_cert	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    def set_cert(self, key_file=None, cert_file=None,$/;"	m	class:VerifiedHTTPSConnection
set_ciphers	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^        def set_ciphers(self, cipher_suite):$/;"	m	class:SSLContext
set_cookie	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def set_cookie(self, cookie, *args, **kwargs):$/;"	m	class:RequestsCookieJar
set_default	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_default_template	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def set_default_template(self, template):$/;"	m	class:TestCaseTable
set_default_template	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def set_default_template(self, template):$/;"	m	class:TestCaseTable
set_defaults	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def set_defaults(self, **kwargs):$/;"	m	class:_ActionsContainer
set_dictionary_helper	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:set_dictionary_helper(variable, keys, pattern) abort$/;"	f
set_file_contents	plugged/smartpairs.vim/spec/support/vim.rb	/^    def set_file_contents(string)$/;"	f	class:Support.Vim
set_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    def set_indent(token_class, implicit=False):$/;"	m	class:YamlLexer
set_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    def set_indent(token_class, implicit=False):$/;"	m	class:YamlLexer
set_log_level	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^def set_log_level(logger, args):$/;"	f
set_model_probers	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^    def set_model_probers(self, logicalProber, visualProber):$/;"	m	class:HebrewProber
set_syntax	plugged/unite.vim/autoload/unite/view.vim	/^function! s:set_syntax() "{{{$/;"	f
set_test_template	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def set_test_template(self, template):$/;"	m	class:TestCaseTable
set_test_template	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def set_test_template(self, template):$/;"	m	class:TestCaseTable
set_timezone	plugged/calendar.vim/autoload/calendar/google/calendar.vim	/^function! s:set_timezone(calendarId, obj) abort$/;"	f
setdefault	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    setdefault = DictMixin.setdefault$/;"	v	class:OrderedDict
setdefault	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def setdefault(self, key, default=None):$/;"	m	class:OrderedDict
setdefault	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    setdefault = DictMixin.setdefault$/;"	v	class:OrderedDict
setf	plugged/vim-ruby/ftdetect/ruby.vim	/^function! s:setf(filetype) abort$/;"	f
sets	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^from .mbcsgroupprober import MBCSGroupProber  # multi-byte character sets$/;"	i
sets	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^from .sbcsgroupprober import SBCSGroupProber  # single-byte character sets$/;"	i
settimeout	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^    def settimeout(self, timeout):$/;"	m	class:WrappedSocket
setup	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:setup(...) "{{{$/;"	f
setup	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^    def setup(self, timestamp, isWrite, entity, version, plugin, verbose,$/;"	m	class:JsonFormatter
setup	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^def setup(app):$/;"	f
setup	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^def setup(app):$/;"	f
setup_logging	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^def setup_logging(args, version):$/;"	f
setup_logging	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^from .logger import setup_logging$/;"	i
sha	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^        from hashlib import sha1 as sha$/;"	i
sha	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^        import sha$/;"	i
sha	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^        from hashlib import sha1 as sha$/;"	i
sha	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^        import sha$/;"	i
sha1	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^from hashlib import md5, sha1, sha256$/;"	i
sha256	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^from hashlib import md5, sha1, sha256$/;"	i
sha_utf8	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^            def sha_utf8(x):$/;"	f	function:HTTPDigestAuth.build_digest_header
shebang_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^from pygments.util import shebang_matches$/;"	i
shebang_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^from pygments.util import shebang_matches$/;"	i
shebang_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^from pygments.util import shebang_matches$/;"	i
shebang_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^from pygments.util import get_bool_opt, shebang_matches$/;"	i
shebang_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^from pygments.util import shebang_matches$/;"	i
shebang_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^from pygments.util import shebang_matches$/;"	i
shebang_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^from pygments.util import shebang_matches$/;"	i
shebang_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^def shebang_matches(text, regex):$/;"	f
shebang_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^from pygments.util import shebang_matches$/;"	i
shebang_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^from pygments.util import shebang_matches$/;"	i
shebang_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^from pygments.util import shebang_matches$/;"	i
shebang_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^from pygments.util import get_bool_opt, shebang_matches$/;"	i
shebang_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^from pygments.util import shebang_matches$/;"	i
shebang_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^from pygments.util import shebang_matches$/;"	i
shebang_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^from pygments.util import shebang_matches$/;"	i
shebang_matches	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^def shebang_matches(text, regex):$/;"	f
shellesc	autoload/plug.vim	/^function! s:shellesc(arg)$/;"	f
shellesc	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellescape	plugged/unite.vim/autoload/vital/_unite/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
shellescape	plugged/unite.vim/autoload/vital/_unite/Process.vim	/^  function! s:shellescape(command) abort$/;"	f
shellslash	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path) abort$/;"	f
shift	plugged/calendar.vim/autoload/calendar/text.vim	/^fu! s:shift(t, x) abort$/;"	f
shift	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:shift(list) abort$/;"	f
shorten	plugged/calendar.vim/autoload/calendar/color.vim	/^function! s:shorten(name) abort$/;"	f
should_bypass_proxies	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def should_bypass_proxies(url):$/;"	f
should_exclude	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^def should_exclude(entity, include, exclude):$/;"	f
showMenu	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node)$/;"	f
show_category	plugged/emmet-vim/unittest.vim	/^function! s:show_category(category)$/;"	f
show_done	plugged/emmet-vim/unittest.vim	/^function! s:show_done()$/;"	f
show_ng	plugged/emmet-vim/unittest.vim	/^function! s:show_ng(no, expect, got)$/;"	f
show_ok	plugged/emmet-vim/unittest.vim	/^function! s:show_ok()$/;"	f
show_pass	plugged/emmet-vim/unittest.vim	/^function! s:show_pass(pass)$/;"	f
show_skip	plugged/emmet-vim/unittest.vim	/^function! s:show_skip(no, title)$/;"	f
show_title	plugged/emmet-vim/unittest.vim	/^function! s:show_title(no, title)$/;"	f
show_type	plugged/emmet-vim/unittest.vim	/^function! s:show_type(type)$/;"	f
shutil	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_php_builtins.py	/^    import shutil$/;"	i
shutil	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_php_builtins.py	/^    import shutil$/;"	i
si	plugged/Nvim-R/R/common_global.vim	/^    let si = split(i)$/;"	v
signal	plugged/Nvim-R/R/synctex_evince_backward.py	/^import dbus.mainloop.glib, sys, os, signal$/;"	i
simple_first	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/__init__.py	/^def simple_first(kv):$/;"	f
simplefilter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filter.py	/^def simplefilter(f):$/;"	f
simplefilter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filter.py	/^def simplefilter(f):$/;"	f
simplejson	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^        import simplejson$/;"	i
simplejson	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^    import simplejson$/;"	i
simplejson	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^    import simplejson.decoder$/;"	i
simplejson	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^    import simplejson.encoder$/;"	i
simplejson	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decimal.py	/^        import simplejson.encoder$/;"	i
simplejson	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_encode_basestring_ascii.py	/^import simplejson.encoder$/;"	i
simplejson	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_scanstring.py	/^import simplejson.decoder$/;"	i
single	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^from .sbcsgroupprober import SBCSGroupProber  # single-byte character sets$/;"	i
sio_dump	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_iterable.py	/^def sio_dump(obj, **kw):$/;"	f
six	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^from .packages import six$/;"	i
six	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^from .packages import six$/;"	i
six	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/fields.py	/^from .packages import six$/;"	i
six	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/filepost.py	/^from .packages import six$/;"	i
six	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/retry.py	/^from ..packages import six$/;"	i
size	plugged/vimproc.vim/autoload/vimstack.c	/^    size_t size; \/* stack size *\/$/;"	m	struct:vp_stack_t	file:
sizeSpec	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^        constraint.ValueSizeConstraint(1, 1024)$/;"	v	class:SubjectAltName
skip_back_quote	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:skip_back_quote(script, i) "{{{$/;"	f
skip_double_quote	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:skip_double_quote(script, i) "{{{$/;"	f
skip_else	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:skip_else(args, script, i) "{{{$/;"	f
skip_if_speedups_missing	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_speedups.py	/^def skip_if_speedups_missing(func):$/;"	f
skip_single_quote	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:skip_single_quote(script, i) "{{{$/;"	f
skipkeys	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    int skipkeys;$/;"	m	struct:_PyEncoderObject	file:
skipkeys_bool	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *skipkeys_bool;$/;"	m	struct:_PyEncoderObject	file:
sleep	plugged/vim-wakatime/plugin/packages/wakatime/offlinequeue.py	/^from time import sleep$/;"	i
sleep	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/retry.py	/^    def sleep(self):$/;"	m	class:Retry
slots	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/url.py	/^    slots = ()$/;"	v	class:Url
small_strings	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *small_strings;  \/* Pending small strings *\/$/;"	m	struct:__anon1	file:
smart_execute_command	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
smart_guess_lexer	plugged/vim-wakatime/plugin/packages/wakatime/stats.py	/^def smart_guess_lexer(file_name):$/;"	f
smart_imap	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:smart_imap(map) "{{{$/;"	f
smart_imap2	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:smart_imap2(map) "{{{$/;"	f
smart_preview	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:smart_preview() "{{{$/;"	f
smartpairs	plugged/smartpairs.vim/spec/support/vim.rb	/^    def smartpairs(type, mod)$/;"	f	class:Support.Vim
snapshot	autoload/plug.vim	/^function! s:snapshot(...) abort$/;"	f
snprintf	plugged/vimproc.vim/autoload/proc_w32.c	/^# define snprintf /;"	d	file:
socket	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^import socket$/;"	i
socket	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^import socket$/;"	i
socket	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^import socket$/;"	i
socket	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^import socket$/;"	i
socket	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/connection.py	/^import socket$/;"	i
socket	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^import socket$/;"	i
sockets_number	plugged/vimproc.vim/autoload/proc_w32.c	/^static int sockets_number = 0;$/;"	v	file:
something	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    def something(token_class):$/;"	m	class:YamlLexer
something	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    def something(token_class):$/;"	m	class:YamlLexer
sort	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
sort_buffer_name	plugged/unite.vim/autoload/unite/helper.vim	/^function! s:sort_buffer_name(lhs, rhs) "{{{$/;"	f
sort_by	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
sort_keys	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *sort_keys;$/;"	m	struct:_PyEncoderObject	file:
sort_lua	plugged/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! s:sort_lua(candidates, inputs) "{{{$/;"	f
sort_ruby	plugged/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^function! s:sort_ruby(candidates, inputs)$/;"	f
sort_vim	plugged/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! s:sort_vim(candidates, inputs) "{{{$/;"	f
sorted	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def sorted(iterable, reverse=False):$/;"	f
sorter.filter	plugged/unite.vim/autoload/unite/filters/sorter_default.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	plugged/unite.vim/autoload/unite/filters/sorter_ftime.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	plugged/unite.vim/autoload/unite/filters/sorter_length.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	plugged/unite.vim/autoload/unite/filters/sorter_nothing.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	plugged/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	plugged/unite.vim/autoload/unite/filters/sorter_reverse.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	plugged/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^function! s:sorter.filter(candidates, context)$/;"	f
sorter.filter	plugged/unite.vim/autoload/unite/filters/sorter_word.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
source	autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
source.action_table.call.func	plugged/unite.vim/autoload/unite/sources/function.vim	/^function! s:source.action_table.call.func(candidate) "{{{$/;"	f
source.action_table.delete.func	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.delete.func	plugged/unite.vim/autoload/unite/sources/history_input.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.delete.func	plugged/unite.vim/autoload/unite/sources/history_yank.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.delete.func	plugged/unite.vim/autoload/unite/sources/register.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.delete.func	plugged/unite.vim/autoload/unite/sources/runtimepath.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.delete.func	plugged/unite.vim/autoload/unite/sources/window_gui.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.do.func	plugged/unite.vim/autoload/unite/sources/action.vim	/^function! s:source.action_table.do.func(candidate) "{{{$/;"	f
source.action_table.edit.func	plugged/unite.vim/autoload/unite/sources/function.vim	/^function! s:source.action_table.edit.func(candidates) "{{{$/;"	f
source.action_table.edit.func	plugged/unite.vim/autoload/unite/sources/register.vim	/^function! s:source.action_table.edit.func(candidate) "{{{$/;"	f
source.action_table.narrow.func	plugged/unite.vim/autoload/unite/sources/history_input.vim	/^function! s:source.action_table.narrow.func(candidate) "{{{$/;"	f
source.action_table.narrow.func	plugged/unite.vim/autoload/unite/sources/interactive.vim	/^function! s:source.action_table.narrow.func(candidate) "{{{$/;"	f
source.action_table.open.func	plugged/unite.vim/autoload/unite/sources/window_gui.vim	/^function! s:source.action_table.open.func(candidate) "{{{$/;"	f
source.action_table.preview.func	plugged/unite.vim/autoload/unite/sources/command.vim	/^function! s:source.action_table.preview.func(candidate) "{{{$/;"	f
source.action_table.preview.func	plugged/unite.vim/autoload/unite/sources/function.vim	/^function! s:source.action_table.preview.func(candidate) "{{{$/;"	f
source.action_table.preview.func	plugged/unite.vim/autoload/unite/sources/mapping.vim	/^function! s:source.action_table.preview.func(candidate) "{{{$/;"	f
source.action_table.rename.func	plugged/unite.vim/autoload/unite/sources/window_gui.vim	/^function! s:source.action_table.rename.func(candidate) "{{{$/;"	f
source.action_table.sigint.func	plugged/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.action_table.sigint.func(candidates) "{{{$/;"	f
source.action_table.sigkill.func	plugged/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.action_table.sigkill.func(candidates) "{{{$/;"	f
source.action_table.sigterm.func	plugged/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.action_table.sigterm.func(candidates) "{{{$/;"	f
source.action_table.start.func	plugged/unite.vim/autoload/unite/sources/history_unite.vim	/^function! s:source.action_table.start.func(candidate) "{{{$/;"	f
source.action_table.unite__new_candidate.func	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.action_table.unite__new_candidate.func(candidates) "{{{$/;"	f
source.action_table.unite__new_candidate.func	plugged/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
source.async_gather_candidates	plugged/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.async_gather_candidates(args, context) "{{{$/;"	f
source.async_gather_candidates	plugged/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.async_gather_candidates(args, context) "{{{$/;"	f
source.async_gather_candidates	plugged/unite.vim/autoload/unite/sources/script.vim	/^function! s:source.async_gather_candidates(args, context) "{{{$/;"	f
source.change_candidates	plugged/unite.vim/autoload/unite/sources/command.vim	/^function! s:source.change_candidates(args, context) "{{{$/;"	f
source.change_candidates	plugged/unite.vim/autoload/unite/sources/interactive.vim	/^function! s:source.change_candidates(args, context) "{{{$/;"	f
source.complete	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	plugged/unite.vim/autoload/unite/sources/file_list.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	plugged/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	plugged/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	plugged/unite.vim/autoload/unite/sources/mapping.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	plugged/unite.vim/autoload/unite/sources/menu.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	plugged/unite.vim/autoload/unite/sources/output.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	plugged/unite.vim/autoload/unite/sources/script.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	plugged/unite.vim/autoload/unite/sources/source.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	plugged/unite.vim/autoload/unite/sources/tab.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	plugged/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	plugged/unite.vim/autoload/unite/sources/window.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	plugged/unite.vim/autoload/unite/sources/window_gui.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/action.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/change.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/command.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/file_list.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/file_point.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/function.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/history_input.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/history_unite.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/history_yank.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/jump.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/jump_point.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/launcher.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/mapping.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/menu.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/output.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/register.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/resume.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/runtimepath.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/script.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/source.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/tab.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/window.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	plugged/unite.vim/autoload/unite/sources/window_gui.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.hooks.on_close	plugged/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.hooks.on_close(args, context) "{{{$/;"	f
source.hooks.on_close	plugged/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.hooks.on_close(args, context) "{{{$/;"	f
source.hooks.on_close	plugged/unite.vim/autoload/unite/sources/script.vim	/^function! s:source.hooks.on_close(args, context) "{{{$/;"	f
source.hooks.on_init	plugged/unite.vim/autoload/unite/sources/change.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	plugged/unite.vim/autoload/unite/sources/file_point.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	plugged/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	plugged/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	plugged/unite.vim/autoload/unite/sources/jump_point.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	plugged/unite.vim/autoload/unite/sources/mapping.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	plugged/unite.vim/autoload/unite/sources/output.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	plugged/unite.vim/autoload/unite/sources/script.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	plugged/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	plugged/unite.vim/autoload/unite/sources/window.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_post_filter	plugged/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.hooks.on_post_filter(args, context) "{{{$/;"	f
source.hooks.on_post_filter	plugged/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.hooks.on_post_filter(args, context) "{{{$/;"	f
source.hooks.on_syntax	plugged/unite.vim/autoload/unite/sources/action.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	plugged/unite.vim/autoload/unite/sources/command.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	plugged/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	plugged/unite.vim/autoload/unite/sources/interactive.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	plugged/unite.vim/autoload/unite/sources/output.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	plugged/unite.vim/autoload/unite/sources/source.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	plugged/unite.vim/autoload/unite/sources/tab.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	plugged/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	plugged/unite.vim/autoload/unite/sources/window_gui.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.vimfiler_check_filetype	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.vimfiler_check_filetype(args, context) "{{{$/;"	f
source.vimfiler_complete	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.vimfiler_complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.vimfiler_gather_candidates	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.vimfiler_gather_candidates(args, context) "{{{$/;"	f
source_buffer_all.complete	plugged/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_buffer_all.gather_candidates	plugged/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.gather_candidates(args, context) "{{{$/;"	f
source_buffer_all.hooks.on_init	plugged/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.hooks.on_init(args, context) "{{{$/;"	f
source_buffer_all.hooks.on_post_filter	plugged/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.hooks.on_post_filter(args, context) "{{{$/;"	f
source_buffer_all.hooks.on_syntax	plugged/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.hooks.on_syntax(args, context) "{{{$/;"	f
source_buffer_tab.gather_candidates	plugged/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_tab.gather_candidates(args, context) "{{{$/;"	f
source_directory.change_candidates	plugged/unite.vim/autoload/unite/sources/directory.vim	/^function! s:source_directory.change_candidates(args, context) "{{{$/;"	f
source_directory.complete	plugged/unite.vim/autoload/unite/sources/directory.vim	/^function! s:source_directory.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_directory.hooks.on_close	plugged/unite.vim/autoload/unite/sources/directory.vim	/^function! s:source_directory.hooks.on_close(args, context) "{{{$/;"	f
source_directory_async.hooks.on_init	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_directory_async.hooks.on_init(args, context) "{{{$/;"	f
source_directory_async.hooks.on_post_filter	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_directory_async.hooks.on_post_filter(args, context) "{{{$/;"	f
source_directory_new.change_candidates	plugged/unite.vim/autoload/unite/sources/directory.vim	/^function! s:source_directory_new.change_candidates(args, context) "{{{$/;"	f
source_directory_rec.hooks.on_init	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_directory_rec.hooks.on_init(args, context) "{{{$/;"	f
source_directory_rec.hooks.on_post_filter	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_directory_rec.hooks.on_post_filter(args, context) "{{{$/;"	f
source_file	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^    source_file = None$/;"	v	class:DependencyParser
source_file	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^    source_file = None$/;"	v	class:TokenParser
source_file.change_candidates	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.change_candidates(args, context) "{{{$/;"	f
source_file.complete	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_file.hooks.on_close	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.hooks.on_close(args, context) "{{{$/;"	f
source_file.vimfiler_check_filetype	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.vimfiler_check_filetype(args, context) "{{{$/;"	f
source_file.vimfiler_complete	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.vimfiler_complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_file.vimfiler_dummy_candidates	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.vimfiler_dummy_candidates(args, context) "{{{$/;"	f
source_file.vimfiler_gather_candidates	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.vimfiler_gather_candidates(args, context) "{{{$/;"	f
source_file_async.async_gather_candidates	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file_async.async_gather_candidates(args, context) "{{{$/;"	f
source_file_async.async_gather_candidates	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_async.async_gather_candidates(args, context) "{{{$/;"	f
source_file_async.change_candidates	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file_async.change_candidates(args, context) "{{{$/;"	f
source_file_async.gather_candidates	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_async.gather_candidates(args, context) "{{{$/;"	f
source_file_async.hooks.on_close	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file_async.hooks.on_close(args, context) "{{{$/;"	f
source_file_async.hooks.on_close	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_async.hooks.on_close(args, context) "{{{$/;"	f
source_file_async.hooks.on_init	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_async.hooks.on_init(args, context) "{{{$/;"	f
source_file_git.async_gather_candidates	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_git.async_gather_candidates(args, context) "{{{$/;"	f
source_file_git.complete	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_git.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_file_git.gather_candidates	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_git.gather_candidates(args, context) "{{{$/;"	f
source_file_neovim.async_gather_candidates	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_neovim.async_gather_candidates(args, context) "{{{$/;"	f
source_file_neovim.gather_candidates	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_neovim.gather_candidates(args, context) "{{{$/;"	f
source_file_neovim.hooks.on_close	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_neovim.hooks.on_close(args, context) "{{{$/;"	f
source_file_neovim.hooks.on_init	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_neovim.hooks.on_init(args, context) "{{{$/;"	f
source_file_new.change_candidates	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file_new.change_candidates(args, context) "{{{$/;"	f
source_file_rec.async_gather_candidates	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.async_gather_candidates(args, context) "{{{$/;"	f
source_file_rec.complete	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_file_rec.gather_candidates	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.gather_candidates(args, context) "{{{$/;"	f
source_file_rec.hooks.on_init	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.hooks.on_init(args, context) "{{{$/;"	f
source_file_rec.vimfiler_check_filetype	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.vimfiler_check_filetype(args, context) "{{{$/;"	f
source_file_rec.vimfiler_complete	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.vimfiler_complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_file_rec.vimfiler_dummy_candidates	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.vimfiler_dummy_candidates(args, context) "{{{$/;"	f
source_file_rec.vimfiler_gather_candidates	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.vimfiler_gather_candidates(args, context) "{{{$/;"	f
source_line.complete	plugged/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_line.gather_candidates	plugged/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.gather_candidates(args, context) "{{{$/;"	f
source_line.hooks.on_init	plugged/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.hooks.on_init(args, context) "{{{$/;"	f
source_line.hooks.on_post_filter	plugged/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.hooks.on_post_filter(args, context) "{{{$/;"	f
source_line.hooks.on_syntax	plugged/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.hooks.on_syntax(args, context) "{{{$/;"	f
source_line.source__converter	plugged/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.source__converter(candidates, context) "{{{$/;"	f
space	plugged/delimitMate/Makefile	/^space    := $(empty) $(empty)$/;"	m
span	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
spawn	autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	f
spawn	plugged/unite.vim/autoload/vital/_unite/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
specfun	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    specfun = ("airy", "besselj", "bessely", "besselh", "besseli", "besselk", "beta",$/;"	v	class:MatlabLexer
specfun	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    specfun = ("airy", "besselj", "bessely", "besselh", "besseli", "besselk", "beta",$/;"	v	class:MatlabLexer
special_atom_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    special_atom_re = r'(?:\\.\\.\\.|<<>>|%\\{\\}|%|\\{\\})'$/;"	v	class:ElixirLexer
special_atom_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    special_atom_re = r'(?:\\.\\.\\.|<<>>|%\\{\\}|%|\\{\\})'$/;"	v	class:ElixirLexer
special_forms	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    special_forms = ($/;"	v	class:ClojureLexer
special_forms	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    special_forms = ($/;"	v	class:HyLexer
special_forms	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    special_forms = ($/;"	v	class:ClojureLexer
special_forms	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    special_forms = ($/;"	v	class:HyLexer
specific	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    import Queue as _  # Platform-specific: Windows$/;"	i
speedups_methods	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^static PyMethodDef speedups_methods[] = {$/;"	v	file:
split	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def split(self, row):$/;"	m	class:RowSplitter
split	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^    def split(self):$/;"	m	class:_TokenType
split	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def split(self, row):$/;"	m	class:RowSplitter
split	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^    def split(self):$/;"	m	class:_TokenType
split	plugged/vimproc.vim/autoload/vimproc.vim	/^  function! s:split(str, sep)$/;"	f
split	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:split(path)$/;"	f
split3	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
split_by_displaywidth	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
split_first	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/url.py	/^def split_first(s, delims):$/;"	f
split_leftright	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
split_over	plugged/calendar.vim/autoload/calendar/view.vim	/^function! s:split_over(t, texts, v, llen, i, height) abort$/;"	f
split_path_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^split_path_re = re.compile(r'[\/\\\\ ]')$/;"	v
split_path_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^split_path_re = re.compile(r'[\/\\\\ ]')$/;"	v
split_rtp	autoload/plug.vim	/^function! s:split_rtp()$/;"	f
split_rtp	plugged/unite.vim/autoload/unite/sources/runtimepath.vim	/^function! s:split_rtp(...) "{{{$/;"	f
sqlite3	plugged/vim-wakatime/plugin/packages/wakatime/offlinequeue.py	/^    import sqlite3$/;"	i
sqlite3	plugged/vim-wakatime/plugin/packages/wakatime/session_cache.py	/^    import sqlite3$/;"	i
ssl	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    import ssl$/;"	i
ssl	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    ssl = None$/;"	v
ssl	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^import ssl$/;"	i
ssl	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^    import ssl$/;"	i
ssl_match_hostname	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/__init__.py	/^from . import ssl_match_hostname$/;"	i
ssl_version	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^    ssl_version = None$/;"	v	class:VerifiedHTTPSConnection
ssl_wrap_socket	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^def ssl_wrap_socket(sock, keyfile=None, certfile=None, cert_reqs=None,$/;"	f
ssl_wrap_socket	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^def ssl_wrap_socket(sock, keyfile=None, certfile=None, cert_reqs=None,$/;"	f
stage_info	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:stage_info(lnum) abort$/;"	f
start	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    def start(self, arg=None):$/;"	m	class:_PseudoMatch
start	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    def start(self, arg=None):$/;"	m	class:_PseudoMatch
start	plugged/vimproc.vim/tools/benchmark.vim	/^let start = reltime()$/;"	v
startDaemon	plugged/vim-instant-markdown/after/ftplugin/markdown/instant-markdown.vim	/^function! s:startDaemon(initialMD)$/;"	f
start_connect	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/timeout.py	/^    def start_connect(self):$/;"	m	class:Timeout
start_section	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^    def start_section(self, heading):$/;"	m	class:HelpFormatter
state	plugged/vim-wakatime/plugin/packages/wakatime/languages/data.py	/^    state = None$/;"	v	class:JsonParser
state	plugged/vim-wakatime/plugin/packages/wakatime/languages/php.py	/^    state = None$/;"	v	class:PhpParser
state	plugged/vim-wakatime/plugin/packages/wakatime/languages/python.py	/^    state = None$/;"	v	class:PythonParser
statements	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    statements = ($/;"	v	class:QBasicLexer
statements	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    statements = ($/;"	v	class:QBasicLexer
status	autoload/plug.vim	/^function! s:status()$/;"	f
status_load	autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
status_update	autoload/plug.vim	/^function! s:status_update() range$/;"	f
stdlib_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    stdlib_types = ['size_t', 'ssize_t', 'off_t', 'wchar_t', 'ptrdiff_t',$/;"	v	class:CFamilyLexer
stdlib_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    stdlib_types = ['size_t', 'ssize_t', 'off_t', 'wchar_t', 'ptrdiff_t',$/;"	v	class:CFamilyLexer
step_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/testing.py	/^    step_keywords            = u'^(\\\\s*)(하지만|조건|먼저|만일|만약|단|그리고|그러면|那麼|那么|而且|當|当|前提|假設|假如|但是|但し|並且|もし|ならば|ただし|しかし|かつ|و |متى |لكن |عندما |ثم |بفرض |اذاً |כאשר |וגם |בהינתן |אזי |אז |אבל |Якщо |Унда |То |Припустимо, що |Припустимо |Онда |Но |Нехай |Лекин |Когато |Када |Кад |К тому же |И |Задато |Задати |Задате |Если |Допустим |Дадено |Ва |Бирок |Аммо |Али |Але |Агар |А |І |Și |És |Zatati |Zakładając |Zadato |Zadate |Zadano |Zadani |Zadan |Youse know when youse got |Youse know like when |Yna |Ya know how |Ya gotta |Y |Wun |Wtedy |When y\\'all |When |Wenn |WEN |Và |Ve |Und |Un |Thì |Then y\\'all |Then |Tapi |Tak |Tada |Tad |Så |Stel |Soit |Siis |Si |Sed |Se |Quando |Quand |Quan |Pryd |Pokud |Pokiaľ |Però |Pero |Pak |Oraz |Onda |Ond |Oletetaan |Og |Och |O zaman |Når |När |Niin |Nhưng |N |Mutta |Men |Mas |Maka |Majd |Mais |Maar |Ma |Lorsque |Lorsqu\\'|Kun |Kuid |Kui |Khi |Keď |Ketika |Když |Kaj |Kai |Kada |Kad |Jeżeli |Ja |Ir |I CAN HAZ |I |Ha |Givun |Givet |Given y\\'all |Given |Gitt |Gegeven |Gegeben sei |Fakat |Eğer ki |Etant donné |Et |Então |Entonces |Entao |En |Eeldades |E |Duota |Dun |Donitaĵo |Donat |Donada |Do |Diyelim ki |Dengan |Den youse gotta |De |Dato |Dar |Dann |Dan |Dado |Dacă |Daca |DEN |Când |Cuando |Cho |Cept |Cand |Cal |But y\\'all |But |Buh |Biết |Bet |BUT |Atès |Atunci |Atesa |Anrhegedig a |Angenommen |And y\\'all |And |An |Ama |Als |Alors |Allora |Ali |Aleshores |Ale |Akkor |Aber |AN |A také |A |\\* )'$/;"	v	class:GherkinLexer
step_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/testing.py	/^    step_keywords            = u'^(\\\\s*)(하지만|조건|먼저|만일|만약|단|그리고|그러면|那麼|那么|而且|當|当|前提|假設|假如|但是|但し|並且|もし|ならば|ただし|しかし|かつ|و |متى |لكن |عندما |ثم |بفرض |اذاً |כאשר |וגם |בהינתן |אזי |אז |אבל |Якщо |Унда |То |Припустимо, що |Припустимо |Онда |Но |Нехай |Лекин |Когато |Када |Кад |К тому же |И |Задато |Задати |Задате |Если |Допустим |Дадено |Ва |Бирок |Аммо |Али |Але |Агар |А |І |Și |És |Zatati |Zakładając |Zadato |Zadate |Zadano |Zadani |Zadan |Youse know when youse got |Youse know like when |Yna |Ya know how |Ya gotta |Y |Wun |Wtedy |When y\\'all |When |Wenn |WEN |Và |Ve |Und |Un |Thì |Then y\\'all |Then |Tapi |Tak |Tada |Tad |Så |Stel |Soit |Siis |Si |Sed |Se |Quando |Quand |Quan |Pryd |Pokud |Pokiaľ |Però |Pero |Pak |Oraz |Onda |Ond |Oletetaan |Og |Och |O zaman |Når |När |Niin |Nhưng |N |Mutta |Men |Mas |Maka |Majd |Mais |Maar |Ma |Lorsque |Lorsqu\\'|Kun |Kuid |Kui |Khi |Keď |Ketika |Když |Kaj |Kai |Kada |Kad |Jeżeli |Ja |Ir |I CAN HAZ |I |Ha |Givun |Givet |Given y\\'all |Given |Gitt |Gegeven |Gegeben sei |Fakat |Eğer ki |Etant donné |Et |Então |Entonces |Entao |En |Eeldades |E |Duota |Dun |Donitaĵo |Donat |Donada |Do |Diyelim ki |Dengan |Den youse gotta |De |Dato |Dar |Dann |Dan |Dado |Dacă |Daca |DEN |Când |Cuando |Cho |Cept |Cand |Cal |But y\\'all |But |Buh |Biết |Bet |BUT |Atès |Atunci |Atesa |Anrhegedig a |Angenommen |And y\\'all |And |An |Ama |Als |Alors |Allora |Ali |Aleshores |Ale |Akkor |Aber |AN |A také |A |\\* )'$/;"	v	class:GherkinLexer
str	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    str = str$/;"	v
str	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    str = str$/;"	v
str	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^from .compat import urlparse, str$/;"	i
str	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    str = str$/;"	v
str	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    str = unicode$/;"	v
str	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^from .compat import (quote, urlparse, bytes, str, OrderedDict, unquote, is_py2,$/;"	i
str2hd	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:str2hd(str)$/;"	f
str2list	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:str2list(str)$/;"	f
str_to_oflag	plugged/vimproc.vim/autoload/proc.c	/^str_to_oflag(const char *flags)$/;"	f	file:
str_to_oflag	plugged/vimproc.vim/autoload/proc_w32.c	/^str_to_oflag(const char *flags)$/;"	f	file:
strchars	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
stream	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def stream(self, amt=2**16, decode_content=None):$/;"	m	class:HTTPResponse
stream_decode_response_unicode	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def stream_decode_response_unicode(iterator, r):$/;"	f
streamer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^        def streamer():$/;"	f	function:Lexer.get_tokens
streamer	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^        def streamer():$/;"	f	function:Lexer.get_tokens
strict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *strict;$/;"	m	struct:_PyScannerObject	file:
string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    string = r'"(\\\\"|[^"\\n])*"|' + r"'(\\\\'|[^'\\n])*'|" + r"`(\\\\`|[^`\\n])*`"$/;"	v	class:NasmLexer
string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    string = r'"(\\\\"|[^"])*"'$/;"	v	class:GasLexer
string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    string = r'"[^"]*?"'$/;"	v	class:LlvmLexer
string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    string = r'"(\\\\"|[^"\\n])*"|' + r"'(\\\\'|[^'\\n])*'|" + r"`(\\\\`|[^`\\n])*`"$/;"	v	class:NasmLexer
string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    string = r'"(\\\\"|[^"])*"'$/;"	v	class:GasLexer
string	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    string = r'"[^"]*?"'$/;"	v	class:LlvmLexer
string_to_tokentype	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^    string_to_tokentype$/;"	i
string_to_tokentype	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/token.py	/^def string_to_tokentype(s):$/;"	f
string_to_tokentype	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^    string_to_tokentype$/;"	i
string_to_tokentype	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/token.py	/^def string_to_tokentype(s):$/;"	f
string_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^     get_choice_opt, ClassNotFound, OptionError, text_type, string_types$/;"	i
string_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatter.py	/^from pygments.util import get_bool_opt, string_types$/;"	i
string_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    StringIO, string_types, iteritems$/;"	i
string_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^    string_types = (str,)$/;"	v
string_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^     get_choice_opt, ClassNotFound, OptionError, text_type, string_types$/;"	i
string_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatter.py	/^from pygments.util import get_bool_opt, string_types$/;"	i
string_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    StringIO, string_types, iteritems$/;"	i
string_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^    string_types = (str,)$/;"	v
string_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    string_types = basestring,$/;"	v
string_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    string_types = str,$/;"	v
string_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    string_types = (basestring,)$/;"	v
string_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    string_types = (str,)$/;"	v
string_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^from .compat import u, unichr, binary_type, string_types, integer_types, PY3$/;"	i
stringdouble	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    stringdouble = r'(?:"(?:' + entityref + r'|' + charref + r'|""|[^&"])*")'$/;"	v	class:XQueryLexer
stringdouble	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    stringdouble = r'(?:"(?:' + entityref + r'|' + charref + r'|""|[^&"])*")'$/;"	v	class:XQueryLexer
stringsingle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    stringsingle = r"(?:'(?:" + entityref + r"|" + charref + r"|''|[^&'])*')"$/;"	v	class:XQueryLexer
stringsingle	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    stringsingle = r"(?:'(?:" + entityref + r"|" + charref + r"|''|[^&'])*')"$/;"	v	class:XQueryLexer
stringy	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    def stringy(whatkind):$/;"	m	class:SMLLexer
stringy	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    def stringy(whatkind):$/;"	m	class:SMLLexer
strip_pod	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^        def strip_pod(lines):$/;"	f	function:Perl6Lexer.analyse_text
strip_pod	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^        def strip_pod(lines):$/;"	f	function:Perl6Lexer.analyse_text
strip_python_stderr	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tool.py	/^        def strip_python_stderr(stderr):$/;"	f
strip_python_stderr	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tool.py	/^        from test.test_support import strip_python_stderr$/;"	i
strip_python_stderr	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tool.py	/^    from test.support import strip_python_stderr$/;"	i
struct	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^import struct$/;"	i
struct	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^import struct$/;"	i
strwidthpart	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart_reverse	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
style_for_token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/style.py	/^    def style_for_token(cls, token):$/;"	m	class:StyleMeta
style_for_token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/style.py	/^    def style_for_token(cls, token):$/;"	m	class:StyleMeta
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/style.py	/^    styles = {}$/;"	v	class:Style
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/autumn.py	/^    styles = {$/;"	v	class:AutumnStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/borland.py	/^    styles = {$/;"	v	class:BorlandStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/bw.py	/^    styles = {$/;"	v	class:BlackWhiteStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/colorful.py	/^    styles = {$/;"	v	class:ColorfulStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/default.py	/^    styles = {$/;"	v	class:DefaultStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/emacs.py	/^    styles = {$/;"	v	class:EmacsStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/friendly.py	/^    styles = {$/;"	v	class:FriendlyStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/fruity.py	/^    styles = {$/;"	v	class:FruityStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/igor.py	/^    styles = {$/;"	v	class:IgorStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/manni.py	/^    styles = {$/;"	v	class:ManniStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/monokai.py	/^    styles = {$/;"	v	class:MonokaiStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/murphy.py	/^    styles = {$/;"	v	class:MurphyStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/native.py	/^    styles = {$/;"	v	class:NativeStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_dark.py	/^    styles = {$/;"	v	class:ParaisoDarkStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/paraiso_light.py	/^    styles = {$/;"	v	class:ParaisoLightStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/pastie.py	/^    styles = {$/;"	v	class:PastieStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/perldoc.py	/^    styles = {$/;"	v	class:PerldocStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/rrt.py	/^    styles = {$/;"	v	class:RrtStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/tango.py	/^    styles = {$/;"	v	class:TangoStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/trac.py	/^    styles = {$/;"	v	class:TracStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vim.py	/^    styles = {$/;"	v	class:VimStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/vs.py	/^    styles = {$/;"	v	class:VisualStudioStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/styles/xcode.py	/^    styles = {$/;"	v	class:XcodeStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/style.py	/^    styles = {}$/;"	v	class:Style
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/autumn.py	/^    styles = {$/;"	v	class:AutumnStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/borland.py	/^    styles = {$/;"	v	class:BorlandStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/bw.py	/^    styles = {$/;"	v	class:BlackWhiteStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/colorful.py	/^    styles = {$/;"	v	class:ColorfulStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/default.py	/^    styles = {$/;"	v	class:DefaultStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/emacs.py	/^    styles = {$/;"	v	class:EmacsStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/friendly.py	/^    styles = {$/;"	v	class:FriendlyStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/fruity.py	/^    styles = {$/;"	v	class:FruityStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/igor.py	/^    styles = {$/;"	v	class:IgorStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/manni.py	/^    styles = {$/;"	v	class:ManniStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/monokai.py	/^    styles = {$/;"	v	class:MonokaiStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/murphy.py	/^    styles = {$/;"	v	class:MurphyStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/native.py	/^    styles = {$/;"	v	class:NativeStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_dark.py	/^    styles = {$/;"	v	class:ParaisoDarkStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/paraiso_light.py	/^    styles = {$/;"	v	class:ParaisoLightStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/pastie.py	/^    styles = {$/;"	v	class:PastieStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/perldoc.py	/^    styles = {$/;"	v	class:PerldocStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/rrt.py	/^    styles = {$/;"	v	class:RrtStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/tango.py	/^    styles = {$/;"	v	class:TangoStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/trac.py	/^    styles = {$/;"	v	class:TracStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vim.py	/^    styles = {$/;"	v	class:VimStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/vs.py	/^    styles = {$/;"	v	class:VisualStudioStyle
styles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/styles/xcode.py	/^    styles = {$/;"	v	class:XcodeStyle
styles_token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/style.py	/^    def styles_token(cls, ttype):$/;"	m	class:StyleMeta
styles_token	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/style.py	/^    def styles_token(cls, ttype):$/;"	m	class:StyleMeta
sub	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
subprocess	plugged/Nvim-R/R/synctex_evince_backward.py	/^import dbus, subprocess, time$/;"	i
subprocess	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_scilab_builtins.py	/^    import subprocess$/;"	i
subprocess	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_scilab_builtins.py	/^    import subprocess$/;"	i
subprocess	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tool.py	/^import subprocess$/;"	i
subseparator	plugged/lightline.vim/autoload/lightline.vim	/^function! s:subseparator(x, y, s, a, b) abort$/;"	f
substitute_last	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
substitute_path_separator	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^                     suffix=r'\\s*($|(?=[^0-9a-z_\\-]))')$/;"	v	class:OpenEdgeLexer
suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^                suffix=r'\\b'),$/;"	v	class:MaqlLexer
suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^                suffix=r'\\s*($|(?=[^0-9a-z_\\-]))'),$/;"	v	class:CobolLexer
suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^                   suffix=r'\\b'), Keyword),$/;"	v	class:CFamilyLexer
suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^                suffix=r'\\b'),$/;"	v	class:DLexer
suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^        suffix=r'\\s')$/;"	v	class:FactorLexer
suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^                suffix=r'\\b'),$/;"	v	class:SystemVerilogLexer
suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^                   suffix=r'\\b'),  Name.Builtin),$/;"	v	class:OctaveLexer
suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^            suffix=r'\\b'),$/;"	v	class:Python3Lexer
suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^                     suffix=r'\\s*($|(?=[^0-9a-z_\\-]))')$/;"	v	class:OpenEdgeLexer
suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^                suffix=r'\\b'),$/;"	v	class:MaqlLexer
suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^                suffix=r'\\s*($|(?=[^0-9a-z_\\-]))'),$/;"	v	class:CobolLexer
suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^                   suffix=r'\\b'), Keyword),$/;"	v	class:CFamilyLexer
suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^                suffix=r'\\b'),$/;"	v	class:DLexer
suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^        suffix=r'\\s')$/;"	v	class:FactorLexer
suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^                suffix=r'\\b'),$/;"	v	class:SystemVerilogLexer
suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^                   suffix=r'\\b'),  Name.Builtin),$/;"	v	class:OctaveLexer
suffix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^            suffix=r'\\b'),$/;"	v	class:Python3Lexer
suite.after_each	plugged/unite.vim/test/matcher.vim	/^function! s:suite.after_each()$/;"	f
suite.after_each	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.after_each()$/;"	f
suite.append	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.append()$/;"	f
suite.backquote	plugged/vimproc.vim/test/parser.vim	/^function! s:suite.backquote()$/;"	f
suite.before_each	plugged/unite.vim/test/matcher.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.before_each()$/;"	f
suite.block_convertion	plugged/vimproc.vim/test/parser.vim	/^function! s:suite.block_convertion()$/;"	f
suite.comment	plugged/vimproc.vim/test/parser.vim	/^function! s:suite.comment()$/;"	f
suite.escape	plugged/vimproc.vim/test/parser.vim	/^function! s:suite.escape()$/;"	f
suite.functions	plugged/vimproc.vim/test/functions.vim	/^function! s:suite.functions()$/;"	f
suite.invalid_fmode	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.invalid_fmode()$/;"	f
suite.join	plugged/vimproc.vim/test/parser.vim	/^function! s:suite.join()$/;"	f
suite.lua	plugged/unite.vim/test/matcher.vim	/^function! s:suite.lua()$/;"	f
suite.parse_redirection	plugged/vimproc.vim/test/parser.vim	/^function! s:suite.parse_redirection()$/;"	f
suite.parse_statements	plugged/vimproc.vim/test/parser.vim	/^function! s:suite.parse_statements()$/;"	f
suite.popen2	plugged/vimproc.vim/test/popen.vim	/^function! s:suite.popen2()$/;"	f
suite.popen3	plugged/vimproc.vim/test/popen.vim	/^function! s:suite.popen3()$/;"	f
suite.quote	plugged/vimproc.vim/test/parser.vim	/^function! s:suite.quote()$/;"	f
suite.read	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.read()$/;"	f
suite.read_line	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.read_line()$/;"	f
suite.read_lines	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.read_lines()$/;"	f
suite.read_write	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.read_write()$/;"	f
suite.redirection	plugged/vimproc.vim/test/popen.vim	/^function! s:suite.redirection()$/;"	f
suite.slash_convertion	plugged/vimproc.vim/test/parser.vim	/^function! s:suite.slash_convertion()$/;"	f
suite.socket	plugged/vimproc.vim/test/socket.vim	/^function! s:suite.socket()$/;"	f
suite.sorter_rank	plugged/unite.vim/test/sorter.vim	/^function! s:suite.sorter_rank()$/;"	f
suite.source	plugged/unite.vim/test/source.vim	/^function! s:suite.source()$/;"	f
suite.system	plugged/vimproc.vim/test/system.vim	/^function! s:suite.system()$/;"	f
suite.token	plugged/vimproc.vim/test/lexer.vim	/^function! s:suite.token()$/;"	f
suite.value	plugged/vimproc.vim/test/lexer.vim	/^function! s:suite.value()$/;"	f
suite.with_oflag	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.with_oflag()$/;"	f
suite.write	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.write()$/;"	f
sum	plugged/calendar.vim/autoload/calendar/constructor/view_ymd.vim	/^function! s:sum(l) abort$/;"	f
super_len	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def super_len(o):$/;"	f
supports_set_ciphers	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^        supports_set_ciphers = ((2, 7) <= sys.version_info < (3,) or$/;"	v	class:SSLContext
sw	plugged/vim-go/indent/go.vim	/^	func s:sw()$/;"	f
swig_directives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    swig_directives = set(($/;"	v	class:SwigLexer
swig_directives	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    swig_directives = set(($/;"	v	class:SwigLexer
switch	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:switch(candidate) "{{{$/;"	f
switch_in	autoload/plug.vim	/^function! s:switch_in()$/;"	f
switch_out	autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
symbol	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    symbol = r'(\\|[^|]+\\||(?:%s)(?:%s)*)' % (nonmacro, constituent)$/;"	v	class:CommonLispLexer
symbol	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    symbol = r'(\\|[^|]+\\||(?:%s)(?:%s)*)' % (nonmacro, constituent)$/;"	v	class:CommonLispLexer
symbolicid_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    symbolicid_re = r"[!%&$#+\\-\/:<=>?@\\\\~`^|*]+"$/;"	v	class:SMLLexer
symbolicid_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    symbolicid_re = r"[!%&$#+\\-\/:<=>?@\\\\~`^|*]+"$/;"	v	class:SMLLexer
symbolicid_reserved	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    symbolicid_reserved = set(($/;"	v	class:SMLLexer
symbolicid_reserved	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    symbolicid_reserved = set(($/;"	v	class:SMLLexer
sync_view	plugged/Nvim-R/R/synctex_evince_forward.py	/^def sync_view(ev_window, path_input, line_number):$/;"	f
synname	plugged/vim-ruby/ftplugin/ruby.vim	/^function! s:synname()$/;"	f
syntastic	plugged/syntastic/plugin/syntastic.vim	/^    augroup syntastic$/;"	a
syntastic	plugged/syntastic/plugin/syntastic.vim	/^augroup syntastic$/;"	a
syntastic	plugged/syntastic/syntax_checkers/sass/sass.vim	/^augroup syntastic$/;"	a
syntastic#c#GetLocList	plugged/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#GetLocList(filetype, subchecker, options) abort " {{{2$/;"	f
syntastic#c#NullOutput	plugged/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#NullOutput() abort " {{{2$/;"	f
syntastic#c#ReadConfig	plugged/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#ReadConfig(file) abort " {{{2$/;"	f
syntastic#log#debug	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debug(level, msg, ...) abort " {{{2$/;"	f
syntastic#log#debugDump	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugDump(level) abort " {{{2$/;"	f
syntastic#log#debugShowOptions	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowOptions(level, names) abort " {{{2$/;"	f
syntastic#log#debugShowVariables	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowVariables(level, names) abort " {{{2$/;"	f
syntastic#log#deprecationWarn	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#deprecationWarn(old, new, ...) abort " {{{2$/;"	f
syntastic#log#error	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#error(msg) abort " {{{2$/;"	f
syntastic#log#info	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#info(msg) abort " {{{2$/;"	f
syntastic#log#oneTimeWarn	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#oneTimeWarn(msg) abort " {{{2$/;"	f
syntastic#log#warn	plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#warn(msg) abort " {{{2$/;"	f
syntastic#postprocess#compressWhitespace	plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#compressWhitespace(errors) abort " {{{2$/;"	f
syntastic#postprocess#cygwinRemoveCR	plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#cygwinRemoveCR(errors) abort " {{{2$/;"	f
syntastic#postprocess#decodeXMLEntities	plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#decodeXMLEntities(errors) abort " {{{2$/;"	f
syntastic#postprocess#filterForeignErrors	plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#filterForeignErrors(errors) abort " {{{2$/;"	f
syntastic#postprocess#guards	plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#guards(errors) abort " {{{2$/;"	f
syntastic#preprocess#cabal	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#cabal(errors) abort " {{{2$/;"	f
syntastic#preprocess#checkstyle	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#checkstyle(errors) abort " {{{2$/;"	f
syntastic#preprocess#cppcheck	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#cppcheck(errors) abort " {{{2$/;"	f
syntastic#preprocess#flow	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#flow(errors) abort " {{{2$/;"	f
syntastic#preprocess#killEmpty	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#killEmpty(errors) abort " {{{2$/;"	f
syntastic#preprocess#perl	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#perl(errors) abort " {{{2$/;"	f
syntastic#preprocess#prospector	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#prospector(errors) abort " {{{2$/;"	f
syntastic#preprocess#rparse	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#rparse(errors) abort " {{{2$/;"	f
syntastic#preprocess#tslint	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#tslint(errors) abort " {{{2$/;"	f
syntastic#preprocess#validator	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#validator(errors) abort " {{{2$/;"	f
syntastic#preprocess#vint	plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#vint(errors) abort " {{{2$/;"	f
syntastic#util#CygwinPath	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#CygwinPath(path) abort " {{{2$/;"	f
syntastic#util#DevNull	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#DevNull() abort " {{{2$/;"	f
syntastic#util#Slash	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#Slash() abort " {{{2$/;"	f
syntastic#util#argsescape	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#argsescape(opt) abort " {{{2$/;"	f
syntastic#util#bufIsActive	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#bufIsActive(buffer) abort " {{{2$/;"	f
syntastic#util#compareLexi	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#compareLexi(a, b) abort " {{{2$/;"	f
syntastic#util#decodeXMLEntities	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#decodeXMLEntities(string) abort " {{{2$/;"	f
syntastic#util#dictFilter	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#dictFilter(errors, filter) abort " {{{2$/;"	f
syntastic#util#findInParent	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#findInParent(what, where) abort " {{{2$/;"	f
syntastic#util#isRunningWindows	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#isRunningWindows() abort " {{{2$/;"	f
syntastic#util#parseShebang	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseShebang() abort " {{{2$/;"	f
syntastic#util#parseVersion	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseVersion(version, ...) abort " {{{2$/;"	f
syntastic#util#redraw	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#redraw(full) abort " {{{2$/;"	f
syntastic#util#rmrf	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#rmrf(what) abort " {{{2$/;"	f
syntastic#util#screenWidth	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#screenWidth(str, tabstop) abort " {{{2$/;"	f
syntastic#util#shescape	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shescape(string) abort " {{{2$/;"	f
syntastic#util#shexpand	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shexpand(string, ...) abort " {{{2$/;"	f
syntastic#util#stamp	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#stamp() abort " {{{2$/;"	f
syntastic#util#system	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#system(command) abort " {{{2$/;"	f
syntastic#util#tmpdir	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#tmpdir() abort " {{{2$/;"	f
syntastic#util#unique	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#unique(list) abort " {{{2$/;"	f
syntastic#util#var	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#var(name, ...) abort " {{{2$/;"	f
syntastic#util#versionIsAtLeast	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#versionIsAtLeast(installed, required) abort " {{{2$/;"	f
syntastic#util#wideMsg	plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#wideMsg(msg) abort " {{{2$/;"	f
syntax	autoload/plug.vim	/^function! s:syntax()$/;"	f
sys	plugged/Nvim-R/R/synctex_evince_backward.py	/^import dbus.mainloop.glib, sys, os, signal$/;"	i
sys	plugged/Nvim-R/R/synctex_evince_forward.py	/^import dbus.mainloop.glib, sys, os$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/cli.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/compat.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/__init__.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/_mapping.py	/^    import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/terminal256.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_mapping.py	/^    import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_sourcemod_builtins.py	/^    import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/sphinxext.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/__init__.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/_mapping.py	/^    import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/terminal256.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_mapping.py	/^    import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_sourcemod_builtins.py	/^    import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/sphinxext.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    import doctest, os, sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^import sys, datetime, os.path, gettext$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_docs.py	/^import unittest, os, os.path, sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^import sys, os, os.path$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    import doctest, os, sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^import sys, datetime, os.path, gettext$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_docs.py	/^import unittest, os, os.path, sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^import sys, os, os.path$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/certs.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardetect.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/charsetgroupprober.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/compat.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/eucjpprober.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/mbcharsetprober.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcharsetprober.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sjisprober.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^    import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^    import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_errors.py	/^import sys, pickle$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_fail.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_scanstring.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_speedups.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tool.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tool.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/__init__.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/tests.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/__init__.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/tests.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/projects/git.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/projects/mercurial.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/projects/wakatime_project_file.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/session_cache.py	/^import sys$/;"	i
sys	plugged/vim-wakatime/plugin/packages/wakatime/stats.py	/^import sys$/;"	i
sys	plugged/vimproc.vim/tools/fork.py	/^import sys$/;"	i
system	autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
system	plugged/unite.vim/autoload/vital/_unite/Process.vim	/^function! s:system(str, ...) abort$/;"	f
system	plugged/vim-go/autoload/go/complete.vim	/^fu! s:system(str, ...)$/;"	f
system	plugged/vim-instant-markdown/after/ftplugin/markdown/instant-markdown.vim	/^function! s:system(cmd, stdin)$/;"	f
system	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:system(cmdline, is_passwd, input, timeout, is_pty) "{{{$/;"	f
system_chomp	autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
table_name	plugged/vim-wakatime/plugin/packages/wakatime/offlinequeue.py	/^    table_name = 'heartbeat_1'$/;"	v	class:Queue
tabular#DoGTabularize	plugged/tabular/autoload/tabular.vim	/^function! tabular#DoGTabularize()$/;"	f
tabular#ElementFormatPattern	plugged/tabular/autoload/tabular.vim	/^function! tabular#ElementFormatPattern()$/;"	f
tabular#PipeRange	plugged/tabular/autoload/tabular.vim	/^function! tabular#PipeRange(includepat, ...) range$/;"	f
tabular#PipeRangeWithOptions	plugged/tabular/autoload/tabular.vim	/^function! tabular#PipeRangeWithOptions(includepat, filterlist, options) range$/;"	f
tabular#SplitDelimUnitTest	plugged/tabular/autoload/tabular.vim	/^function! tabular#SplitDelimUnitTest()$/;"	f
tabular#TabularizeStrings	plugged/tabular/autoload/tabular.vim	/^function! tabular#TabularizeStrings(strings, delim, ...)$/;"	f
tag_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^tag_re = re.compile(r'<(.+?)(\\s.*?)?>.*?<\/.+?>(?uism)')$/;"	v
tag_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^tag_re = re.compile(r'<(.+?)(\\s.*?)?>.*?<\/.+?>(?uism)')$/;"	v
tags	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^    tags = []$/;"	v	class:HtmlDjangoParser
take_action	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^        def take_action(action, argument_strings, option_string=None):$/;"	f	function:ArgumentParser._parse_known_args
take_while	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
tarfile	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_php_builtins.py	/^    import tarfile$/;"	i
tarfile	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_php_builtins.py	/^    import tarfile$/;"	i
task	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:task() abort$/;"	f
task_delete	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:task_delete() abort$/;"	f
tcount	plugged/delimitMate/test/autoclose_matchpairs.vim	/^    let tcount += 1$/;"	v
tcount	plugged/delimitMate/test/autoclose_matchpairs.vim	/^let tcount = 1$/;"	v
tcount	plugged/delimitMate/test/autoclose_quotes.vim	/^      let tcount += 1$/;"	v
tcount	plugged/delimitMate/test/autoclose_quotes.vim	/^    let tcount += 1$/;"	v
tcount	plugged/delimitMate/test/autoclose_quotes.vim	/^let tcount = 1$/;"	v
tcount	plugged/delimitMate/test/expand_cr.vim	/^  let tcount += 1$/;"	v
tcount	plugged/delimitMate/test/expand_cr.vim	/^let tcount = 1$/;"	v
tcount	plugged/delimitMate/test/expand_space.vim	/^  let tcount += 1$/;"	v
tcount	plugged/delimitMate/test/expand_space.vim	/^let tcount = 1$/;"	v
tell	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^    def tell(self):$/;"	m	class:HTTPResponse
temperedRefresh	plugged/vim-instant-markdown/after/ftplugin/markdown/instant-markdown.vim	/^fu! s:temperedRefresh()$/;"	f
tempfile	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tool.py	/^import tempfile$/;"	i
term	plugged/lightline.vim/autoload/lightline.vim	/^function! s:term(l) abort$/;"	f
terminal_encoding	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^    guess_decode, guess_decode_from_terminal, terminal_encoding$/;"	i
terminal_encoding	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^def terminal_encoding(term):$/;"	f
terminal_encoding	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^    guess_decode, guess_decode_from_terminal, terminal_encoding$/;"	i
terminal_encoding	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^def terminal_encoding(term):$/;"	f
terminated	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    terminated = r'(?=[ "()\\'\\n,;`])'  # whitespace or terminating macro characters$/;"	v	class:CommonLispLexer
terminated	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    terminated = r'(?=[ "()\\'\\n,;`])'  # whitespace or terminating macro characters$/;"	v	class:CommonLispLexer
test	plugged/delimitMate/plugin/delimitMate.vim	/^function! s:test() "{{{$/;"	f
test	plugged/emmet-vim/unittest.vim	/^function! s:test(...)$/;"	f
test	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/scanner.py	/^    def test(self, pattern):$/;"	m	class:Scanner
test	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/scanner.py	/^    def test(self, pattern):$/;"	m	class:Scanner
testDatabaseFixes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testDatabaseFixes(self):$/;"	m	class:PicklingTest
testDatabaseFixes	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testDatabaseFixes(self):$/;"	m	class:PicklingTest
testDayAfter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testDayAfter(self):$/;"	m	class:USEasternDSTStartTestCase
testDayAfter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testDayAfter(self):$/;"	m	class:USEasternDSTStartTestCase
testDayBefore	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testDayBefore(self):$/;"	m	class:USEasternDSTStartTestCase
testDayBefore	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testDayBefore(self):$/;"	m	class:USEasternDSTStartTestCase
testDst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testDst(self):$/;"	m	class:PicklingTest
testDst	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testDst(self):$/;"	m	class:PicklingTest
testGMT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testGMT(self):$/;"	m	class:BasicTest
testGMT	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testGMT(self):$/;"	m	class:BasicTest
testHourAfter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testHourAfter(self):$/;"	m	class:USEasternDSTStartTestCase
testHourAfter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testHourAfter(self):$/;"	m	class:USEasternDSTStartTestCase
testHourBefore	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testHourBefore(self):$/;"	m	class:ReferenceUSEasternDSTEndTestCase
testHourBefore	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testHourBefore(self):$/;"	m	class:USEasternDSTStartTestCase
testHourBefore	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testHourBefore(self):$/;"	m	class:ReferenceUSEasternDSTEndTestCase
testHourBefore	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testHourBefore(self):$/;"	m	class:USEasternDSTStartTestCase
testInstantAfter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testInstantAfter(self):$/;"	m	class:USEasternDSTStartTestCase
testInstantAfter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testInstantAfter(self):$/;"	m	class:USEasternDSTStartTestCase
testInstantBefore	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testInstantBefore(self):$/;"	m	class:ReferenceUSEasternDSTEndTestCase
testInstantBefore	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testInstantBefore(self):$/;"	m	class:USEasternDSTStartTestCase
testInstantBefore	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testInstantBefore(self):$/;"	m	class:ReferenceUSEasternDSTEndTestCase
testInstantBefore	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testInstantBefore(self):$/;"	m	class:USEasternDSTStartTestCase
testLocalize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testLocalize(self):$/;"	m	class:LocalTestCase
testLocalize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testLocalize(self):$/;"	m	class:LocalTestCase
testNormalize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testNormalize(self):$/;"	m	class:LocalTestCase
testNormalize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testNormalize(self):$/;"	m	class:LocalTestCase
testOldPickles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testOldPickles(self):$/;"	m	class:PicklingTest
testOldPickles	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testOldPickles(self):$/;"	m	class:PicklingTest
testPartialMinuteOffsets	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testPartialMinuteOffsets(self):$/;"	m	class:LocalTestCase
testPartialMinuteOffsets	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testPartialMinuteOffsets(self):$/;"	m	class:LocalTestCase
testReferenceUTC	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testReferenceUTC(self):$/;"	m	class:BasicTest
testReferenceUTC	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testReferenceUTC(self):$/;"	m	class:BasicTest
testRoundtrip	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testRoundtrip(self):$/;"	m	class:PicklingTest
testRoundtrip	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testRoundtrip(self):$/;"	m	class:PicklingTest
testTransition	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testTransition(self):$/;"	m	class:USEasternDSTStartTestCase
testTransition	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testTransition(self):$/;"	m	class:USEasternDSTStartTestCase
testTwoHoursAfter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testTwoHoursAfter(self):$/;"	m	class:USEasternDSTStartTestCase
testTwoHoursAfter	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testTwoHoursAfter(self):$/;"	m	class:USEasternDSTStartTestCase
testTwoHoursBefore	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testTwoHoursBefore(self):$/;"	m	class:USEasternDSTStartTestCase
testTwoHoursBefore	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testTwoHoursBefore(self):$/;"	m	class:USEasternDSTStartTestCase
testUnicodeTimezone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testUnicodeTimezone(self):$/;"	m	class:BasicTest
testUnicodeTimezone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testUnicodeTimezone(self):$/;"	m	class:BasicTest
testUnknownOffsets	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testUnknownOffsets(self):$/;"	m	class:BasicTest
testUnknownOffsets	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testUnknownOffsets(self):$/;"	m	class:BasicTest
testVersion	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def testVersion(self):$/;"	m	class:BasicTest
testVersion	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def testVersion(self):$/;"	m	class:BasicTest
test_README	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_docs.py	/^def test_README():$/;"	f
test_README	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_docs.py	/^def test_README():$/;"	f
test_accumulator	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^    def test_accumulator(self):$/;"	m	class:TestDump
test_arithmetic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def test_arithmetic(self):$/;"	m	class:ReferenceUSEasternDSTEndTestCase
test_arithmetic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def test_arithmetic(self):$/;"	m	class:ReferenceUSEasternDSTStartTestCase
test_arithmetic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def test_arithmetic(self):$/;"	m	class:USEasternDSTStartTestCase
test_arithmetic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def test_arithmetic(self):$/;"	m	class:ReferenceUSEasternDSTEndTestCase
test_arithmetic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def test_arithmetic(self):$/;"	m	class:ReferenceUSEasternDSTStartTestCase
test_arithmetic	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def test_arithmetic(self):$/;"	m	class:USEasternDSTStartTestCase
test_array_decoder_issue46	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_fail.py	/^    def test_array_decoder_issue46(self):$/;"	m	class:TestFail
test_asdict_not_callable_dump	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^    def test_asdict_not_callable_dump(self):$/;"	m	class:TestNamedTuple
test_asdict_not_callable_dumps	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^    def test_asdict_not_callable_dumps(self):$/;"	m	class:TestNamedTuple
test_astimezone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def test_astimezone(self):$/;"	m	class:BaseTzInfoTestCase
test_astimezone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def test_astimezone(self):$/;"	m	class:BaseTzInfoTestCase
test_basic_encode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_encode_for_html.py	/^    def test_basic_encode(self):$/;"	m	class:TestEncodeForHTML
test_basic_roundtrip	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_encode_for_html.py	/^    def test_basic_roundtrip(self):$/;"	m	class:TestEncodeForHTML
test_belfast	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def test_belfast(self):$/;"	m	class:CommonTimezonesTestCase
test_belfast	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def test_belfast(self):$/;"	m	class:CommonTimezonesTestCase
test_big_unicode_decode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^    def test_big_unicode_decode(self):$/;"	m	class:TestUnicode
test_big_unicode_encode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^    def test_big_unicode_encode(self):$/;"	m	class:TestUnicode
test_bounds_checking	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decode.py	/^    def test_bounds_checking(self):$/;"	m	class:TestDecode
test_bratislava	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def test_bratislava(self):$/;"	m	class:CommonTimezonesTestCase
test_bratislava	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def test_bratislava(self):$/;"	m	class:CommonTimezonesTestCase
test_c_encode_basestring_ascii	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_encode_basestring_ascii.py	/^    def test_c_encode_basestring_ascii(self):$/;"	m	class:TestEncodeBaseStringAscii
test_c_scanstring	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_scanstring.py	/^    def test_c_scanstring(self):$/;"	m	class:TestScanString
test_case	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_item_sort_key.py	/^    def test_case(self):$/;"	m	class:TestItemSortKey
test_circular_composite	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_check_circular.py	/^    def test_circular_composite(self):$/;"	m	class:TestCheckCircular
test_circular_default	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_check_circular.py	/^    def test_circular_default(self):$/;"	m	class:TestCheckCircular
test_circular_dict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_check_circular.py	/^    def test_circular_dict(self):$/;"	m	class:TestCheckCircular
test_circular_list	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_check_circular.py	/^    def test_circular_list(self):$/;"	m	class:TestCheckCircular
test_circular_off_default	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_check_circular.py	/^    def test_circular_off_default(self):$/;"	m	class:TestCheckCircular
test_constants	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^    def test_constants(self):$/;"	m	class:TestDump
test_decimal	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decode.py	/^    def test_decimal(self):$/;"	m	class:TestDecode
test_decimal_decode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decimal.py	/^    def test_decimal_decode(self):$/;"	m	class:TestDecimal
test_decimal_defaults	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decimal.py	/^    def test_decimal_defaults(self):$/;"	m	class:TestDecimal
test_decimal_encode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decimal.py	/^    def test_decimal_encode(self):$/;"	m	class:TestDecimal
test_decimal_reload	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decimal.py	/^    def test_decimal_reload(self):$/;"	m	class:TestDecimal
test_decimal_roundtrip	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decimal.py	/^    def test_decimal_roundtrip(self):$/;"	m	class:TestDecimal
test_decode_error	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_errors.py	/^    def test_decode_error(self):$/;"	m	class:TestErrors
test_decoder_optimizations	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decode.py	/^    def test_decoder_optimizations(self):$/;"	m	class:TestDecode
test_default	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_default.py	/^    def test_default(self):$/;"	m	class:TestDefault
test_default_encoding	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^    def test_default_encoding(self):$/;"	m	class:TestUnicode
test_defaultrecursion	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_recursion.py	/^    def test_defaultrecursion(self):$/;"	m	class:TestRecursion
test_degenerates_allow	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_float.py	/^    def test_degenerates_allow(self):$/;"	m	class:TestFloat
test_degenerates_deny	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_float.py	/^    def test_degenerates_deny(self):$/;"	m	class:TestFloat
test_degenerates_ignore	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_float.py	/^    def test_degenerates_ignore(self):$/;"	m	class:TestFloat
test_dict_keys	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_bigint_as_string.py	/^    def test_dict_keys(self):$/;"	m	class:TestBigintAsString
test_dict_keys	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_bitsize_int_as_string.py	/^    def test_dict_keys(self):$/;"	m	class:TestBitSizeIntAsString
test_dictrecursion	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_recursion.py	/^    def test_dictrecursion(self):$/;"	m	class:TestRecursion
test_dicts	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_bigint_as_string.py	/^    def test_dicts(self):$/;"	m	class:TestBigintAsString
test_dicts	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_bitsize_int_as_string.py	/^    def test_dicts(self):$/;"	m	class:TestBitSizeIntAsString
test_dump	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^    def test_dump(self):$/;"	m	class:TestDump
test_dumps	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^    def test_dumps(self):$/;"	m	class:TestDump
test_empty_objects	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decode.py	/^    def test_empty_objects(self):$/;"	m	class:TestDecode
test_empty_strings	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decode.py	/^    def test_empty_strings(self):$/;"	m	class:TestDecode
test_encode_truefalse	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^    def test_encode_truefalse(self):$/;"	m	class:TestDump
test_encoding1	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^    def test_encoding1(self):$/;"	m	class:TestUnicode
test_encoding2	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^    def test_encoding2(self):$/;"	m	class:TestUnicode
test_encoding3	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^    def test_encoding3(self):$/;"	m	class:TestUnicode
test_encoding4	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^    def test_encoding4(self):$/;"	m	class:TestUnicode
test_encoding5	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^    def test_encoding5(self):$/;"	m	class:TestUnicode
test_encoding6	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^    def test_encoding6(self):$/;"	m	class:TestUnicode
test_ensure_ascii_false_bytestring_encoding	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^    def test_ensure_ascii_false_bytestring_encoding(self):$/;"	m	class:TestUnicode
test_ensure_ascii_false_returns_unicode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^    def test_ensure_ascii_false_returns_unicode(self):$/;"	m	class:TestUnicode
test_ensure_ascii_linebreak_encoding	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^    def test_ensure_ascii_linebreak_encoding(self):$/;"	m	class:TestUnicode
test_ensure_ascii_still_works	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^    def test_ensure_ascii_still_works(self):$/;"	m	class:TestUnicode
test_env	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/tests.py	/^    def test_env(self):$/;"	m	class:TzLocalTests
test_env	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/tests.py	/^    def test_env(self):$/;"	m	class:TzLocalTests
test_error_is_pickable	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_errors.py	/^    def test_error_is_pickable(self):$/;"	m	class:TestErrors
test_expectedclass	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def test_expectedclass(self):$/;"	m	class:BaseTzInfoTestCase
test_expectedclass	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def test_expectedclass(self):$/;"	m	class:BaseTzInfoTestCase
test_failures	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_fail.py	/^    def test_failures(self):$/;"	m	class:TestFail
test_float	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decode.py	/^    def test_float(self):$/;"	m	class:TestDecode
test_float	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_subclass.py	/^    def test_float(self):$/;"	m	class:TestSubclass
test_floats	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_float.py	/^    def test_floats(self):$/;"	m	class:TestFloat
test_for_json_encodes_dict_subclass	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^    def test_for_json_encodes_dict_subclass(self):$/;"	m	class:TestForJson
test_for_json_encodes_list	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^    def test_for_json_encodes_list(self):$/;"	m	class:TestForJson
test_for_json_encodes_list_subclass	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^    def test_for_json_encodes_list_subclass(self):$/;"	m	class:TestForJson
test_for_json_encodes_list_within_object	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^    def test_for_json_encodes_list_within_object(self):$/;"	m	class:TestForJson
test_for_json_encodes_object_nested_in_dict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^    def test_for_json_encodes_object_nested_in_dict(self):$/;"	m	class:TestForJson
test_for_json_encodes_object_nested_in_list_within_dict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^    def test_for_json_encodes_object_nested_in_list_within_dict(self):$/;"	m	class:TestForJson
test_for_json_encodes_object_nested_within_object	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^    def test_for_json_encodes_object_nested_within_object(self):$/;"	m	class:TestForJson
test_for_json_encodes_stand_alone_object	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^    def test_for_json_encodes_stand_alone_object(self):$/;"	m	class:TestForJson
test_for_json_ignored_if_not_true_with_dict_subclass	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^    def test_for_json_ignored_if_not_true_with_dict_subclass(self):$/;"	m	class:TestForJson
test_for_json_ignored_if_not_true_with_list_subclass	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^    def test_for_json_ignored_if_not_true_with_list_subclass(self):$/;"	m	class:TestForJson
test_fromutc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def test_fromutc(self):$/;"	m	class:BaseTzInfoTestCase
test_fromutc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def test_fromutc(self):$/;"	m	class:BaseTzInfoTestCase
test_indent	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_indent.py	/^    def test_indent(self):$/;"	m	class:TestIndent
test_indent0	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_indent.py	/^    def test_indent0(self):$/;"	m	class:TestIndent
test_indent_unknown_type_acceptance	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^    def test_indent_unknown_type_acceptance(self):$/;"	m	class:TestDump
test_infile_outfile	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tool.py	/^    def test_infile_outfile(self):$/;"	m	class:TestTool
test_infile_stdout	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tool.py	/^    def test_infile_stdout(self):$/;"	m	class:TestTool
test_int	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_subclass.py	/^    def test_int(self):$/;"	m	class:TestSubclass
test_ints	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_bigint_as_string.py	/^    def test_ints(self):$/;"	m	class:TestBigintAsString
test_ints	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_bitsize_int_as_string.py	/^    def test_ints(self):$/;"	m	class:TestBitSizeIntAsString
test_ints	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_float.py	/^    def test_ints(self):$/;"	m	class:TestFloat
test_ints_outside_range_fails	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_bitsize_int_as_string.py	/^    def test_ints_outside_range_fails(self):$/;"	m	class:TestBitSizeIntAsString
test_invalid_counts	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_bitsize_int_as_string.py	/^    def test_invalid_counts(self):$/;"	m	class:TestBitSizeIntAsString
test_invalid_escape_sequences	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^    def test_invalid_escape_sequences(self):$/;"	m	class:TestUnicode
test_issue3623	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_scanstring.py	/^    def test_issue3623(self):$/;"	m	class:TestScanString
test_iterable	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_iterable.py	/^    def test_iterable(self):$/;"	m	class:TestIterable
test_keys_reuse_str	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decode.py	/^    def test_keys_reuse_str(self):$/;"	m	class:TestDecode
test_keys_reuse_unicode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decode.py	/^    def test_keys_reuse_unicode(self):$/;"	m	class:TestDecode
test_listrecursion	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_recursion.py	/^    def test_listrecursion(self):$/;"	m	class:TestRecursion
test_lists	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_bigint_as_string.py	/^    def test_lists(self):$/;"	m	class:TestBigintAsString
test_lists	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_bitsize_int_as_string.py	/^    def test_lists(self):$/;"	m	class:TestBitSizeIntAsString
test_make_encoder	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_speedups.py	/^    def test_make_encoder(self):$/;"	m	class:TestDecode
test_make_scanner	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_speedups.py	/^    def test_make_scanner(self):$/;"	m	class:TestDecode
test_mappings	plugged/delimitMate/autoload/delimitMate.vim	/^function! s:test_mappings(list, is_matchpair) "{{{$/;"	f
test_namedtuple_dump	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^    def test_namedtuple_dump(self):$/;"	m	class:TestNamedTuple
test_namedtuple_dump_false	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^    def test_namedtuple_dump_false(self):$/;"	m	class:TestNamedTuple
test_namedtuple_dumps	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^    def test_namedtuple_dumps(self):$/;"	m	class:TestNamedTuple
test_namedtuple_dumps_false	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^    def test_namedtuple_dumps_false(self):$/;"	m	class:TestNamedTuple
test_normalize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def test_normalize(self):$/;"	m	class:BaseTzInfoTestCase
test_normalize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def test_normalize(self):$/;"	m	class:BaseTzInfoTestCase
test_object_pairs_hook	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decode.py	/^    def test_object_pairs_hook(self):$/;"	m	class:TestDecode
test_object_pairs_hook_with_unicode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^    def test_object_pairs_hook_with_unicode(self):$/;"	m	class:TestUnicode
test_one	plugged/vim-go/scripts/test.sh	/^test_one() {$/;"	f
test_only_localtime	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/tests.py	/^    def test_only_localtime(self):$/;"	m	class:TzLocalTests
test_only_localtime	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/tests.py	/^    def test_only_localtime(self):$/;"	m	class:TzLocalTests
test_ordered_dict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^    def test_ordered_dict(self):$/;"	m	class:TestDump
test_overflow	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_scanstring.py	/^    def test_overflow(self):$/;"	m	class:TestScanString
test_parse	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_pass1.py	/^    def test_parse(self):$/;"	m	class:TestPass1
test_parse	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_pass2.py	/^    def test_parse(self):$/;"	m	class:TestPass2
test_parse	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_pass3.py	/^    def test_parse(self):$/;"	m	class:TestPass3
test_prevent_script_breakout	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_encode_for_html.py	/^    def test_prevent_script_breakout(self):$/;"	m	class:TestEncodeForHTML
test_py_encode_basestring_ascii	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_encode_basestring_ascii.py	/^    def test_py_encode_basestring_ascii(self):$/;"	m	class:TestEncodeBaseStringAscii
test_py_scanstring	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_scanstring.py	/^    def test_py_scanstring(self):$/;"	m	class:TestScanString
test_raises_typeerror_if_for_json_not_true_with_object	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^    def test_raises_typeerror_if_for_json_not_true_with_object(self):$/;"	m	class:TestForJson
test_raw_decode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decode.py	/^    def test_raw_decode(self):$/;"	m	class:TestDecode
test_scan_error	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_errors.py	/^    def test_scan_error(self):$/;"	m	class:TestErrors
test_separators	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_indent.py	/^    def test_separators(self):$/;"	m	class:TestIndent
test_separators	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_separators.py	/^    def test_separators(self):$/;"	m	class:TestSeparators
test_simple_first	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_item_sort_key.py	/^    def test_simple_first(self):$/;"	m	class:TestItemSortKey
test_sort_keys	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^    def test_sort_keys(self):$/;"	m	class:TestDump
test_sorted_dict	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_encode_basestring_ascii.py	/^    def test_sorted_dict(self):$/;"	m	class:TestEncodeBaseStringAscii
test_stdin_stdout	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tool.py	/^    def test_stdin_stdout(self):$/;"	m	class:TestTool
test_string_keys_error	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_errors.py	/^    def test_string_keys_error(self):$/;"	m	class:TestErrors
test_stringify_key	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_decimal.py	/^    def test_stringify_key(self):$/;"	m	class:TestDecimal
test_stringify_key	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_dump.py	/^    def test_stringify_key(self):$/;"	m	class:TestDump
test_strip_bom	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^    def test_strip_bom(self):$/;"	m	class:TestUnicode
test_suite	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_docs.py	/^def test_suite():$/;"	f
test_suite	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^def test_suite():$/;"	f
test_suite	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_docs.py	/^def test_suite():$/;"	f
test_suite	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^def test_suite():$/;"	f
test_surrogates	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_scanstring.py	/^    def test_surrogates(self):$/;"	m	class:TestScanString
test_timezone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/tests.py	/^    def test_timezone(self):$/;"	m	class:TzLocalTests
test_timezone	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/tests.py	/^    def test_timezone(self):$/;"	m	class:TzLocalTests
test_timezone_setting	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/tests.py	/^    def test_timezone_setting(self):$/;"	m	class:TzLocalTests
test_timezone_setting	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/tests.py	/^    def test_timezone_setting(self):$/;"	m	class:TzLocalTests
test_truncated_input	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_fail.py	/^    def test_truncated_input(self):$/;"	m	class:TestFail
test_tuple_array_dump	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tuple.py	/^    def test_tuple_array_dump(self):$/;"	m	class:TestTuples
test_tuple_array_dumps	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tuple.py	/^    def test_tuple_array_dumps(self):$/;"	m	class:TestTuples
test_tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    import test_tzinfo$/;"	i
test_tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    import test_tzinfo$/;"	i
test_unicode_decode	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^    def test_unicode_decode(self):$/;"	m	class:TestUnicode
test_unicode_preservation	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^    def test_unicode_preservation(self):$/;"	m	class:TestUnicode
test_us_eastern	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    def test_us_eastern(self):$/;"	m	class:CommonTimezonesTestCase
test_us_eastern	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    def test_us_eastern(self):$/;"	m	class:CommonTimezonesTestCase
test_win32	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/tests.py	/^        def test_win32(self):$/;"	m	class:TzLocalTests.TzWin32Tests
test_win32	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/tests.py	/^        def test_win32(self):$/;"	m	class:TzLocalTests.TzWin32Tests
test_zone_setting	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/tests.py	/^    def test_zone_setting(self):$/;"	m	class:TzLocalTests
test_zone_setting	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/tests.py	/^    def test_zone_setting(self):$/;"	m	class:TzLocalTests
testsnumber	plugged/delimitMate/test/autoclose_matchpairs.vim	/^let testsnumber = len(filter(copy(lines), 'v:val =~ ''^"'''))$/;"	v
testsnumber	plugged/delimitMate/test/autoclose_quotes.vim	/^let testsnumber = len(filter(copy(lines), 'v:val =~ ''^"'''))$/;"	v
testsnumber	plugged/delimitMate/test/expand_cr.vim	/^let testsnumber = len(filter(copy(lines), 'v:val =~ ''^=\\{80}$'''))$/;"	v
testsnumber	plugged/delimitMate/test/expand_space.vim	/^let testsnumber = len(filter(copy(lines), 'v:val =~ ''^=\\{80}$'''))$/;"	v
text	plugged/syntastic/syntax_checkers/python/codec.py	/^            text = codecs.lookup(match.groupdict()["coding"]).incrementaldecoder().decode($/;"	v
text	plugged/syntastic/syntax_checkers/python/codec.py	/^        text = ''.join(text).encode('utf-8')$/;"	v
text	plugged/syntastic/syntax_checkers/python/codec.py	/^        text = fle.readlines()$/;"	v
text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_scilab_builtins.py	/^            text = text[len('Error: unable to open display \\n'):]$/;"	v
text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_scilab_builtins.py	/^        text = output[1].strip()$/;"	v
text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_scilab_builtins.py	/^            text = text[len('Error: unable to open display \\n'):]$/;"	v
text	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_scilab_builtins.py	/^        text = output[1].strip()$/;"	v
text	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/models.py	/^    def text(self):$/;"	m	class:Response
text_analyse	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^    def text_analyse(text):$/;"	f	function:make_analysator
text_analyse	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^    def text_analyse(text):$/;"	f	function:make_analysator
text_tuple	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    text_tuple = (r'[^\\S\\n]+', Text)$/;"	v	class:AlloyLexer
text_tuple	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    text_tuple = (r'[^\\S\\n]+', Text)$/;"	v	class:AlloyLexer
text_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/filters/__init__.py	/^     get_choice_opt, ClassNotFound, OptionError, text_type, string_types$/;"	i
text_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    make_analysator, text_type, add_metaclass, iteritems, Future, guess_decode$/;"	i
text_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^from pygments.util import text_type$/;"	i
text_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/special.py	/^from pygments.util import get_choice_opt, text_type, BytesIO$/;"	i
text_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^    text_type = str$/;"	v
text_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/filters/__init__.py	/^     get_choice_opt, ClassNotFound, OptionError, text_type, string_types$/;"	i
text_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    make_analysator, text_type, add_metaclass, iteritems, Future, guess_decode$/;"	i
text_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^from pygments.util import text_type$/;"	i
text_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/special.py	/^from pygments.util import get_choice_opt, text_type, BytesIO$/;"	i
text_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^    text_type = str$/;"	v
text_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    text_type = str$/;"	v
text_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    text_type = unicode$/;"	v
text_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    text_type = str$/;"	v
text_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    text_type = unicode$/;"	v
text_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^from .compat import fromhex, b, u, text_type, binary_type, PY3, unichr$/;"	i
text_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_float.py	/^from simplejson.compat import long_type, text_type$/;"	i
text_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^from simplejson.compat import unichr, text_type, b, u, BytesIO$/;"	i
textwrap	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_indent.py	/^import textwrap$/;"	i
textwrap	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_separators.py	/^import textwrap$/;"	i
textwrap	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tool.py	/^import textwrap$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^this = _This()$/;"	v
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^from pygments.lexer import RegexLexer, bygroups, using, this, words, default$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    this, inherit, default, words$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    using, this, default$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    this, default, words$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    this, default$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^from pygments.lexer import RegexLexer, bygroups, include, using, this, words$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this, default$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    this, default, words$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    this, combined, default, words$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    using, this, do_insertions, default, words$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    inherit, default$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    using, this, default$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    using, this, default, words$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    include, using, this, default, combined$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^from pygments.lexer import RegexLexer, include, default, bygroups, using, this$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^this = _This()$/;"	v
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^from pygments.lexer import RegexLexer, bygroups, using, this, words, default$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    this, inherit, default, words$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    using, this, default$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    this, default, words$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    this, default$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^from pygments.lexer import RegexLexer, bygroups, include, using, this, words$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this, default$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    this, default, words$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    this, combined, default, words$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    using, this, do_insertions, default, words$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    inherit, default$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    using, this, default$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    using, this, default, words$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    include, using, this, default, combined$/;"	i
this	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^from pygments.lexer import RegexLexer, include, default, bygroups, using, this$/;"	i
this_dir	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_docs.py	/^this_dir = os.path.dirname(__file__)$/;"	v
this_dir	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_docs.py	/^this_dir = os.path.dirname(__file__)$/;"	v
threading	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    import dummy_threading as threading$/;"	i
threading	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    import threading$/;"	i
throw	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
tick	autoload/plug.vim	/^function! s:tick()$/;"	f
time	plugged/Nvim-R/R/synctex_evince_backward.py	/^import dbus, subprocess, time$/;"	i
time	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^import time$/;"	i
time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    from time import time$/;"	i
time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^import time$/;"	i
time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    from time import time$/;"	i
time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^import time$/;"	i
time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^from datetime import datetime, time, timedelta, tzinfo$/;"	i
time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^from datetime import datetime, time, timedelta, tzinfo$/;"	i
time	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^import time$/;"	i
time	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^import time$/;"	i
time	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/retry.py	/^import time$/;"	i
time	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/timeout.py	/^import time$/;"	i
time	plugged/vimproc.vim/tools/fork.py	/^import time$/;"	i
time_zone	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:time_zone() abort$/;"	f
timedelta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^from datetime import tzinfo, timedelta, datetime$/;"	i
timedelta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^from datetime import datetime, time, timedelta, tzinfo$/;"	i
timedelta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^from datetime import datetime, timedelta$/;"	i
timedelta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^from datetime import datetime, timedelta, tzinfo$/;"	i
timedelta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^from datetime import tzinfo, timedelta, datetime$/;"	i
timedelta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^from datetime import datetime, time, timedelta, tzinfo$/;"	i
timedelta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^from datetime import datetime, timedelta$/;"	i
timedelta	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^from datetime import datetime, timedelta, tzinfo$/;"	i
timeout	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^from socket import _fileobject, timeout$/;"	i
timezone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^def timezone(zone):$/;"	f
timezone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^def timezone(zone):$/;"	f
tmpfile	plugged/vim-gitgutter/test/testFileAddedToGit.vim	/^let tmpfile = 'fileAddedToGit.tmp'$/;"	v
tmpfile	plugged/vim-gitgutter/test/testFollowSymlink.vim	/^let tmpfile = 'symlink'$/;"	v
tmpfile	plugged/vim-gitgutter/test/testUntrackedFileOutsideRepo.vim	/^let tmpfile = tempname()$/;"	v
tmpfile	plugged/vim-gitgutter/test/testUntrackedFileWithinRepo.vim	/^let tmpfile = 'untrackedFileWithinRepo.tmp'$/;"	v
to_a	autoload/plug.vim	/^function! s:to_a(v)$/;"	f
to_key_val_list	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from .utils import to_key_val_list, default_headers, to_native_string$/;"	i
to_key_val_list	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def to_key_val_list(value):$/;"	f
to_native_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^from .utils import parse_dict_header, to_native_string$/;"	i
to_native_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from .utils import to_key_val_list, default_headers, to_native_string$/;"	i
to_native_string	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def to_native_string(string, encoding='ascii'):$/;"	f
to_s	autoload/plug.vim	/^function! s:to_s(v)$/;"	f
toggleIgnoreFilter	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom()$/;"	f
toggle_auto_highlight	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_auto_highlight() "{{{$/;"	f
toggle_auto_preview	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_auto_preview() "{{{$/;"	f
toggle_mark	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_mark(map) "{{{$/;"	f
toggle_mark_all_candidates	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_mark_all_candidates() "{{{$/;"	f
toggle_mark_candidates	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_mark_candidates(start, end) "{{{$/;"	f
toggle_transpose_window	plugged/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_transpose_window() "{{{$/;"	f
toggle_uber_mode	plugged/smartpairs.vim/spec/support/vim.rb	/^    def toggle_uber_mode$/;"	f	class:Support.Vim
tokenConstructor	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    tokenConstructor = Generic.Emph$/;"	v	class:KokaLexer
tokenConstructor	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    tokenConstructor = Generic.Emph$/;"	v	class:KokaLexer
tokenType	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    tokenType = Name.Attribute$/;"	v	class:KokaLexer
tokenType	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    tokenType = Name.Attribute$/;"	v	class:KokaLexer
tokenTypeDef	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    tokenTypeDef = Name.Class$/;"	v	class:KokaLexer
tokenTypeDef	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    tokenTypeDef = Name.Class$/;"	v	class:KokaLexer
token_variants	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    token_variants = True$/;"	v	class:CSharpLexer
token_variants	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    token_variants = True$/;"	v	class:NemerleLexer
token_variants	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    token_variants = ['+i6t-not-inline', '+i6t-inline', '+i6t-use-option']$/;"	v	class:Inform7Lexer
token_variants	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    token_variants = True$/;"	v	class:CSharpLexer
token_variants	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    token_variants = True$/;"	v	class:NemerleLexer
token_variants	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    token_variants = ['+i6t-not-inline', '+i6t-inline', '+i6t-use-option']$/;"	v	class:Inform7Lexer
tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def tokenize(self, row):$/;"	m	class:RowTokenizer
tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def tokenize(self, string, token):$/;"	m	class:VariableTokenizer
tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def tokenize(self, value):$/;"	m	class:Tokenizer
tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def tokenize(self, value, index):$/;"	m	class:_Table
tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/robotframework.py	/^    def tokenize(self, value, token):$/;"	m	class:GherkinTokenizer
tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def tokenize(self, row):$/;"	m	class:RowTokenizer
tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def tokenize(self, string, token):$/;"	m	class:VariableTokenizer
tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def tokenize(self, value):$/;"	m	class:Tokenizer
tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def tokenize(self, value, index):$/;"	m	class:_Table
tokenize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/robotframework.py	/^    def tokenize(self, value, token):$/;"	m	class:GherkinTokenizer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^    tokens = []$/;"	v	class:TokenParser
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^    tokens = {}$/;"	v	class:RegexLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    tokens = {$/;"	v	class:ActionScript3Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    tokens = {$/;"	v	class:ActionScriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    tokens = {$/;"	v	class:MxmlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    tokens = {$/;"	v	class:GAPLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    tokens = {$/;"	v	class:MathematicaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^    tokens = {$/;"	v	class:MuPADLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^    tokens = {$/;"	v	class:AmbientTalkLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/apl.py	/^    tokens = {$/;"	v	class:APLLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    tokens = _objdump_lexer_tokens(GasLexer)$/;"	v	class:ObjdumpLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    tokens = _objdump_lexer_tokens(NasmLexer)$/;"	v	class:NasmObjdumpLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    tokens = {$/;"	v	class:Ca65Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    tokens = {$/;"	v	class:GasLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    tokens = {$/;"	v	class:LlvmLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    tokens = {$/;"	v	class:NasmLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^    tokens = {$/;"	v	class:AutoItLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/automation.py	/^    tokens = {$/;"	v	class:AutohotkeyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    tokens = {$/;"	v	class:BlitzBasicLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    tokens = {$/;"	v	class:BlitzMaxLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    tokens = {$/;"	v	class:CbmBasicV2Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    tokens = {$/;"	v	class:MonkeyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^    tokens = {$/;"	v	class:QBasicLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    tokens = {$/;"	v	class:ABAPLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    tokens = {$/;"	v	class:CobolFreeformatLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    tokens = {$/;"	v	class:CobolLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    tokens = {$/;"	v	class:GoodDataCLLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    tokens = {$/;"	v	class:MaqlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    tokens = {$/;"	v	class:OpenEdgeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    tokens = {$/;"	v	class:CFamilyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    tokens = {$/;"	v	class:CppLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:ClayLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:ECLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:MqlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:NesCLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:PikeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:SwigLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:ValaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/chapel.py	/^    tokens = {$/;"	v	class:ChapelLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:ApacheConfLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:Cfengine3Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:DockerLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:IniLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:KconfigLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:LighttpdConfLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:NginxConfLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:PropertiesLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:RegeditLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:SquidConfLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^    tokens = {$/;"	v	class:PyPyLogLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/console.py	/^    tokens = {$/;"	v	class:VCTreeStatusLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    tokens = {$/;"	v	class:CssLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    tokens = {$/;"	v	class:SassLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    tokens = {$/;"	v	class:ScssLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    tokens = {$/;"	v	class:CrocLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^    tokens = {$/;"	v	class:DLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dalvik.py	/^    tokens = {$/;"	v	class:SmaliLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    tokens = {$/;"	v	class:JsonLdLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    tokens = {$/;"	v	class:JsonLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/data.py	/^    tokens = {$/;"	v	class:YamlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^    tokens = {$/;"	v	class:DarcsPatchLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/diff.py	/^    tokens = {$/;"	v	class:DiffLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    tokens = {$/;"	v	class:BooLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    tokens = {$/;"	v	class:FSharpLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    tokens = {$/;"	v	class:GenericAspxLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    tokens = {$/;"	v	class:VbNetLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    tokens = {}$/;"	v	class:CSharpLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    tokens = {}$/;"	v	class:NemerleLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:AlloyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:BroLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:MscgenLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:PanLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:ProtoBufLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:PuppetLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:RslLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:VGLLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    tokens = {$/;"	v	class:DylanLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dylan.py	/^    tokens = {$/;"	v	class:DylanLidLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^    tokens = {$/;"	v	class:ECLLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/eiffel.py	/^    tokens = {$/;"	v	class:EiffelLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    tokens = {$/;"	v	class:ElixirLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    tokens = {$/;"	v	class:ErlangLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    tokens = {$/;"	v	class:BefungeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    tokens = {$/;"	v	class:BrainfuckLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/esoteric.py	/^    tokens = {$/;"	v	class:RedcodeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^    tokens = {$/;"	v	class:FactorLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    tokens = {$/;"	v	class:FantomLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    tokens = {$/;"	v	class:FelixLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^    tokens = {$/;"	v	class:FortranLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/foxpro.py	/^    tokens = {$/;"	v	class:FoxProLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^    tokens = {$/;"	v	class:GoLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^    tokens = {$/;"	v	class:CypherLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    tokens = {$/;"	v	class:AsymptoteLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    tokens = {$/;"	v	class:GLShaderLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    tokens = {$/;"	v	class:GnuplotLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    tokens = {$/;"	v	class:PostScriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    tokens = {$/;"	v	class:PovrayLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    tokens = {$/;"	v	class:AgdaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    tokens = {$/;"	v	class:CryptolLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    tokens = {$/;"	v	class:HaskellLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    tokens = {$/;"	v	class:IdrisLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    tokens = {$/;"	v	class:KokaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    tokens = {$/;"	v	class:HaxeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    tokens = {$/;"	v	class:HxmlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    tokens = {$/;"	v	class:SystemVerilogLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    tokens = {$/;"	v	class:VerilogLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^    tokens = {$/;"	v	class:VhdlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    tokens = {$/;"	v	class:DtdLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    tokens = {$/;"	v	class:HamlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    tokens = {$/;"	v	class:HtmlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    tokens = {$/;"	v	class:JadeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    tokens = {$/;"	v	class:ScamlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    tokens = {$/;"	v	class:XmlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/idl.py	/^    tokens = {$/;"	v	class:IDLLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^    tokens = {$/;"	v	class:IgorLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/inferno.py	/^    tokens = {$/;"	v	class:LimboLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    tokens = {$/;"	v	class:DebianControlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    tokens = {$/;"	v	class:NSISLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    tokens = {$/;"	v	class:RPMSpecLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^    tokens = {$/;"	v	class:SourcesListLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    tokens = {$/;"	v	class:Inform6Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    tokens = {$/;"	v	class:Tads3Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    tokens = {}$/;"	v	class:Inform7Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/iolang.py	/^    tokens = {$/;"	v	class:IoLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:CoffeeScriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:DartLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:JavascriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:KalLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:LassoLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:LiveScriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:MaskLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:ObjectiveJLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:TypeScriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/julia.py	/^    tokens = {$/;"	v	class:JuliaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:CeylonLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:ClojureLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:GoloLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:GosuLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:GroovyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:IokeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:JasminLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:JavaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:KotlinLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:PigLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:ScalaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:TeaLangLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:XtendLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    tokens = {$/;"	v	class:CommonLispLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    tokens = {$/;"	v	class:HyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    tokens = {$/;"	v	class:NewLispLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    tokens = {$/;"	v	class:RacketLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    tokens = {$/;"	v	class:SchemeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    tokens = {$/;"	v	class:BaseMakefileLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    tokens = {$/;"	v	class:CMakeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:BBCodeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:GroffLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:MoinWikiLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:MozPreprocHashLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:MozPreprocPercentLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:RstLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:TexLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    tokens = {$/;"	v	class:MatlabLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    tokens = {$/;"	v	class:OctaveLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^    tokens = {$/;"	v	class:ScilabLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    tokens = {$/;"	v	class:OcamlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    tokens = {$/;"	v	class:OpaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    tokens = {$/;"	v	class:SMLLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    tokens = {$/;"	v	class:BugsLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    tokens = {$/;"	v	class:JagsLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    tokens = {$/;"	v	class:ModelicaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^    tokens = {$/;"	v	class:StanLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    tokens = {$/;"	v	class:NimrodLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nit.py	/^    tokens = {$/;"	v	class:NitLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nix.py	/^    tokens = {$/;"	v	class:NixLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^        tokens = {$/;"	v	class:objective.GeneratedObjectiveCVariant
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    tokens = {$/;"	v	class:LogosLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    tokens = {$/;"	v	class:SwiftLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ooc.py	/^    tokens = {$/;"	v	class:OocLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    tokens = {$/;"	v	class:AntlrLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    tokens = {$/;"	v	class:EbnfLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    tokens = {$/;"	v	class:RagelEmbeddedLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    tokens = {$/;"	v	class:RagelLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    tokens = {$/;"	v	class:TreetopBaseLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    tokens = {$/;"	v	class:AdaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    tokens = {$/;"	v	class:Modula2Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    tokens = {$/;"	v	class:PawnLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pawn.py	/^    tokens = {$/;"	v	class:SourcePawnLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    tokens = {$/;"	v	class:Perl6Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    tokens = {$/;"	v	class:PerlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    tokens = {$/;"	v	class:PhpLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    tokens = {$/;"	v	class:ZephirLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    tokens = {$/;"	v	class:LogtalkLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/prolog.py	/^    tokens = {$/;"	v	class:PrologLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    tokens = PythonLexer.tokens.copy()$/;"	v	class:Python3Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    tokens = {$/;"	v	class:CythonLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    tokens = {$/;"	v	class:DgLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    tokens = {$/;"	v	class:Python3TracebackLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    tokens = {$/;"	v	class:PythonLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    tokens = {$/;"	v	class:PythonTracebackLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    tokens = {$/;"	v	class:RdLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^    tokens = {$/;"	v	class:SLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rdf.py	/^    tokens = {$/;"	v	class:SparqlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    tokens = {$/;"	v	class:RebolLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    tokens = {$/;"	v	class:RedLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^    tokens = {$/;"	v	class:ResourceLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    tokens = {$/;"	v	class:FancyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    tokens = {$/;"	v	class:RubyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^    tokens = {$/;"	v	class:RustLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:AppleScriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:ChaiscriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:HybrisLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:LSLLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:LuaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:MOOCodeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:MoonScriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:RexxLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    tokens = {$/;"	v	class:BashLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    tokens = {$/;"	v	class:BatchLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    tokens = {$/;"	v	class:PowerShellLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    tokens = {$/;"	v	class:TcshLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^    tokens = {$/;"	v	class:NewspeakLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/smalltalk.py	/^    tokens = {$/;"	v	class:SmalltalkLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/snobol.py	/^    tokens = {$/;"	v	class:SnobolLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    tokens = dict((k, l[:]) for (k, l) in iteritems(PostgresLexer.tokens))$/;"	v	class:PlPgsqlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    tokens = dict((k, l[:]) for (k, l) in iteritems(PostgresLexer.tokens))$/;"	v	class:PsqlRegexLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    tokens = {$/;"	v	class:MySqlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    tokens = {$/;"	v	class:PostgresLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    tokens = {$/;"	v	class:RqlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^    tokens = {$/;"	v	class:SqlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^    tokens = {$/;"	v	class:TclLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:CheetahLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:ColdfusionLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:ColdfusionMarkupLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:DjangoLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:EvoqueLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:GenshiMarkupLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:GenshiTextLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:HandlebarsLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:JspRootLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:LiquidLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:MakoLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:MasonLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:MyghtyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:SmartyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:TeaTemplateRootLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:TwigLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:VelocityLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/testing.py	/^    tokens = {$/;"	v	class:GherkinLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    tokens = {$/;"	v	class:AwkLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^    tokens = {$/;"	v	class:VimLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    tokens = {$/;"	v	class:GettextLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    tokens = {$/;"	v	class:HttpLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    tokens = {$/;"	v	class:IrcLogsLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textfmts.py	/^    tokens = {$/;"	v	class:TodotxtLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    tokens = {$/;"	v	class:CoqLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    tokens = {$/;"	v	class:IsabelleLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    tokens = {$/;"	v	class:LeanLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^    tokens = {$/;"	v	class:UrbiscriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    tokens = {$/;"	v	class:CirruLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    tokens = {$/;"	v	class:DuelLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    tokens = {$/;"	v	class:QmlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    tokens = {$/;"	v	class:SlimLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    tokens = {$/;"	v	class:XQueryLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^    tokens = {}$/;"	v	class:RegexLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    tokens = {$/;"	v	class:ActionScript3Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    tokens = {$/;"	v	class:ActionScriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    tokens = {$/;"	v	class:MxmlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    tokens = {$/;"	v	class:GAPLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    tokens = {$/;"	v	class:MathematicaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^    tokens = {$/;"	v	class:MuPADLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^    tokens = {$/;"	v	class:AmbientTalkLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/apl.py	/^    tokens = {$/;"	v	class:APLLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    tokens = _objdump_lexer_tokens(GasLexer)$/;"	v	class:ObjdumpLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    tokens = _objdump_lexer_tokens(NasmLexer)$/;"	v	class:NasmObjdumpLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    tokens = {$/;"	v	class:Ca65Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    tokens = {$/;"	v	class:GasLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    tokens = {$/;"	v	class:LlvmLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    tokens = {$/;"	v	class:NasmLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^    tokens = {$/;"	v	class:AutoItLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/automation.py	/^    tokens = {$/;"	v	class:AutohotkeyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    tokens = {$/;"	v	class:BlitzBasicLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    tokens = {$/;"	v	class:BlitzMaxLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    tokens = {$/;"	v	class:CbmBasicV2Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    tokens = {$/;"	v	class:MonkeyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^    tokens = {$/;"	v	class:QBasicLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    tokens = {$/;"	v	class:ABAPLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    tokens = {$/;"	v	class:CobolFreeformatLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    tokens = {$/;"	v	class:CobolLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    tokens = {$/;"	v	class:GoodDataCLLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    tokens = {$/;"	v	class:MaqlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    tokens = {$/;"	v	class:OpenEdgeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    tokens = {$/;"	v	class:CFamilyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    tokens = {$/;"	v	class:CppLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:ClayLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:ECLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:MqlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:NesCLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:PikeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:SwigLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:ValaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/chapel.py	/^    tokens = {$/;"	v	class:ChapelLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:ApacheConfLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:Cfengine3Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:DockerLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:IniLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:KconfigLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:LighttpdConfLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:NginxConfLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:PropertiesLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:RegeditLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:SquidConfLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^    tokens = {$/;"	v	class:PyPyLogLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/console.py	/^    tokens = {$/;"	v	class:VCTreeStatusLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    tokens = {$/;"	v	class:CssLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    tokens = {$/;"	v	class:SassLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    tokens = {$/;"	v	class:ScssLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    tokens = {$/;"	v	class:CrocLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^    tokens = {$/;"	v	class:DLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dalvik.py	/^    tokens = {$/;"	v	class:SmaliLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    tokens = {$/;"	v	class:JsonLdLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    tokens = {$/;"	v	class:JsonLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/data.py	/^    tokens = {$/;"	v	class:YamlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^    tokens = {$/;"	v	class:DarcsPatchLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/diff.py	/^    tokens = {$/;"	v	class:DiffLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    tokens = {$/;"	v	class:BooLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    tokens = {$/;"	v	class:FSharpLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    tokens = {$/;"	v	class:GenericAspxLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    tokens = {$/;"	v	class:VbNetLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    tokens = {}$/;"	v	class:CSharpLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    tokens = {}$/;"	v	class:NemerleLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:AlloyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:BroLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:MscgenLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:PanLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:ProtoBufLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:PuppetLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:RslLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:VGLLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    tokens = {$/;"	v	class:DylanLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dylan.py	/^    tokens = {$/;"	v	class:DylanLidLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^    tokens = {$/;"	v	class:ECLLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/eiffel.py	/^    tokens = {$/;"	v	class:EiffelLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    tokens = {$/;"	v	class:ElixirLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    tokens = {$/;"	v	class:ErlangLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    tokens = {$/;"	v	class:BefungeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    tokens = {$/;"	v	class:BrainfuckLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/esoteric.py	/^    tokens = {$/;"	v	class:RedcodeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^    tokens = {$/;"	v	class:FactorLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    tokens = {$/;"	v	class:FantomLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    tokens = {$/;"	v	class:FelixLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^    tokens = {$/;"	v	class:FortranLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/foxpro.py	/^    tokens = {$/;"	v	class:FoxProLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^    tokens = {$/;"	v	class:GoLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^    tokens = {$/;"	v	class:CypherLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    tokens = {$/;"	v	class:AsymptoteLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    tokens = {$/;"	v	class:GLShaderLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    tokens = {$/;"	v	class:GnuplotLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    tokens = {$/;"	v	class:PostScriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    tokens = {$/;"	v	class:PovrayLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    tokens = {$/;"	v	class:AgdaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    tokens = {$/;"	v	class:CryptolLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    tokens = {$/;"	v	class:HaskellLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    tokens = {$/;"	v	class:IdrisLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    tokens = {$/;"	v	class:KokaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    tokens = {$/;"	v	class:HaxeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    tokens = {$/;"	v	class:HxmlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    tokens = {$/;"	v	class:SystemVerilogLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    tokens = {$/;"	v	class:VerilogLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^    tokens = {$/;"	v	class:VhdlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    tokens = {$/;"	v	class:DtdLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    tokens = {$/;"	v	class:HamlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    tokens = {$/;"	v	class:HtmlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    tokens = {$/;"	v	class:JadeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    tokens = {$/;"	v	class:ScamlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    tokens = {$/;"	v	class:XmlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/idl.py	/^    tokens = {$/;"	v	class:IDLLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^    tokens = {$/;"	v	class:IgorLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/inferno.py	/^    tokens = {$/;"	v	class:LimboLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    tokens = {$/;"	v	class:DebianControlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    tokens = {$/;"	v	class:NSISLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    tokens = {$/;"	v	class:RPMSpecLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^    tokens = {$/;"	v	class:SourcesListLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    tokens = {$/;"	v	class:Inform6Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    tokens = {$/;"	v	class:Tads3Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    tokens = {}$/;"	v	class:Inform7Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/iolang.py	/^    tokens = {$/;"	v	class:IoLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:CoffeeScriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:DartLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:JavascriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:KalLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:LassoLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:LiveScriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:MaskLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:ObjectiveJLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:TypeScriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/julia.py	/^    tokens = {$/;"	v	class:JuliaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:CeylonLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:ClojureLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:GoloLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:GosuLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:GroovyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:IokeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:JasminLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:JavaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:KotlinLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:PigLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:ScalaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:TeaLangLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:XtendLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    tokens = {$/;"	v	class:CommonLispLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    tokens = {$/;"	v	class:HyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    tokens = {$/;"	v	class:NewLispLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    tokens = {$/;"	v	class:RacketLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    tokens = {$/;"	v	class:SchemeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    tokens = {$/;"	v	class:BaseMakefileLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    tokens = {$/;"	v	class:CMakeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:BBCodeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:GroffLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:MoinWikiLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:MozPreprocHashLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:MozPreprocPercentLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:RstLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:TexLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    tokens = {$/;"	v	class:MatlabLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    tokens = {$/;"	v	class:OctaveLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^    tokens = {$/;"	v	class:ScilabLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    tokens = {$/;"	v	class:OcamlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    tokens = {$/;"	v	class:OpaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    tokens = {$/;"	v	class:SMLLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    tokens = {$/;"	v	class:BugsLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    tokens = {$/;"	v	class:JagsLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    tokens = {$/;"	v	class:ModelicaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^    tokens = {$/;"	v	class:StanLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    tokens = {$/;"	v	class:NimrodLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nit.py	/^    tokens = {$/;"	v	class:NitLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nix.py	/^    tokens = {$/;"	v	class:NixLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^        tokens = {$/;"	v	class:objective.GeneratedObjectiveCVariant
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    tokens = {$/;"	v	class:LogosLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    tokens = {$/;"	v	class:SwiftLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ooc.py	/^    tokens = {$/;"	v	class:OocLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    tokens = {$/;"	v	class:AntlrLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    tokens = {$/;"	v	class:EbnfLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    tokens = {$/;"	v	class:RagelEmbeddedLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    tokens = {$/;"	v	class:RagelLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    tokens = {$/;"	v	class:TreetopBaseLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    tokens = {$/;"	v	class:AdaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    tokens = {$/;"	v	class:Modula2Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    tokens = {$/;"	v	class:PawnLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pawn.py	/^    tokens = {$/;"	v	class:SourcePawnLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    tokens = {$/;"	v	class:Perl6Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    tokens = {$/;"	v	class:PerlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    tokens = {$/;"	v	class:PhpLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    tokens = {$/;"	v	class:ZephirLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    tokens = {$/;"	v	class:LogtalkLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/prolog.py	/^    tokens = {$/;"	v	class:PrologLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    tokens = PythonLexer.tokens.copy()$/;"	v	class:Python3Lexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    tokens = {$/;"	v	class:CythonLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    tokens = {$/;"	v	class:DgLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    tokens = {$/;"	v	class:Python3TracebackLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    tokens = {$/;"	v	class:PythonLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    tokens = {$/;"	v	class:PythonTracebackLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    tokens = {$/;"	v	class:RdLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^    tokens = {$/;"	v	class:SLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rdf.py	/^    tokens = {$/;"	v	class:SparqlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    tokens = {$/;"	v	class:RebolLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    tokens = {$/;"	v	class:RedLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^    tokens = {$/;"	v	class:ResourceLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    tokens = {$/;"	v	class:FancyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    tokens = {$/;"	v	class:RubyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^    tokens = {$/;"	v	class:RustLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:AppleScriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:ChaiscriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:HybrisLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:LSLLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:LuaLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:MOOCodeLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:MoonScriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:RexxLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    tokens = {$/;"	v	class:BashLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    tokens = {$/;"	v	class:BatchLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    tokens = {$/;"	v	class:PowerShellLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    tokens = {$/;"	v	class:TcshLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^    tokens = {$/;"	v	class:NewspeakLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/smalltalk.py	/^    tokens = {$/;"	v	class:SmalltalkLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/snobol.py	/^    tokens = {$/;"	v	class:SnobolLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    tokens = dict((k, l[:]) for (k, l) in iteritems(PostgresLexer.tokens))$/;"	v	class:PlPgsqlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    tokens = dict((k, l[:]) for (k, l) in iteritems(PostgresLexer.tokens))$/;"	v	class:PsqlRegexLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    tokens = {$/;"	v	class:MySqlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    tokens = {$/;"	v	class:PostgresLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    tokens = {$/;"	v	class:RqlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^    tokens = {$/;"	v	class:SqlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^    tokens = {$/;"	v	class:TclLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:CheetahLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:ColdfusionLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:ColdfusionMarkupLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:DjangoLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:EvoqueLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:GenshiMarkupLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:GenshiTextLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:HandlebarsLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:JspRootLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:LiquidLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:MakoLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:MasonLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:MyghtyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:SmartyLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:TeaTemplateRootLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:TwigLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:VelocityLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/testing.py	/^    tokens = {$/;"	v	class:GherkinLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    tokens = {$/;"	v	class:AwkLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^    tokens = {$/;"	v	class:VimLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    tokens = {$/;"	v	class:GettextLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    tokens = {$/;"	v	class:HttpLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    tokens = {$/;"	v	class:IrcLogsLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textfmts.py	/^    tokens = {$/;"	v	class:TodotxtLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    tokens = {$/;"	v	class:CoqLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    tokens = {$/;"	v	class:IsabelleLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    tokens = {$/;"	v	class:LeanLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^    tokens = {$/;"	v	class:UrbiscriptLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    tokens = {$/;"	v	class:CirruLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    tokens = {$/;"	v	class:DuelLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    tokens = {$/;"	v	class:QmlLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    tokens = {$/;"	v	class:SlimLexer
tokens	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    tokens = {$/;"	v	class:XQueryLexer
top	plugged/vim-wakatime/plugin/packages/wakatime/compat.py	/^                raise ValueError("attempted relative import beyond top-level "$/;"	i
top	plugged/vimproc.vim/autoload/vimstack.c	/^    char *top;   \/* stack top *\/$/;"	m	struct:vp_stack_t	file:
traceback	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^import traceback$/;"	i
traceback	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^import traceback$/;"	i
traceback	plugged/vim-wakatime/plugin/packages/wakatime/offlinequeue.py	/^import traceback$/;"	i
traceback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/cmdline.py	/^        import traceback$/;"	i
traceback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/cmdline.py	/^        import traceback$/;"	i
traceback	plugged/vim-wakatime/plugin/packages/wakatime/session_cache.py	/^import traceback$/;"	i
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    transition_time = ($/;"	v	class:NoumeaNoMoreDSTTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    transition_time = datetime(1912, 1, 12, 12, 54, 12, tzinfo=UTC)$/;"	v	class:NoumeaHistoryStartTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    transition_time = datetime(1912, 10, 1, 9, 58, 16, tzinfo=UTC)$/;"	v	class:TahitiTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    transition_time = datetime(1915, 8, 4, 22, 36, 0, tzinfo=UTC)$/;"	v	class:WarsawWMTEndTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    transition_time = datetime(1916, 12, 31, 22, 36, 00, tzinfo=UTC)$/;"	v	class:VilniusWMTEndTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    transition_time = datetime(1916, 5, 21, 2, 00, 00, tzinfo=UTC)$/;"	v	class:LondonHistoryStartTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    transition_time = datetime(1941, 6, 23, 21, 00, 00, tzinfo=UTC)$/;"	v	class:VilniusCESTStartTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    transition_time = datetime(1945, 8, 14, 23, 0, 0, tzinfo=UTC)$/;"	v	class:USEasternEPTStartTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    transition_time = datetime(1945, 9, 30, 6, 0, 0, tzinfo=UTC)$/;"	v	class:USEasternEPTEndTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    transition_time = datetime(1997, 3, 1, 15, 00, 00, tzinfo=UTC)$/;"	v	class:NoumeaDSTEndTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    transition_time = datetime(2002, 10, 27, 6, 0, 0, tzinfo=UTC)$/;"	v	class:USEasternDSTEndTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    transition_time = datetime(2002, 4, 7, 7, 0, 0, tzinfo=UTC)$/;"	v	class:USEasternDSTStartTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    transition_time = datetime(2011, 12, 30, 10, 0, 0, tzinfo=UTC)$/;"	v	class:SamoaInternationalDateLineChange
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    transition_time = datetime(2037, 10, 25, 1, 0, 0, tzinfo=UTC)$/;"	v	class:LondonHistoryEndTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    transition_time = ($/;"	v	class:NoumeaNoMoreDSTTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    transition_time = datetime(1912, 1, 12, 12, 54, 12, tzinfo=UTC)$/;"	v	class:NoumeaHistoryStartTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    transition_time = datetime(1912, 10, 1, 9, 58, 16, tzinfo=UTC)$/;"	v	class:TahitiTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    transition_time = datetime(1915, 8, 4, 22, 36, 0, tzinfo=UTC)$/;"	v	class:WarsawWMTEndTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    transition_time = datetime(1916, 12, 31, 22, 36, 00, tzinfo=UTC)$/;"	v	class:VilniusWMTEndTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    transition_time = datetime(1916, 5, 21, 2, 00, 00, tzinfo=UTC)$/;"	v	class:LondonHistoryStartTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    transition_time = datetime(1941, 6, 23, 21, 00, 00, tzinfo=UTC)$/;"	v	class:VilniusCESTStartTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    transition_time = datetime(1945, 8, 14, 23, 0, 0, tzinfo=UTC)$/;"	v	class:USEasternEPTStartTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    transition_time = datetime(1945, 9, 30, 6, 0, 0, tzinfo=UTC)$/;"	v	class:USEasternEPTEndTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    transition_time = datetime(1997, 3, 1, 15, 00, 00, tzinfo=UTC)$/;"	v	class:NoumeaDSTEndTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    transition_time = datetime(2002, 10, 27, 6, 0, 0, tzinfo=UTC)$/;"	v	class:USEasternDSTEndTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    transition_time = datetime(2002, 4, 7, 7, 0, 0, tzinfo=UTC)$/;"	v	class:USEasternDSTStartTestCase
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    transition_time = datetime(2011, 12, 30, 10, 0, 0, tzinfo=UTC)$/;"	v	class:SamoaInternationalDateLineChange
transition_time	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    transition_time = datetime(2037, 10, 25, 1, 0, 0, tzinfo=UTC)$/;"	v	class:LondonHistoryEndTestCase
trim	autoload/plug.vim	/^function! s:trim(str)$/;"	f
trim	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:trim(str) abort$/;"	f
trim_bracket	plugged/vim-go/autoload/go/complete.vim	/^function! s:trim_bracket(val)$/;"	f
truncate	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate_skipping	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_smart	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:truncate_smart(str, max, footer_width, separator) abort$/;"	f
tuple_as_array	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    int tuple_as_array;$/;"	m	struct:_PyEncoderObject	file:
type	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    type = r'byte|[dq]?word'$/;"	v	class:NasmLexer
type	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    type = r'byte|[dq]?word'$/;"	v	class:NasmLexer
typeStartKeywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    typeStartKeywords = [$/;"	v	class:KokaLexer
typeStartKeywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    typeStartKeywords = [$/;"	v	class:KokaLexer
type_sort	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^    def type_sort(t):$/;"	f	function:guess_lexer_for_filename
type_sort	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^    def type_sort(t):$/;"	f	function:guess_lexer_for_filename
typeid	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haxe.py	/^    typeid = r'_*[A-Z]\\w*'$/;"	v	class:HaxeLexer
typeid	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haxe.py	/^    typeid = r'_*[A-Z]\\w*'$/;"	v	class:HaxeLexer
typeidentifier	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^    typeidentifier = identifier + '(?:\\.<\\w+>)?'$/;"	v	class:ActionScript3Lexer
typeidentifier	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^    typeidentifier = identifier + '(?:\\.<\\w+>)?'$/;"	v	class:ActionScript3Lexer
typekeywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^    typekeywords = [$/;"	v	class:KokaLexer
typekeywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^    typekeywords = [$/;"	v	class:KokaLexer
types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/__init__.py	/^import types$/;"	i
types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/__init__.py	/^import types$/;"	i
types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_mql_builtins.py	/^types = ($/;"	v
types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^    types = (r'(?i)(^|(?<=[^0-9a-z_\\-]))(CHARACTER|CHAR|CHARA|CHARAC|CHARACT|CHARACTE|'$/;"	v	class:OpenEdgeLexer
types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^    types = ($/;"	v	class:IgorLexer
types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    types = [$/;"	v	class:NimrodLexer
types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/__init__.py	/^import types$/;"	i
types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/__init__.py	/^import types$/;"	i
types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_mql_builtins.py	/^types = ($/;"	v
types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^    types = (r'(?i)(^|(?<=[^0-9a-z_\\-]))(CHARACTER|CHAR|CHARA|CHARAC|CHARACT|CHARACTE|'$/;"	v	class:OpenEdgeLexer
types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^    types = ($/;"	v	class:IgorLexer
types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    types = [$/;"	v	class:NimrodLexer
types	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^import types$/;"	i
tz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tz = None  # override$/;"	v	class:BaseTzInfoTestCase
tz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tz = pytz.timezone('Australia\/Melbourne')$/;"	v	class:DstTzInfoTestCase
tz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tz = pytz.timezone('Etc\/UTC')$/;"	v	class:LegacyUTCTestCase
tz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tz = pytz.timezone('GMT')$/;"	v	class:StaticTzInfoTestCase
tz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tz = pytz.utc$/;"	v	class:OptimizedUTCTestCase
tz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^    tz = build_tzinfo('Australia\/Melbourne',$/;"	v
tz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^    tz = build_tzinfo('US\/Eastern',$/;"	v
tz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tz = None  # override$/;"	v	class:BaseTzInfoTestCase
tz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tz = pytz.timezone('Australia\/Melbourne')$/;"	v	class:DstTzInfoTestCase
tz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tz = pytz.timezone('Etc\/UTC')$/;"	v	class:LegacyUTCTestCase
tz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tz = pytz.timezone('GMT')$/;"	v	class:StaticTzInfoTestCase
tz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tz = pytz.utc$/;"	v	class:OptimizedUTCTestCase
tz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^    tz = build_tzinfo('Australia\/Melbourne',$/;"	v
tz	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^    tz = build_tzinfo('US\/Eastern',$/;"	v
tz_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tz_class = DstTzInfo$/;"	v	class:DstTzInfoTestCase
tz_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tz_class = None  # override$/;"	v	class:BaseTzInfoTestCase
tz_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tz_class = StaticTzInfo$/;"	v	class:LegacyUTCTestCase
tz_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tz_class = StaticTzInfo$/;"	v	class:StaticTzInfoTestCase
tz_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tz_class = tz.__class__$/;"	v	class:OptimizedUTCTestCase
tz_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tz_class = DstTzInfo$/;"	v	class:DstTzInfoTestCase
tz_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tz_class = None  # override$/;"	v	class:BaseTzInfoTestCase
tz_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tz_class = StaticTzInfo$/;"	v	class:LegacyUTCTestCase
tz_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tz_class = StaticTzInfo$/;"	v	class:StaticTzInfoTestCase
tz_class	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tz_class = tz.__class__$/;"	v	class:OptimizedUTCTestCase
tz_names	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/win32.py	/^from tzlocal.windows_tz import tz_names$/;"	i
tz_names	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/windows_tz.py	/^tz_names = {'AUS Central Standard Time': 'Australia\/Darwin',$/;"	v
tz_names	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/win32.py	/^from tzlocal.windows_tz import tz_names$/;"	i
tz_names	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/windows_tz.py	/^tz_names = {'AUS Central Standard Time': 'Australia\/Darwin',$/;"	v
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^from datetime import tzinfo, timedelta, datetime$/;"	i
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('Europe\/London')$/;"	v	class:LondonHistoryEndTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('Europe\/London')$/;"	v	class:LondonHistoryStartTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('Europe\/Vilnius')$/;"	v	class:VilniusCESTStartTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('Europe\/Vilnius')$/;"	v	class:VilniusWMTEndTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('Europe\/Warsaw')$/;"	v	class:WarsawWMTEndTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('Pacific\/Apia')$/;"	v	class:SamoaInternationalDateLineChange
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('Pacific\/Noumea')$/;"	v	class:NoumeaDSTEndTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('Pacific\/Noumea')$/;"	v	class:NoumeaHistoryStartTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('Pacific\/Tahiti')$/;"	v	class:TahitiTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('US\/Eastern')$/;"	v	class:USEasternDSTEndTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('US\/Eastern')$/;"	v	class:USEasternDSTStartTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tzinfo = reference.Eastern$/;"	v	class:ReferenceUSEasternDSTEndTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    tzinfo = reference.Eastern$/;"	v	class:ReferenceUSEasternDSTStartTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^from datetime import datetime, time, timedelta, tzinfo$/;"	i
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^from datetime import datetime, timedelta, tzinfo$/;"	i
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^from datetime import tzinfo, timedelta, datetime$/;"	i
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('Europe\/London')$/;"	v	class:LondonHistoryEndTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('Europe\/London')$/;"	v	class:LondonHistoryStartTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('Europe\/Vilnius')$/;"	v	class:VilniusCESTStartTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('Europe\/Vilnius')$/;"	v	class:VilniusWMTEndTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('Europe\/Warsaw')$/;"	v	class:WarsawWMTEndTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('Pacific\/Apia')$/;"	v	class:SamoaInternationalDateLineChange
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('Pacific\/Noumea')$/;"	v	class:NoumeaDSTEndTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('Pacific\/Noumea')$/;"	v	class:NoumeaHistoryStartTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('Pacific\/Tahiti')$/;"	v	class:TahitiTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('US\/Eastern')$/;"	v	class:USEasternDSTEndTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tzinfo = pytz.timezone('US\/Eastern')$/;"	v	class:USEasternDSTStartTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tzinfo = reference.Eastern$/;"	v	class:ReferenceUSEasternDSTEndTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^    tzinfo = reference.Eastern$/;"	v	class:ReferenceUSEasternDSTStartTestCase
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^from datetime import datetime, time, timedelta, tzinfo$/;"	i
tzinfo	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^from datetime import datetime, timedelta, tzinfo$/;"	i
tzlocal	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^    from .packages import tzlocal  # pragma: nocover$/;"	i
tzlocal	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^    from .packages import tzlocal3 as tzlocal  # pragma: nocover$/;"	i
tzlocal	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/tests.py	/^    import tzlocal.win32$/;"	i
tzlocal	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/tests.py	/^import tzlocal.unix$/;"	i
tzlocal	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/tests.py	/^    import tzlocal.win32$/;"	i
tzlocal	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/tests.py	/^import tzlocal.unix$/;"	i
tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def tzname(self, dt):$/;"	m	class:UTC
tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def tzname(self, dt):$/;"	m	class:_FixedOffset
tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^    def tzname(self, dt):$/;"	m	class:FixedOffset
tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^    def tzname(self, dt):$/;"	m	class:LocalTimezone
tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^    def tzname(self, dt):$/;"	m	class:USTimeZone
tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    def tzname(self, dt, is_dst=None):$/;"	m	class:DstTzInfo
tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    def tzname(self, dt, is_dst=None):$/;"	m	class:StaticTzInfo
tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def tzname(self, dt):$/;"	m	class:UTC
tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def tzname(self, dt):$/;"	m	class:_FixedOffset
tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^    def tzname(self, dt):$/;"	m	class:FixedOffset
tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^    def tzname(self, dt):$/;"	m	class:LocalTimezone
tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^    def tzname(self, dt):$/;"	m	class:USTimeZone
tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    def tzname(self, dt, is_dst=None):$/;"	m	class:DstTzInfo
tzname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    def tzname(self, dt, is_dst=None):$/;"	m	class:StaticTzInfo
u	plugged/repeat.vim/autoload/repeat.vim	/^nnoremap <silent> u     :<C-U>call repeat#wrap('u',v:count)<CR>$/;"	m
u	plugged/vim-wakatime/plugin/packages/wakatime/compat.py	/^    def u(text):$/;"	f
u	plugged/vim-wakatime/plugin/packages/wakatime/languages/__init__.py	/^from ..compat import u, open, import_module$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/languages/c_cpp.py	/^from ..compat import u$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/languages/data.py	/^from ..compat import u$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/languages/dotnet.py	/^from ..compat import u$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/languages/jvm.py	/^from ..compat import u$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/languages/php.py	/^from ..compat import u$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/languages/python.py	/^from ..compat import u$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/languages/templates.py	/^from ..compat import u$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/logger.py	/^from .compat import u$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/main.py	/^from .compat import u, open, is_py3$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/offlinequeue.py	/^from .compat import u$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    def u(s):$/;"	f
u	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^    def u(s):$/;"	f	function:iteritems
u	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    def u(s):$/;"	f
u	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^from .compat import fromhex, b, u, text_type, binary_type, PY3, unichr$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^from .compat import u, unichr, binary_type, string_types, integer_types, PY3$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_errors.py	/^from simplejson.compat import u, b$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^from simplejson.compat import unichr, text_type, b, u, BytesIO$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/projects/git.py	/^from ..compat import u, open$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/projects/mercurial.py	/^from ..compat import u, open$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/projects/projectmap.py	/^from ..compat import u$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/projects/subversion.py	/^from ..compat import u, open$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/projects/wakatime_project_file.py	/^from ..compat import u, open$/;"	i
u	plugged/vim-wakatime/plugin/packages/wakatime/stats.py	/^from .compat import u, open$/;"	i
u_prefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^    u_prefix = ''$/;"	v
u_prefix	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^    u_prefix = ''$/;"	v
underscorize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nimrod.py	/^    def underscorize(words):$/;"	m	class:NimrodLexer
underscorize	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nimrod.py	/^    def underscorize(words):$/;"	m	class:NimrodLexer
unhexlify	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^from binascii import hexlify, unhexlify$/;"	i
uni	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^from pygments import unistring as uni$/;"	i
uni	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/haskell.py	/^from pygments import unistring as uni$/;"	i
uni	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^import pygments.unistring as uni$/;"	i
uni	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^from pygments import unistring as uni$/;"	i
uni	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^from pygments import unistring as uni$/;"	i
uni	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^from pygments import unistring as uni$/;"	i
uni	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/haskell.py	/^from pygments import unistring as uni$/;"	i
uni	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^import pygments.unistring as uni$/;"	i
uni	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^from pygments import unistring as uni$/;"	i
uni	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^from pygments import unistring as uni$/;"	i
uni_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^               '[' + uni.combine('Lu', 'Ll', 'Lt', 'Lm', 'Nl', 'Nd', 'Pc',$/;"	v	class:VbNetLexer
uni_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    uni_name = "[%s][%s]*" % (uni.xid_start, uni.xid_continue)$/;"	v	class:Python3Lexer
uni_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^               '[' + uni.combine('Lu', 'Ll', 'Lt', 'Lm', 'Nl', 'Nd', 'Pc',$/;"	v	class:VbNetLexer
uni_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    uni_name = "[%s][%s]*" % (uni.xid_start, uni.xid_continue)$/;"	v	class:Python3Lexer
unichr	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^    unichr = chr$/;"	v
unichr	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^    unichr = chr$/;"	v
unichr	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    def unichr(s):$/;"	f
unichr	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/compat.py	/^    unichr = unichr$/;"	v
unichr	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/decoder.py	/^from .compat import fromhex, b, u, text_type, binary_type, PY3, unichr$/;"	i
unichr	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/encoder.py	/^from .compat import u, unichr, binary_type, string_types, integer_types, PY3$/;"	i
unichr	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_unicode.py	/^from simplejson.compat import unichr, text_type, b, u, BytesIO$/;"	i
unicode	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    unicode = str$/;"	v
unicode	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^    unicode = str$/;"	v
unicode_delimiters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    unicode_delimiters = u'\\u2010\\u2011\\u2012\\u2013\\u2014\\u00a0'$/;"	v	class:RstLexer
unicode_delimiters	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    unicode_delimiters = u'\\u2010\\u2011\\u2012\\u2013\\u2014\\u00a0'$/;"	v	class:RstLexer
unicode_literals	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardetect.py	/^from __future__ import absolute_import, print_function, unicode_literals$/;"	i
unicodedata	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^    import unicodedata$/;"	i
unicodedata	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^    import unicodedata$/;"	i
unicodeoutput	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatter.py	/^    unicodeoutput = True$/;"	v	class:Formatter
unicodeoutput	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    unicodeoutput = False$/;"	v	class:ImageFormatter
unicodeoutput	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^    unicodeoutput = False$/;"	v	class:RawTokenFormatter
unicodeoutput	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatter.py	/^    unicodeoutput = True$/;"	v	class:Formatter
unicodeoutput	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    unicodeoutput = False$/;"	v	class:ImageFormatter
unicodeoutput	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^    unicodeoutput = False$/;"	v	class:RawTokenFormatter
unify_separator	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:unify_separator(path)$/;"	f
uniq	plugged/lightline.vim/autoload/lightline.vim	/^function! s:uniq(l) abort$/;"	f
uniq	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq_by	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
unirange	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^from pygments.util import unirange$/;"	i
unirange	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^def unirange(a, b):$/;"	f
unirange	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^from pygments.util import unirange$/;"	i
unirange	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^def unirange(a, b):$/;"	f
unite#action#_get_candidate_action_table	plugged/unite.vim/autoload/unite/action.vim	/^function! unite#action#_get_candidate_action_table(candidate, sources) "{{{$/;"	f
unite#action#do	plugged/unite.vim/autoload/unite/action.vim	/^function! unite#action#do(action_name, ...) "{{{$/;"	f
unite#action#do_candidates	plugged/unite.vim/autoload/unite/action.vim	/^function! unite#action#do_candidates(action_name, candidates, ...) "{{{$/;"	f
unite#action#get_action_table	plugged/unite.vim/autoload/unite/action.vim	/^function! unite#action#get_action_table(source_name, kind, self_func, ...) "{{{$/;"	f
unite#action#get_alias_table	plugged/unite.vim/autoload/unite/action.vim	/^function! unite#action#get_alias_table(source_name, kind, ...) "{{{$/;"	f
unite#action#get_default_action	plugged/unite.vim/autoload/unite/action.vim	/^function! unite#action#get_default_action(source_name, kind) "{{{$/;"	f
unite#action#take	plugged/unite.vim/autoload/unite/action.vim	/^function! unite#action#take(action_name, candidate, is_parent_action) "{{{$/;"	f
unite#add_previewed_buffer_list	plugged/unite.vim/autoload/unite.vim	/^function! unite#add_previewed_buffer_list(bufnr) "{{{$/;"	f
unite#add_source_message	plugged/unite.vim/autoload/unite.vim	/^function! unite#add_source_message(message, source_name) "{{{$/;"	f
unite#all_quit_session	plugged/unite.vim/autoload/unite.vim	/^function! unite#all_quit_session(...)  "{{{$/;"	f
unite#args_complete	plugged/unite.vim/autoload/unite.vim	/^function! unite#args_complete(sources, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#candidates#_gather_pos	plugged/unite.vim/autoload/unite/candidates.vim	/^function! unite#candidates#_gather_pos(offset) "{{{$/;"	f
unite#candidates#_group_post_filters	plugged/unite.vim/autoload/unite/candidates.vim	/^function! unite#candidates#_group_post_filters(candidates) "{{{$/;"	f
unite#candidates#_recache	plugged/unite.vim/autoload/unite/candidates.vim	/^function! unite#candidates#_recache(input, is_force) "{{{$/;"	f
unite#candidates#gather	plugged/unite.vim/autoload/unite/candidates.vim	/^function! unite#candidates#gather(...) "{{{$/;"	f
unite#clear_message	plugged/unite.vim/autoload/unite.vim	/^function! unite#clear_message() "{{{$/;"	f
unite#complete#args	plugged/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#args(sources, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete#buffer_name	plugged/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#buffer_name(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete#gather	plugged/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#gather(candidates, input) "{{{$/;"	f
unite#complete#gather_lua	plugged/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#gather_lua(candidates, input) "{{{$/;"	f
unite#complete#gather_vim	plugged/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#gather_vim(candidates, input) "{{{$/;"	f
unite#complete#source	plugged/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#source(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete#vimfiler	plugged/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#vimfiler(sources, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete_buffer_name	plugged/unite.vim/autoload/unite.vim	/^function! unite#complete_buffer_name(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete_source	plugged/unite.vim/autoload/unite.vim	/^function! unite#complete_source(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#custom#action	plugged/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#action(kind, name, action) "{{{$/;"	f
unite#custom#alias	plugged/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#alias(kind, name, action) "{{{$/;"	f
unite#custom#default_action	plugged/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#default_action(kind, default_action) "{{{$/;"	f
unite#custom#get	plugged/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#get() "{{{$/;"	f
unite#custom#get_profile	plugged/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#get_profile(profile_name, option_name) "{{{$/;"	f
unite#custom#profile	plugged/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#profile(profile_name, option_name, value) "{{{$/;"	f
unite#custom#source	plugged/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#source(source_name, option_name, value) "{{{$/;"	f
unite#custom#substitute	plugged/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#substitute(profile, pattern, subst, ...) "{{{$/;"	f
unite#custom_action	plugged/unite.vim/autoload/unite.vim	/^function! unite#custom_action(kind, name, action) "{{{$/;"	f
unite#custom_alias	plugged/unite.vim/autoload/unite.vim	/^function! unite#custom_alias(kind, name, action) "{{{$/;"	f
unite#custom_default_action	plugged/unite.vim/autoload/unite.vim	/^function! unite#custom_default_action(kind, default_action) "{{{$/;"	f
unite#custom_filters	plugged/unite.vim/autoload/unite.vim	/^function! unite#custom_filters(source_name, expr) "{{{$/;"	f
unite#custom_max_candidates	plugged/unite.vim/autoload/unite.vim	/^function! unite#custom_max_candidates(source_name, max) "{{{$/;"	f
unite#custom_source	plugged/unite.vim/autoload/unite.vim	/^function! unite#custom_source(source_name, option_name, value) "{{{$/;"	f
unite#define_filter	plugged/unite.vim/autoload/unite.vim	/^function! unite#define_filter(filter) "{{{$/;"	f
unite#define_kind	plugged/unite.vim/autoload/unite.vim	/^function! unite#define_kind(kind) "{{{$/;"	f
unite#define_source	plugged/unite.vim/autoload/unite.vim	/^function! unite#define_source(source) "{{{$/;"	f
unite#do_action	plugged/unite.vim/autoload/unite.vim	/^function! unite#do_action(action) "{{{$/;"	f
unite#dummy_completefunc	plugged/unite.vim/autoload/unite.vim	/^function! unite#dummy_completefunc(findstart, base) "{{{$/;"	f
unite#exrename#create_buffer	plugged/unite.vim/autoload/unite/exrename.vim	/^function! unite#exrename#create_buffer(candidates, ...) "{{{$/;"	f
unite#filters#converter_default#define	plugged/unite.vim/autoload/unite/filters/converter_default.vim	/^function! unite#filters#converter_default#define() "{{{$/;"	f
unite#filters#converter_default#get	plugged/unite.vim/autoload/unite/filters/converter_default.vim	/^function! unite#filters#converter_default#get() "{{{$/;"	f
unite#filters#converter_default#use	plugged/unite.vim/autoload/unite/filters/converter_default.vim	/^function! unite#filters#converter_default#use(converters) "{{{$/;"	f
unite#filters#converter_file_directory#define	plugged/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^function! unite#filters#converter_file_directory#define() "{{{$/;"	f
unite#filters#converter_full_path#define	plugged/unite.vim/autoload/unite/filters/converter_full_path.vim	/^function! unite#filters#converter_full_path#define() "{{{$/;"	f
unite#filters#converter_nothing#define	plugged/unite.vim/autoload/unite/filters/converter_nothing.vim	/^function! unite#filters#converter_nothing#define() "{{{$/;"	f
unite#filters#converter_relative_abbr#define	plugged/unite.vim/autoload/unite/filters/converter_relative_abbr.vim	/^function! unite#filters#converter_relative_abbr#define() "{{{$/;"	f
unite#filters#converter_relative_word#define	plugged/unite.vim/autoload/unite/filters/converter_relative_word.vim	/^function! unite#filters#converter_relative_word#define() "{{{$/;"	f
unite#filters#converter_relative_word#lua	plugged/unite.vim/autoload/unite/filters/converter_relative_word.vim	/^function! unite#filters#converter_relative_word#lua(candidates, cwd) "{{{$/;"	f
unite#filters#converter_smart_path#define	plugged/unite.vim/autoload/unite/filters/converter_smart_path.vim	/^function! unite#filters#converter_smart_path#define() "{{{$/;"	f
unite#filters#converter_tail#define	plugged/unite.vim/autoload/unite/filters/converter_tail.vim	/^function! unite#filters#converter_tail#define() "{{{$/;"	f
unite#filters#converter_tail_abbr#define	plugged/unite.vim/autoload/unite/filters/converter_tail_abbr.vim	/^function! unite#filters#converter_tail_abbr#define() "{{{$/;"	f
unite#filters#escape	plugged/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#escape(string) "{{{$/;"	f
unite#filters#filter_matcher	plugged/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#filter_matcher(list, expr, context) "{{{$/;"	f
unite#filters#filter_patterns	plugged/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#filter_patterns(candidates, patterns, whites) "{{{$/;"	f
unite#filters#fuzzy_escape	plugged/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#fuzzy_escape(string) "{{{$/;"	f
unite#filters#globs2lua_patterns	plugged/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#globs2lua_patterns(globs) "{{{$/;"	f
unite#filters#globs2patterns	plugged/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#globs2patterns(globs) "{{{$/;"	f
unite#filters#globs2vim_patterns	plugged/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#globs2vim_patterns(globs) "{{{$/;"	f
unite#filters#lua_filter_head	plugged/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#lua_filter_head(candidates, input) "{{{$/;"	f
unite#filters#lua_filter_patterns	plugged/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#lua_filter_patterns(candidates, patterns, whites) "{{{$/;"	f
unite#filters#lua_fuzzy_matcher	plugged/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#lua_fuzzy_matcher(candidates, context, ignorecase) "{{{$/;"	f
unite#filters#lua_matcher	plugged/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#lua_matcher(candidates, context, ignorecase) "{{{$/;"	f
unite#filters#matcher_context#define	plugged/unite.vim/autoload/unite/filters/matcher_context.vim	/^function! unite#filters#matcher_context#define() "{{{$/;"	f
unite#filters#matcher_default#define	plugged/unite.vim/autoload/unite/filters/matcher_default.vim	/^function! unite#filters#matcher_default#define() "{{{$/;"	f
unite#filters#matcher_default#get	plugged/unite.vim/autoload/unite/filters/matcher_default.vim	/^function! unite#filters#matcher_default#get() "{{{$/;"	f
unite#filters#matcher_default#use	plugged/unite.vim/autoload/unite/filters/matcher_default.vim	/^function! unite#filters#matcher_default#use(matchers) "{{{$/;"	f
unite#filters#matcher_fuzzy#define	plugged/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^function! unite#filters#matcher_fuzzy#define() "{{{$/;"	f
unite#filters#matcher_fuzzy#get_fuzzy_input	plugged/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^function! unite#filters#matcher_fuzzy#get_fuzzy_input(input) "{{{$/;"	f
unite#filters#matcher_glob#define	plugged/unite.vim/autoload/unite/filters/matcher_glob.vim	/^function! unite#filters#matcher_glob#define() "{{{$/;"	f
unite#filters#matcher_glob#glob_matcher	plugged/unite.vim/autoload/unite/filters/matcher_glob.vim	/^function! unite#filters#matcher_glob#glob_matcher(candidates, input, context) "{{{$/;"	f
unite#filters#matcher_hide_current_file#define	plugged/unite.vim/autoload/unite/filters/matcher_hide_current_file.vim	/^function! unite#filters#matcher_hide_current_file#define() "{{{$/;"	f
unite#filters#matcher_hide_hidden_files#define	plugged/unite.vim/autoload/unite/filters/matcher_hide_hidden_files.vim	/^function! unite#filters#matcher_hide_hidden_files#define() "{{{$/;"	f
unite#filters#matcher_migemo#define	plugged/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! unite#filters#matcher_migemo#define() "{{{$/;"	f
unite#filters#matcher_project_files#define	plugged/unite.vim/autoload/unite/filters/matcher_project_files.vim	/^function! unite#filters#matcher_project_files#define() "{{{$/;"	f
unite#filters#matcher_project_ignore_files#define	plugged/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^function! unite#filters#matcher_project_ignore_files#define() "{{{$/;"	f
unite#filters#matcher_regexp#define	plugged/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^function! unite#filters#matcher_regexp#define() "{{{$/;"	f
unite#filters#matcher_regexp#get_expr	plugged/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^function! unite#filters#matcher_regexp#get_expr(input, context) "{{{$/;"	f
unite#filters#matcher_regexp#regexp_matcher	plugged/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^function! unite#filters#matcher_regexp#regexp_matcher(candidates, input, context) "{{{$/;"	f
unite#filters#sorter_default#define	plugged/unite.vim/autoload/unite/filters/sorter_default.vim	/^function! unite#filters#sorter_default#define() "{{{$/;"	f
unite#filters#sorter_default#get	plugged/unite.vim/autoload/unite/filters/sorter_default.vim	/^function! unite#filters#sorter_default#get() "{{{$/;"	f
unite#filters#sorter_default#use	plugged/unite.vim/autoload/unite/filters/sorter_default.vim	/^function! unite#filters#sorter_default#use(sorters) "{{{$/;"	f
unite#filters#sorter_ftime#define	plugged/unite.vim/autoload/unite/filters/sorter_ftime.vim	/^function! unite#filters#sorter_ftime#define() "{{{$/;"	f
unite#filters#sorter_length#define	plugged/unite.vim/autoload/unite/filters/sorter_length.vim	/^function! unite#filters#sorter_length#define() "{{{$/;"	f
unite#filters#sorter_nothing#define	plugged/unite.vim/autoload/unite/filters/sorter_nothing.vim	/^function! unite#filters#sorter_nothing#define() "{{{$/;"	f
unite#filters#sorter_rank#_sort	plugged/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! unite#filters#sorter_rank#_sort(candidates, input, has_lua) "{{{$/;"	f
unite#filters#sorter_rank#define	plugged/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! unite#filters#sorter_rank#define() "{{{$/;"	f
unite#filters#sorter_reverse#define	plugged/unite.vim/autoload/unite/filters/sorter_reverse.vim	/^function! unite#filters#sorter_reverse#define() "{{{$/;"	f
unite#filters#sorter_selecta#_sort	plugged/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^function! unite#filters#sorter_selecta#_sort(candidates, input)$/;"	f
unite#filters#sorter_selecta#define	plugged/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^function! unite#filters#sorter_selecta#define()$/;"	f
unite#filters#sorter_word#define	plugged/unite.vim/autoload/unite/filters/sorter_word.vim	/^function! unite#filters#sorter_word#define() "{{{$/;"	f
unite#filters#vim_filter_head	plugged/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#vim_filter_head(candidates, input) "{{{$/;"	f
unite#filters#vim_filter_pattern	plugged/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#vim_filter_pattern(candidates, pattern) "{{{$/;"	f
unite#filters#vim_filter_patterns	plugged/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#vim_filter_patterns(candidates, patterns, whites) "{{{$/;"	f
unite#force_quit_session	plugged/unite.vim/autoload/unite.vim	/^function! unite#force_quit_session()  "{{{$/;"	f
unite#force_redraw	plugged/unite.vim/autoload/unite.vim	/^function! unite#force_redraw(...) "{{{$/;"	f
unite#get_all_sources	plugged/unite.vim/autoload/unite.vim	/^function! unite#get_all_sources(...) "{{{$/;"	f
unite#get_candidates	plugged/unite.vim/autoload/unite.vim	/^function! unite#get_candidates(...) "{{{$/;"	f
unite#get_context	plugged/unite.vim/autoload/unite.vim	/^function! unite#get_context() "{{{$/;"	f
unite#get_cur_text	plugged/unite.vim/autoload/unite.vim	/^function! unite#get_cur_text() "{{{$/;"	f
unite#get_current_unite	plugged/unite.vim/autoload/unite.vim	/^function! unite#get_current_unite() "{{{$/;"	f
unite#get_data_directory	plugged/unite.vim/autoload/unite.vim	/^function! unite#get_data_directory() "{{{$/;"	f
unite#get_filters	plugged/unite.vim/autoload/unite.vim	/^function! unite#get_filters(...) "{{{$/;"	f
unite#get_input	plugged/unite.vim/autoload/unite.vim	/^function! unite#get_input() "{{{$/;"	f
unite#get_kinds	plugged/unite.vim/autoload/unite.vim	/^function! unite#get_kinds(...) "{{{$/;"	f
unite#get_marked_candidates	plugged/unite.vim/autoload/unite.vim	/^function! unite#get_marked_candidates() "{{{$/;"	f
unite#get_profile	plugged/unite.vim/autoload/unite.vim	/^function! unite#get_profile(profile_name, option_name) "{{{$/;"	f
unite#get_self_functions	plugged/unite.vim/autoload/unite.vim	/^function! unite#get_self_functions() "{{{$/;"	f
unite#get_sources	plugged/unite.vim/autoload/unite.vim	/^function! unite#get_sources(...) "{{{$/;"	f
unite#get_status_string	plugged/unite.vim/autoload/unite.vim	/^function! unite#get_status_string() "{{{$/;"	f
unite#get_unite_candidates	plugged/unite.vim/autoload/unite.vim	/^function! unite#get_unite_candidates() "{{{$/;"	f
unite#get_unite_winnr	plugged/unite.vim/autoload/unite.vim	/^function! unite#get_unite_winnr(buffer_name) "{{{$/;"	f
unite#get_vimfiler_candidates	plugged/unite.vim/autoload/unite.vim	/^function! unite#get_vimfiler_candidates(...) "{{{$/;"	f
unite#get_vimfiler_source_names	plugged/unite.vim/autoload/unite.vim	/^function! unite#get_vimfiler_source_names() "{{{$/;"	f
unite#handlers#_on_buf_unload	plugged/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_buf_unload(bufname)  "{{{$/;"	f
unite#handlers#_on_bufwin_enter	plugged/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_bufwin_enter(bufnr)  "{{{$/;"	f
unite#handlers#_on_cursor_hold	plugged/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_cursor_hold()  "{{{$/;"	f
unite#handlers#_on_cursor_hold_i	plugged/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_cursor_hold_i()  "{{{$/;"	f
unite#handlers#_on_cursor_moved	plugged/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_cursor_moved()  "{{{$/;"	f
unite#handlers#_on_cursor_moved_i	plugged/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_cursor_moved_i()  "{{{$/;"	f
unite#handlers#_on_insert_char_pre	plugged/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_insert_char_pre()  "{{{$/;"	f
unite#handlers#_on_insert_enter	plugged/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_insert_enter()  "{{{$/;"	f
unite#handlers#_on_insert_leave	plugged/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_insert_leave()  "{{{$/;"	f
unite#handlers#_on_text_changed	plugged/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_text_changed()  "{{{$/;"	f
unite#handlers#_restore_updatetime	plugged/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_restore_updatetime()  "{{{$/;"	f
unite#handlers#_save_updatetime	plugged/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_save_updatetime()  "{{{$/;"	f
unite#helper#adjustments	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#adjustments(currentwinwidth, the_max_source_name, size) "{{{$/;"	f
unite#helper#call_filter	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#call_filter(filter_name, candidates, context) "{{{$/;"	f
unite#helper#call_hook	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#call_hook(sources, hook_name) "{{{$/;"	f
unite#helper#call_source_filters	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#call_source_filters(filters, candidates, context, source) "{{{$/;"	f
unite#helper#choose_window	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#choose_window() "{{{$/;"	f
unite#helper#convert_source_name	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#convert_source_name(source_name) "{{{$/;"	f
unite#helper#cursor_prompt	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#cursor_prompt() "{{{$/;"	f
unite#helper#get_buffer_directory	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_buffer_directory(bufnr) "{{{$/;"	f
unite#helper#get_candidate_directory	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_candidate_directory(candidate) "{{{$/;"	f
unite#helper#get_choose_windows	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_choose_windows() "{{{$/;"	f
unite#helper#get_current_candidate	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_current_candidate(...) "{{{$/;"	f
unite#helper#get_current_candidate_linenr	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_current_candidate_linenr(num) "{{{$/;"	f
unite#helper#get_input	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_input(...) "{{{$/;"	f
unite#helper#get_marked_candidates	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_marked_candidates() "{{{$/;"	f
unite#helper#get_postfix	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_postfix(prefix, is_create, ...) "{{{$/;"	f
unite#helper#get_source_args	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_source_args(sources) "{{{$/;"	f
unite#helper#get_source_names	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_source_names(sources) "{{{$/;"	f
unite#helper#get_substitute_input	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_substitute_input(input) "{{{$/;"	f
unite#helper#get_substitute_input_loop	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_substitute_input_loop(input, substitute_patterns) "{{{$/;"	f
unite#helper#get_unite_bufnr	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_unite_bufnr(buffer_name) "{{{$/;"	f
unite#helper#get_unite_winnr	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_unite_winnr(buffer_name) "{{{$/;"	f
unite#helper#invalidate_cache	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#invalidate_cache(source_name)  "{{{$/;"	f
unite#helper#is_prompt	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#is_prompt(line) "{{{$/;"	f
unite#helper#join_targets	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#join_targets(targets) "{{{$/;"	f
unite#helper#parse_options	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#parse_options(cmdline) "{{{$/;"	f
unite#helper#parse_options_args	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#parse_options_args(cmdline) "{{{$/;"	f
unite#helper#parse_options_user	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#parse_options_user(args) "{{{$/;"	f
unite#helper#parse_source_args	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#parse_source_args(args) "{{{$/;"	f
unite#helper#parse_source_path	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#parse_source_path(path) "{{{$/;"	f
unite#helper#paths2candidates	plugged/unite.vim/autoload/unite/helper.vim	/^  function! unite#helper#paths2candidates(paths) "{{{$/;"	f
unite#helper#relative_target	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#relative_target(target) "{{{$/;"	f
unite#helper#skip_prompt	plugged/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#skip_prompt() "{{{$/;"	f
unite#init#_candidates	plugged/unite.vim/autoload/unite/init.vim	/^function! unite#init#_candidates(candidates) "{{{$/;"	f
unite#init#_candidates_source	plugged/unite.vim/autoload/unite/init.vim	/^function! unite#init#_candidates_source(candidates, source_name) "{{{$/;"	f
unite#init#_context	plugged/unite.vim/autoload/unite/init.vim	/^function! unite#init#_context(context, ...) "{{{$/;"	f
unite#init#_current_unite	plugged/unite.vim/autoload/unite/init.vim	/^function! unite#init#_current_unite(sources, context) "{{{$/;"	f
unite#init#_default_scripts	plugged/unite.vim/autoload/unite/init.vim	/^function! unite#init#_default_scripts(kind, names) "{{{$/;"	f
unite#init#_filters	plugged/unite.vim/autoload/unite/init.vim	/^function! unite#init#_filters() "{{{$/;"	f
unite#init#_kinds	plugged/unite.vim/autoload/unite/init.vim	/^function! unite#init#_kinds() "{{{$/;"	f
unite#init#_loaded_sources	plugged/unite.vim/autoload/unite/init.vim	/^function! unite#init#_loaded_sources(sources, context) "{{{$/;"	f
unite#init#_sources	plugged/unite.vim/autoload/unite/init.vim	/^function! unite#init#_sources(...) "{{{$/;"	f
unite#init#_tab_variables	plugged/unite.vim/autoload/unite/init.vim	/^function! unite#init#_tab_variables() "{{{$/;"	f
unite#init#_unite_buffer	plugged/unite.vim/autoload/unite/init.vim	/^function! unite#init#_unite_buffer() "{{{$/;"	f
unite#is_win	plugged/unite.vim/autoload/unite.vim	/^function! unite#is_win() "{{{$/;"	f
unite#kinds#buffer#define	plugged/unite.vim/autoload/unite/kinds/buffer.vim	/^function! unite#kinds#buffer#define() "{{{$/;"	f
unite#kinds#cdable#define	plugged/unite.vim/autoload/unite/kinds/cdable.vim	/^function! unite#kinds#cdable#define() "{{{$/;"	f
unite#kinds#command#define	plugged/unite.vim/autoload/unite/kinds/command.vim	/^function! unite#kinds#command#define() "{{{$/;"	f
unite#kinds#common#define	plugged/unite.vim/autoload/unite/kinds/common.vim	/^function! unite#kinds#common#define() "{{{$/;"	f
unite#kinds#common#insert_word	plugged/unite.vim/autoload/unite/kinds/common.vim	/^function! unite#kinds#common#insert_word(word, ...) "{{{$/;"	f
unite#kinds#completion#define	plugged/unite.vim/autoload/unite/kinds/completion.vim	/^function! unite#kinds#completion#define() "{{{$/;"	f
unite#kinds#directory#define	plugged/unite.vim/autoload/unite/kinds/directory.vim	/^function! unite#kinds#directory#define() "{{{$/;"	f
unite#kinds#file#complete_overwrite_method	plugged/unite.vim/autoload/unite/kinds/file.vim	/^function! unite#kinds#file#complete_overwrite_method(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#kinds#file#define	plugged/unite.vim/autoload/unite/kinds/file.vim	/^function! unite#kinds#file#define() "{{{$/;"	f
unite#kinds#file#do_action	plugged/unite.vim/autoload/unite/kinds/file.vim	/^function! unite#kinds#file#do_action(candidates, dest_dir, action_name) "{{{$/;"	f
unite#kinds#file#do_rename	plugged/unite.vim/autoload/unite/kinds/file.vim	/^function! unite#kinds#file#do_rename(old_filename, new_filename) "{{{$/;"	f
unite#kinds#file_base#define	plugged/unite.vim/autoload/unite/kinds/file_base.vim	/^function! unite#kinds#file_base#define() "{{{$/;"	f
unite#kinds#file_vimfiler_base#define	plugged/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! unite#kinds#file_vimfiler_base#define() "{{{$/;"	f
unite#kinds#guicmd#define	plugged/unite.vim/autoload/unite/kinds/guicmd.vim	/^function! unite#kinds#guicmd#define() "{{{$/;"	f
unite#kinds#jump_list#define	plugged/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! unite#kinds#jump_list#define() "{{{$/;"	f
unite#kinds#openable#define	plugged/unite.vim/autoload/unite/kinds/openable.vim	/^function! unite#kinds#openable#define() "{{{$/;"	f
unite#kinds#source#define	plugged/unite.vim/autoload/unite/kinds/source.vim	/^function! unite#kinds#source#define() "{{{$/;"	f
unite#kinds#tab#define	plugged/unite.vim/autoload/unite/kinds/tab.vim	/^function! unite#kinds#tab#define() "{{{$/;"	f
unite#kinds#uri#define	plugged/unite.vim/autoload/unite/kinds/uri.vim	/^function! unite#kinds#uri#define() "{{{$/;"	f
unite#kinds#window#define	plugged/unite.vim/autoload/unite/kinds/window.vim	/^function! unite#kinds#window#define() "{{{$/;"	f
unite#kinds#word#define	plugged/unite.vim/autoload/unite/kinds/word.vim	/^function! unite#kinds#word#define() "{{{$/;"	f
unite#loaded_source_names	plugged/unite.vim/autoload/unite.vim	/^function! unite#loaded_source_names() "{{{$/;"	f
unite#loaded_source_names_string	plugged/unite.vim/autoload/unite.vim	/^function! unite#loaded_source_names_string() "{{{$/;"	f
unite#loaded_sources_list	plugged/unite.vim/autoload/unite.vim	/^function! unite#loaded_sources_list() "{{{$/;"	f
unite#mappings#_choose_action	plugged/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#_choose_action(candidates, ...) "{{{$/;"	f
unite#mappings#_quick_match	plugged/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#_quick_match(is_jump) "{{{$/;"	f
unite#mappings#cursor_down	plugged/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#cursor_down(is_skip_not_matched) "{{{$/;"	f
unite#mappings#cursor_up	plugged/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#cursor_up(is_skip_not_matched) "{{{$/;"	f
unite#mappings#define_default_mappings	plugged/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#define_default_mappings() "{{{$/;"	f
unite#mappings#do_action	plugged/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#do_action(...) "{{{$/;"	f
unite#mappings#get_current_filters	plugged/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#get_current_filters() "{{{$/;"	f
unite#mappings#loop_cursor_down	plugged/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#loop_cursor_down(mode) "{{{$/;"	f
unite#mappings#loop_cursor_up	plugged/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#loop_cursor_up(mode) "{{{$/;"	f
unite#mappings#narrowing	plugged/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#narrowing(word, ...) "{{{$/;"	f
unite#mappings#set_current_filters	plugged/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#set_current_filters(filters) "{{{$/;"	f
unite#path2directory	plugged/unite.vim/autoload/unite.vim	/^function! unite#path2directory(path) "{{{$/;"	f
unite#print_error	plugged/unite.vim/autoload/unite.vim	/^function! unite#print_error(message) "{{{$/;"	f
unite#print_message	plugged/unite.vim/autoload/unite.vim	/^function! unite#print_message(message) "{{{$/;"	f
unite#print_source_error	plugged/unite.vim/autoload/unite.vim	/^function! unite#print_source_error(message, source_name) "{{{$/;"	f
unite#print_source_message	plugged/unite.vim/autoload/unite.vim	/^function! unite#print_source_message(message, source_name) "{{{$/;"	f
unite#quit_session	plugged/unite.vim/autoload/unite.vim	/^function! unite#quit_session()  "{{{$/;"	f
unite#redraw	plugged/unite.vim/autoload/unite.vim	/^function! unite#redraw(...) "{{{$/;"	f
unite#remove_previewed_buffer_list	plugged/unite.vim/autoload/unite.vim	/^function! unite#remove_previewed_buffer_list(bufnr) "{{{$/;"	f
unite#resume	plugged/unite.vim/autoload/unite.vim	/^function! unite#resume(...) "{{{$/;"	f
unite#set_buffer_name_option	plugged/unite.vim/autoload/unite.vim	/^function! unite#set_buffer_name_option(buffer_name, option_name, value) "{{{$/;"	f
unite#set_context	plugged/unite.vim/autoload/unite.vim	/^function! unite#set_context(context) "{{{$/;"	f
unite#set_current_unite	plugged/unite.vim/autoload/unite.vim	/^function! unite#set_current_unite(unite) "{{{$/;"	f
unite#set_profile	plugged/unite.vim/autoload/unite.vim	/^function! unite#set_profile(profile_name, option_name, value) "{{{$/;"	f
unite#set_substitute_pattern	plugged/unite.vim/autoload/unite.vim	/^function! unite#set_substitute_pattern(buffer_name, pattern, subst, ...) "{{{$/;"	f
unite#smart_map	plugged/unite.vim/autoload/unite.vim	/^function! unite#smart_map(narrow_map, select_map) "{{{$/;"	f
unite#sources#action#define	plugged/unite.vim/autoload/unite/sources/action.vim	/^function! unite#sources#action#define()$/;"	f
unite#sources#alias#define	plugged/unite.vim/autoload/unite/sources/alias.vim	/^function! unite#sources#alias#define()$/;"	f
unite#sources#bookmark#_append	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^function! unite#sources#bookmark#_append(filename) "{{{$/;"	f
unite#sources#bookmark#define	plugged/unite.vim/autoload/unite/sources/bookmark.vim	/^function! unite#sources#bookmark#define() "{{{$/;"	f
unite#sources#buffer#define	plugged/unite.vim/autoload/unite/sources/buffer.vim	/^function! unite#sources#buffer#define() "{{{$/;"	f
unite#sources#buffer#variables#append	plugged/unite.vim/autoload/unite/sources/buffer/variables.vim	/^function! unite#sources#buffer#variables#append(bufnr) "{{{$/;"	f
unite#sources#buffer#variables#get_buffer_list	plugged/unite.vim/autoload/unite/sources/buffer/variables.vim	/^function! unite#sources#buffer#variables#get_buffer_list() "{{{$/;"	f
unite#sources#change#define	plugged/unite.vim/autoload/unite/sources/change.vim	/^function! unite#sources#change#define() "{{{$/;"	f
unite#sources#command#define	plugged/unite.vim/autoload/unite/sources/command.vim	/^function! unite#sources#command#define() "{{{$/;"	f
unite#sources#directory#define	plugged/unite.vim/autoload/unite/sources/directory.vim	/^function! unite#sources#directory#define() "{{{$/;"	f
unite#sources#file#_clear_cache	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#_clear_cache() "{{{$/;"	f
unite#sources#file#_get_files	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#_get_files(input, context) "{{{$/;"	f
unite#sources#file#_get_input	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#_get_input(path, context) "{{{$/;"	f
unite#sources#file#_get_path	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#_get_path(args, context) "{{{$/;"	f
unite#sources#file#complete_directory	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#complete_directory(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#sources#file#complete_file	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#complete_file(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#sources#file#copy_files	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#copy_files(dest, srcs) "{{{$/;"	f
unite#sources#file#create_file_dict	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#create_file_dict(file, is_relative_path, ...) "{{{$/;"	f
unite#sources#file#create_vimfiler_dict	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#create_vimfiler_dict(candidate, exts) "{{{$/;"	f
unite#sources#file#define	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#define() "{{{$/;"	f
unite#sources#file#delete_files	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#delete_files(srcs) "{{{$/;"	f
unite#sources#file#get_file_source	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#get_file_source() "{{{$/;"	f
unite#sources#file#move_files	plugged/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#move_files(dest, srcs) "{{{$/;"	f
unite#sources#file_list#define	plugged/unite.vim/autoload/unite/sources/file_list.vim	/^function! unite#sources#file_list#define() "{{{$/;"	f
unite#sources#file_point#define	plugged/unite.vim/autoload/unite/sources/file_point.vim	/^function! unite#sources#file_point#define() "{{{$/;"	f
unite#sources#find#define	plugged/unite.vim/autoload/unite/sources/find.vim	/^function! unite#sources#find#define() "{{{$/;"	f
unite#sources#function#define	plugged/unite.vim/autoload/unite/sources/function.vim	/^function! unite#sources#function#define() "{{{$/;"	f
unite#sources#grep#define	plugged/unite.vim/autoload/unite/sources/grep.vim	/^function! unite#sources#grep#define() "{{{$/;"	f
unite#sources#history_input#define	plugged/unite.vim/autoload/unite/sources/history_input.vim	/^function! unite#sources#history_input#define()$/;"	f
unite#sources#history_unite#add	plugged/unite.vim/autoload/unite/sources/history_unite.vim	/^function! unite#sources#history_unite#add(unite)"{{{$/;"	f
unite#sources#history_unite#define	plugged/unite.vim/autoload/unite/sources/history_unite.vim	/^function! unite#sources#history_unite#define()$/;"	f
unite#sources#history_yank#_append	plugged/unite.vim/autoload/unite/sources/history_yank.vim	/^function! unite#sources#history_yank#_append() "{{{$/;"	f
unite#sources#history_yank#define	plugged/unite.vim/autoload/unite/sources/history_yank.vim	/^function! unite#sources#history_yank#define() "{{{$/;"	f
unite#sources#interactive#define	plugged/unite.vim/autoload/unite/sources/interactive.vim	/^function! unite#sources#interactive#define()$/;"	f
unite#sources#jump#define	plugged/unite.vim/autoload/unite/sources/jump.vim	/^function! unite#sources#jump#define() "{{{$/;"	f
unite#sources#jump_point#define	plugged/unite.vim/autoload/unite/sources/jump_point.vim	/^function! unite#sources#jump_point#define() "{{{$/;"	f
unite#sources#launcher#define	plugged/unite.vim/autoload/unite/sources/launcher.vim	/^function! unite#sources#launcher#define() "{{{$/;"	f
unite#sources#launcher#get_executables	plugged/unite.vim/autoload/unite/sources/launcher.vim	/^function! unite#sources#launcher#get_executables(path) "{{{$/;"	f
unite#sources#line#define	plugged/unite.vim/autoload/unite/sources/line.vim	/^function! unite#sources#line#define() "{{{$/;"	f
unite#sources#mapping#define	plugged/unite.vim/autoload/unite/sources/mapping.vim	/^function! unite#sources#mapping#define() "{{{$/;"	f
unite#sources#menu#define	plugged/unite.vim/autoload/unite/sources/menu.vim	/^function! unite#sources#menu#define()$/;"	f
unite#sources#output#define	plugged/unite.vim/autoload/unite/sources/output.vim	/^function! unite#sources#output#define() "{{{$/;"	f
unite#sources#process#define	plugged/unite.vim/autoload/unite/sources/process.vim	/^function! unite#sources#process#define() "{{{$/;"	f
unite#sources#rec#_append	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! unite#sources#rec#_append() "{{{$/;"	f
unite#sources#rec#define	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! unite#sources#rec#define() "{{{$/;"	f
unite#sources#register#define	plugged/unite.vim/autoload/unite/sources/register.vim	/^function! unite#sources#register#define() "{{{$/;"	f
unite#sources#resume#define	plugged/unite.vim/autoload/unite/sources/resume.vim	/^function! unite#sources#resume#define() "{{{$/;"	f
unite#sources#runtimepath#define	plugged/unite.vim/autoload/unite/sources/runtimepath.vim	/^function! unite#sources#runtimepath#define() "{{{$/;"	f
unite#sources#script#define	plugged/unite.vim/autoload/unite/sources/script.vim	/^function! unite#sources#script#define()$/;"	f
unite#sources#source#define	plugged/unite.vim/autoload/unite/sources/source.vim	/^function! unite#sources#source#define() "{{{$/;"	f
unite#sources#tab#define	plugged/unite.vim/autoload/unite/sources/tab.vim	/^function! unite#sources#tab#define() "{{{$/;"	f
unite#sources#vimgrep#define	plugged/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! unite#sources#vimgrep#define() "{{{$/;"	f
unite#sources#window#define	plugged/unite.vim/autoload/unite/sources/window.vim	/^function! unite#sources#window#define() "{{{$/;"	f
unite#sources#window_gui#define	plugged/unite.vim/autoload/unite/sources/window_gui.vim	/^function! unite#sources#window_gui#define() "{{{$/;"	f
unite#start	plugged/unite.vim/autoload/unite.vim	/^function! unite#start(...) "{{{$/;"	f
unite#start#_pos	plugged/unite.vim/autoload/unite/start.vim	/^function! unite#start#_pos(buffer_name, direction, count) "{{{$/;"	f
unite#start#complete	plugged/unite.vim/autoload/unite/start.vim	/^function! unite#start#complete(sources, ...) "{{{$/;"	f
unite#start#get_candidates	plugged/unite.vim/autoload/unite/start.vim	/^function! unite#start#get_candidates(sources, ...) "{{{$/;"	f
unite#start#get_vimfiler_candidates	plugged/unite.vim/autoload/unite/start.vim	/^function! unite#start#get_vimfiler_candidates(sources, ...) "{{{$/;"	f
unite#start#resume	plugged/unite.vim/autoload/unite/start.vim	/^function! unite#start#resume(buffer_name, ...) "{{{$/;"	f
unite#start#resume_from_temporary	plugged/unite.vim/autoload/unite/start.vim	/^function! unite#start#resume_from_temporary(context)  "{{{$/;"	f
unite#start#script	plugged/unite.vim/autoload/unite/start.vim	/^function! unite#start#script(sources, ...) "{{{$/;"	f
unite#start#standard	plugged/unite.vim/autoload/unite/start.vim	/^function! unite#start#standard(sources, ...) "{{{$/;"	f
unite#start#temporary	plugged/unite.vim/autoload/unite/start.vim	/^function! unite#start#temporary(sources, ...) "{{{$/;"	f
unite#start#vimfiler_check_filetype	plugged/unite.vim/autoload/unite/start.vim	/^function! unite#start#vimfiler_check_filetype(sources, ...) "{{{$/;"	f
unite#start_complete	plugged/unite.vim/autoload/unite.vim	/^function! unite#start_complete(...) "{{{$/;"	f
unite#start_script	plugged/unite.vim/autoload/unite.vim	/^function! unite#start_script(...) "{{{$/;"	f
unite#start_temporary	plugged/unite.vim/autoload/unite.vim	/^function! unite#start_temporary(...) "{{{$/;"	f
unite#substitute_path_separator	plugged/unite.vim/autoload/unite.vim	/^function! unite#substitute_path_separator(path) "{{{$/;"	f
unite#take_action	plugged/unite.vim/autoload/unite.vim	/^function! unite#take_action(action_name, candidate) "{{{$/;"	f
unite#take_parents_action	plugged/unite.vim/autoload/unite.vim	/^function! unite#take_parents_action(action_name, candidate, extend_candidate) "{{{$/;"	f
unite#undef_filter	plugged/unite.vim/autoload/unite.vim	/^function! unite#undef_filter(name) "{{{$/;"	f
unite#undef_kind	plugged/unite.vim/autoload/unite.vim	/^function! unite#undef_kind(name) "{{{$/;"	f
unite#undef_source	plugged/unite.vim/autoload/unite.vim	/^function! unite#undef_source(name) "{{{$/;"	f
unite#util#alternate_buffer	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#alternate_buffer() "{{{$/;"	f
unite#util#command_with_restore_cursor	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#command_with_restore_cursor(command) "{{{$/;"	f
unite#util#convert2list	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#convert2list(expr) "{{{$/;"	f
unite#util#escape_file_searching	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#escape_file_searching(buffer_name)$/;"	f
unite#util#escape_match	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#escape_match(str) "{{{$/;"	f
unite#util#escape_pattern	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#escape_pattern(...)$/;"	f
unite#util#escape_shell	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#escape_shell(str) "{{{$/;"	f
unite#util#expand	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#expand(path) "{{{$/;"	f
unite#util#get_last_errmsg	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#get_last_errmsg()$/;"	f
unite#util#get_last_status	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#get_last_status(...)$/;"	f
unite#util#get_name	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#get_name(list, name, default) "{{{$/;"	f
unite#util#get_vital	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#get_vital() "{{{$/;"	f
unite#util#glob	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#glob(pattern, ...) "{{{$/;"	f
unite#util#has_lua	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#has_lua()$/;"	f
unite#util#has_vimproc	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#has_vimproc(...)$/;"	f
unite#util#iconv	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#iconv(...)$/;"	f
unite#util#index_name	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#index_name(list, name) "{{{$/;"	f
unite#util#input	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#input(prompt, ...) "{{{$/;"	f
unite#util#input_directory	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#input_directory(message) "{{{$/;"	f
unite#util#input_yesno	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#input_yesno(message) "{{{$/;"	f
unite#util#is_cmdwin	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#is_cmdwin() "{{{$/;"	f
unite#util#is_mac	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#is_mac(...)$/;"	f
unite#util#is_sudo	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#is_sudo() "{{{$/;"	f
unite#util#is_win	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#is_win(...)$/;"	f
unite#util#is_windows	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#is_windows(...)$/;"	f
unite#util#lcd	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#lcd(dir) "{{{$/;"	f
unite#util#move	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#move(src, dest) "{{{$/;"	f
unite#util#open	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#open(path) "{{{$/;"	f
unite#util#path2directory	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#path2directory(...)$/;"	f
unite#util#path2project_directory	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#path2project_directory(...)$/;"	f
unite#util#print_error	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#print_error(...)$/;"	f
unite#util#read_lines	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#read_lines(source, ...) "{{{$/;"	f
unite#util#set_default	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#set_default(var, val, ...)  "{{{$/;"	f
unite#util#set_default_dictionary_helper	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#set_default_dictionary_helper(variable, keys, value) "{{{$/;"	f
unite#util#set_dictionary_helper	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#set_dictionary_helper(variable, keys, value) "{{{$/;"	f
unite#util#smart_execute_command	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#smart_execute_command(action, word)$/;"	f
unite#util#smart_open_command	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#smart_open_command(action, word)$/;"	f
unite#util#sort_by	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#sort_by(...)$/;"	f
unite#util#strchars	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#strchars(...)$/;"	f
unite#util#strwidthpart	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#strwidthpart(...)$/;"	f
unite#util#strwidthpart_reverse	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#strwidthpart_reverse(...)$/;"	f
unite#util#substitute_path_separator	plugged/unite.vim/autoload/unite/util.vim	/^  function! unite#util#substitute_path_separator(...)$/;"	f
unite#util#substitute_path_separator	plugged/unite.vim/autoload/unite/util.vim	/^  function! unite#util#substitute_path_separator(path)$/;"	f
unite#util#system	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#system(...)$/;"	f
unite#util#system_passwd	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#system_passwd(...)$/;"	f
unite#util#truncate	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#truncate(...)$/;"	f
unite#util#truncate_smart	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#truncate_smart(...)$/;"	f
unite#util#truncate_wrap	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#truncate_wrap(str, max, footer_width, separator) "{{{$/;"	f
unite#util#uniq	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#uniq(...)$/;"	f
unite#util#uniq_by	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#uniq_by(...)$/;"	f
unite#util#wcswidth	plugged/unite.vim/autoload/unite/util.vim	/^function! unite#util#wcswidth(string)$/;"	f
unite#variables#all_sources	plugged/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#all_sources(...) "{{{$/;"	f
unite#variables#current_unite	plugged/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#current_unite() "{{{$/;"	f
unite#variables#default_context	plugged/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#default_context() "{{{$/;"	f
unite#variables#disable_current_unite	plugged/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#disable_current_unite() "{{{$/;"	f
unite#variables#dynamic	plugged/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#dynamic() "{{{$/;"	f
unite#variables#enable_current_unite	plugged/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#enable_current_unite() "{{{$/;"	f
unite#variables#filters	plugged/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#filters(...) "{{{$/;"	f
unite#variables#kinds	plugged/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#kinds(...) "{{{$/;"	f
unite#variables#loaded_defaults	plugged/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#loaded_defaults() "{{{$/;"	f
unite#variables#loaded_sources	plugged/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#loaded_sources(...) "{{{$/;"	f
unite#variables#options	plugged/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#options() "{{{$/;"	f
unite#variables#set_current_unite	plugged/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#set_current_unite(unite) "{{{$/;"	f
unite#variables#sources	plugged/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#sources(...) "{{{$/;"	f
unite#variables#static	plugged/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#static() "{{{$/;"	f
unite#variables#use_current_unite	plugged/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#use_current_unite() "{{{$/;"	f
unite#version	plugged/unite.vim/autoload/unite.vim	/^function! unite#version() "{{{$/;"	f
unite#view#_add_previewed_buffer_list	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_add_previewed_buffer_list(bufnr) "{{{$/;"	f
unite#view#_add_source_message	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_add_source_message(message, source_name) "{{{$/;"	f
unite#view#_bottom_cursor	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_bottom_cursor() "{{{$/;"	f
unite#view#_change_highlight	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_change_highlight()  "{{{$/;"	f
unite#view#_clear_match	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_clear_match() "{{{$/;"	f
unite#view#_clear_message	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_clear_message() "{{{$/;"	f
unite#view#_close	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_close(buffer_name)  "{{{$/;"	f
unite#view#_close_preview_window	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_close_preview_window() "{{{$/;"	f
unite#view#_convert_lines	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_convert_lines(candidates) "{{{$/;"	f
unite#view#_do_auto_highlight	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_do_auto_highlight() "{{{$/;"	f
unite#view#_do_auto_preview	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_do_auto_preview() "{{{$/;"	f
unite#view#_get_source_candidates_string	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_get_source_candidates_string(source) "{{{$/;"	f
unite#view#_get_source_name_string	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_get_source_name_string(source) "{{{$/;"	f
unite#view#_get_status_head_string	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_get_status_head_string() "{{{$/;"	f
unite#view#_get_status_plane_string	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_get_status_plane_string() "{{{$/;"	f
unite#view#_get_status_string	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_get_status_string(unite) "{{{$/;"	f
unite#view#_get_status_tail_string	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_get_status_tail_string() "{{{$/;"	f
unite#view#_init_cursor	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_init_cursor() "{{{$/;"	f
unite#view#_match_line	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_match_line(highlight, line, id) "{{{$/;"	f
unite#view#_preview_file	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_preview_file(filename) "{{{$/;"	f
unite#view#_print_error	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_print_error(message) "{{{$/;"	f
unite#view#_print_message	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_print_message(message, ...) "{{{$/;"	f
unite#view#_print_source_error	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_print_source_error(message, source_name) "{{{$/;"	f
unite#view#_print_source_message	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_print_source_message(message, source_name) "{{{$/;"	f
unite#view#_quick_match_redraw	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_quick_match_redraw(quick_match_table, is_define) "{{{$/;"	f
unite#view#_quit	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_quit(is_force, ...)  "{{{$/;"	f
unite#view#_redraw	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw(is_force, winnr, is_gather_all) "{{{$/;"	f
unite#view#_redraw_all_candidates	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw_all_candidates() "{{{$/;"	f
unite#view#_redraw_candidates	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw_candidates(...) "{{{$/;"	f
unite#view#_redraw_echo	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw_echo(expr) "{{{$/;"	f
unite#view#_redraw_line	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw_line(...) "{{{$/;"	f
unite#view#_redraw_prompt	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw_prompt() "{{{$/;"	f
unite#view#_remove_previewed_buffer_list	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_remove_previewed_buffer_list(bufnr) "{{{$/;"	f
unite#view#_resize_window	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_resize_window() "{{{$/;"	f
unite#view#_save_position	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_save_position() "{{{$/;"	f
unite#view#_search_cursor	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_search_cursor(candidate) "{{{$/;"	f
unite#view#_set_candidates_lines	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_set_candidates_lines(lines) "{{{$/;"	f
unite#view#_set_cursor_line	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_set_cursor_line() "{{{$/;"	f
unite#view#_set_syntax	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_set_syntax() "{{{$/;"	f
unite#view#_switch_unite_buffer	plugged/unite.vim/autoload/unite/view.vim	/^function! unite#view#_switch_unite_buffer(buffer_name, context) "{{{$/;"	f
unite#vimfiler_check_filetype	plugged/unite.vim/autoload/unite.vim	/^function! unite#vimfiler_check_filetype(...) "{{{$/;"	f
unite#vimfiler_complete	plugged/unite.vim/autoload/unite.vim	/^function! unite#vimfiler_complete(sources, arglead, cmdline, cursorpos) "{{{$/;"	f
unittest	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_docs.py	/^import unittest, os, os.path, sys$/;"	i
unittest	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^import unittest, doctest$/;"	i
unittest	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_docs.py	/^import unittest, os, os.path, sys$/;"	i
unittest	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^import unittest, doctest$/;"	i
unittest	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/__init__.py	/^import unittest$/;"	i
unittest	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_encode_for_html.py	/^import unittest$/;"	i
unittest	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_for_json.py	/^import unittest$/;"	i
unittest	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_iterable.py	/^import unittest$/;"	i
unittest	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_namedtuple.py	/^import unittest$/;"	i
unittest	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_speedups.py	/^import unittest$/;"	i
unittest	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tool.py	/^import unittest$/;"	i
unittest	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tuple.py	/^import unittest$/;"	i
unittest	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/tests.py	/^import unittest$/;"	i
unittest	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/tests.py	/^import unittest$/;"	i
univ	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^from pyasn1.type import univ, constraint$/;"	i
universaldetector	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/__init__.py	/^    from . import universaldetector$/;"	i
unix	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/tests.py	/^import tzlocal.unix$/;"	i
unix	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/tests.py	/^import tzlocal.unix$/;"	i
unload	plugged/unite.vim/autoload/vital/_unite.vim	/^function! s:unload() abort$/;"	f
unpack	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzfile.py	/^from struct import unpack, calcsize$/;"	i
unpack	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzfile.py	/^from struct import unpack, calcsize$/;"	i
unpickler	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^from pytz.tzinfo import unpickler$/;"	i
unpickler	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^def unpickler(zone, utcoffset=None, dstoffset=None, tzname=None):$/;"	f
unpickler	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^from pytz.tzinfo import unpickler$/;"	i
unpickler	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^def unpickler(zone, utcoffset=None, dstoffset=None, tzname=None):$/;"	f
unprefixedname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    unprefixedname = ncname$/;"	v	class:XQueryLexer
unprefixedname	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    unprefixedname = ncname$/;"	v	class:XQueryLexer
unquote	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib import quote, unquote, quote_plus, unquote_plus, urlencode, getproxies, proxy_bypass$/;"	i
unquote	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib.parse import urlparse, urlunparse, urljoin, urlsplit, urlencode, quote, unquote, quote_plus, unquote_plus, urldefrag$/;"	i
unquote	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^from .compat import (quote, urlparse, bytes, str, OrderedDict, unquote, is_py2,$/;"	i
unquote_header_value	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def unquote_header_value(value, is_filename=False):$/;"	f
unquote_plus	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib import quote, unquote, quote_plus, unquote_plus, urlencode, getproxies, proxy_bypass$/;"	i
unquote_plus	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib.parse import urlparse, urlunparse, urljoin, urlsplit, urlencode, quote, unquote, quote_plus, unquote_plus, urldefrag$/;"	i
unquote_unreserved	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def unquote_unreserved(uri):$/;"	f
unshift	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
unverifiable	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def unverifiable(self):$/;"	m	class:MockRequest
upDirCurrentRootClosed	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
upDirCurrentRootOpen	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
upconvert	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:upconvert(nr) abort$/;"	f
update	autoload/plug.vim	/^function! s:update(force, names)$/;"	f
update	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    update = DictMixin.update$/;"	v	class:OrderedDict
update	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def update(self, other):$/;"	m	class:RequestsCookieJar
update	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    update = MutableMapping.update$/;"	v	class:HTTPHeaderDict
update	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def update(*args, **kwds):$/;"	m	class:OrderedDict
update	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    update = DictMixin.update$/;"	v	class:OrderedDict
update_consts	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_postgres_builtins.py	/^    def update_consts(filename, constname, content):$/;"	f
update_consts	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_postgres_builtins.py	/^    def update_consts(filename, constname, content):$/;"	f
update_finish	autoload/plug.vim	/^function! s:update_finish()$/;"	f
update_impl	autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
update_myself	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_postgres_builtins.py	/^    def update_myself():$/;"	f
update_myself	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_postgres_builtins.py	/^    def update_myself():$/;"	f
update_python	autoload/plug.vim	/^function! s:update_python()$/;"	f
update_ruby	autoload/plug.vim	/^function! s:update_ruby()$/;"	f
update_vim	autoload/plug.vim	/^function! s:update_vim()$/;"	f
update_visible	plugged/calendar.vim/autoload/calendar/autocmd.vim	/^function! s:update_visible(bufnr, is_colorscheme) abort$/;"	f
updatetime	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:updatetime() abort$/;"	f
upgrade	autoload/plug.vim	/^function! s:upgrade()$/;"	f
upgrade_specs	autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
upper	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    upper = (u'[A-Z\\\\$_\\u00c0-\\u00d6\\u00d8-\\u00de\\u0100\\u0102\\u0104\\u0106\\u0108'$/;"	v	class:ScalaLexer
upper	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    upper = (u'[A-Z\\\\$_\\u00c0-\\u00d6\\u00d8-\\u00de\\u0100\\u0102\\u0104\\u0106\\u0108'$/;"	v	class:ScalaLexer
url	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/url.py	/^    def url(self):$/;"	m	class:Url
url_attrs	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/url.py	/^url_attrs = ['scheme', 'auth', 'host', 'port', 'path', 'query', 'fragment']$/;"	v
urldefrag	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib.parse import urlparse, urlunparse, urljoin, urlsplit, urlencode, quote, unquote, quote_plus, unquote_plus, urldefrag$/;"	i
urldefrag	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urlparse import urlparse, urlunparse, urljoin, urlsplit, urldefrag$/;"	i
urldefragauth	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^def urldefragauth(url):$/;"	f
urlencode	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib import quote, unquote, quote_plus, unquote_plus, urlencode, getproxies, proxy_bypass$/;"	i
urlencode	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib.parse import urlparse, urlunparse, urljoin, urlsplit, urlencode, quote, unquote, quote_plus, unquote_plus, urldefrag$/;"	i
urlencode	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/request.py	/^    from urllib import urlencode$/;"	i
urlencode	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/request.py	/^    from urllib.parse import urlencode$/;"	i
urljoin	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib.parse import urlparse, urlunparse, urljoin, urlsplit, urlencode, quote, unquote, quote_plus, unquote_plus, urldefrag$/;"	i
urljoin	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urlparse import urlparse, urlunparse, urljoin, urlsplit, urldefrag$/;"	i
urljoin	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^    from urllib.parse import urljoin$/;"	i
urljoin	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^    from urlparse import urljoin$/;"	i
urljoin	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from .compat import cookielib, OrderedDict, urljoin, urlparse$/;"	i
urllib3	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/__init__.py	/^from . import urllib3$/;"	i
urlopen	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^        from urllib import urlopen$/;"	i
urlopen	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_lua_builtins.py	/^        from urllib.request import urlopen$/;"	i
urlopen	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_postgres_builtins.py	/^        from urllib import urlopen$/;"	i
urlopen	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_postgres_builtins.py	/^        from urllib.request import urlopen$/;"	i
urlopen	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^        from urllib import urlopen$/;"	i
urlopen	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_lua_builtins.py	/^        from urllib.request import urlopen$/;"	i
urlopen	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_postgres_builtins.py	/^        from urllib import urlopen$/;"	i
urlopen	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_postgres_builtins.py	/^        from urllib.request import urlopen$/;"	i
urlopen	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^    def urlopen(self, method, url, body=None, headers=None, retries=None,$/;"	m	class:HTTPConnectionPool
urlopen	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/ntlmpool.py	/^    def urlopen(self, method, url, body=None, headers=None, retries=3,$/;"	m	class:NTLMConnectionPool
urlopen	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^    def urlopen(self, method, url, redirect=True, **kw):$/;"	m	class:PoolManager
urlopen	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/poolmanager.py	/^    def urlopen(self, method, url, redirect=True, **kw):$/;"	m	class:ProxyManager
urlopen	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/request.py	/^    def urlopen(self, method, url, body=None, headers=None,$/;"	m	class:RequestMethods
urlparse	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/adapters.py	/^from .compat import urlparse, basestring$/;"	i
urlparse	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/auth.py	/^from .compat import urlparse, str$/;"	i
urlparse	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib.parse import urlparse, urlunparse, urljoin, urlsplit, urlencode, quote, unquote, quote_plus, unquote_plus, urldefrag$/;"	i
urlparse	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urlparse import urlparse, urlunparse, urljoin, urlsplit, urldefrag$/;"	i
urlparse	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^from .compat import cookielib, urlparse, urlunparse, Morsel$/;"	i
urlparse	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/sessions.py	/^from .compat import cookielib, OrderedDict, urljoin, urlparse$/;"	i
urlparse	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^from .compat import (quote, urlparse, bytes, str, OrderedDict, unquote, is_py2,$/;"	i
urlretrieve	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_php_builtins.py	/^        from urllib import urlretrieve$/;"	i
urlretrieve	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_php_builtins.py	/^        from urllib.request import urlretrieve$/;"	i
urlretrieve	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_php_builtins.py	/^        from urllib import urlretrieve$/;"	i
urlretrieve	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_php_builtins.py	/^        from urllib.request import urlretrieve$/;"	i
urlsplit	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib.parse import urlparse, urlunparse, urljoin, urlsplit, urlencode, quote, unquote, quote_plus, unquote_plus, urldefrag$/;"	i
urlsplit	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urlparse import urlparse, urlunparse, urljoin, urlsplit, urldefrag$/;"	i
urlunparse	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urllib.parse import urlparse, urlunparse, urljoin, urlsplit, urlencode, quote, unquote, quote_plus, unquote_plus, urldefrag$/;"	i
urlunparse	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/compat.py	/^    from urlparse import urlparse, urlunparse, urljoin, urlsplit, urldefrag$/;"	i
urlunparse	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^from .compat import cookielib, urlparse, urlunparse, Morsel$/;"	i
use_decimal	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/_speedups.c	/^    int use_decimal;$/;"	m	struct:_PyEncoderObject	file:
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^def using(_other, **kwargs):$/;"	f
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^from pygments.lexer import RegexLexer, bygroups, using, this, words, default$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, DelegatingLexer$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    this, inherit, default, words$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^from pygments.lexer import RegexLexer, default, words, bygroups, include, using$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    using, this, default$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    this, default, words$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graph.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    this, default$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^from pygments.lexer import RegexLexer, bygroups, include, using, this, words$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/html.py	/^    default, using$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/installers.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this, default$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    this, default, words$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/javascript.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    this, combined, default, words$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/make.py	/^    do_insertions, using$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    using, this, do_insertions, default, words$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/modeling.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, default$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    inherit, default$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/parsers.py	/^    include, bygroups, using$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    using, this, default$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    using, this, default, words$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    default, words, combined, do_insertions$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/templates.py	/^    include, using, this, default, combined$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/textedit.py	/^from pygments.lexer import RegexLexer, include, default, bygroups, using, this$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    default, using$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^def using(_other, **kwargs):$/;"	f
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^from pygments.lexer import RegexLexer, bygroups, using, this, words, default$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, DelegatingLexer$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    this, inherit, default, words$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^from pygments.lexer import RegexLexer, default, words, bygroups, include, using$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    using, this, default$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    this, default, words$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graph.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    this, default$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^from pygments.lexer import RegexLexer, bygroups, include, using, this, words$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/html.py	/^    default, using$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/installers.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, this, default$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    this, default, words$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/javascript.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    this, combined, default, words$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/make.py	/^    do_insertions, using$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    using, this, do_insertions, default, words$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/modeling.py	/^from pygments.lexer import RegexLexer, include, bygroups, using, default$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    inherit, default$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/parsers.py	/^    include, bygroups, using$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    using, this, default$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    using, this, default, words$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, using, this$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    default, words, combined, do_insertions$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/templates.py	/^    include, using, this, default, combined$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/textedit.py	/^from pygments.lexer import RegexLexer, include, default, bygroups, using, this$/;"	i
using	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    default, using$/;"	i
utc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^from pytz import utc, UTC, HOUR, ZERO$/;"	i
utc	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^from pytz import utc, UTC, HOUR, ZERO$/;"	i
utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def utcoffset(self, dt):$/;"	m	class:UTC
utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    def utcoffset(self, dt):$/;"	m	class:_FixedOffset
utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^    def utcoffset(self, dt):$/;"	m	class:FixedOffset
utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^    def utcoffset(self, dt):$/;"	m	class:LocalTimezone
utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/reference.py	/^    def utcoffset(self, dt):$/;"	m	class:USTimeZone
utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    def utcoffset(self, dt, is_dst=None):$/;"	m	class:DstTzInfo
utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    def utcoffset(self, dt, is_dst=None):$/;"	m	class:StaticTzInfo
utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def utcoffset(self, dt):$/;"	m	class:UTC
utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    def utcoffset(self, dt):$/;"	m	class:_FixedOffset
utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^    def utcoffset(self, dt):$/;"	m	class:FixedOffset
utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^    def utcoffset(self, dt):$/;"	m	class:LocalTimezone
utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/reference.py	/^    def utcoffset(self, dt):$/;"	m	class:USTimeZone
utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    def utcoffset(self, dt, is_dst=None):$/;"	m	class:DstTzInfo
utcoffset	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    def utcoffset(self, dt, is_dst=None):$/;"	m	class:StaticTzInfo
utf16_to_utf8	plugged/vimproc.vim/autoload/proc_w32.c	/^utf16_to_utf8(LPCWSTR wstr)$/;"	f	file:
utf8_to_utf16	plugged/vimproc.vim/autoload/proc_w32.c	/^utf8_to_utf16(const char *str)$/;"	f	file:
util	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/contrib/pyopenssl.py	/^from .. import util$/;"	i
utils	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/__init__.py	/^from . import utils$/;"	i
utils	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/fields.py	/^import email.utils$/;"	i
uuid4	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/filepost.py	/^from uuid import uuid4$/;"	i
val	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^            val = u''.join(_handle_runs(categories_bmp[cat]))$/;"	v
val	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^            val = u''.join(_handle_runs(categories_nonbmp[cat]))$/;"	v
val	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^            val = u''.join(_handle_runs(categories_bmp[cat]))$/;"	v
val	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^            val = u''.join(_handle_runs(categories_nonbmp[cat]))$/;"	v
valid_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    valid_name = r"%s+%s" % (valid_name_chars, delimiter_end)$/;"	v	class:PostScriptLexer
valid_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    valid_name = r'(?!#)[\\w!$%*+<=>?\/.#-]+'$/;"	v	class:ClojureLexer
valid_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    valid_name = r'(?!#)[\\w!$%*+<=>?\/.#-]+'$/;"	v	class:HyLexer
valid_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^    valid_name = r'([\\w!$%&*+.,\/<=>?@^~|-])+|(\\[.*?\\])+'$/;"	v	class:NewLispLexer
valid_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    valid_name = r"%s+%s" % (valid_name_chars, delimiter_end)$/;"	v	class:PostScriptLexer
valid_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    valid_name = r'(?!#)[\\w!$%*+<=>?\/.#-]+'$/;"	v	class:ClojureLexer
valid_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    valid_name = r'(?!#)[\\w!$%*+<=>?\/.#-]+'$/;"	v	class:HyLexer
valid_name	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^    valid_name = r'([\\w!$%&*+.,\/<=>?@^~|-])+|(\\[.*?\\])+'$/;"	v	class:NewLispLexer
valid_name_chars	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    valid_name_chars = r'[^%s]' % delimiter$/;"	v	class:PostScriptLexer
valid_name_chars	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    valid_name_chars = r'[^%s]' % delimiter$/;"	v	class:PostScriptLexer
values	plugged/vim-wakatime/plugin/packages/wakatime/packages/ordereddict.py	/^    values = DictMixin.values$/;"	v	class:OrderedDict
values	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/cookies.py	/^    def values(self):$/;"	m	class:RequestsCookieJar
values	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/_collections.py	/^    values = MutableMapping.values$/;"	v	class:HTTPHeaderDict
values	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def values(self):$/;"	m	class:OrderedDict
values	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/ordered_dict.py	/^    values = DictMixin.values$/;"	v	class:OrderedDict
values	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_bigint_as_string.py	/^    values = [(200, 200),$/;"	v	class:TestBigintAsString
values	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_bitsize_int_as_string.py	/^    values = [$/;"	v	class:TestBitSizeIntAsString
valuestodict	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/win32.py	/^def valuestodict(key):$/;"	f
valuestodict	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/win32.py	/^def valuestodict(key):$/;"	f
variable_qualifiers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    variable_qualifiers = set(('__device__', '__constant__', '__shared__',$/;"	v	class:CudaLexer
variable_qualifiers	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    variable_qualifiers = set(('__device__', '__constant__', '__shared__',$/;"	v	class:CudaLexer
variable_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    variable_re = r'(?:[A-Z_]\\w*)'$/;"	v	class:ErlangLexer
variable_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    variable_re = r'(?:[A-Z_]\\w*)'$/;"	v	class:ErlangLexer
variables	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    variables = set(('gridDim', 'blockIdx', 'blockDim', 'threadIdx', 'warpSize'))$/;"	v	class:CudaLexer
variables	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    variables = set(('gridDim', 'blockIdx', 'blockDim', 'threadIdx', 'warpSize'))$/;"	v	class:CudaLexer
variables_kw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_scilab_builtins.py	/^variables_kw = ($/;"	v
variables_kw	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_scilab_builtins.py	/^variables_kw = ($/;"	v
vector_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    vector_types = set(('char1', 'uchar1', 'char2', 'uchar2', 'char3', 'uchar3',$/;"	v	class:CudaLexer
vector_types	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    vector_types = set(('char1', 'uchar1', 'char2', 'uchar2', 'char3', 'uchar3',$/;"	v	class:CudaLexer
verbs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/shell.py	/^    verbs = ($/;"	v	class:PowerShellLexer
verbs	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/shell.py	/^    verbs = ($/;"	v	class:PowerShellLexer
version	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/_sourcemod_builtins.py	/^        version = 'Mozilla\/5.0 (Pygments Sourcemod Builtins Update)'$/;"	v	class:Opener
version	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/_sourcemod_builtins.py	/^        version = 'Mozilla\/5.0 (Pygments Sourcemod Builtins Update)'$/;"	v	class:Opener
version_info	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/__init__.py	/^from sys import version_info$/;"	i
version_requirement	autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
view	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:view() abort$/;"	f
view_source	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:view_source() abort$/;"	f
viewitems	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def viewitems(self):$/;"	m	class:OrderedDict
viewkeys	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def viewkeys(self):$/;"	m	class:OrderedDict
views	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:views() abort$/;"	f
viewvalues	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/ordered_dict.py	/^    def viewvalues(self):$/;"	m	class:OrderedDict
vim	plugged/vim-go/plugin/go.vim	/^augroup vim-go$/;"	a
vimTAP	plugged/delimitMate/test/_setup.vim	/^let vimTAP = expand('<sfile>:p:h').'\/build\/VimTAP'$/;"	v
vimball_home	plugged/Nvim-R/Makefile	/^	nvim -c 'set nomore' -c 'let g:vimball_home="\/tmp\/nvim-r-tmp\/usr\/share\/nvim\/addons"' -c "so %" -c "q" \/tmp\/Nvim-R.vmb$/;"	m
vimlintOutput	plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^function! s:vimlintOutput(filename, pos, ev, eid, mes, obj) " {{{2$/;"	f
vimproc	plugged/vimproc.vim/autoload/vimproc.vim	/^augroup vimproc$/;"	a
vimproc	plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^augroup vimproc$/;"	a
vimproc#_get_bg_processes	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#_get_bg_processes() "{{{$/;"	f
vimproc#analyze_shebang	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#analyze_shebang(filename) "{{{$/;"	f
vimproc#cmd#system	plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^  function! vimproc#cmd#system(expr)$/;"	f
vimproc#cmd#system	plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^function! vimproc#cmd#system(expr)$/;"	f
vimproc#decode_signal	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#decode_signal(signal) "{{{$/;"	f
vimproc#delete_trash	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#delete_trash(filename) "{{{$/;"	f
vimproc#dll_version	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#dll_version() "{{{$/;"	f
vimproc#filepath#which	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! vimproc#filepath#which(command, path, maxcount)$/;"	f
vimproc#fopen	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#fopen(path, ...) "{{{$/;"	f
vimproc#get_command_name	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#get_command_name(command, ...) "{{{$/;"	f
vimproc#get_last_errmsg	plugged/vimproc.vim/autoload/vimproc.vim	/^  function! vimproc#get_last_errmsg()$/;"	f
vimproc#get_last_errmsg	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#get_last_errmsg() "{{{$/;"	f
vimproc#get_last_status	plugged/vimproc.vim/autoload/vimproc.vim	/^  function! vimproc#get_last_status()$/;"	f
vimproc#get_last_status	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#get_last_status() "{{{$/;"	f
vimproc#host_exists	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#host_exists(host) "{{{$/;"	f
vimproc#kill	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#kill(pid, sig) "{{{$/;"	f
vimproc#lexer#init_lexer	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! vimproc#lexer#init_lexer(text)$/;"	f
vimproc#lexer#init_reader	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! vimproc#lexer#init_reader(text)$/;"	f
vimproc#open	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#open(filename) "{{{$/;"	f
vimproc#parser#expand_wildcard	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#expand_wildcard(wildcard) "{{{$/;"	f
vimproc#parser#parse_pipe	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#parse_pipe(statement) "{{{$/;"	f
vimproc#parser#parse_statements	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#parse_statements(script) "{{{$/;"	f
vimproc#parser#split_args	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_args(script) "{{{$/;"	f
vimproc#parser#split_args_through	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_args_through(script) "{{{$/;"	f
vimproc#parser#split_commands	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_commands(script) "{{{$/;"	f
vimproc#parser#split_pipe	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_pipe(script) "{{{$/;"	f
vimproc#parser#split_statements	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_statements(script) "{{{$/;"	f
vimproc#pgroup_open	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#pgroup_open(statements, ...) "{{{$/;"	f
vimproc#plineopen2	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#plineopen2(commands, ...) "{{{$/;"	f
vimproc#plineopen3	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#plineopen3(commands, ...) "{{{$/;"	f
vimproc#popen2	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#popen2(args, ...) "{{{$/;"	f
vimproc#popen3	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#popen3(args, ...) "{{{$/;"	f
vimproc#ptyopen	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#ptyopen(commands, ...) "{{{$/;"	f
vimproc#readdir	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#readdir(dirname) "{{{$/;"	f
vimproc#shellescape	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#shellescape(string) "{{{$/;"	f
vimproc#socket_open	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#socket_open(host, port) "{{{$/;"	f
vimproc#system	plugged/vimproc.vim/autoload/vimproc.vim	/^  function! vimproc#system(...)$/;"	f
vimproc#system	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system(cmdline, ...) "{{{$/;"	f
vimproc#system2	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system2(...) "{{{$/;"	f
vimproc#system_bg	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system_bg(cmdline) "{{{$/;"	f
vimproc#system_gui	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system_gui(cmdline) "{{{$/;"	f
vimproc#system_passwd	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system_passwd(cmdline, ...) "{{{$/;"	f
vimproc#test_readdir	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#test_readdir(dirname) "{{{$/;"	f
vimproc#util#expand	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#expand(path) "{{{$/;"	f
vimproc#util#has_iconv	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#has_iconv() "{{{$/;"	f
vimproc#util#has_lua	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#has_lua() "{{{$/;"	f
vimproc#util#iconv	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#iconv(expr, from, to) "{{{$/;"	f
vimproc#util#is_cygwin	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#is_cygwin() "{{{$/;"	f
vimproc#util#is_mac	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#is_mac() "{{{$/;"	f
vimproc#util#is_windows	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#is_windows() "{{{$/;"	f
vimproc#util#set_default	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#set_default(var, val, ...)  "{{{$/;"	f
vimproc#util#stderrencoding	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#stderrencoding() "{{{$/;"	f
vimproc#util#stdinencoding	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#stdinencoding() "{{{$/;"	f
vimproc#util#stdoutencoding	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#stdoutencoding() "{{{$/;"	f
vimproc#util#substitute_path_separator	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#substitute_path_separator(path) "{{{$/;"	f
vimproc#util#systemencoding	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#systemencoding() "{{{$/;"	f
vimproc#util#termencoding	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#termencoding() "{{{$/;"	f
vimproc#util#uniq	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#uniq(list, ...) "{{{$/;"	f
vimproc#version	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#version() "{{{$/;"	f
vimproc#write	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#write(filename, string, ...) "{{{$/;"	f
vimproc_arch	plugged/vimproc.vim/tools/update-dll-mingw.bat	/^    set vimproc_arch=32$/;"	v
vimproc_arch	plugged/vimproc.vim/tools/update-dll-mingw.bat	/^    set vimproc_arch=64$/;"	v
vimproc_arch	plugged/vimproc.vim/tools/update-dll-mingw.bat	/^  set vimproc_arch=%1$/;"	v
vimproc_dllname	plugged/vimproc.vim/tools/update-dll-mingw.bat	/^set vimproc_dllname=vimproc_win%vimproc_arch%.dll$/;"	v
vital#	plugged/unite.vim/autoload/vital/_unite.vim	/^function! vital#{s:self_version}#new() abort$/;"	f
vital#of	plugged/unite.vim/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
void	plugged/unite.vim/autoload/unite/exrename.vim	/^function! s:void(exrename)$/;"	f
vp_checkpid	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_checkpid() dict$/;"	f
vp_close_handle	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_close_handle(char *args)$/;"	f
vp_decode	plugged/vimproc.vim/autoload/proc.c	/^vp_decode(char *args)$/;"	f
vp_decode	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_decode(char *args)$/;"	f
vp_delete_trash	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_delete_trash(char *args)$/;"	f
vp_dlclose	plugged/vimproc.vim/autoload/proc.c	/^vp_dlclose(char *args)$/;"	f
vp_dlclose	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_dlclose(char *args)$/;"	f
vp_dlclose	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_dlclose(handle)$/;"	f
vp_dlopen	plugged/vimproc.vim/autoload/proc.c	/^vp_dlopen(char *args)$/;"	f
vp_dlopen	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_dlopen(char *args)$/;"	f
vp_dlopen	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_dlopen(path)$/;"	f
vp_dlversion	plugged/vimproc.vim/autoload/proc.c	/^vp_dlversion(char *args)$/;"	f
vp_dlversion	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_dlversion(char *args)$/;"	f
vp_file_close	plugged/vimproc.vim/autoload/proc.c	/^vp_file_close(char *args)$/;"	f
vp_file_close	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_file_close(char *args)$/;"	f
vp_file_close	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_file_close() dict$/;"	f
vp_file_open	plugged/vimproc.vim/autoload/proc.c	/^vp_file_open(char *args)$/;"	f
vp_file_open	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_file_open(char *args)$/;"	f
vp_file_open	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_file_open(path, flags, mode)$/;"	f
vp_file_read	plugged/vimproc.vim/autoload/proc.c	/^vp_file_read(char *args)$/;"	f
vp_file_read	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_file_read(char *args)$/;"	f
vp_file_read	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_file_read(number, timeout) dict$/;"	f
vp_file_write	plugged/vimproc.vim/autoload/proc.c	/^vp_file_write(char *args)$/;"	f
vp_file_write	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_file_write(char *args)$/;"	f
vp_file_write	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_file_write(hd, timeout) dict$/;"	f
vp_get_signals	plugged/vimproc.vim/autoload/proc.c	/^vp_get_signals(char *args)$/;"	f
vp_get_signals	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_get_signals(char *args)$/;"	f
vp_get_winsize	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_get_winsize() dict$/;"	f
vp_host_exists	plugged/vimproc.vim/autoload/proc.c	/^vp_host_exists(char *args)$/;"	f
vp_host_exists	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_host_exists(char *args)$/;"	f
vp_host_exists	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_host_exists(host)$/;"	f
vp_kill	plugged/vimproc.vim/autoload/proc.c	/^vp_kill(char *args)$/;"	f
vp_kill	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_kill(char *args)$/;"	f
vp_kill	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_kill(...) dict$/;"	f
vp_open	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_open(char *args)$/;"	f
vp_pgroup_close	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pgroup_close() dict$/;"	f
vp_pgroup_kill	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pgroup_kill(...) dict$/;"	f
vp_pgroup_waitpid	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pgroup_waitpid() dict$/;"	f
vp_pipe_close	plugged/vimproc.vim/autoload/proc.c	/^vp_pipe_close(char *args)$/;"	f
vp_pipe_close	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_pipe_close(char *args)$/;"	f
vp_pipe_close	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipe_close() dict$/;"	f
vp_pipe_open	plugged/vimproc.vim/autoload/proc.c	/^vp_pipe_open(char *args)$/;"	f
vp_pipe_open	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_pipe_open(char *args)$/;"	f
vp_pipe_open	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipe_open(npipe, hstdin, hstdout, hstderr, argv) "{{{$/;"	f
vp_pipe_read	plugged/vimproc.vim/autoload/proc.c	/^vp_pipe_read(char *args)$/;"	f
vp_pipe_read	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_pipe_read(char *args)$/;"	f
vp_pipe_read	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipe_read(number, timeout) dict$/;"	f
vp_pipe_write	plugged/vimproc.vim/autoload/proc.c	/^vp_pipe_write(char *args)$/;"	f
vp_pipe_write	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_pipe_write(char *args)$/;"	f
vp_pipe_write	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipe_write(hd, timeout) dict$/;"	f
vp_pipes_close	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipes_close() dict$/;"	f
vp_pty_close	plugged/vimproc.vim/autoload/proc.c	/^vp_pty_close(char *args)$/;"	f
vp_pty_close	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_pty_close(char *args)$/;"	f
vp_pty_close	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pty_close() dict$/;"	f
vp_pty_get_winsize	plugged/vimproc.vim/autoload/proc.c	/^vp_pty_get_winsize(char *args)$/;"	f
vp_pty_get_winsize	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_pty_get_winsize(char *args)$/;"	f
vp_pty_open	plugged/vimproc.vim/autoload/proc.c	/^vp_pty_open(char *args)$/;"	f
vp_pty_open	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_pty_open(char *args)$/;"	f
vp_pty_open	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pty_open(npipe, width, height, hstdin, hstdout, hstderr, argv)$/;"	f
vp_pty_read	plugged/vimproc.vim/autoload/proc.c	/^vp_pty_read(char *args)$/;"	f
vp_pty_read	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_pty_read(char *args)$/;"	f
vp_pty_read	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pty_read(number, timeout) dict$/;"	f
vp_pty_set_winsize	plugged/vimproc.vim/autoload/proc.c	/^vp_pty_set_winsize(char *args)$/;"	f
vp_pty_set_winsize	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_pty_set_winsize(char *args)$/;"	f
vp_pty_write	plugged/vimproc.vim/autoload/proc.c	/^vp_pty_write(char *args)$/;"	f
vp_pty_write	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_pty_write(char *args)$/;"	f
vp_pty_write	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pty_write(hd, timeout) dict$/;"	f
vp_readdir	plugged/vimproc.vim/autoload/proc.c	/^vp_readdir(char *args)$/;"	f
vp_readdir	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_readdir(char *args)$/;"	f
vp_set_winsize	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_set_winsize(width, height) dict$/;"	f
vp_socket_close	plugged/vimproc.vim/autoload/proc.c	/^vp_socket_close(char *args)$/;"	f
vp_socket_close	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_socket_close(char *args)$/;"	f
vp_socket_close	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_socket_close() dict$/;"	f
vp_socket_open	plugged/vimproc.vim/autoload/proc.c	/^vp_socket_open(char *args)$/;"	f
vp_socket_open	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_socket_open(char *args)$/;"	f
vp_socket_open	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_socket_open(host, port)$/;"	f
vp_socket_read	plugged/vimproc.vim/autoload/proc.c	/^vp_socket_read(char *args)$/;"	f
vp_socket_read	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_socket_read(char *args)$/;"	f
vp_socket_read	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_socket_read(number, timeout) dict$/;"	f
vp_socket_write	plugged/vimproc.vim/autoload/proc.c	/^vp_socket_write(char *args)$/;"	f
vp_socket_write	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_socket_write(char *args)$/;"	f
vp_socket_write	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_socket_write(hd, timeout) dict$/;"	f
vp_stack_free	plugged/vimproc.vim/autoload/vimstack.c	/^vp_stack_free(vp_stack_t *stack)$/;"	f	file:
vp_stack_from_args	plugged/vimproc.vim/autoload/vimstack.c	/^vp_stack_from_args(vp_stack_t *stack, char *args)$/;"	f	file:
vp_stack_pop_num	plugged/vimproc.vim/autoload/vimstack.c	/^vp_stack_pop_num(vp_stack_t *stack, const char *fmt, void *ptr)$/;"	f	file:
vp_stack_pop_str	plugged/vimproc.vim/autoload/vimstack.c	/^vp_stack_pop_str(vp_stack_t *stack, char **str)$/;"	f	file:
vp_stack_push_num	plugged/vimproc.vim/autoload/vimstack.c	/^vp_stack_push_num(vp_stack_t *stack, const char *fmt, ...)$/;"	f	file:
vp_stack_push_str	plugged/vimproc.vim/autoload/vimstack.c	/^vp_stack_push_str(vp_stack_t *stack, const char *str)$/;"	f	file:
vp_stack_reserve	plugged/vimproc.vim/autoload/vimstack.c	/^vp_stack_reserve(vp_stack_t *stack, size_t needsize)$/;"	f	file:
vp_stack_return	plugged/vimproc.vim/autoload/vimstack.c	/^vp_stack_return(vp_stack_t *stack)$/;"	f	file:
vp_stack_return_error	plugged/vimproc.vim/autoload/vimstack.c	/^vp_stack_return_error(vp_stack_t *stack, const char *fmt, ...)$/;"	f	file:
vp_stack_t	plugged/vimproc.vim/autoload/vimstack.c	/^typedef struct vp_stack_t {$/;"	s	file:
vp_stack_t	plugged/vimproc.vim/autoload/vimstack.c	/^} vp_stack_t;$/;"	t	typeref:struct:vp_stack_t	file:
vp_waitpid	plugged/vimproc.vim/autoload/proc.c	/^vp_waitpid(char *args)$/;"	f
vp_waitpid	plugged/vimproc.vim/autoload/proc_w32.c	/^vp_waitpid(char *args)$/;"	f
vp_waitpid	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_waitpid() dict$/;"	f
vsnprintf	plugged/vimproc.vim/autoload/proc_w32.c	/^#  define vsnprintf /;"	d	file:
waitpid	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:waitpid(pid)$/;"	f
wakatime	plugged/vim-wakatime/plugin/packages/wakatime/cli.py	/^    import wakatime$/;"	i
warn	plugged/unite.vim/autoload/vital/_unite/Vim/Message.vim	/^function! s:warn(msg) abort$/;"	f
warn	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str) abort$/;"	f
warnings	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^            import warnings$/;"	i
warnings	plugged/vim-wakatime/plugin/packages/wakatime/packages/argparse.py	/^        import warnings$/;"	i
warnings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_docs.py	/^import warnings$/;"	i
warnings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tests/test_tzinfo.py	/^import warnings$/;"	i
warnings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_docs.py	/^import warnings$/;"	i
warnings	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tests/test_tzinfo.py	/^import warnings$/;"	i
warnings	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/__init__.py	/^import warnings$/;"	i
warnings	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connection.py	/^import warnings$/;"	i
warnings	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^import warnings$/;"	i
warnings	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^import warnings$/;"	i
warnings	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/utils.py	/^import warnings$/;"	i
wcswidth	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	plugged/unite.vim/autoload/vital/_unite/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
week_number	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:week_number() abort$/;"	f
where	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/certs.py	/^    def where():$/;"	f
where	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/certs.py	/^    from certifi import where$/;"	i
which	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:which(command, ...)$/;"	f
win1250HungarianCharToOrderMap	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langhungarianmodel.py	/^win1250HungarianCharToOrderMap = ($/;"	v
win1251BulgarianCharToOrderMap	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langbulgarianmodel.py	/^win1251BulgarianCharToOrderMap = ($/;"	v
win1251_CharToOrderMap	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langcyrillicmodel.py	/^win1251_CharToOrderMap = ($/;"	v
win1253_CharToOrderMap	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langgreekmodel.py	/^win1253_CharToOrderMap = ($/;"	v
win1255_CharToOrderMap	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/langhebrewmodel.py	/^win1255_CharToOrderMap = ($/;"	v
win32	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/tests.py	/^    import tzlocal.win32$/;"	i
win32	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/tests.py	/^    import tzlocal.win32$/;"	i
windows	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/universaldetector.py	/^from .latin1prober import Latin1Prober  # windows-1252$/;"	i
winreg	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/win32.py	/^    import _winreg as winreg$/;"	i
winreg	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/win32.py	/^    import winreg$/;"	i
winreg	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/win32.py	/^    import winreg as winreg$/;"	i
winreg	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal3/win32.py	/^    import winreg$/;"	i
winshell	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:winshell() abort$/;"	f
with_cd	autoload/plug.vim	/^function! s:with_cd(cmd, dir)$/;"	f
with_index	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
with_metaclass	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^def with_metaclass(meta, base=object):$/;"	f
with_statement	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_tool.py	/^from __future__ import with_statement$/;"	i
with_statement	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tool.py	/^from __future__ import with_statement$/;"	i
with_statement	plugged/vim-wakatime/plugin/packages/wakatime/packages/tzlocal/unix.py	/^from __future__ import with_statement$/;"	i
word_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    def word_callback(lexer, match):$/;"	m	class:RebolLexer
word_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rebol.py	/^    def word_callback(lexer, match):$/;"	m	class:RedLexer
word_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    def word_callback(lexer, match):$/;"	m	class:RebolLexer
word_callback	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rebol.py	/^    def word_callback(lexer, match):$/;"	m	class:RedLexer
word_operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dotnet.py	/^    word_operators = ['and', 'or', 'not']$/;"	v	class:FSharpLexer
word_operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    word_operators = ($/;"	v	class:ErlangLexer
word_operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^    word_operators = ('and', 'asr', 'land', 'lor', 'lsl', 'lxor', 'mod', 'or')$/;"	v	class:OcamlLexer
word_operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    word_operators = ('and', 'asr', 'land', 'lor', 'lsl', 'lxor', 'mod', 'or')$/;"	v	class:CoqLexer
word_operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^    word_operators = ('and', 'or', 'not', 'iff', 'eq')$/;"	v	class:LeanLexer
word_operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dotnet.py	/^    word_operators = ['and', 'or', 'not']$/;"	v	class:FSharpLexer
word_operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    word_operators = ($/;"	v	class:ErlangLexer
word_operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^    word_operators = ('and', 'asr', 'land', 'lor', 'lsl', 'lxor', 'mod', 'or')$/;"	v	class:OcamlLexer
word_operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    word_operators = ('and', 'asr', 'land', 'lor', 'lsl', 'lxor', 'mod', 'or')$/;"	v	class:CoqLexer
word_operators	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^    word_operators = ('and', 'or', 'not', 'iff', 'eq')$/;"	v	class:LeanLexer
wordop	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/asm.py	/^    wordop = r'seg|wrt|strict'$/;"	v	class:NasmLexer
wordop	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/asm.py	/^    wordop = r'seg|wrt|strict'$/;"	v	class:NasmLexer
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexer.py	/^class words(Future):$/;"	c
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/actionscript.py	/^from pygments.lexer import RegexLexer, bygroups, using, this, words, default$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/algebra.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ambient.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/basic.py	/^from pygments.lexer import RegexLexer, bygroups, default, words, include$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/business.py	/^from pygments.lexer import RegexLexer, include, words, bygroups$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_cpp.py	/^    this, inherit, default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/c_like.py	/^    default$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/chapel.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/configs.py	/^from pygments.lexer import RegexLexer, default, words, bygroups, include, using$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/css.py	/^    default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/d.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/dsls.py	/^from pygments.lexer import RegexLexer, bygroups, words, include, default$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ecl.py	/^from pygments.lexer import RegexLexer, include, bygroups, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/eiffel.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/erlang.py	/^    include, default$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/factor.py	/^from pygments.lexer import RegexLexer, bygroups, default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fantom.py	/^    this, default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/felix.py	/^    combined$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/fortran.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/go.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/graphics.py	/^    this, default$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/hdl.py	/^from pygments.lexer import RegexLexer, bygroups, include, using, this, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/idl.py	/^from pygments.lexer import RegexLexer, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/igor.py	/^from pygments.lexer import RegexLexer, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/int_fiction.py	/^    this, default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/jvm.py	/^    this, combined, default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/lisp.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/markup.py	/^    using, this, do_insertions, default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/matlab.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, words, do_insertions$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ml.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/nit.py	/^from pygments.lexer import RegexLexer, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/objective.py	/^    inherit, default$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ooc.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/pascal.py	/^    using, this, default$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/perl.py	/^    using, this, default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/python.py	/^    default, words, combined, do_insertions$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/r.py	/^from pygments.lexer import Lexer, RegexLexer, include, words, do_insertions$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/resource.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/ruby.py	/^    bygroups, default, LexerContext, do_insertions, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/rust.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/scripting.py	/^    words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/sql.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/tcl.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/theorem.py	/^from pygments.lexer import RegexLexer, default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/urbi.py	/^from pygments.lexer import ExtendedRegexLexer, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexer.py	/^class words(Future):$/;"	c
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/actionscript.py	/^from pygments.lexer import RegexLexer, bygroups, using, this, words, default$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/algebra.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ambient.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/basic.py	/^from pygments.lexer import RegexLexer, bygroups, default, words, include$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/business.py	/^from pygments.lexer import RegexLexer, include, words, bygroups$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_cpp.py	/^    this, inherit, default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/c_like.py	/^    default$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/chapel.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/configs.py	/^from pygments.lexer import RegexLexer, default, words, bygroups, include, using$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/css.py	/^    default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/d.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/dsls.py	/^from pygments.lexer import RegexLexer, bygroups, words, include, default$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ecl.py	/^from pygments.lexer import RegexLexer, include, bygroups, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/eiffel.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/erlang.py	/^    include, default$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/factor.py	/^from pygments.lexer import RegexLexer, bygroups, default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fantom.py	/^    this, default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/felix.py	/^    combined$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/fortran.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/go.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/graphics.py	/^    this, default$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/hdl.py	/^from pygments.lexer import RegexLexer, bygroups, include, using, this, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/idl.py	/^from pygments.lexer import RegexLexer, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/igor.py	/^from pygments.lexer import RegexLexer, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/int_fiction.py	/^    this, default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/jvm.py	/^    this, combined, default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/lisp.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/markup.py	/^    using, this, do_insertions, default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/matlab.py	/^from pygments.lexer import Lexer, RegexLexer, bygroups, words, do_insertions$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ml.py	/^from pygments.lexer import RegexLexer, include, bygroups, default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/nit.py	/^from pygments.lexer import RegexLexer, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/objective.py	/^    inherit, default$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ooc.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/pascal.py	/^    using, this, default$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/perl.py	/^    using, this, default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/python.py	/^    default, words, combined, do_insertions$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/r.py	/^from pygments.lexer import Lexer, RegexLexer, include, words, do_insertions$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/resource.py	/^from pygments.lexer import RegexLexer, bygroups, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/ruby.py	/^    bygroups, default, LexerContext, do_insertions, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/rust.py	/^from pygments.lexer import RegexLexer, include, bygroups, words, default$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/scripting.py	/^    words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/sql.py	/^from pygments.lexer import Lexer, RegexLexer, do_insertions, bygroups, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/tcl.py	/^from pygments.lexer import RegexLexer, include, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/theorem.py	/^from pygments.lexer import RegexLexer, default, words$/;"	i
words	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/urbi.py	/^from pygments.lexer import ExtendedRegexLexer, words$/;"	i
wrap	plugged/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
wrap	plugged/vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,removed,special)$/;"	f
wrap	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/html.py	/^    def wrap(self, source, outfile):$/;"	m	class:HtmlFormatter
wrap	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/html.py	/^    def wrap(self, source, outfile):$/;"	m	class:HtmlFormatter
wrap_a	plugged/vim-ruby/ftplugin/ruby.vim	/^function! s:wrap_a(back,forward)$/;"	f
wrap_i	plugged/vim-ruby/ftplugin/ruby.vim	/^function! s:wrap_i(back,forward)$/;"	f
wrap_ord	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/chardistribution.py	/^from .compat import wrap_ord$/;"	i
wrap_ord	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/codingstatemachine.py	/^from .compat import wrap_ord$/;"	i
wrap_ord	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/compat.py	/^def wrap_ord(a):$/;"	f
wrap_ord	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/escprober.py	/^from .compat import wrap_ord$/;"	i
wrap_ord	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/hebrewprober.py	/^from .compat import wrap_ord$/;"	i
wrap_ord	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/jpcntx.py	/^from .compat import wrap_ord$/;"	i
wrap_ord	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/latin1prober.py	/^from .compat import wrap_ord$/;"	i
wrap_ord	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/chardet/sbcharsetprober.py	/^from .compat import wrap_ord$/;"	i
wrap_socket	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^        def wrap_socket(self, socket, server_hostname=None):$/;"	m	class:SSLContext
wrap_socket	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/util/ssl_.py	/^    from ssl import wrap_socket, CERT_NONE, PROTOCOL_SSLv23$/;"	i
wrapper	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^    def wrapper(cls):$/;"	f	function:add_metaclass
wrapper	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^    def wrapper(cls):$/;"	f	function:add_metaclass
wrapper	plugged/vim-wakatime/plugin/packages/wakatime/packages/simplejson/tests/test_speedups.py	/^    def wrapper(*args, **kwargs):$/;"	f	function:skip_if_speedups_missing
wrapreg	plugged/vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,removed,special)$/;"	f
write	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/other.py	/^            def write(text):$/;"	f	function:RawTokenFormatter.format
write	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/other.py	/^            def write(text):$/;"	f	function:RawTokenFormatter.format
write	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/packages/six.py	/^        def write(data):$/;"	f	function:.print_
write	plugged/vimproc.vim/autoload/proc_w32.c	/^#define write /;"	d	file:
write	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:write(str, ...) dict "{{{$/;"	f
write_cache	plugged/unite.vim/autoload/unite/sources/rec.vim	/^function! s:write_cache(context, directory, files) "{{{$/;"	f
write_pgroup	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:write_pgroup(str, ...) dict "{{{$/;"	f
write_pipes	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:write_pipes(str, ...) dict "{{{$/;"	f
writefile	plugged/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:writefile(cache_dir, filename, list) abort$/;"	f
writer	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/filepost.py	/^writer = codecs.lookup('utf-8')[3]$/;"	v
x	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/console.py	/^x = 30$/;"	v
x	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/console.py	/^x = 30$/;"	v
xid_continue	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^xid_continue = u'0-9A-Z_a-z\\xaa\\xb5\\xb7\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376-\\u0377\\u037b-\\u037d\\u0386-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u0800-\\u082d\\u0840-\\u085b\\u08a0\\u08a2-\\u08ac\\u08e4-\\u08fe\\u0900-\\u0963\\u0966-\\u096f\\u0971-\\u0977\\u0979-\\u097f\\u0981-\\u0983\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7-\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc-\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47-\\u0b48\\u0b4b-\\u0b4d\\u0b56-\\u0b57\\u0b5c-\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82-\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c58-\\u0c59\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c82-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5-\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1-\\u0cf2\\u0d02-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d57\\u0d60-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82-\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2-\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81-\\u0e82\\u0e84\\u0e87-\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa-\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18-\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1369-\\u1371\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772-\\u1773\\u1780-\\u17d3\\u17d7\\u17dc-\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19da\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1cd0-\\u1cd2\\u1cd4-\\u1cf6\\u1d00-\\u1de6\\u1dfc-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u203f-\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099-\\u309a\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua697\\ua69f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua827\\ua840-\\ua873\\ua880-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua900-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a-\\uaa7b\\uaa80-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabea\\uabec-\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufc5d\\ufc64-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdf9\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\ufe71\\ufe73\\ufe77\\ufe79\\ufe7b\\ufe7d\\ufe7f-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc'$/;"	v
xid_continue	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^xid_continue = u'0-9A-Z_a-z\\xaa\\xb5\\xb7\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376-\\u0377\\u037b-\\u037d\\u0386-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u0800-\\u082d\\u0840-\\u085b\\u08a0\\u08a2-\\u08ac\\u08e4-\\u08fe\\u0900-\\u0963\\u0966-\\u096f\\u0971-\\u0977\\u0979-\\u097f\\u0981-\\u0983\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7-\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc-\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47-\\u0b48\\u0b4b-\\u0b4d\\u0b56-\\u0b57\\u0b5c-\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82-\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c58-\\u0c59\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c82-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5-\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1-\\u0cf2\\u0d02-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d57\\u0d60-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82-\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2-\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81-\\u0e82\\u0e84\\u0e87-\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa-\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18-\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1369-\\u1371\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772-\\u1773\\u1780-\\u17d3\\u17d7\\u17dc-\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19da\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1cd0-\\u1cd2\\u1cd4-\\u1cf6\\u1d00-\\u1de6\\u1dfc-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u203f-\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099-\\u309a\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua697\\ua69f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua827\\ua840-\\ua873\\ua880-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua900-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a-\\uaa7b\\uaa80-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabea\\uabec-\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufc5d\\ufc64-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdf9\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\ufe71\\ufe73\\ufe77\\ufe79\\ufe7b\\ufe7d\\ufe7f-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc'$/;"	v
xid_start	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/unistring.py	/^xid_start = u'A-Z_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376-\\u0377\\u037b-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e-\\u066f\\u0671-\\u06d3\\u06d5\\u06e5-\\u06e6\\u06ee-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4-\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc-\\u09dd\\u09df-\\u09e1\\u09f0-\\u09f1\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0-\\u0ae1\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c-\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58-\\u0c59\\u0c60-\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0-\\u0ce1\\u0cf1-\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e40-\\u0e46\\u0e81-\\u0e82\\u0e84\\u0e87-\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa-\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065-\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae-\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5-\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a-\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5-\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufc5d\\ufc64-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdf9\\ufe71\\ufe73\\ufe77\\ufe79\\ufe7b\\ufe7d\\ufe7f-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uff9d\\uffa0-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc'$/;"	v
xid_start	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/unistring.py	/^xid_start = u'A-Z_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376-\\u0377\\u037b-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e-\\u066f\\u0671-\\u06d3\\u06d5\\u06e5-\\u06e6\\u06ee-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4-\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc-\\u09dd\\u09df-\\u09e1\\u09f0-\\u09f1\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0-\\u0ae1\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c-\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58-\\u0c59\\u0c60-\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0-\\u0ce1\\u0cf1-\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e40-\\u0e46\\u0e81-\\u0e82\\u0e84\\u0e87-\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa-\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065-\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae-\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5-\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a-\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5-\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufc5d\\ufc64-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdf9\\ufe71\\ufe73\\ufe77\\ufe79\\ufe7b\\ufe7d\\ufe7f-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uff9d\\uffa0-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc'$/;"	v
xml_decl_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^xml_decl_re = re.compile(r'\\s*<\\?xml[^>]*\\?>', re.I)$/;"	v
xml_decl_re	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^xml_decl_re = re.compile(r'\\s*<\\?xml[^>]*\\?>', re.I)$/;"	v
xquery_parse_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/webmisc.py	/^    xquery_parse_state = []$/;"	v	class:XQueryLexer
xquery_parse_state	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/webmisc.py	/^    xquery_parse_state = []$/;"	v	class:XQueryLexer
xrange	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/img.py	/^    get_choice_opt, xrange$/;"	i
xrange	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/formatters/latex.py	/^    iteritems$/;"	i
xrange	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/util.py	/^    xrange = range$/;"	v
xrange	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/img.py	/^    get_choice_opt, xrange$/;"	i
xrange	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/formatters/latex.py	/^    iteritems$/;"	i
xrange	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/util.py	/^    xrange = range$/;"	v
xrange	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/connectionpool.py	/^xrange = six.moves.xrange$/;"	v
yS	plugged/vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	plugged/vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	plugged/vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
yank_deleting	plugged/calendar.vim/autoload/calendar/setting.vim	/^function! s:yank_deleting() abort$/;"	f
ymd	plugged/calendar.vim/autoload/calendar/day.vim	/^  function! s:ymd() abort$/;"	f
ys	plugged/vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	plugged/vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
zephir_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    zephir_keywords = ['fetch', 'echo', 'isset', 'empty']$/;"	v	class:ZephirLexer
zephir_keywords	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    zephir_keywords = ['fetch', 'echo', 'isset', 'empty']$/;"	v	class:ZephirLexer
zephir_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py2/pygments/lexers/php.py	/^    zephir_type = ['bit', 'bits', 'string']$/;"	v	class:ZephirLexer
zephir_type	plugged/vim-wakatime/plugin/packages/wakatime/packages/pygments_py3/pygments/lexers/php.py	/^    zephir_type = ['bit', 'bits', 'string']$/;"	v	class:ZephirLexer
zip	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip_fill	plugged/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
zlib	plugged/vim-wakatime/plugin/packages/wakatime/packages/requests/packages/urllib3/response.py	/^import zlib$/;"	i
zone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    zone = "UTC"$/;"	v	class:UTC
zone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/__init__.py	/^    zone = None # to match the standard pytz API$/;"	v	class:_FixedOffset
zone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    zone = None$/;"	v	class:BaseTzInfo
zone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz/tzinfo.py	/^    zone = None$/;"	v	class:DstTzInfo
zone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    zone = "UTC"$/;"	v	class:UTC
zone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/__init__.py	/^    zone = None # to match the standard pytz API$/;"	v	class:_FixedOffset
zone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    zone = None$/;"	v	class:BaseTzInfo
zone	plugged/vim-wakatime/plugin/packages/wakatime/packages/pytz3/tzinfo.py	/^    zone = None$/;"	v	class:DstTzInfo
